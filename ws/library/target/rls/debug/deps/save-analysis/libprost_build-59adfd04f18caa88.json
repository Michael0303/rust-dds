{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0","program":"/home/newslab/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","prost_build","--edition=2018","/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","--json=diagnostic-rendered-ansi,future-incompat","--crate-type","lib","--emit=dep-info,metadata,link","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=59adfd04f18caa88","-C","extra-filename=-59adfd04f18caa88","--out-dir","/home/newslab/rust_practice/ws/library/target/rls/debug/deps","-L","dependency=/home/newslab/rust_practice/ws/library/target/rls/debug/deps","--extern","bytes=/home/newslab/rust_practice/ws/library/target/rls/debug/deps/libbytes-c29310ac139c099c.rmeta","--extern","heck=/home/newslab/rust_practice/ws/library/target/rls/debug/deps/libheck-5fe8bc70a06ceb39.rmeta","--extern","itertools=/home/newslab/rust_practice/ws/library/target/rls/debug/deps/libitertools-9b67542f4a969cc4.rmeta","--extern","log=/home/newslab/rust_practice/ws/library/target/rls/debug/deps/liblog-b6d7f5e97bd5a076.rmeta","--extern","multimap=/home/newslab/rust_practice/ws/library/target/rls/debug/deps/libmultimap-5b53c4ed49923c3d.rmeta","--extern","petgraph=/home/newslab/rust_practice/ws/library/target/rls/debug/deps/libpetgraph-3c1a74fbdd5fcfe0.rmeta","--extern","prost=/home/newslab/rust_practice/ws/library/target/rls/debug/deps/libprost-5b0e25d4ec0b11cf.rmeta","--extern","prost_types=/home/newslab/rust_practice/ws/library/target/rls/debug/deps/libprost_types-48c1f125e377a60e.rmeta","--extern","tempfile=/home/newslab/rust_practice/ws/library/target/rls/debug/deps/libtempfile-84bfeed3d810e50a.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/newslab/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/newslab/rust_practice/ws/library/target/rls/debug/deps/libprost_build-59adfd04f18caa88.rmeta"},"prelude":{"crate_id":{"name":"prost_build","disambiguator":[10261302527748124379,0]},"crate_root":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src","external_crates":[{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[14026078687029744792,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[5443730852259234579,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[4162025702538114948,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[17612152343462746361,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5560808256873132085,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[135160560163186024,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[5800521777261530329,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[7095478770525139037,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17225897750877482818,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15613653607383163471,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[12428323400248712701,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[11893279639181573711,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[13583305032161054644,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[16609837797022023111,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[18098459435141129808,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[15244551393771456017,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[6576340271055396708,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[15284510821186066958,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[12982807908830018159,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/ast.rs","num":20,"id":{"name":"prost_types","disambiguator":[16599973566181500755,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","num":21,"id":{"name":"prost","disambiguator":[15719899125529716765,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/ast.rs","num":22,"id":{"name":"prost_derive","disambiguator":[16208008176842508190,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/ast.rs","num":23,"id":{"name":"bytes","disambiguator":[12152782766538150761,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/ast.rs","num":24,"id":{"name":"byteorder","disambiguator":[12346703004895631807,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/ast.rs","num":25,"id":{"name":"iovec","disambiguator":[141615001635512939,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/ast.rs","num":26,"id":{"name":"libc","disambiguator":[939024296648786786,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/code_generator.rs","num":27,"id":{"name":"itertools","disambiguator":[7621634392450484610,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/code_generator.rs","num":28,"id":{"name":"either","disambiguator":[14688840313374115764,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/code_generator.rs","num":29,"id":{"name":"log","disambiguator":[137434542004427198,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/code_generator.rs","num":30,"id":{"name":"cfg_if","disambiguator":[3066766633997387739,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/code_generator.rs","num":31,"id":{"name":"value_bag","disambiguator":[8318513738997784089,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/code_generator.rs","num":32,"id":{"name":"ctor","disambiguator":[7241329082933586000,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/code_generator.rs","num":33,"id":{"name":"multimap","disambiguator":[13909392574714967589,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/ident.rs","num":34,"id":{"name":"heck","disambiguator":[6761980293641428264,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/ident.rs","num":35,"id":{"name":"unicode_segmentation","disambiguator":[16833037911205785039,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/message_graph.rs","num":36,"id":{"name":"petgraph","disambiguator":[1776168638168516271,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/message_graph.rs","num":37,"id":{"name":"fixedbitset","disambiguator":[14199671886122656753,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","num":38,"id":{"name":"tempfile","disambiguator":[2928723327538554487,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","num":39,"id":{"name":"remove_dir_all","disambiguator":[14193446782025815309,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","num":40,"id":{"name":"fastrand","disambiguator":[17663918297177587424,0]}}],"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":0,"byte_end":25256,"line_start":1,"line_end":691,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":355},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":3637,"byte_end":3645,"line_start":125,"line_end":125,"column_start":22,"column_end":30},"alias_span":null,"name":"Comments","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":370},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":3647,"byte_end":3653,"line_start":125,"line_end":125,"column_start":32,"column_end":38},"alias_span":null,"name":"Method","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":361},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":3655,"byte_end":3662,"line_start":125,"line_end":125,"column_start":40,"column_end":47},"alias_span":null,"name":"Service","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":0,"byte_end":25256,"line_start":1,"line_end":691,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":15},{"krate":0,"index":166},{"krate":0,"index":192},{"krate":0,"index":203},{"krate":0,"index":235},{"krate":0,"index":238},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":244},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":251},{"krate":0,"index":254},{"krate":0,"index":257},{"krate":0,"index":260},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":267},{"krate":0,"index":270},{"krate":0,"index":273},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":283},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":290},{"krate":0,"index":293},{"krate":0,"index":296},{"krate":0,"index":299},{"krate":0,"index":302},{"krate":0,"index":305},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":312},{"krate":0,"index":321},{"krate":0,"index":349},{"krate":0,"index":351},{"krate":0,"index":353},{"krate":0,"index":354}],"decl_id":null,"docs":" `prost-build` compiles `.proto` files into Rust.","sig":null,"attributes":[{"value":"/ `prost-build` compiles `.proto` files into Rust.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":62,"byte_end":114,"line_start":3,"line_end":3,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":115,"byte_end":118,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ `prost-build` is designed to be used for build-time code generation as part of a Cargo","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":119,"byte_end":209,"line_start":5,"line_end":5,"column_start":1,"column_end":91}},{"value":"/ build-script.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":210,"byte_end":227,"line_start":6,"line_end":6,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":228,"byte_end":231,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":232,"byte_end":246,"line_start":8,"line_end":8,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":247,"byte_end":250,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Let's create a small crate, `snazzy`, that defines a collection of","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":251,"byte_end":321,"line_start":10,"line_end":10,"column_start":1,"column_end":71}},{"value":"/ snazzy new items in a protobuf file.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":322,"byte_end":362,"line_start":11,"line_end":11,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":363,"byte_end":366,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```bash","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":367,"byte_end":378,"line_start":13,"line_end":13,"column_start":1,"column_end":12}},{"value":"/ $ cargo new snazzy && cd snazzy","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":379,"byte_end":414,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":415,"byte_end":422,"line_start":15,"line_end":15,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":423,"byte_end":426,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ First, add `prost-build`, `prost` and its public dependencies to `Cargo.toml`","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":427,"byte_end":508,"line_start":17,"line_end":17,"column_start":1,"column_end":82}},{"value":"/ (see [crates.io](https://crates.io/crates/prost) for the current versions):","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":509,"byte_end":588,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":589,"byte_end":592,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":593,"byte_end":604,"line_start":20,"line_end":20,"column_start":1,"column_end":12}},{"value":"/ [dependencies]","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":605,"byte_end":623,"line_start":21,"line_end":21,"column_start":1,"column_end":19}},{"value":"/ bytes = <bytes-version>","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":624,"byte_end":651,"line_start":22,"line_end":22,"column_start":1,"column_end":28}},{"value":"/ prost = <prost-version>","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":652,"byte_end":679,"line_start":23,"line_end":23,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":680,"byte_end":683,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [build-dependencies]","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":684,"byte_end":708,"line_start":25,"line_end":25,"column_start":1,"column_end":25}},{"value":"/ prost-build = { version = <prost-version> }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":709,"byte_end":756,"line_start":26,"line_end":26,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":757,"byte_end":764,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":765,"byte_end":768,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Next, add `src/items.proto` to the project:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":769,"byte_end":816,"line_start":29,"line_end":29,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":817,"byte_end":820,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```proto","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":821,"byte_end":833,"line_start":31,"line_end":31,"column_start":1,"column_end":13}},{"value":"/ syntax = \"proto3\";","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":834,"byte_end":856,"line_start":32,"line_end":32,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":857,"byte_end":860,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ package snazzy.items;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":861,"byte_end":886,"line_start":34,"line_end":34,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":887,"byte_end":890,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ // A snazzy new shirt!","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":891,"byte_end":917,"line_start":36,"line_end":36,"column_start":1,"column_end":27}},{"value":"/ message Shirt {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":918,"byte_end":937,"line_start":37,"line_end":37,"column_start":1,"column_end":20}},{"value":"/ enum Size {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":938,"byte_end":953,"line_start":38,"line_end":38,"column_start":1,"column_end":16}},{"value":"/     SMALL = 0;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":954,"byte_end":972,"line_start":39,"line_end":39,"column_start":1,"column_end":19}},{"value":"/     MEDIUM = 1;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":973,"byte_end":992,"line_start":40,"line_end":40,"column_start":1,"column_end":20}},{"value":"/     LARGE = 2;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":993,"byte_end":1011,"line_start":41,"line_end":41,"column_start":1,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":1012,"byte_end":1017,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":1018,"byte_end":1021,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ string color = 1;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":1022,"byte_end":1043,"line_start":44,"line_end":44,"column_start":1,"column_end":22}},{"value":"/ Size size = 2;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":1044,"byte_end":1062,"line_start":45,"line_end":45,"column_start":1,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":1063,"byte_end":1068,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":1069,"byte_end":1076,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":1077,"byte_end":1080,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ To generate Rust code from `items.proto`, we use `prost-build` in the crate's","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":1081,"byte_end":1162,"line_start":49,"line_end":49,"column_start":1,"column_end":82}},{"value":"/ `build.rs` build-script:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":1163,"byte_end":1191,"line_start":50,"line_end":50,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":1192,"byte_end":1195,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":1196,"byte_end":1214,"line_start":52,"line_end":52,"column_start":1,"column_end":19}},{"value":"/ fn main() {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":1215,"byte_end":1230,"line_start":53,"line_end":53,"column_start":1,"column_end":16}},{"value":"/     prost_build::compile_protos(&[\"src/items.proto\"],","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":1231,"byte_end":1288,"line_start":54,"line_end":54,"column_start":1,"column_end":58}},{"value":"/                                 &[\"src/\"]).unwrap();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":1289,"byte_end":1345,"line_start":55,"line_end":55,"column_start":1,"column_end":57}},{"value":"/ }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":1346,"byte_end":1351,"line_start":56,"line_end":56,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":1352,"byte_end":1359,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":1360,"byte_end":1363,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ And finally, in `lib.rs`, include the generated code:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":1364,"byte_end":1421,"line_start":59,"line_end":59,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":1422,"byte_end":1425,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ ```rust,ignore","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":1426,"byte_end":1444,"line_start":61,"line_end":61,"column_start":1,"column_end":19}},{"value":"/ // Include the `items` module, which is generated from items.proto.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":1445,"byte_end":1516,"line_start":62,"line_end":62,"column_start":1,"column_end":72}},{"value":"/ pub mod items {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":1517,"byte_end":1536,"line_start":63,"line_end":63,"column_start":1,"column_end":20}},{"value":"/     include!(concat!(env!(\"OUT_DIR\"), \"/snazzy.items.rs\"));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":1537,"byte_end":1600,"line_start":64,"line_end":64,"column_start":1,"column_end":64}},{"value":"/ }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":1601,"byte_end":1606,"line_start":65,"line_end":65,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":1607,"byte_end":1610,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ pub fn create_large_shirt(color: String) -> items::Shirt {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":1611,"byte_end":1673,"line_start":67,"line_end":67,"column_start":1,"column_end":63}},{"value":"/     let mut shirt = items::Shirt::default();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":1674,"byte_end":1722,"line_start":68,"line_end":68,"column_start":1,"column_end":49}},{"value":"/     shirt.color = color;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":1723,"byte_end":1751,"line_start":69,"line_end":69,"column_start":1,"column_end":29}},{"value":"/     shirt.set_size(items::shirt::Size::Large);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":1752,"byte_end":1802,"line_start":70,"line_end":70,"column_start":1,"column_end":51}},{"value":"/     shirt","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":1803,"byte_end":1816,"line_start":71,"line_end":71,"column_start":1,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":1817,"byte_end":1822,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":1823,"byte_end":1830,"line_start":73,"line_end":73,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":1831,"byte_end":1834,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ That's it! Run `cargo doc` to see documentation for the generated code. The full","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":1835,"byte_end":1919,"line_start":75,"line_end":75,"column_start":1,"column_end":85}},{"value":"/ example project can be found on [GitHub](https://github.com/danburkert/snazzy).","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":1920,"byte_end":2003,"line_start":76,"line_end":76,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":2004,"byte_end":2007,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ ## Sourcing `protoc`","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":2008,"byte_end":2032,"line_start":78,"line_end":78,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":2033,"byte_end":2036,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ `prost-build` depends on the Protocol Buffers compiler, `protoc`, to parse `.proto` files into","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":2037,"byte_end":2135,"line_start":80,"line_end":80,"column_start":1,"column_end":99}},{"value":"/ a representation that can be transformed into Rust. If set, `prost-build` uses the `PROTOC` and","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":2136,"byte_end":2235,"line_start":81,"line_end":81,"column_start":1,"column_end":100}},{"value":"/ `PROTOC_INCLUDE` environment variables for locating `protoc` and the Protobuf includes","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":2236,"byte_end":2326,"line_start":82,"line_end":82,"column_start":1,"column_end":91}},{"value":"/ directory. For example, on a macOS system where Protobuf is installed with Homebrew, set the","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":2327,"byte_end":2423,"line_start":83,"line_end":83,"column_start":1,"column_end":97}},{"value":"/ environment to:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":2424,"byte_end":2443,"line_start":84,"line_end":84,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":2444,"byte_end":2447,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ ```bash","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":2448,"byte_end":2459,"line_start":86,"line_end":86,"column_start":1,"column_end":12}},{"value":"/ PROTOC=/usr/local/bin/protoc","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":2460,"byte_end":2492,"line_start":87,"line_end":87,"column_start":1,"column_end":33}},{"value":"/ PROTOC_INCLUDE=/usr/local/include","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":2493,"byte_end":2530,"line_start":88,"line_end":88,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":2531,"byte_end":2538,"line_start":89,"line_end":89,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":2539,"byte_end":2542,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ and in a typical Linux installation:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":2543,"byte_end":2583,"line_start":91,"line_end":91,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":2584,"byte_end":2587,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ ```bash","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":2588,"byte_end":2599,"line_start":93,"line_end":93,"column_start":1,"column_end":12}},{"value":"/ PROTOC=/usr/bin/protoc","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":2600,"byte_end":2626,"line_start":94,"line_end":94,"column_start":1,"column_end":27}},{"value":"/ PROTOC_INCLUDE=/usr/include","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":2627,"byte_end":2658,"line_start":95,"line_end":95,"column_start":1,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":2659,"byte_end":2666,"line_start":96,"line_end":96,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":2667,"byte_end":2670,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ If `PROTOC` is not found in the environment, then a pre-compiled `protoc` binary bundled in","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":2671,"byte_end":2766,"line_start":98,"line_end":98,"column_start":1,"column_end":96}},{"value":"/ the prost-build crate is used. Pre-compiled `protoc` binaries exist for Linux, macOS, and","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":2767,"byte_end":2860,"line_start":99,"line_end":99,"column_start":1,"column_end":94}},{"value":"/ Windows systems. If no pre-compiled `protoc` is available for the host platform, then the","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":2861,"byte_end":2954,"line_start":100,"line_end":100,"column_start":1,"column_end":94}},{"value":"/ `protoc` or `protoc.exe` binary on the `PATH` is used. If `protoc` is not available in any of","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":2955,"byte_end":3052,"line_start":101,"line_end":101,"column_start":1,"column_end":98}},{"value":"/ these fallback locations, then the build fails.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":3053,"byte_end":3104,"line_start":102,"line_end":102,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":3105,"byte_end":3108,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ If `PROTOC_INCLUDE` is not found in the environment, then the Protobuf include directory bundled","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":3109,"byte_end":3209,"line_start":104,"line_end":104,"column_start":1,"column_end":101}},{"value":"/ in the prost-build crate is be used.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":3210,"byte_end":3250,"line_start":105,"line_end":105,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":355},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/ast.rs","byte_start":25382,"byte_end":25390,"line_start":6,"line_end":6,"column_start":12,"column_end":20},"name":"Comments","qualname":"::ast::Comments","value":"Comments { leading_detached, leading, trailing }","parent":null,"children":[{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":358}],"decl_id":null,"docs":" Comments on a Protobuf item.\n","sig":null,"attributes":[{"value":"/ Comments on a Protobuf item.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/ast.rs","byte_start":25321,"byte_end":25353,"line_start":4,"line_end":4,"column_start":1,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":356},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/ast.rs","byte_start":25446,"byte_end":25462,"line_start":8,"line_end":8,"column_start":9,"column_end":25},"name":"leading_detached","qualname":"::ast::Comments::leading_detached","value":"std::vec::Vec<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":355},"children":[],"decl_id":null,"docs":" Leading detached blocks of comments.\n","sig":null,"attributes":[{"value":"/ Leading detached blocks of comments.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/ast.rs","byte_start":25397,"byte_end":25437,"line_start":7,"line_end":7,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":357},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/ast.rs","byte_start":25517,"byte_end":25524,"line_start":11,"line_end":11,"column_start":9,"column_end":16},"name":"leading","qualname":"::ast::Comments::leading","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":355},"children":[],"decl_id":null,"docs":" Leading comments.\n","sig":null,"attributes":[{"value":"/ Leading comments.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/ast.rs","byte_start":25487,"byte_end":25508,"line_start":10,"line_end":10,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":358},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/ast.rs","byte_start":25575,"byte_end":25583,"line_start":14,"line_end":14,"column_start":9,"column_end":17},"name":"trailing","qualname":"::ast::Comments::trailing","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":355},"children":[],"decl_id":null,"docs":" Trailing comments.\n","sig":null,"attributes":[{"value":"/ Trailing comments.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/ast.rs","byte_start":25544,"byte_end":25566,"line_start":13,"line_end":13,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":14},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/ast.rs","byte_start":26574,"byte_end":26592,"line_start":49,"line_end":49,"column_start":12,"column_end":30},"name":"append_with_indent","qualname":"<Comments>::append_with_indent","value":"pub fn append_with_indent(&Self, u8, &mut String)","parent":null,"children":[],"decl_id":null,"docs":" Appends the comments to a buffer with indentation.","sig":null,"attributes":[{"value":"/ Appends the comments to a buffer with indentation.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/ast.rs","byte_start":26422,"byte_end":26476,"line_start":46,"line_end":46,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/ast.rs","byte_start":26481,"byte_end":26484,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Each level of indentation corresponds to four space (' ') characters.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/ast.rs","byte_start":26489,"byte_end":26562,"line_start":48,"line_end":48,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":361},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/ast.rs","byte_start":27943,"byte_end":27950,"line_start":95,"line_end":95,"column_start":12,"column_end":19},"name":"Service","qualname":"::ast::Service","value":"Service { name, proto_name, package, comments, methods, options }","parent":null,"children":[{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":367}],"decl_id":null,"docs":" A service descriptor.\n","sig":null,"attributes":[{"value":"/ A service descriptor.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/ast.rs","byte_start":27889,"byte_end":27914,"line_start":93,"line_end":93,"column_start":1,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":362},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/ast.rs","byte_start":28001,"byte_end":28005,"line_start":97,"line_end":97,"column_start":9,"column_end":13},"name":"name","qualname":"::ast::Service::name","value":"std::string::String","parent":{"krate":0,"index":361},"children":[],"decl_id":null,"docs":" The service name in Rust style.\n","sig":null,"attributes":[{"value":"/ The service name in Rust style.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/ast.rs","byte_start":27957,"byte_end":27992,"line_start":96,"line_end":96,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":363},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/ast.rs","byte_start":28082,"byte_end":28092,"line_start":99,"line_end":99,"column_start":9,"column_end":19},"name":"proto_name","qualname":"::ast::Service::proto_name","value":"std::string::String","parent":{"krate":0,"index":361},"children":[],"decl_id":null,"docs":" The service name as it appears in the .proto file.\n","sig":null,"attributes":[{"value":"/ The service name as it appears in the .proto file.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/ast.rs","byte_start":28019,"byte_end":28073,"line_start":98,"line_end":98,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":364},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/ast.rs","byte_start":28169,"byte_end":28176,"line_start":101,"line_end":101,"column_start":9,"column_end":16},"name":"package","qualname":"::ast::Service::package","value":"std::string::String","parent":{"krate":0,"index":361},"children":[],"decl_id":null,"docs":" The package name as it appears in the .proto file.\n","sig":null,"attributes":[{"value":"/ The package name as it appears in the .proto file.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/ast.rs","byte_start":28106,"byte_end":28160,"line_start":100,"line_end":100,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":365},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/ast.rs","byte_start":28224,"byte_end":28232,"line_start":103,"line_end":103,"column_start":9,"column_end":17},"name":"comments","qualname":"::ast::Service::comments","value":"ast::Comments","parent":{"krate":0,"index":361},"children":[],"decl_id":null,"docs":" The service comments.\n","sig":null,"attributes":[{"value":"/ The service comments.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/ast.rs","byte_start":28190,"byte_end":28215,"line_start":102,"line_end":102,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":366},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/ast.rs","byte_start":28281,"byte_end":28288,"line_start":105,"line_end":105,"column_start":9,"column_end":16},"name":"methods","qualname":"::ast::Service::methods","value":"std::vec::Vec<ast::Method>","parent":{"krate":0,"index":361},"children":[],"decl_id":null,"docs":" The service methods.\n","sig":null,"attributes":[{"value":"/ The service methods.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/ast.rs","byte_start":28248,"byte_end":28272,"line_start":104,"line_end":104,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":367},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/ast.rs","byte_start":28340,"byte_end":28347,"line_start":107,"line_end":107,"column_start":9,"column_end":16},"name":"options","qualname":"::ast::Service::options","value":"prost_types::ServiceOptions","parent":{"krate":0,"index":361},"children":[],"decl_id":null,"docs":" The service options.\n","sig":null,"attributes":[{"value":"/ The service options.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/ast.rs","byte_start":28307,"byte_end":28331,"line_start":106,"line_end":106,"column_start":5,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":370},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/ast.rs","byte_start":28442,"byte_end":28448,"line_start":112,"line_end":112,"column_start":12,"column_end":18},"name":"Method","qualname":"::ast::Method","value":"Method { name, proto_name, comments, input_type, output_type, input_proto_type, output_proto_type, options, client_streaming, server_streaming }","parent":null,"children":[{"krate":0,"index":371},{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":380}],"decl_id":null,"docs":" A service method descriptor.\n","sig":null,"attributes":[{"value":"/ A service method descriptor.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/ast.rs","byte_start":28381,"byte_end":28413,"line_start":110,"line_end":110,"column_start":1,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":371},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/ast.rs","byte_start":28505,"byte_end":28509,"line_start":114,"line_end":114,"column_start":9,"column_end":13},"name":"name","qualname":"::ast::Method::name","value":"std::string::String","parent":{"krate":0,"index":370},"children":[],"decl_id":null,"docs":" The name of the method in Rust style.\n","sig":null,"attributes":[{"value":"/ The name of the method in Rust style.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/ast.rs","byte_start":28455,"byte_end":28496,"line_start":113,"line_end":113,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":372},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/ast.rs","byte_start":28592,"byte_end":28602,"line_start":116,"line_end":116,"column_start":9,"column_end":19},"name":"proto_name","qualname":"::ast::Method::proto_name","value":"std::string::String","parent":{"krate":0,"index":370},"children":[],"decl_id":null,"docs":" The name of the method as it appears in the .proto file.\n","sig":null,"attributes":[{"value":"/ The name of the method as it appears in the .proto file.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/ast.rs","byte_start":28523,"byte_end":28583,"line_start":115,"line_end":115,"column_start":5,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":373},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/ast.rs","byte_start":28649,"byte_end":28657,"line_start":118,"line_end":118,"column_start":9,"column_end":17},"name":"comments","qualname":"::ast::Method::comments","value":"ast::Comments","parent":{"krate":0,"index":370},"children":[],"decl_id":null,"docs":" The method comments.\n","sig":null,"attributes":[{"value":"/ The method comments.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/ast.rs","byte_start":28616,"byte_end":28640,"line_start":117,"line_end":117,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":374},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/ast.rs","byte_start":28706,"byte_end":28716,"line_start":120,"line_end":120,"column_start":9,"column_end":19},"name":"input_type","qualname":"::ast::Method::input_type","value":"std::string::String","parent":{"krate":0,"index":370},"children":[],"decl_id":null,"docs":" The input Rust type.\n","sig":null,"attributes":[{"value":"/ The input Rust type.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/ast.rs","byte_start":28673,"byte_end":28697,"line_start":119,"line_end":119,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":375},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/ast.rs","byte_start":28764,"byte_end":28775,"line_start":122,"line_end":122,"column_start":9,"column_end":20},"name":"output_type","qualname":"::ast::Method::output_type","value":"std::string::String","parent":{"krate":0,"index":370},"children":[],"decl_id":null,"docs":" The output Rust type.\n","sig":null,"attributes":[{"value":"/ The output Rust type.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/ast.rs","byte_start":28730,"byte_end":28755,"line_start":121,"line_end":121,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":376},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/ast.rs","byte_start":28826,"byte_end":28842,"line_start":124,"line_end":124,"column_start":9,"column_end":25},"name":"input_proto_type","qualname":"::ast::Method::input_proto_type","value":"std::string::String","parent":{"krate":0,"index":370},"children":[],"decl_id":null,"docs":" The input Protobuf type.\n","sig":null,"attributes":[{"value":"/ The input Protobuf type.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/ast.rs","byte_start":28789,"byte_end":28817,"line_start":123,"line_end":123,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":377},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/ast.rs","byte_start":28894,"byte_end":28911,"line_start":126,"line_end":126,"column_start":9,"column_end":26},"name":"output_proto_type","qualname":"::ast::Method::output_proto_type","value":"std::string::String","parent":{"krate":0,"index":370},"children":[],"decl_id":null,"docs":" The output Protobuf type.\n","sig":null,"attributes":[{"value":"/ The output Protobuf type.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/ast.rs","byte_start":28856,"byte_end":28885,"line_start":125,"line_end":125,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":378},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/ast.rs","byte_start":28957,"byte_end":28964,"line_start":128,"line_end":128,"column_start":9,"column_end":16},"name":"options","qualname":"::ast::Method::options","value":"prost_types::MethodOptions","parent":{"krate":0,"index":370},"children":[],"decl_id":null,"docs":" The method options.\n","sig":null,"attributes":[{"value":"/ The method options.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/ast.rs","byte_start":28925,"byte_end":28948,"line_start":127,"line_end":127,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":379},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/ast.rs","byte_start":29065,"byte_end":29081,"line_start":130,"line_end":130,"column_start":9,"column_end":25},"name":"client_streaming","qualname":"::ast::Method::client_streaming","value":"bool","parent":{"krate":0,"index":370},"children":[],"decl_id":null,"docs":" Identifies if client streams multiple client messages.\n","sig":null,"attributes":[{"value":"/ Identifies if client streams multiple client messages.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/ast.rs","byte_start":28998,"byte_end":29056,"line_start":129,"line_end":129,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":380},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/ast.rs","byte_start":29160,"byte_end":29176,"line_start":132,"line_end":132,"column_start":9,"column_end":25},"name":"server_streaming","qualname":"::ast::Method::server_streaming","value":"bool","parent":{"krate":0,"index":370},"children":[],"decl_id":null,"docs":" Identifies if server streams multiple server messages.\n","sig":null,"attributes":[{"value":"/ Identifies if server streams multiple server messages.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/ast.rs","byte_start":29093,"byte_end":29151,"line_start":131,"line_end":131,"column_start":5,"column_end":63}}]},{"kind":"Trait","id":{"krate":0,"index":309},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":4630,"byte_end":4646,"line_start":147,"line_end":147,"column_start":11,"column_end":27},"name":"ServiceGenerator","qualname":"::ServiceGenerator","value":"ServiceGenerator","parent":null,"children":[{"krate":0,"index":310},{"krate":0,"index":311}],"decl_id":null,"docs":" A service generator takes a service descriptor and generates Rust code.","sig":null,"attributes":[{"value":"/ A service generator takes a service descriptor and generates Rust code.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":3842,"byte_end":3917,"line_start":133,"line_end":133,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":3918,"byte_end":3921,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ `ServiceGenerator` can be used to generate application-specific interfaces","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":3922,"byte_end":4000,"line_start":135,"line_end":135,"column_start":1,"column_end":79}},{"value":"/ or implementations for Protobuf service definitions.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":4001,"byte_end":4057,"line_start":136,"line_end":136,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":4058,"byte_end":4061,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ Service generators are registered with a code generator using the","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":4062,"byte_end":4131,"line_start":138,"line_end":138,"column_start":1,"column_end":70}},{"value":"/ `Config::service_generator` method.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":4132,"byte_end":4171,"line_start":139,"line_end":139,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":4172,"byte_end":4175,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ A viable scenario is that an RPC framework provides a service generator. It generates a trait","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":4176,"byte_end":4273,"line_start":141,"line_end":141,"column_start":1,"column_end":98}},{"value":"/ describing methods of the service and some glue code to call the methods of the trait, defining","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":4274,"byte_end":4373,"line_start":142,"line_end":142,"column_start":1,"column_end":100}},{"value":"/ details like how errors are handled or if it is asynchronous. Then the user provides an","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":4374,"byte_end":4465,"line_start":143,"line_end":143,"column_start":1,"column_end":92}},{"value":"/ implementation of the generated trait in the application code and plugs it into the framework.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":4466,"byte_end":4564,"line_start":144,"line_end":144,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":4565,"byte_end":4568,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ Such framework isn't part of Prost at present.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":4569,"byte_end":4619,"line_start":146,"line_end":146,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":4761,"byte_end":4769,"line_start":150,"line_end":150,"column_start":8,"column_end":16},"name":"generate","qualname":"::ServiceGenerator::generate","value":"pub fn generate(&mut Self, Service, &mut String)","parent":{"krate":0,"index":309},"children":[],"decl_id":null,"docs":" Generates a Rust interface or implementation for a service, writing the\n result to `buf`.\n","sig":null,"attributes":[{"value":"/ Generates a Rust interface or implementation for a service, writing the","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":4653,"byte_end":4728,"line_start":148,"line_end":148,"column_start":5,"column_end":80}},{"value":"/ result to `buf`.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":4733,"byte_end":4753,"line_start":149,"line_end":149,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":5434,"byte_end":5442,"line_start":165,"line_end":165,"column_start":8,"column_end":16},"name":"finalize","qualname":"::ServiceGenerator::finalize","value":"pub fn finalize(&mut Self, &mut String)","parent":{"krate":0,"index":309},"children":[],"decl_id":null,"docs":" Finalizes the generation process.","sig":null,"attributes":[{"value":"/ Finalizes the generation process.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":4823,"byte_end":4860,"line_start":152,"line_end":152,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":4865,"byte_end":4868,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ In case there's something that needs to be output at the end of the generation process, it","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":4873,"byte_end":4967,"line_start":154,"line_end":154,"column_start":5,"column_end":99}},{"value":"/ goes here. Similar to [`generate`](#method.generate), the output should be appended to","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":4972,"byte_end":5062,"line_start":155,"line_end":155,"column_start":5,"column_end":95}},{"value":"/ `buf`.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":5067,"byte_end":5077,"line_start":156,"line_end":156,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":5082,"byte_end":5085,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ An example can be a module or other thing that needs to appear just once, not for each","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":5090,"byte_end":5180,"line_start":158,"line_end":158,"column_start":5,"column_end":95}},{"value":"/ service generated.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":5185,"byte_end":5207,"line_start":159,"line_end":159,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":5212,"byte_end":5215,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ This still can be called multiple times in a lifetime of the service generator, because it","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":5220,"byte_end":5314,"line_start":161,"line_end":161,"column_start":5,"column_end":99}},{"value":"/ is called once per `.proto` file.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":5319,"byte_end":5356,"line_start":162,"line_end":162,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":5361,"byte_end":5364,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ The default implementation is empty and does nothing.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":5369,"byte_end":5426,"line_start":164,"line_end":164,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":312},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":5637,"byte_end":5643,"line_start":171,"line_end":171,"column_start":12,"column_end":18},"name":"Config","qualname":"::Config","value":"Config {  }","parent":null,"children":[{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320}],"decl_id":null,"docs":" Configuration options for Protobuf code generation.","sig":null,"attributes":[{"value":"/ Configuration options for Protobuf code generation.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":5479,"byte_end":5534,"line_start":168,"line_end":168,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":5535,"byte_end":5538,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ This configuration builder can be used to set non-default code generation options.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":5539,"byte_end":5625,"line_start":170,"line_end":170,"column_start":1,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":6045,"byte_end":6048,"line_start":184,"line_end":184,"column_start":12,"column_end":15},"name":"new","qualname":"<Config>::new","value":"pub fn new() -> Config","parent":null,"children":[],"decl_id":null,"docs":" Creates a new code generator configuration with default options.\n","sig":null,"attributes":[{"value":"/ Creates a new code generator configuration with default options.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":5965,"byte_end":6033,"line_start":183,"line_end":183,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":323},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":8315,"byte_end":8324,"line_start":236,"line_end":236,"column_start":12,"column_end":21},"name":"btree_map","qualname":"<Config>::btree_map","value":"pub fn btree_map<I, S>(&mut Self, I) -> &mut Self where I: IntoIterator<Item =\nS>, S: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Configure the code generator to generate Rust [`BTreeMap`][1] fields for Protobuf\n [`map`][2] type fields.","sig":null,"attributes":[{"value":"/ Configure the code generator to generate Rust [`BTreeMap`][1] fields for Protobuf","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":6100,"byte_end":6185,"line_start":188,"line_end":188,"column_start":5,"column_end":90}},{"value":"/ [`map`][2] type fields.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":6190,"byte_end":6217,"line_start":189,"line_end":189,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":6222,"byte_end":6225,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":6230,"byte_end":6245,"line_start":191,"line_end":191,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":6250,"byte_end":6253,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ **`paths`** - paths to specific fields, messages, or packages which should use a Rust","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":6258,"byte_end":6347,"line_start":193,"line_end":193,"column_start":5,"column_end":94}},{"value":"/ `BTreeMap` for Protobuf `map` fields. Paths are specified in terms of the Protobuf type","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":6352,"byte_end":6443,"line_start":194,"line_end":194,"column_start":5,"column_end":96}},{"value":"/ name (not the generated Rust type name). Paths with a leading `.` are treated as fully","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":6448,"byte_end":6538,"line_start":195,"line_end":195,"column_start":5,"column_end":95}},{"value":"/ qualified names. Paths without a leading `.` are treated as relative, and are suffix","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":6543,"byte_end":6631,"line_start":196,"line_end":196,"column_start":5,"column_end":93}},{"value":"/ matched on the fully qualified field name. If a Protobuf map field matches any of the","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":6636,"byte_end":6725,"line_start":197,"line_end":197,"column_start":5,"column_end":94}},{"value":"/ paths, a Rust `BTreeMap` field is generated instead of the default [`HashMap`][3].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":6730,"byte_end":6816,"line_start":198,"line_end":198,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":6821,"byte_end":6824,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ The matching is done on the Protobuf names, before converting to Rust-friendly casing","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":6829,"byte_end":6918,"line_start":200,"line_end":200,"column_start":5,"column_end":94}},{"value":"/ standards.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":6923,"byte_end":6937,"line_start":201,"line_end":201,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":6942,"byte_end":6945,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":6950,"byte_end":6964,"line_start":203,"line_end":203,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":6969,"byte_end":6972,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":6977,"byte_end":6988,"line_start":205,"line_end":205,"column_start":5,"column_end":16}},{"value":"/ # let mut config = prost_build::Config::new();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":6993,"byte_end":7043,"line_start":206,"line_end":206,"column_start":5,"column_end":55}},{"value":"/ // Match a specific field in a message type.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":7048,"byte_end":7096,"line_start":207,"line_end":207,"column_start":5,"column_end":53}},{"value":"/ config.btree_map(&[\".my_messages.MyMessageType.my_map_field\"]);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":7101,"byte_end":7168,"line_start":208,"line_end":208,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":7173,"byte_end":7176,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ // Match all map fields in a message type.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":7181,"byte_end":7227,"line_start":210,"line_end":210,"column_start":5,"column_end":51}},{"value":"/ config.btree_map(&[\".my_messages.MyMessageType\"]);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":7232,"byte_end":7286,"line_start":211,"line_end":211,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":7291,"byte_end":7294,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ // Match all map fields in a package.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":7299,"byte_end":7340,"line_start":213,"line_end":213,"column_start":5,"column_end":46}},{"value":"/ config.btree_map(&[\".my_messages\"]);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":7345,"byte_end":7385,"line_start":214,"line_end":214,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":7390,"byte_end":7393,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ // Match all map fields.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":7398,"byte_end":7426,"line_start":216,"line_end":216,"column_start":5,"column_end":33}},{"value":"/ config.btree_map(&[\".\"]);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":7431,"byte_end":7460,"line_start":217,"line_end":217,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":7465,"byte_end":7468,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ // Match all map fields in a nested message.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":7473,"byte_end":7521,"line_start":219,"line_end":219,"column_start":5,"column_end":53}},{"value":"/ config.btree_map(&[\".my_messages.MyMessageType.MyNestedMessageType\"]);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":7526,"byte_end":7600,"line_start":220,"line_end":220,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":7605,"byte_end":7608,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ // Match all fields named 'my_map_field'.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":7613,"byte_end":7658,"line_start":222,"line_end":222,"column_start":5,"column_end":50}},{"value":"/ config.btree_map(&[\"my_map_field\"]);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":7663,"byte_end":7703,"line_start":223,"line_end":223,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":7708,"byte_end":7711,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ // Match all fields named 'my_map_field' in messages named 'MyMessageType', regardless of","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":7716,"byte_end":7809,"line_start":225,"line_end":225,"column_start":5,"column_end":98}},{"value":"/ // package or nesting.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":7814,"byte_end":7840,"line_start":226,"line_end":226,"column_start":5,"column_end":31}},{"value":"/ config.btree_map(&[\"MyMessageType.my_map_field\"]);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":7845,"byte_end":7899,"line_start":227,"line_end":227,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":7904,"byte_end":7907,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ // Match all fields named 'my_map_field', and all fields in the 'foo.bar' package.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":7912,"byte_end":7998,"line_start":229,"line_end":229,"column_start":5,"column_end":91}},{"value":"/ config.btree_map(&[\"my_map_field\", \".foo.bar\"]);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":8003,"byte_end":8055,"line_start":230,"line_end":230,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":8060,"byte_end":8067,"line_start":231,"line_end":231,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":8072,"byte_end":8075,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ [1]: https://doc.rust-lang.org/std/collections/struct.BTreeMap.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":8080,"byte_end":8151,"line_start":233,"line_end":233,"column_start":5,"column_end":76}},{"value":"/ [2]: https://developers.google.com/protocol-buffers/docs/proto3#maps","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":8156,"byte_end":8228,"line_start":234,"line_end":234,"column_start":5,"column_end":77}},{"value":"/ [3]: https://doc.rust-lang.org/std/collections/struct.HashMap.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":8233,"byte_end":8303,"line_start":235,"line_end":235,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":9626,"byte_end":9641,"line_start":268,"line_end":268,"column_start":12,"column_end":27},"name":"field_attribute","qualname":"<Config>::field_attribute","value":"pub fn field_attribute<P, A>(&mut Self, P, A) -> &mut Self where\nP: AsRef<str>, A: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Add additional attribute to matched fields.","sig":null,"attributes":[{"value":"/ Add additional attribute to matched fields.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":8549,"byte_end":8596,"line_start":245,"line_end":245,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":8601,"byte_end":8604,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":8609,"byte_end":8624,"line_start":247,"line_end":247,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":8629,"byte_end":8632,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ **`path`** - a patch matching any number of fields. These fields get the attribute.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":8637,"byte_end":8724,"line_start":249,"line_end":249,"column_start":5,"column_end":92}},{"value":"/ For details about matching fields see [`btree_map`](#method.btree_map).","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":8729,"byte_end":8804,"line_start":250,"line_end":250,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":8809,"byte_end":8812,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ **`attribute`** - an arbitrary string that'll be placed before each matched field. The","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":8817,"byte_end":8907,"line_start":252,"line_end":252,"column_start":5,"column_end":95}},{"value":"/ expected usage are additional attributes, usually in concert with whole-type","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":8912,"byte_end":8992,"line_start":253,"line_end":253,"column_start":5,"column_end":85}},{"value":"/ attributes set with [`type_attribute`](method.type_attribute), but it is not","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":8997,"byte_end":9077,"line_start":254,"line_end":254,"column_start":5,"column_end":85}},{"value":"/ checked and anything can be put there.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":9082,"byte_end":9124,"line_start":255,"line_end":255,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":9129,"byte_end":9132,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ Note that the calls to this method are cumulative ‒ if multiple paths from multiple calls","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":9137,"byte_end":9232,"line_start":257,"line_end":257,"column_start":5,"column_end":98}},{"value":"/ match the same field, the field gets all the corresponding attributes.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":9237,"byte_end":9311,"line_start":258,"line_end":258,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":9316,"byte_end":9319,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":9324,"byte_end":9338,"line_start":260,"line_end":260,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":9343,"byte_end":9346,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":9351,"byte_end":9362,"line_start":262,"line_end":262,"column_start":5,"column_end":16}},{"value":"/ # let mut config = prost_build::Config::new();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":9367,"byte_end":9417,"line_start":263,"line_end":263,"column_start":5,"column_end":55}},{"value":"/ // Prost renames fields named `in` to `in_`. But if serialized through serde,","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":9422,"byte_end":9503,"line_start":264,"line_end":264,"column_start":5,"column_end":86}},{"value":"/ // they should as `in`.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":9508,"byte_end":9535,"line_start":265,"line_end":265,"column_start":5,"column_end":32}},{"value":"/ config.field_attribute(\"in\", \"#[serde(rename = \\\"in\\\")]\");","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":9540,"byte_end":9602,"line_start":266,"line_end":266,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":9607,"byte_end":9614,"line_start":267,"line_end":267,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":11856,"byte_end":11870,"line_start":317,"line_end":317,"column_start":12,"column_end":26},"name":"type_attribute","qualname":"<Config>::type_attribute","value":"pub fn type_attribute<P, A>(&mut Self, P, A) -> &mut Self where P: AsRef<str>,\nA: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Add additional attribute to matched messages, enums and one-ofs.","sig":null,"attributes":[{"value":"/ Add additional attribute to matched messages, enums and one-ofs.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":9891,"byte_end":9959,"line_start":278,"line_end":278,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":9964,"byte_end":9967,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":9972,"byte_end":9987,"line_start":280,"line_end":280,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":9992,"byte_end":9995,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ **`paths`** - a path matching any number of types. It works the same way as in","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":10000,"byte_end":10082,"line_start":282,"line_end":282,"column_start":5,"column_end":87}},{"value":"/ [`btree_map`](#method.btree_map), just with the field name omitted.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":10087,"byte_end":10158,"line_start":283,"line_end":283,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":10163,"byte_end":10166,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ **`attribute`** - an arbitrary string to be placed before each matched type. The","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":10171,"byte_end":10255,"line_start":285,"line_end":285,"column_start":5,"column_end":89}},{"value":"/ expected usage are additional attributes, but anything is allowed.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":10260,"byte_end":10330,"line_start":286,"line_end":286,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":10335,"byte_end":10338,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ The calls to this method are cumulative. They don't overwrite previous calls and if a","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":10343,"byte_end":10432,"line_start":288,"line_end":288,"column_start":5,"column_end":94}},{"value":"/ type is matched by multiple calls of the method, all relevant attributes are added to","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":10437,"byte_end":10526,"line_start":289,"line_end":289,"column_start":5,"column_end":94}},{"value":"/ it.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":10531,"byte_end":10538,"line_start":290,"line_end":290,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":10543,"byte_end":10546,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ For things like serde it might be needed to combine with [field","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":10551,"byte_end":10618,"line_start":292,"line_end":292,"column_start":5,"column_end":72}},{"value":"/ attributes](#method.field_attribute).","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":10623,"byte_end":10664,"line_start":293,"line_end":293,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":10669,"byte_end":10672,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":10677,"byte_end":10691,"line_start":295,"line_end":295,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":10696,"byte_end":10699,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":10704,"byte_end":10715,"line_start":297,"line_end":297,"column_start":5,"column_end":16}},{"value":"/ # let mut config = prost_build::Config::new();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":10720,"byte_end":10770,"line_start":298,"line_end":298,"column_start":5,"column_end":55}},{"value":"/ // Nothing around uses floats, so we can derive real `Eq` in addition to `PartialEq`.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":10775,"byte_end":10864,"line_start":299,"line_end":299,"column_start":5,"column_end":94}},{"value":"/ config.type_attribute(\".\", \"#[derive(Eq)]\");","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":10869,"byte_end":10917,"line_start":300,"line_end":300,"column_start":5,"column_end":53}},{"value":"/ // Some messages want to be serializable with serde as well.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":10922,"byte_end":10986,"line_start":301,"line_end":301,"column_start":5,"column_end":69}},{"value":"/ config.type_attribute(\"my_messages.MyMessageType\",","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":10991,"byte_end":11045,"line_start":302,"line_end":302,"column_start":5,"column_end":59}},{"value":"/                       \"#[derive(Serialize)] #[serde(rename-all = \\\"snake_case\\\")]\");","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":11050,"byte_end":11138,"line_start":303,"line_end":303,"column_start":5,"column_end":93}},{"value":"/ config.type_attribute(\"my_messages.MyMessageType.MyNestedMessageType\",","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":11143,"byte_end":11217,"line_start":304,"line_end":304,"column_start":5,"column_end":79}},{"value":"/                       \"#[derive(Serialize)] #[serde(rename-all = \\\"snake_case\\\")]\");","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":11222,"byte_end":11310,"line_start":305,"line_end":305,"column_start":5,"column_end":93}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":11315,"byte_end":11322,"line_start":306,"line_end":306,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":11327,"byte_end":11330,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ # Oneof fields","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":11335,"byte_end":11353,"line_start":308,"line_end":308,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":11358,"byte_end":11361,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ The `oneof` fields don't have a type name of their own inside Protobuf. Therefore, the","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":11366,"byte_end":11456,"line_start":310,"line_end":310,"column_start":5,"column_end":95}},{"value":"/ field name can be used both with `type_attribute` and `field_attribute` ‒ the first is","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":11461,"byte_end":11553,"line_start":311,"line_end":311,"column_start":5,"column_end":95}},{"value":"/ placed before the `enum` type definition, the other before the field inside corresponding","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":11558,"byte_end":11651,"line_start":312,"line_end":312,"column_start":5,"column_end":98}},{"value":"/ message `struct`.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":11656,"byte_end":11677,"line_start":313,"line_end":313,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":11682,"byte_end":11685,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ In other words, to place an attribute on the `enum` implementing the `oneof`, the match","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":11690,"byte_end":11781,"line_start":315,"line_end":315,"column_start":5,"column_end":96}},{"value":"/ would look like `my_messages.MyMessageType.oneofname`.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":11786,"byte_end":11844,"line_start":316,"line_end":316,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":333},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":12203,"byte_end":12220,"line_start":328,"line_end":328,"column_start":12,"column_end":29},"name":"service_generator","qualname":"<Config>::service_generator","value":"pub fn service_generator(&mut Self, Box<dyn ServiceGenerator>) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Configures the code generator to use the provided service generator.\n","sig":null,"attributes":[{"value":"/ Configures the code generator to use the provided service generator.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":12119,"byte_end":12191,"line_start":327,"line_end":327,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":334},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":12574,"byte_end":12598,"line_start":335,"line_end":335,"column_start":12,"column_end":36},"name":"compile_well_known_types","qualname":"<Config>::compile_well_known_types","value":"pub fn compile_well_known_types(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Configures the code generator to not use the `prost_types` crate for Protobuf well-known\n types, and instead generate Protobuf well-known types from their `.proto` definitions.\n","sig":null,"attributes":[{"value":"/ Configures the code generator to not use the `prost_types` crate for Protobuf well-known","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":12375,"byte_end":12467,"line_start":333,"line_end":333,"column_start":5,"column_end":97}},{"value":"/ types, and instead generate Protobuf well-known types from their `.proto` definitions.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":12472,"byte_end":12562,"line_start":334,"line_end":334,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":335},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":16423,"byte_end":16434,"line_start":442,"line_end":442,"column_start":12,"column_end":23},"name":"extern_path","qualname":"<Config>::extern_path","value":"pub fn extern_path<P1, P2>(&mut Self, P1, P2) -> &mut Self where\nP1: Into<String>, P2: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Declare an externally provided Protobuf package or type.","sig":null,"attributes":[{"value":"/ Declare an externally provided Protobuf package or type.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":12683,"byte_end":12743,"line_start":340,"line_end":340,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":12748,"byte_end":12751,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ `extern_path` allows `prost` types in external crates to be referenced in generated code.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":12756,"byte_end":12849,"line_start":342,"line_end":342,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":12854,"byte_end":12857,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ When `prost` compiles a `.proto` which includes an import of another `.proto`, it will","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":12862,"byte_end":12952,"line_start":344,"line_end":344,"column_start":5,"column_end":95}},{"value":"/ automatically recursively compile the imported file as well. `extern_path` can be used","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":12957,"byte_end":13047,"line_start":345,"line_end":345,"column_start":5,"column_end":95}},{"value":"/ to instead substitute types from an external crate.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":13052,"byte_end":13107,"line_start":346,"line_end":346,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":13112,"byte_end":13115,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":13120,"byte_end":13133,"line_start":348,"line_end":348,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":13138,"byte_end":13141,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ As an example, consider a crate, `uuid`, with a `prost`-generated `Uuid` type:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":13146,"byte_end":13228,"line_start":350,"line_end":350,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":13233,"byte_end":13236,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ ```proto","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":13241,"byte_end":13253,"line_start":352,"line_end":352,"column_start":5,"column_end":17}},{"value":"/ // uuid.proto","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":13258,"byte_end":13275,"line_start":353,"line_end":353,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":13280,"byte_end":13283,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ syntax = \"proto3\";","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":13288,"byte_end":13310,"line_start":355,"line_end":355,"column_start":5,"column_end":27}},{"value":"/ package uuid;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":13315,"byte_end":13332,"line_start":356,"line_end":356,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":13337,"byte_end":13340,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ message Uuid {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":13345,"byte_end":13363,"line_start":358,"line_end":358,"column_start":5,"column_end":23}},{"value":"/     string uuid_str = 1;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":13368,"byte_end":13396,"line_start":359,"line_end":359,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":13401,"byte_end":13406,"line_start":360,"line_end":360,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":13411,"byte_end":13418,"line_start":361,"line_end":361,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":13423,"byte_end":13426,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ The `uuid` crate implements some traits for `Uuid`, and publicly exports it:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":13431,"byte_end":13511,"line_start":363,"line_end":363,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":13516,"byte_end":13519,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ ```rust,ignore","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":13524,"byte_end":13542,"line_start":365,"line_end":365,"column_start":5,"column_end":23}},{"value":"/ // lib.rs in the uuid crate","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":13547,"byte_end":13578,"line_start":366,"line_end":366,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":13583,"byte_end":13586,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ include!(concat!(env!(\"OUT_DIR\"), \"/uuid.rs\"));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":13591,"byte_end":13642,"line_start":368,"line_end":368,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":13647,"byte_end":13650,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ pub trait DoSomething {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":13655,"byte_end":13682,"line_start":370,"line_end":370,"column_start":5,"column_end":32}},{"value":"/     fn do_it(&self);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":13687,"byte_end":13711,"line_start":371,"line_end":371,"column_start":5,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":13716,"byte_end":13721,"line_start":372,"line_end":372,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":13726,"byte_end":13729,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ impl DoSomething for Uuid {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":13734,"byte_end":13765,"line_start":374,"line_end":374,"column_start":5,"column_end":36}},{"value":"/     fn do_it(&self) {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":13770,"byte_end":13795,"line_start":375,"line_end":375,"column_start":5,"column_end":30}},{"value":"/         println!(\"Done\");","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":13800,"byte_end":13829,"line_start":376,"line_end":376,"column_start":5,"column_end":34}},{"value":"/     }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":13834,"byte_end":13843,"line_start":377,"line_end":377,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":13848,"byte_end":13853,"line_start":378,"line_end":378,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":13858,"byte_end":13865,"line_start":379,"line_end":379,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":13870,"byte_end":13873,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ A separate crate, `my_application`, uses `prost` to generate message types which reference","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":13878,"byte_end":13972,"line_start":381,"line_end":381,"column_start":5,"column_end":99}},{"value":"/ `Uuid`:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":13977,"byte_end":13988,"line_start":382,"line_end":382,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":13993,"byte_end":13996,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ ```proto","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":14001,"byte_end":14013,"line_start":384,"line_end":384,"column_start":5,"column_end":17}},{"value":"/ // my_application.proto","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":14018,"byte_end":14045,"line_start":385,"line_end":385,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":14050,"byte_end":14053,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ syntax = \"proto3\";","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":14058,"byte_end":14080,"line_start":387,"line_end":387,"column_start":5,"column_end":27}},{"value":"/ package my_application;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":14085,"byte_end":14112,"line_start":388,"line_end":388,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":14117,"byte_end":14120,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ import \"uuid.proto\";","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":14125,"byte_end":14149,"line_start":390,"line_end":390,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":14154,"byte_end":14157,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ message MyMessage {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":14162,"byte_end":14185,"line_start":392,"line_end":392,"column_start":5,"column_end":28}},{"value":"/     uuid.Uuid message_id = 1;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":14190,"byte_end":14223,"line_start":393,"line_end":393,"column_start":5,"column_end":38}},{"value":"/     string some_payload = 2;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":14228,"byte_end":14260,"line_start":394,"line_end":394,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":14265,"byte_end":14270,"line_start":395,"line_end":395,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":14275,"byte_end":14282,"line_start":396,"line_end":396,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":14287,"byte_end":14290,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ Additionally, `my_application` depends on the trait impls provided by the `uuid` crate:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":14295,"byte_end":14386,"line_start":398,"line_end":398,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":14391,"byte_end":14394,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ ```rust,ignore","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":14399,"byte_end":14417,"line_start":400,"line_end":400,"column_start":5,"column_end":23}},{"value":"/ // `main.rs` of `my_application`","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":14422,"byte_end":14458,"line_start":401,"line_end":401,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":14463,"byte_end":14466,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ use uuid::{DoSomething, Uuid};","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":14471,"byte_end":14505,"line_start":403,"line_end":403,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":14510,"byte_end":14513,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ include!(concat!(env!(\"OUT_DIR\"), \"/my_application.rs\"));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":14518,"byte_end":14579,"line_start":405,"line_end":405,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":14584,"byte_end":14587,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ pub fn process_message(msg: MyMessage) {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":14592,"byte_end":14636,"line_start":407,"line_end":407,"column_start":5,"column_end":49}},{"value":"/     if let Some(uuid) = msg.message_id {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":14641,"byte_end":14685,"line_start":408,"line_end":408,"column_start":5,"column_end":49}},{"value":"/         uuid.do_it();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":14690,"byte_end":14715,"line_start":409,"line_end":409,"column_start":5,"column_end":30}},{"value":"/     }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":14720,"byte_end":14729,"line_start":410,"line_end":410,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":14734,"byte_end":14739,"line_start":411,"line_end":411,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":14744,"byte_end":14751,"line_start":412,"line_end":412,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":14756,"byte_end":14759,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ Without configuring `uuid` as an external path in `my_application`'s `build.rs`, `prost`","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":14764,"byte_end":14856,"line_start":414,"line_end":414,"column_start":5,"column_end":97}},{"value":"/ would compile a completely separate version of the `Uuid` type, and `process_message` would","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":14861,"byte_end":14956,"line_start":415,"line_end":415,"column_start":5,"column_end":100}},{"value":"/ fail to compile. However, if `my_application` configures `uuid` as an extern path with a","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":14961,"byte_end":15053,"line_start":416,"line_end":416,"column_start":5,"column_end":97}},{"value":"/ call to `.extern_path(\".uuid\", \"::uuid\")`, `prost` will use the external type instead of","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":15058,"byte_end":15150,"line_start":417,"line_end":417,"column_start":5,"column_end":97}},{"value":"/ compiling a new version of `Uuid`. Note that the configuration could also be specified as","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":15155,"byte_end":15248,"line_start":418,"line_end":418,"column_start":5,"column_end":98}},{"value":"/ `.extern_path(\".uuid.Uuid\", \"::uuid::Uuid\")` if only the `Uuid` type were externally","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":15253,"byte_end":15341,"line_start":419,"line_end":419,"column_start":5,"column_end":93}},{"value":"/ provided, and not the whole `uuid` package.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":15346,"byte_end":15393,"line_start":420,"line_end":420,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":15398,"byte_end":15401,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ # Usage","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":15406,"byte_end":15417,"line_start":422,"line_end":422,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":15422,"byte_end":15425,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ `extern_path` takes a fully-qualified Protobuf path, and the corresponding Rust path that","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":15430,"byte_end":15523,"line_start":424,"line_end":424,"column_start":5,"column_end":98}},{"value":"/ it will be substituted with in generated code. The Protobuf path can refer to a package or","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":15528,"byte_end":15622,"line_start":425,"line_end":425,"column_start":5,"column_end":99}},{"value":"/ a type, and the Rust path should correspondingly refer to a Rust module or type.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":15627,"byte_end":15711,"line_start":426,"line_end":426,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":15716,"byte_end":15719,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":15724,"byte_end":15735,"line_start":428,"line_end":428,"column_start":5,"column_end":16}},{"value":"/ # let mut config = prost_build::Config::new();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":15740,"byte_end":15790,"line_start":429,"line_end":429,"column_start":5,"column_end":55}},{"value":"/ // Declare the `uuid` Protobuf package and all nested packages and types as externally","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":15795,"byte_end":15885,"line_start":430,"line_end":430,"column_start":5,"column_end":95}},{"value":"/ // provided by the `uuid` crate.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":15890,"byte_end":15926,"line_start":431,"line_end":431,"column_start":5,"column_end":41}},{"value":"/ config.extern_path(\".uuid\", \"::uuid\");","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":15931,"byte_end":15973,"line_start":432,"line_end":432,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":15978,"byte_end":15981,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ // Declare the `foo.bar.baz` Protobuf package and all nested packages and types as","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":15986,"byte_end":16072,"line_start":434,"line_end":434,"column_start":5,"column_end":91}},{"value":"/ // externally provided by the `foo_bar_baz` crate.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":16077,"byte_end":16131,"line_start":435,"line_end":435,"column_start":5,"column_end":59}},{"value":"/ config.extern_path(\".foo.bar.baz\", \"::foo_bar_baz\");","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":16136,"byte_end":16192,"line_start":436,"line_end":436,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":16197,"byte_end":16200,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ // Declare the `uuid.Uuid` Protobuf type (and all nested types) as externally provided","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":16205,"byte_end":16295,"line_start":438,"line_end":438,"column_start":5,"column_end":95}},{"value":"/ // by the `uuid` crate's `Uuid` type.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":16300,"byte_end":16341,"line_start":439,"line_end":439,"column_start":5,"column_end":46}},{"value":"/ config.extern_path(\".uuid.Uuid\", \"::uuid::Uuid\");","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":16346,"byte_end":16399,"line_start":440,"line_end":440,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":16404,"byte_end":16411,"line_start":441,"line_end":441,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":338},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":17085,"byte_end":17103,"line_start":458,"line_end":458,"column_start":12,"column_end":30},"name":"retain_enum_prefix","qualname":"<Config>::retain_enum_prefix","value":"pub fn retain_enum_prefix(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Configures the code generator to not strip the enum name from variant names.","sig":null,"attributes":[{"value":"/ Configures the code generator to not strip the enum name from variant names.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":16674,"byte_end":16754,"line_start":452,"line_end":452,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":16759,"byte_end":16762,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ Protobuf enum definitions commonly include the enum name as a prefix of every variant name.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":16767,"byte_end":16862,"line_start":454,"line_end":454,"column_start":5,"column_end":100}},{"value":"/ This style is non-idiomatic in Rust, so by default `prost` strips the enum name prefix from","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":16867,"byte_end":16962,"line_start":455,"line_end":455,"column_start":5,"column_end":100}},{"value":"/ variants which include it. Configuring this option prevents `prost` from stripping the","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":16967,"byte_end":17057,"line_start":456,"line_end":456,"column_start":5,"column_end":95}},{"value":"/ prefix.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":17062,"byte_end":17073,"line_start":457,"line_end":457,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":339},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":17478,"byte_end":17485,"line_start":467,"line_end":467,"column_start":12,"column_end":19},"name":"out_dir","qualname":"<Config>::out_dir","value":"pub fn out_dir<P>(&mut Self, P) -> &mut Self where P: Into<PathBuf>","parent":null,"children":[],"decl_id":null,"docs":" Configures the output directory where generated Rust files will be written.","sig":null,"attributes":[{"value":"/ Configures the output directory where generated Rust files will be written.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":17194,"byte_end":17273,"line_start":463,"line_end":463,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":17278,"byte_end":17281,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ If unset, defaults to the `OUT_DIR` environment variable. `OUT_DIR` is set by Cargo when","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":17286,"byte_end":17378,"line_start":465,"line_end":465,"column_start":5,"column_end":97}},{"value":"/ executing build scripts, so `out_dir` typically does not need to be configured.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":17383,"byte_end":17466,"line_start":466,"line_end":466,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":341},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":18375,"byte_end":18389,"line_start":492,"line_end":492,"column_start":12,"column_end":26},"name":"compile_protos","qualname":"<Config>::compile_protos","value":"pub fn compile_protos<P>(&mut Self, &[P], &[P]) -> Result<()> where\nP: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Compile `.proto` files into Rust files during a Cargo build with additional code generator\n configuration options.","sig":null,"attributes":[{"value":"/ Compile `.proto` files into Rust files during a Cargo build with additional code generator","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":17630,"byte_end":17724,"line_start":475,"line_end":475,"column_start":5,"column_end":99}},{"value":"/ configuration options.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":17729,"byte_end":17755,"line_start":476,"line_end":476,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":17760,"byte_end":17763,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ This method is like the `prost_build::compile_protos` function, with the added ability to","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":17768,"byte_end":17861,"line_start":478,"line_end":478,"column_start":5,"column_end":98}},{"value":"/ specify non-default code generation options. See that function for more information about","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":17866,"byte_end":17959,"line_start":479,"line_end":479,"column_start":5,"column_end":98}},{"value":"/ the arguments and generated outputs.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":17964,"byte_end":18004,"line_start":480,"line_end":480,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":18009,"byte_end":18012,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ # Example `build.rs`","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":18017,"byte_end":18041,"line_start":482,"line_end":482,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":18046,"byte_end":18049,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":18054,"byte_end":18072,"line_start":484,"line_end":484,"column_start":5,"column_end":23}},{"value":"/ fn main() {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":18077,"byte_end":18092,"line_start":485,"line_end":485,"column_start":5,"column_end":20}},{"value":"/     let mut prost_build = prost_build::Config::new();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":18097,"byte_end":18154,"line_start":486,"line_end":486,"column_start":5,"column_end":62}},{"value":"/     prost_build.btree_map(&[\".\"]);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":18159,"byte_end":18197,"line_start":487,"line_end":487,"column_start":5,"column_end":43}},{"value":"/     prost_build.compile_protos(&[\"src/frontend.proto\", \"src/backend.proto\"],","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":18202,"byte_end":18282,"line_start":488,"line_end":488,"column_start":5,"column_end":85}},{"value":"/                                &[\"src\"]).unwrap();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":18287,"byte_end":18341,"line_start":489,"line_end":489,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":18346,"byte_end":18351,"line_start":490,"line_end":490,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":18356,"byte_end":18363,"line_start":491,"line_end":491,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":351},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":23473,"byte_end":23487,"line_start":634,"line_end":634,"column_start":8,"column_end":22},"name":"compile_protos","qualname":"::compile_protos","value":"pub fn compile_protos<P>(&[P], &[P]) -> Result<()> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Compile `.proto` files into Rust files during a Cargo build.","sig":null,"attributes":[{"value":"/ Compile `.proto` files into Rust files during a Cargo build.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":21934,"byte_end":21998,"line_start":595,"line_end":595,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":21999,"byte_end":22002,"line_start":596,"line_end":596,"column_start":1,"column_end":4}},{"value":"/ The generated `.rs` files are written to the Cargo `OUT_DIR` directory, suitable for use with","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":22003,"byte_end":22100,"line_start":597,"line_end":597,"column_start":1,"column_end":98}},{"value":"/ the [include!][1] macro. See the [Cargo `build.rs` code generation][2] example for more info.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":22101,"byte_end":22198,"line_start":598,"line_end":598,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":22199,"byte_end":22202,"line_start":599,"line_end":599,"column_start":1,"column_end":4}},{"value":"/ This function should be called in a project's `build.rs`.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":22203,"byte_end":22264,"line_start":600,"line_end":600,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":22265,"byte_end":22268,"line_start":601,"line_end":601,"column_start":1,"column_end":4}},{"value":"/ # Arguments","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":22269,"byte_end":22284,"line_start":602,"line_end":602,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":22285,"byte_end":22288,"line_start":603,"line_end":603,"column_start":1,"column_end":4}},{"value":"/ **`protos`** - Paths to `.proto` files to compile. Any transitively [imported][3] `.proto`","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":22289,"byte_end":22383,"line_start":604,"line_end":604,"column_start":1,"column_end":95}},{"value":"/ files are automatically be included.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":22384,"byte_end":22424,"line_start":605,"line_end":605,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":22425,"byte_end":22428,"line_start":606,"line_end":606,"column_start":1,"column_end":4}},{"value":"/ **`includes`** - Paths to directories in which to search for imports. Directories are searched","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":22429,"byte_end":22527,"line_start":607,"line_end":607,"column_start":1,"column_end":99}},{"value":"/ in order. The `.proto` files passed in **`protos`** must be found in one of the provided","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":22528,"byte_end":22620,"line_start":608,"line_end":608,"column_start":1,"column_end":93}},{"value":"/ include directories.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":22621,"byte_end":22645,"line_start":609,"line_end":609,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":22646,"byte_end":22649,"line_start":610,"line_end":610,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":22650,"byte_end":22662,"line_start":611,"line_end":611,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":22663,"byte_end":22666,"line_start":612,"line_end":612,"column_start":1,"column_end":4}},{"value":"/ This function can fail for a number of reasons:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":22667,"byte_end":22718,"line_start":613,"line_end":613,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":22719,"byte_end":22722,"line_start":614,"line_end":614,"column_start":1,"column_end":4}},{"value":"/   - Failure to locate or download `protoc`.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":22723,"byte_end":22770,"line_start":615,"line_end":615,"column_start":1,"column_end":48}},{"value":"/   - Failure to parse the `.proto`s.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":22771,"byte_end":22810,"line_start":616,"line_end":616,"column_start":1,"column_end":40}},{"value":"/   - Failure to locate an imported `.proto`.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":22811,"byte_end":22858,"line_start":617,"line_end":617,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":22859,"byte_end":22862,"line_start":618,"line_end":618,"column_start":1,"column_end":4}},{"value":"/ It's expected that this function call be `unwrap`ed in a `build.rs`; there is typically no","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":22863,"byte_end":22957,"line_start":619,"line_end":619,"column_start":1,"column_end":95}},{"value":"/ reason to gracefully recover from errors during a build.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":22958,"byte_end":23018,"line_start":620,"line_end":620,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":23019,"byte_end":23022,"line_start":621,"line_end":621,"column_start":1,"column_end":4}},{"value":"/ # Example `build.rs`","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":23023,"byte_end":23047,"line_start":622,"line_end":622,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":23048,"byte_end":23051,"line_start":623,"line_end":623,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":23052,"byte_end":23070,"line_start":624,"line_end":624,"column_start":1,"column_end":19}},{"value":"/ fn main() {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":23071,"byte_end":23086,"line_start":625,"line_end":625,"column_start":1,"column_end":16}},{"value":"/     prost_build::compile_protos(&[\"src/frontend.proto\", \"src/backend.proto\"],","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":23087,"byte_end":23168,"line_start":626,"line_end":626,"column_start":1,"column_end":82}},{"value":"/                                 &[\"src\"]).unwrap();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":23169,"byte_end":23224,"line_start":627,"line_end":627,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":23225,"byte_end":23230,"line_start":628,"line_end":628,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":23231,"byte_end":23238,"line_start":629,"line_end":629,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":23239,"byte_end":23242,"line_start":630,"line_end":630,"column_start":1,"column_end":4}},{"value":"/ [1]: https://doc.rust-lang.org/std/macro.include.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":23243,"byte_end":23300,"line_start":631,"line_end":631,"column_start":1,"column_end":58}},{"value":"/ [2]: http://doc.crates.io/build-script.html#case-study-code-generation","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":23301,"byte_end":23375,"line_start":632,"line_end":632,"column_start":1,"column_end":75}},{"value":"/ [3]: https://developers.google.com/protocol-buffers/docs/proto3#importing-definitions","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":23376,"byte_end":23465,"line_start":633,"line_end":633,"column_start":1,"column_end":90}}]},{"kind":"Function","id":{"krate":0,"index":353},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":23669,"byte_end":23675,"line_start":642,"line_end":642,"column_start":8,"column_end":14},"name":"protoc","qualname":"::protoc","value":"pub fn protoc() -> &'static Path","parent":null,"children":[],"decl_id":null,"docs":" Returns the path to the `protoc` binary.\n","sig":null,"attributes":[{"value":"/ Returns the path to the `protoc` binary.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":23617,"byte_end":23661,"line_start":641,"line_end":641,"column_start":1,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":354},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":23793,"byte_end":23807,"line_start":647,"line_end":647,"column_start":8,"column_end":22},"name":"protoc_include","qualname":"::protoc_include","value":"pub fn protoc_include() -> &'static Path","parent":null,"children":[],"decl_id":null,"docs":" Returns the path to the Protobuf include directory.\n","sig":null,"attributes":[{"value":"/ Returns the path to the Protobuf include directory.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":23730,"byte_end":23785,"line_start":646,"line_end":646,"column_start":1,"column_end":56}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/ast.rs","byte_start":25606,"byte_end":25614,"line_start":17,"line_end":17,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":11},{"krate":0,"index":14}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/code_generator.rs","byte_start":30201,"byte_end":30214,"line_start":40,"line_end":40,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":122},{"krate":0,"index":126},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":141},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/extern_paths.rs","byte_start":62124,"byte_end":62135,"line_start":25,"line_end":25,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/message_graph.rs","byte_start":74965,"byte_end":74977,"line_start":17,"line_end":17,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":233},{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":5952,"byte_end":5958,"line_start":182,"line_end":182,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":327},{"krate":0,"index":330},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":341},{"krate":0,"index":345},{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":21572,"byte_end":21578,"line_start":580,"line_end":580,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/ast.rs","byte_start":25606,"byte_end":25614,"line_start":17,"line_end":17,"column_start":6,"column_end":14},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":355},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/code_generator.rs","byte_start":30201,"byte_end":30214,"line_start":40,"line_end":40,"column_start":10,"column_end":23},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":109},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/extern_paths.rs","byte_start":62124,"byte_end":62135,"line_start":25,"line_end":25,"column_start":6,"column_end":17},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":392},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/message_graph.rs","byte_start":74965,"byte_end":74977,"line_start":17,"line_end":17,"column_start":6,"column_end":18},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":226},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":5952,"byte_end":5958,"line_start":182,"line_end":182,"column_start":6,"column_end":12},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":312},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.5.0/src/lib.rs","byte_start":21572,"byte_end":21578,"line_start":580,"line_end":580,"column_start":27,"column_end":33},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":312},"to":{"krate":2,"index":2997}}]}