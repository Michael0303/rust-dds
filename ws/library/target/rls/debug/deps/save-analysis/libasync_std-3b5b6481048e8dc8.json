{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0","program":"/home/newslab/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","async_std","--edition=2018","/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","--json=diagnostic-rendered-ansi,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"async-channel\"","--cfg","feature=\"async-global-executor\"","--cfg","feature=\"async-io\"","--cfg","feature=\"async-lock\"","--cfg","feature=\"async-process\"","--cfg","feature=\"crossbeam-utils\"","--cfg","feature=\"default\"","--cfg","feature=\"futures-channel\"","--cfg","feature=\"futures-core\"","--cfg","feature=\"futures-io\"","--cfg","feature=\"futures-lite\"","--cfg","feature=\"gloo-timers\"","--cfg","feature=\"kv-log-macro\"","--cfg","feature=\"log\"","--cfg","feature=\"memchr\"","--cfg","feature=\"num_cpus\"","--cfg","feature=\"once_cell\"","--cfg","feature=\"pin-project-lite\"","--cfg","feature=\"pin-utils\"","--cfg","feature=\"slab\"","--cfg","feature=\"std\"","--cfg","feature=\"unstable\"","--cfg","feature=\"wasm-bindgen-futures\"","-C","metadata=3b5b6481048e8dc8","-C","extra-filename=-3b5b6481048e8dc8","--out-dir","/home/newslab/rust_practice/ws/library/target/rls/debug/deps","-L","dependency=/home/newslab/rust_practice/ws/library/target/rls/debug/deps","--extern","async_channel=/home/newslab/rust_practice/ws/library/target/rls/debug/deps/libasync_channel-4e2aea39328c7a07.rmeta","--extern","async_global_executor=/home/newslab/rust_practice/ws/library/target/rls/debug/deps/libasync_global_executor-a38d76eecff2eb56.rmeta","--extern","async_io=/home/newslab/rust_practice/ws/library/target/rls/debug/deps/libasync_io-e73c6f86aa2ef408.rmeta","--extern","async_lock=/home/newslab/rust_practice/ws/library/target/rls/debug/deps/libasync_lock-5c8f74f56d3563c1.rmeta","--extern","async_process=/home/newslab/rust_practice/ws/library/target/rls/debug/deps/libasync_process-b93922874953636b.rmeta","--extern","crossbeam_utils=/home/newslab/rust_practice/ws/library/target/rls/debug/deps/libcrossbeam_utils-20aee5502352a74b.rmeta","--extern","futures_core=/home/newslab/rust_practice/ws/library/target/rls/debug/deps/libfutures_core-ca7084b85b3c71ac.rmeta","--extern","futures_io=/home/newslab/rust_practice/ws/library/target/rls/debug/deps/libfutures_io-71f03b29d2dc7189.rmeta","--extern","futures_lite=/home/newslab/rust_practice/ws/library/target/rls/debug/deps/libfutures_lite-f534f5a3b6af9e27.rmeta","--extern","kv_log_macro=/home/newslab/rust_practice/ws/library/target/rls/debug/deps/libkv_log_macro-78ed6f5ea2490ae9.rmeta","--extern","log=/home/newslab/rust_practice/ws/library/target/rls/debug/deps/liblog-241d563ce70321b9.rmeta","--extern","memchr=/home/newslab/rust_practice/ws/library/target/rls/debug/deps/libmemchr-f3e7c7fa089d0a73.rmeta","--extern","num_cpus=/home/newslab/rust_practice/ws/library/target/rls/debug/deps/libnum_cpus-b8ca9b8809d40f3e.rmeta","--extern","once_cell=/home/newslab/rust_practice/ws/library/target/rls/debug/deps/libonce_cell-dbf50ffeb977222d.rmeta","--extern","pin_project_lite=/home/newslab/rust_practice/ws/library/target/rls/debug/deps/libpin_project_lite-a998cf3a0c0f2ffc.rmeta","--extern","pin_utils=/home/newslab/rust_practice/ws/library/target/rls/debug/deps/libpin_utils-d2805158ca242e05.rmeta","--extern","slab=/home/newslab/rust_practice/ws/library/target/rls/debug/deps/libslab-da8f5015d667b1f2.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/newslab/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/newslab/rust_practice/ws/library/target/rls/debug/deps/libasync_std-3b5b6481048e8dc8.rmeta"},"prelude":{"crate_id":{"name":"async_std","disambiguator":[2516924289255459682,0]},"crate_root":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src","external_crates":[{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[14026078687029744792,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/all.rs","num":2,"id":{"name":"core","disambiguator":[5443730852259234579,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[4162025702538114948,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[17612152343462746361,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5560808256873132085,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[135160560163186024,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[5800521777261530329,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[7095478770525139037,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17225897750877482818,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15613653607383163471,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[12428323400248712701,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[11893279639181573711,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[13583305032161054644,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[16609837797022023111,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[18098459435141129808,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[15244551393771456017,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[6576340271055396708,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[15284510821186066958,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[12982807908830018159,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/builder.rs","num":20,"id":{"name":"kv_log_macro","disambiguator":[5507358004608599679,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/mod.rs","num":21,"id":{"name":"log","disambiguator":[1658589366305183889,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/mod.rs","num":22,"id":{"name":"cfg_if","disambiguator":[1004283514336169005,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/mod.rs","num":23,"id":{"name":"value_bag","disambiguator":[10627078446571705083,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/mod.rs","num":24,"id":{"name":"ctor","disambiguator":[7241329082933586000,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/cycle.rs","num":25,"id":{"name":"futures_core","disambiguator":[1591406731620905623,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","num":26,"id":{"name":"pin_utils","disambiguator":[12498854107001860550,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/timeout.rs","num":27,"id":{"name":"pin_project_lite","disambiguator":[10864849255587560100,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","num":28,"id":{"name":"async_lock","disambiguator":[14708493496178266129,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","num":29,"id":{"name":"event_listener","disambiguator":[1673584883904259787,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/channel.rs","num":30,"id":{"name":"async_channel","disambiguator":[12642868003261860861,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/channel.rs","num":31,"id":{"name":"concurrent_queue","disambiguator":[16142568046357481470,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/channel.rs","num":32,"id":{"name":"cache_padded","disambiguator":[4348495487784496303,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_read/mod.rs","num":33,"id":{"name":"futures_io","disambiguator":[1680147281930790836,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/mod.rs","num":34,"id":{"name":"async_process","disambiguator":[1070745294311330340,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","num":35,"id":{"name":"async_io","disambiguator":[6662051274861453546,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/builder.rs","num":36,"id":{"name":"futures_lite","disambiguator":[9288433685402812138,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/mod.rs","num":37,"id":{"name":"parking","disambiguator":[16877541993706379641,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/mod.rs","num":38,"id":{"name":"waker_fn","disambiguator":[7760405789834040826,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/mod.rs","num":39,"id":{"name":"fastrand","disambiguator":[3092422362490760365,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_read/mod.rs","num":40,"id":{"name":"memchr","disambiguator":[7480610296841804772,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/mod.rs","num":41,"id":{"name":"socket2","disambiguator":[4653990803985051927,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/mod.rs","num":42,"id":{"name":"libc","disambiguator":[7494242181442760606,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/rt/mod.rs","num":43,"id":{"name":"once_cell","disambiguator":[6856981414050524038,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/mod.rs","num":44,"id":{"name":"polling","disambiguator":[11971622180261868155,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/waker_set.rs","num":45,"id":{"name":"slab","disambiguator":[2662637107692359652,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/mod.rs","num":46,"id":{"name":"signal_hook","disambiguator":[2759041351276694809,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/mod.rs","num":47,"id":{"name":"signal_hook_registry","disambiguator":[14353177693923537383,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/waker_set.rs","num":48,"id":{"name":"crossbeam_utils","disambiguator":[6443536939578642150,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/waker_set.rs","num":49,"id":{"name":"lazy_static","disambiguator":[9708727071027780738,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/builder.rs","num":50,"id":{"name":"async_global_executor","disambiguator":[7662525017101598906,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/builder.rs","num":51,"id":{"name":"async_executor","disambiguator":[11952637096104466778,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/builder.rs","num":52,"id":{"name":"async_task","disambiguator":[14806082551584636410,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/builder.rs","num":53,"id":{"name":"async_mutex","disambiguator":[2376702989960247503,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/builder.rs","num":54,"id":{"name":"num_cpus","disambiguator":[12525118056620765654,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/builder.rs","num":55,"id":{"name":"blocking","disambiguator":[8711796371541904445,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/builder.rs","num":56,"id":{"name":"atomic_waker","disambiguator":[9331020306896704463,0]}}],"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":0,"byte_end":11529,"line_start":1,"line_end":338,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":2,"index":13217},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13214690,"byte_end":13214697,"line_start":122,"line_end":122,"column_start":26,"column_end":33},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":50}},{"kind":"Use","ref_id":{"krate":2,"index":47838},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13214699,"byte_end":13214703,"line_start":122,"line_end":122,"column_start":35,"column_end":39},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":50}},{"kind":"Use","ref_id":{"krate":2,"index":13227},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13214705,"byte_end":13214710,"line_start":122,"line_end":122,"column_start":41,"column_end":46},"alias_span":null,"name":"Waker","value":"","parent":{"krate":0,"index":50}},{"kind":"Use","ref_id":{"krate":25,"index":169},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13214732,"byte_end":13214737,"line_start":123,"line_end":123,"column_start":20,"column_end":25},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":50}},{"kind":"Use","ref_id":{"krate":25,"index":169},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/ready.rs","byte_start":13354869,"byte_end":13354874,"line_start":4,"line_end":4,"column_start":23,"column_end":28},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":1967}},{"kind":"Use","ref_id":{"krate":0,"index":1988},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13214792,"byte_end":13214801,"line_start":129,"line_end":129,"column_start":24,"column_end":33},"alias_span":null,"name":"yield_now","value":"","parent":{"krate":0,"index":50}},{"kind":"Use","ref_id":{"krate":0,"index":2045},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13214862,"byte_end":13214870,"line_start":134,"line_end":134,"column_start":23,"column_end":31},"alias_span":null,"name":"block_on","value":"","parent":{"krate":0,"index":50}},{"kind":"Use","ref_id":{"krate":0,"index":2312},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13214893,"byte_end":13214900,"line_start":135,"line_end":135,"column_start":22,"column_end":29},"alias_span":null,"name":"Builder","value":"","parent":{"krate":0,"index":50}},{"kind":"Use","ref_id":{"krate":0,"index":2114},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13214924,"byte_end":13214931,"line_start":136,"line_end":136,"column_start":23,"column_end":30},"alias_span":null,"name":"current","value":"","parent":{"krate":0,"index":50}},{"kind":"Use","ref_id":{"krate":0,"index":2115},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13214933,"byte_end":13214944,"line_start":136,"line_end":136,"column_start":32,"column_end":43},"alias_span":null,"name":"try_current","value":"","parent":{"krate":0,"index":50}},{"kind":"Use","ref_id":{"krate":0,"index":2332},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13214965,"byte_end":13214969,"line_start":137,"line_end":137,"column_start":19,"column_end":23},"alias_span":null,"name":"Task","value":"","parent":{"krate":0,"index":50}},{"kind":"Use","ref_id":{"krate":0,"index":2337},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13214992,"byte_end":13214998,"line_start":138,"line_end":138,"column_start":22,"column_end":28},"alias_span":null,"name":"TaskId","value":"","parent":{"krate":0,"index":50}},{"kind":"Use","ref_id":{"krate":0,"index":2338},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13214992,"byte_end":13214998,"line_start":138,"line_end":138,"column_start":22,"column_end":28},"alias_span":null,"name":"TaskId","value":"","parent":{"krate":0,"index":50}},{"kind":"Use","ref_id":{"krate":0,"index":2325},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13215025,"byte_end":13215035,"line_start":139,"line_end":139,"column_start":26,"column_end":36},"alias_span":null,"name":"JoinHandle","value":"","parent":{"krate":0,"index":50}},{"kind":"Use","ref_id":{"krate":0,"index":2160},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13215056,"byte_end":13215061,"line_start":140,"line_end":140,"column_start":20,"column_end":25},"alias_span":null,"name":"sleep","value":"","parent":{"krate":0,"index":50}},{"kind":"Use","ref_id":{"krate":0,"index":2174},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13215121,"byte_end":13215126,"line_start":142,"line_end":142,"column_start":20,"column_end":25},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":50}},{"kind":"Use","ref_id":{"krate":0,"index":2362},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13215153,"byte_end":13215164,"line_start":143,"line_end":143,"column_start":26,"column_end":37},"alias_span":null,"name":"AccessError","value":"","parent":{"krate":0,"index":50}},{"kind":"Use","ref_id":{"krate":0,"index":2355},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13215166,"byte_end":13215174,"line_start":143,"line_end":143,"column_start":39,"column_end":47},"alias_span":null,"name":"LocalKey","value":"","parent":{"krate":0,"index":50}},{"kind":"Use","ref_id":{"krate":0,"index":2185},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13215677,"byte_end":13215691,"line_start":164,"line_end":164,"column_start":29,"column_end":43},"alias_span":null,"name":"spawn_blocking","value":"","parent":{"krate":0,"index":50}},{"kind":"Use","ref_id":{"krate":0,"index":2401},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13215908,"byte_end":13215919,"line_start":172,"line_end":172,"column_start":26,"column_end":37},"alias_span":null,"name":"spawn_local","value":"","parent":{"krate":0,"index":50}},{"kind":"Use","ref_id":{"krate":2,"index":12915},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13218503,"byte_end":13218509,"line_start":50,"line_end":50,"column_start":21,"column_end":27},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":51}},{"kind":"Use","ref_id":{"krate":2,"index":12915},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":13508060,"byte_end":13508066,"line_start":23,"line_end":23,"column_start":23,"column_end":29},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":2407}},{"kind":"Use","ref_id":{"krate":0,"index":2669},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13218573,"byte_end":13218580,"line_start":55,"line_end":55,"column_start":22,"column_end":29},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":51}},{"kind":"Use","ref_id":{"krate":0,"index":2694},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13218603,"byte_end":13218610,"line_start":56,"line_end":56,"column_start":22,"column_end":29},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":51}},{"kind":"Use","ref_id":{"krate":0,"index":2710},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13218631,"byte_end":13218636,"line_start":57,"line_end":57,"column_start":20,"column_end":25},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":51}},{"kind":"Use","ref_id":{"krate":0,"index":92},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13218764,"byte_end":13218771,"line_start":65,"line_end":65,"column_start":19,"column_end":26},"alias_span":null,"name":"timeout","value":"","parent":{"krate":0,"index":51}},{"kind":"Use","ref_id":{"krate":0,"index":2714},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13218773,"byte_end":13218785,"line_start":65,"line_end":65,"column_start":28,"column_end":40},"alias_span":null,"name":"TimeoutError","value":"","parent":{"krate":0,"index":51}},{"kind":"Use","ref_id":{"krate":0,"index":2738},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13218898,"byte_end":13218908,"line_start":70,"line_end":70,"column_start":26,"column_end":36},"alias_span":null,"name":"IntoFuture","value":"","parent":{"krate":0,"index":51}},{"kind":"Use","ref_id":{"krate":0,"index":1822},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13231432,"byte_end":13231437,"line_start":304,"line_end":304,"column_start":17,"column_end":22},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":107}},{"kind":"Use","ref_id":{"krate":0,"index":3187},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13231439,"byte_end":13231444,"line_start":304,"line_end":304,"column_start":24,"column_end":29},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":107}},{"kind":"Use","ref_id":{"krate":0,"index":1844},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13231465,"byte_end":13231472,"line_start":305,"line_end":305,"column_start":19,"column_end":26},"alias_span":null,"name":"from_fn","value":"","parent":{"krate":0,"index":107}},{"kind":"Use","ref_id":{"krate":0,"index":3193},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13231474,"byte_end":13231480,"line_start":305,"line_end":305,"column_start":28,"column_end":34},"alias_span":null,"name":"FromFn","value":"","parent":{"krate":0,"index":107}},{"kind":"Use","ref_id":{"krate":0,"index":1872},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13231503,"byte_end":13231512,"line_start":306,"line_end":306,"column_start":21,"column_end":30},"alias_span":null,"name":"from_iter","value":"","parent":{"krate":0,"index":107}},{"kind":"Use","ref_id":{"krate":0,"index":9895},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13231514,"byte_end":13231522,"line_start":306,"line_end":306,"column_start":32,"column_end":40},"alias_span":null,"name":"FromIter","value":"","parent":{"krate":0,"index":107}},{"kind":"Use","ref_id":{"krate":0,"index":1901},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13231540,"byte_end":13231544,"line_start":307,"line_end":307,"column_start":16,"column_end":20},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":107}},{"kind":"Use","ref_id":{"krate":0,"index":9856},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13231546,"byte_end":13231550,"line_start":307,"line_end":307,"column_start":22,"column_end":26},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":107}},{"kind":"Use","ref_id":{"krate":0,"index":1924},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13231570,"byte_end":13231576,"line_start":308,"line_end":308,"column_start":18,"column_end":24},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":107}},{"kind":"Use","ref_id":{"krate":0,"index":3202},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13231578,"byte_end":13231584,"line_start":308,"line_end":308,"column_start":26,"column_end":32},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":107}},{"kind":"Use","ref_id":{"krate":0,"index":1946},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13231609,"byte_end":13231620,"line_start":309,"line_end":309,"column_start":23,"column_end":34},"alias_span":null,"name":"repeat_with","value":"","parent":{"krate":0,"index":107}},{"kind":"Use","ref_id":{"krate":0,"index":3211},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13231622,"byte_end":13231632,"line_start":309,"line_end":309,"column_start":36,"column_end":46},"alias_span":null,"name":"RepeatWith","value":"","parent":{"krate":0,"index":107}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13231651,"byte_end":13231652,"line_start":310,"line_end":310,"column_start":17,"column_end":18},"alias_span":null,"name":"*","value":"Stream, Fuse","parent":{"krate":0,"index":107}},{"kind":"Use","ref_id":{"krate":0,"index":10279},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13234781,"byte_end":13234786,"line_start":128,"line_end":128,"column_start":20,"column_end":25},"alias_span":null,"name":"Merge","value":"","parent":{"krate":0,"index":151}},{"kind":"Use","ref_id":{"krate":0,"index":3405},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13232029,"byte_end":13232046,"line_start":334,"line_end":334,"column_start":34,"column_end":51},"alias_span":null,"name":"DoubleEndedStream","value":"","parent":{"krate":0,"index":107}},{"kind":"Use","ref_id":{"krate":0,"index":3422},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13232079,"byte_end":13232094,"line_start":335,"line_end":335,"column_start":32,"column_end":47},"alias_span":null,"name":"ExactSizeStream","value":"","parent":{"krate":0,"index":107}},{"kind":"Use","ref_id":{"krate":0,"index":3442},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13232117,"byte_end":13232123,"line_start":336,"line_end":336,"column_start":22,"column_end":28},"alias_span":null,"name":"extend","value":"","parent":{"krate":0,"index":107}},{"kind":"Use","ref_id":{"krate":0,"index":3437},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13232125,"byte_end":13232131,"line_start":336,"line_end":336,"column_start":30,"column_end":36},"alias_span":null,"name":"Extend","value":"","parent":{"krate":0,"index":107}},{"kind":"Use","ref_id":{"krate":0,"index":3459},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13232159,"byte_end":13232169,"line_start":337,"line_end":337,"column_start":26,"column_end":36},"alias_span":null,"name":"FromStream","value":"","parent":{"krate":0,"index":107}},{"kind":"Use","ref_id":{"krate":0,"index":3468},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13232197,"byte_end":13232208,"line_start":338,"line_end":338,"column_start":27,"column_end":38},"alias_span":null,"name":"FusedStream","value":"","parent":{"krate":0,"index":107}},{"kind":"Use","ref_id":{"krate":0,"index":3498},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13232233,"byte_end":13232241,"line_start":339,"line_end":339,"column_start":24,"column_end":32},"alias_span":null,"name":"interval","value":"","parent":{"krate":0,"index":107}},{"kind":"Use","ref_id":{"krate":0,"index":3688},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13232243,"byte_end":13232251,"line_start":339,"line_end":339,"column_start":34,"column_end":42},"alias_span":null,"name":"Interval","value":"","parent":{"krate":0,"index":107}},{"kind":"Use","ref_id":{"krate":0,"index":3506},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13232279,"byte_end":13232289,"line_start":340,"line_end":340,"column_start":26,"column_end":36},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":107}},{"kind":"Use","ref_id":{"krate":0,"index":3542},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13232313,"byte_end":13232320,"line_start":341,"line_end":341,"column_start":23,"column_end":30},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":107}},{"kind":"Use","ref_id":{"krate":0,"index":3693},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13232322,"byte_end":13232329,"line_start":341,"line_end":341,"column_start":32,"column_end":39},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":107}},{"kind":"Use","ref_id":{"krate":0,"index":3566},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13232353,"byte_end":13232360,"line_start":342,"line_end":342,"column_start":22,"column_end":29},"alias_span":null,"name":"Product","value":"","parent":{"krate":0,"index":107}},{"kind":"Use","ref_id":{"krate":0,"index":10279},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13232382,"byte_end":13232387,"line_start":343,"line_end":343,"column_start":21,"column_end":26},"alias_span":null,"name":"Merge","value":"","parent":{"krate":0,"index":107}},{"kind":"Use","ref_id":{"krate":0,"index":3602},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13232414,"byte_end":13232424,"line_start":344,"line_end":344,"column_start":26,"column_end":36},"alias_span":null,"name":"successors","value":"","parent":{"krate":0,"index":107}},{"kind":"Use","ref_id":{"krate":0,"index":9693},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13232426,"byte_end":13232436,"line_start":344,"line_end":344,"column_start":38,"column_end":48},"alias_span":null,"name":"Successors","value":"","parent":{"krate":0,"index":107}},{"kind":"Use","ref_id":{"krate":0,"index":3620},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13232456,"byte_end":13232459,"line_start":345,"line_end":345,"column_start":18,"column_end":21},"alias_span":null,"name":"Sum","value":"","parent":{"krate":0,"index":107}},{"kind":"Use","ref_id":{"krate":1,"index":3816},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13617782,"byte_end":13617787,"line_start":276,"line_end":276,"column_start":23,"column_end":28},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":1,"index":10652},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13617789,"byte_end":13617798,"line_start":276,"line_end":276,"column_start":30,"column_end":39},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":1,"index":10771},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13617800,"byte_end":13617807,"line_start":276,"line_end":276,"column_start":41,"column_end":48},"alias_span":null,"name":"IoSlice","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":1,"index":4420},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13617809,"byte_end":13617819,"line_start":276,"line_end":276,"column_start":50,"column_end":60},"alias_span":null,"name":"IoSliceMut","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":1,"index":3814},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13617821,"byte_end":13617827,"line_start":276,"line_end":276,"column_start":62,"column_end":68},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":1,"index":10780},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13617829,"byte_end":13617837,"line_start":276,"line_end":276,"column_start":70,"column_end":78},"alias_span":null,"name":"SeekFrom","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":33,"index":49},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13617864,"byte_end":13617871,"line_start":278,"line_end":278,"column_start":24,"column_end":31},"alias_span":null,"name":"BufRead","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":0,"index":9645},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13617873,"byte_end":13617878,"line_start":278,"line_end":278,"column_start":33,"column_end":38},"alias_span":null,"name":"Lines","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":0,"index":9597},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13617880,"byte_end":13617885,"line_start":278,"line_end":278,"column_start":40,"column_end":45},"alias_span":null,"name":"Split","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":0,"index":9463},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13617912,"byte_end":13617921,"line_start":279,"line_end":279,"column_start":25,"column_end":34},"alias_span":null,"name":"BufReader","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":0,"index":9422},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13617948,"byte_end":13617957,"line_start":280,"line_end":280,"column_start":26,"column_end":35},"alias_span":null,"name":"BufWriter","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":0,"index":5585},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13617959,"byte_end":13617973,"line_start":280,"line_end":280,"column_start":37,"column_end":51},"alias_span":null,"name":"IntoInnerError","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":0,"index":5402},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13617994,"byte_end":13617998,"line_start":281,"line_end":281,"column_start":19,"column_end":23},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":0,"index":5593},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13618020,"byte_end":13618026,"line_start":282,"line_end":282,"column_start":21,"column_end":27},"alias_span":null,"name":"Cursor","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":0,"index":5505},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13618048,"byte_end":13618053,"line_start":283,"line_end":283,"column_start":21,"column_end":26},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":0,"index":5506},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13618055,"byte_end":13618060,"line_start":283,"line_end":283,"column_start":28,"column_end":33},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":4279}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13618081,"byte_end":13618082,"line_start":284,"line_end":284,"column_start":19,"column_end":20},"alias_span":null,"name":"*","value":"Read, _","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":0,"index":5537},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13618105,"byte_end":13618111,"line_start":285,"line_end":285,"column_start":22,"column_end":28},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":0,"index":5538},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13618113,"byte_end":13618119,"line_start":285,"line_end":285,"column_start":30,"column_end":36},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":33,"index":47},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13618140,"byte_end":13618144,"line_start":286,"line_end":286,"column_start":19,"column_end":23},"alias_span":null,"name":"Seek","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":0,"index":5565},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13618165,"byte_end":13618169,"line_start":287,"line_end":287,"column_start":20,"column_end":24},"alias_span":null,"name":"sink","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":0,"index":5566},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13618171,"byte_end":13618175,"line_start":287,"line_end":287,"column_start":26,"column_end":30},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":4279}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13618197,"byte_end":13618198,"line_start":288,"line_end":288,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"_, Write","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":33,"index":49},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/prelude.rs","byte_start":13628062,"byte_end":13628069,"line_start":12,"line_end":12,"column_start":20,"column_end":27},"alias_span":null,"name":"BufRead","value":"","parent":{"krate":0,"index":4387}},{"kind":"Use","ref_id":{"krate":33,"index":39},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/prelude.rs","byte_start":13628108,"byte_end":13628112,"line_start":14,"line_end":14,"column_start":20,"column_end":24},"alias_span":null,"name":"Read","value":"","parent":{"krate":0,"index":4387}},{"kind":"Use","ref_id":{"krate":33,"index":47},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/prelude.rs","byte_start":13628151,"byte_end":13628155,"line_start":16,"line_end":16,"column_start":20,"column_end":24},"alias_span":null,"name":"Seek","value":"","parent":{"krate":0,"index":4387}},{"kind":"Use","ref_id":{"krate":33,"index":42},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/prelude.rs","byte_start":13628194,"byte_end":13628199,"line_start":18,"line_end":18,"column_start":20,"column_end":25},"alias_span":null,"name":"Write","value":"","parent":{"krate":0,"index":4387}},{"kind":"Use","ref_id":{"krate":0,"index":4595},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/prelude.rs","byte_start":13628246,"byte_end":13628256,"line_start":21,"line_end":21,"column_start":30,"column_end":40},"alias_span":null,"name":"BufReadExt","value":"","parent":{"krate":0,"index":4387}},{"kind":"Use","ref_id":{"krate":0,"index":4939},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/prelude.rs","byte_start":13628298,"byte_end":13628305,"line_start":23,"line_end":23,"column_start":26,"column_end":33},"alias_span":null,"name":"ReadExt","value":"","parent":{"krate":0,"index":4387}},{"kind":"Use","ref_id":{"krate":0,"index":5002},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/prelude.rs","byte_start":13628347,"byte_end":13628354,"line_start":25,"line_end":25,"column_start":26,"column_end":33},"alias_span":null,"name":"SeekExt","value":"","parent":{"krate":0,"index":4387}},{"kind":"Use","ref_id":{"krate":0,"index":5189},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/prelude.rs","byte_start":13628397,"byte_end":13628405,"line_start":27,"line_end":27,"column_start":27,"column_end":35},"alias_span":null,"name":"WriteExt","value":"","parent":{"krate":0,"index":4387}},{"kind":"Use","ref_id":{"krate":33,"index":47},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/seek/mod.rs","byte_start":13673641,"byte_end":13673650,"line_start":7,"line_end":7,"column_start":21,"column_end":30},"alias_span":null,"name":"Seek","value":"","parent":{"krate":0,"index":4959}},{"kind":"Use","ref_id":{"krate":0,"index":5775},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13618602,"byte_end":13618609,"line_start":311,"line_end":311,"column_start":21,"column_end":28},"alias_span":null,"name":"_eprint","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":0,"index":5772},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13618611,"byte_end":13618617,"line_start":311,"line_end":311,"column_start":30,"column_end":36},"alias_span":null,"name":"_print","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":0,"index":5706},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13618681,"byte_end":13618687,"line_start":314,"line_end":314,"column_start":22,"column_end":28},"alias_span":null,"name":"stderr","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":0,"index":5815},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13618689,"byte_end":13618695,"line_start":314,"line_end":314,"column_start":30,"column_end":36},"alias_span":null,"name":"Stderr","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":0,"index":5749},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13618757,"byte_end":13618762,"line_start":316,"line_end":316,"column_start":21,"column_end":26},"alias_span":null,"name":"stdin","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":0,"index":5853},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13618764,"byte_end":13618769,"line_start":316,"line_end":316,"column_start":28,"column_end":33},"alias_span":null,"name":"Stdin","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":0,"index":5808},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13618832,"byte_end":13618838,"line_start":318,"line_end":318,"column_start":22,"column_end":28},"alias_span":null,"name":"stdout","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":0,"index":5892},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13618840,"byte_end":13618846,"line_start":318,"line_end":318,"column_start":30,"column_end":36},"alias_span":null,"name":"Stdout","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":0,"index":5666},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13618870,"byte_end":13618877,"line_start":319,"line_end":319,"column_start":22,"column_end":29},"alias_span":null,"name":"timeout","value":"","parent":{"krate":0,"index":4279}},{"kind":"Use","ref_id":{"krate":1,"index":6643},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/io.rs","byte_start":13747536,"byte_end":13747543,"line_start":4,"line_end":4,"column_start":33,"column_end":40},"alias_span":null,"name":"AsRawFd","value":"","parent":{"krate":0,"index":5934}},{"kind":"Use","ref_id":{"krate":1,"index":6645},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/io.rs","byte_start":13747545,"byte_end":13747554,"line_start":4,"line_end":4,"column_start":42,"column_end":51},"alias_span":null,"name":"FromRawFd","value":"","parent":{"krate":0,"index":5934}},{"kind":"Use","ref_id":{"krate":1,"index":6647},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/io.rs","byte_start":13747556,"byte_end":13747565,"line_start":4,"line_end":4,"column_start":53,"column_end":62},"alias_span":null,"name":"IntoRawFd","value":"","parent":{"krate":0,"index":5934}},{"kind":"Use","ref_id":{"krate":1,"index":6642},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/io.rs","byte_start":13747567,"byte_end":13747572,"line_start":4,"line_end":4,"column_start":64,"column_end":69},"alias_span":null,"name":"RawFd","value":"","parent":{"krate":0,"index":5934}},{"kind":"Use","ref_id":{"krate":1,"index":5585},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/fs.rs","byte_start":13750630,"byte_end":13750643,"line_start":33,"line_end":33,"column_start":33,"column_end":46},"alias_span":null,"name":"DirBuilderExt","value":"","parent":{"krate":0,"index":5948}},{"kind":"Use","ref_id":{"krate":1,"index":5573},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/fs.rs","byte_start":13750645,"byte_end":13750656,"line_start":33,"line_end":33,"column_start":48,"column_end":59},"alias_span":null,"name":"DirEntryExt","value":"","parent":{"krate":0,"index":5948}},{"kind":"Use","ref_id":{"krate":1,"index":5523},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/fs.rs","byte_start":13750658,"byte_end":13750672,"line_start":33,"line_end":33,"column_start":61,"column_end":75},"alias_span":null,"name":"OpenOptionsExt","value":"","parent":{"krate":0,"index":5948}},{"kind":"Use","ref_id":{"krate":0,"index":6013},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/mod.rs","byte_start":13752264,"byte_end":13752276,"line_start":3,"line_end":3,"column_start":19,"column_end":31},"alias_span":null,"name":"UnixDatagram","value":"","parent":{"krate":0,"index":5964}},{"kind":"Use","ref_id":{"krate":0,"index":6124},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/mod.rs","byte_start":13752297,"byte_end":13752305,"line_start":4,"line_end":4,"column_start":20,"column_end":28},"alias_span":null,"name":"Incoming","value":"","parent":{"krate":0,"index":5964}},{"kind":"Use","ref_id":{"krate":0,"index":6110},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/mod.rs","byte_start":13752307,"byte_end":13752319,"line_start":4,"line_end":4,"column_start":30,"column_end":42},"alias_span":null,"name":"UnixListener","value":"","parent":{"krate":0,"index":5964}},{"kind":"Use","ref_id":{"krate":0,"index":6238},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/mod.rs","byte_start":13752338,"byte_end":13752348,"line_start":5,"line_end":5,"column_start":17,"column_end":27},"alias_span":null,"name":"UnixStream","value":"","parent":{"krate":0,"index":5964}},{"kind":"Use","ref_id":{"krate":1,"index":11013},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/mod.rs","byte_start":13752440,"byte_end":13752450,"line_start":12,"line_end":12,"column_start":33,"column_end":43},"alias_span":null,"name":"SocketAddr","value":"","parent":{"krate":0,"index":5964}},{"kind":"Use","ref_id":{"krate":34,"index":62},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/mod.rs","byte_start":13747435,"byte_end":13747439,"line_start":15,"line_end":15,"column_start":24,"column_end":28},"alias_span":null,"name":"process","value":"","parent":{"krate":0,"index":5930}},{"kind":"Use","ref_id":{"krate":2,"index":12915},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/prelude.rs","byte_start":13619520,"byte_end":13619526,"line_start":16,"line_end":16,"column_start":26,"column_end":32},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":4282}},{"kind":"Use","ref_id":{"krate":25,"index":96},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/prelude.rs","byte_start":13619577,"byte_end":13619583,"line_start":18,"line_end":18,"column_start":28,"column_end":34},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":4282}},{"kind":"Use","ref_id":{"krate":0,"index":2411},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/prelude.rs","byte_start":13619640,"byte_end":13619649,"line_start":21,"line_end":21,"column_start":36,"column_end":45},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":4282}},{"kind":"Use","ref_id":{"krate":0,"index":1685},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/prelude.rs","byte_start":13619705,"byte_end":13619714,"line_start":23,"line_end":23,"column_start":36,"column_end":45},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":4282}},{"kind":"Use","ref_id":{"krate":33,"index":49},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/prelude.rs","byte_start":13619761,"byte_end":13619768,"line_start":25,"line_end":25,"column_start":24,"column_end":31},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":4282}},{"kind":"Use","ref_id":{"krate":33,"index":39},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/prelude.rs","byte_start":13619820,"byte_end":13619824,"line_start":27,"line_end":27,"column_start":24,"column_end":28},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":4282}},{"kind":"Use","ref_id":{"krate":33,"index":47},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/prelude.rs","byte_start":13619876,"byte_end":13619880,"line_start":29,"line_end":29,"column_start":24,"column_end":28},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":4282}},{"kind":"Use","ref_id":{"krate":33,"index":42},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/prelude.rs","byte_start":13619932,"byte_end":13619937,"line_start":31,"line_end":31,"column_start":24,"column_end":29},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":4282}},{"kind":"Use","ref_id":{"krate":0,"index":4595},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/prelude.rs","byte_start":13619999,"byte_end":13620009,"line_start":34,"line_end":34,"column_start":33,"column_end":43},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":4282}},{"kind":"Use","ref_id":{"krate":0,"index":4939},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/prelude.rs","byte_start":13620070,"byte_end":13620077,"line_start":36,"line_end":36,"column_start":33,"column_end":40},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":4282}},{"kind":"Use","ref_id":{"krate":0,"index":5002},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/prelude.rs","byte_start":13620138,"byte_end":13620145,"line_start":38,"line_end":38,"column_start":33,"column_end":40},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":4282}},{"kind":"Use","ref_id":{"krate":0,"index":5189},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/prelude.rs","byte_start":13620206,"byte_end":13620214,"line_start":40,"line_end":40,"column_start":33,"column_end":41},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":4282}},{"kind":"Use","ref_id":{"krate":0,"index":45},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/prelude.rs","byte_start":13620280,"byte_end":13620290,"line_start":45,"line_end":45,"column_start":20,"column_end":30},"alias_span":null,"name":"task_local","value":"","parent":{"krate":0,"index":4282}},{"kind":"Use","ref_id":{"krate":0,"index":3405},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/prelude.rs","byte_start":13620360,"byte_end":13620377,"line_start":50,"line_end":50,"column_start":28,"column_end":45},"alias_span":null,"name":"DoubleEndedStream","value":"","parent":{"krate":0,"index":4282}},{"kind":"Use","ref_id":{"krate":0,"index":3422},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/prelude.rs","byte_start":13620428,"byte_end":13620443,"line_start":52,"line_end":52,"column_start":28,"column_end":43},"alias_span":null,"name":"ExactSizeStream","value":"","parent":{"krate":0,"index":4282}},{"kind":"Use","ref_id":{"krate":5,"index":5984},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13627132,"byte_end":13627135,"line_start":175,"line_end":175,"column_start":21,"column_end":24},"alias_span":null,"name":"Arc","value":"","parent":{"krate":0,"index":4283}},{"kind":"Use","ref_id":{"krate":5,"index":6004},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13627137,"byte_end":13627141,"line_start":175,"line_end":175,"column_start":26,"column_end":30},"alias_span":null,"name":"Weak","value":"","parent":{"krate":0,"index":4283}},{"kind":"Use","ref_id":{"krate":28,"index":60},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13627181,"byte_end":13627186,"line_start":178,"line_end":178,"column_start":22,"column_end":27},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":4283}},{"kind":"Use","ref_id":{"krate":28,"index":108},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13627188,"byte_end":13627198,"line_start":178,"line_end":178,"column_start":29,"column_end":39},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":4283}},{"kind":"Use","ref_id":{"krate":28,"index":137},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13627200,"byte_end":13627213,"line_start":178,"line_end":178,"column_start":41,"column_end":54},"alias_span":null,"name":"MutexGuardArc","value":"","parent":{"krate":0,"index":4283}},{"kind":"Use","ref_id":{"krate":28,"index":210},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13627253,"byte_end":13627259,"line_start":181,"line_end":181,"column_start":22,"column_end":28},"alias_span":null,"name":"RwLock","value":"","parent":{"krate":0,"index":4283}},{"kind":"Use","ref_id":{"krate":28,"index":253},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13627261,"byte_end":13627276,"line_start":181,"line_end":181,"column_start":30,"column_end":45},"alias_span":null,"name":"RwLockReadGuard","value":"","parent":{"krate":0,"index":4283}},{"kind":"Use","ref_id":{"krate":28,"index":275},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13627278,"byte_end":13627303,"line_start":181,"line_end":181,"column_start":47,"column_end":72},"alias_span":null,"name":"RwLockUpgradableReadGuard","value":"","parent":{"krate":0,"index":4283}},{"kind":"Use","ref_id":{"krate":28,"index":311},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13627305,"byte_end":13627321,"line_start":181,"line_end":181,"column_start":74,"column_end":90},"alias_span":null,"name":"RwLockWriteGuard","value":"","parent":{"krate":0,"index":4283}},{"kind":"Use","ref_id":{"krate":28,"index":412},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13627366,"byte_end":13627373,"line_start":184,"line_end":184,"column_start":26,"column_end":33},"alias_span":null,"name":"Barrier","value":"","parent":{"krate":0,"index":4283}},{"kind":"Use","ref_id":{"krate":28,"index":423},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13627375,"byte_end":13627392,"line_start":184,"line_end":184,"column_start":35,"column_end":52},"alias_span":null,"name":"BarrierWaitResult","value":"","parent":{"krate":0,"index":4283}},{"kind":"Use","ref_id":{"krate":0,"index":6335},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13627416,"byte_end":13627423,"line_start":185,"line_end":185,"column_start":22,"column_end":29},"alias_span":null,"name":"Condvar","value":"","parent":{"krate":0,"index":4283}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/channel.rs","byte_start":13627760,"byte_end":13627761,"line_start":8,"line_end":8,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":4314}},{"kind":"Use","ref_id":{"krate":0,"index":8042},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":13798581,"byte_end":13798591,"line_start":30,"line_end":30,"column_start":22,"column_end":32},"alias_span":null,"name":"DirBuilder","value":"","parent":{"krate":0,"index":6480}},{"kind":"Use","ref_id":{"krate":0,"index":6684},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":13798612,"byte_end":13798620,"line_start":31,"line_end":31,"column_start":20,"column_end":28},"alias_span":null,"name":"DirEntry","value":"","parent":{"krate":0,"index":6480}},{"kind":"Use","ref_id":{"krate":0,"index":8059},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":13798636,"byte_end":13798640,"line_start":32,"line_end":32,"column_start":15,"column_end":19},"alias_span":null,"name":"File","value":"","parent":{"krate":0,"index":6480}},{"kind":"Use","ref_id":{"krate":1,"index":10587},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":13798661,"byte_end":13798669,"line_start":33,"line_end":33,"column_start":20,"column_end":28},"alias_span":null,"name":"FileType","value":"","parent":{"krate":0,"index":6480}},{"kind":"Use","ref_id":{"krate":1,"index":10556},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":13798689,"byte_end":13798697,"line_start":34,"line_end":34,"column_start":19,"column_end":27},"alias_span":null,"name":"Metadata","value":"","parent":{"krate":0,"index":6480}},{"kind":"Use","ref_id":{"krate":0,"index":8089},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":13798721,"byte_end":13798732,"line_start":35,"line_end":35,"column_start":23,"column_end":34},"alias_span":null,"name":"OpenOptions","value":"","parent":{"krate":0,"index":6480}},{"kind":"Use","ref_id":{"krate":1,"index":10573},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":13798755,"byte_end":13798766,"line_start":36,"line_end":36,"column_start":22,"column_end":33},"alias_span":null,"name":"Permissions","value":"","parent":{"krate":0,"index":6480}},{"kind":"Use","ref_id":{"krate":0,"index":8105},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":13798786,"byte_end":13798793,"line_start":37,"line_end":37,"column_start":19,"column_end":26},"alias_span":null,"name":"ReadDir","value":"","parent":{"krate":0,"index":6480}},{"kind":"Use","ref_id":{"krate":0,"index":6573},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":13798818,"byte_end":13798830,"line_start":39,"line_end":39,"column_start":23,"column_end":35},"alias_span":null,"name":"canonicalize","value":"","parent":{"krate":0,"index":6480}},{"kind":"Use","ref_id":{"krate":0,"index":6592},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":13798846,"byte_end":13798850,"line_start":40,"line_end":40,"column_start":15,"column_end":19},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":6480}},{"kind":"Use","ref_id":{"krate":0,"index":6612},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":13798872,"byte_end":13798882,"line_start":41,"line_end":41,"column_start":21,"column_end":31},"alias_span":null,"name":"create_dir","value":"","parent":{"krate":0,"index":6480}},{"kind":"Use","ref_id":{"krate":0,"index":6631},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":13798908,"byte_end":13798922,"line_start":42,"line_end":42,"column_start":25,"column_end":39},"alias_span":null,"name":"create_dir_all","value":"","parent":{"krate":0,"index":6480}},{"kind":"Use","ref_id":{"krate":0,"index":6935},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":13798943,"byte_end":13798952,"line_start":43,"line_end":43,"column_start":20,"column_end":29},"alias_span":null,"name":"hard_link","value":"","parent":{"krate":0,"index":6480}},{"kind":"Use","ref_id":{"krate":0,"index":6952},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":13798972,"byte_end":13798980,"line_start":44,"line_end":44,"column_start":19,"column_end":27},"alias_span":null,"name":"metadata","value":"","parent":{"krate":0,"index":6480}},{"kind":"Use","ref_id":{"krate":0,"index":7002},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":13798996,"byte_end":13799000,"line_start":45,"line_end":45,"column_start":15,"column_end":19},"alias_span":null,"name":"read","value":"","parent":{"krate":0,"index":6480}},{"kind":"Use","ref_id":{"krate":0,"index":7043},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":13799020,"byte_end":13799028,"line_start":46,"line_end":46,"column_start":19,"column_end":27},"alias_span":null,"name":"read_dir","value":"","parent":{"krate":0,"index":6480}},{"kind":"Use","ref_id":{"krate":0,"index":7073},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":13799049,"byte_end":13799058,"line_start":47,"line_end":47,"column_start":20,"column_end":29},"alias_span":null,"name":"read_link","value":"","parent":{"krate":0,"index":6480}},{"kind":"Use","ref_id":{"krate":0,"index":7092},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":13799084,"byte_end":13799098,"line_start":48,"line_end":48,"column_start":25,"column_end":39},"alias_span":null,"name":"read_to_string","value":"","parent":{"krate":0,"index":6480}},{"kind":"Use","ref_id":{"krate":0,"index":7111},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":13799120,"byte_end":13799130,"line_start":49,"line_end":49,"column_start":21,"column_end":31},"alias_span":null,"name":"remove_dir","value":"","parent":{"krate":0,"index":6480}},{"kind":"Use","ref_id":{"krate":0,"index":7130},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":13799156,"byte_end":13799170,"line_start":50,"line_end":50,"column_start":25,"column_end":39},"alias_span":null,"name":"remove_dir_all","value":"","parent":{"krate":0,"index":6480}},{"kind":"Use","ref_id":{"krate":0,"index":7149},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":13799193,"byte_end":13799204,"line_start":51,"line_end":51,"column_start":22,"column_end":33},"alias_span":null,"name":"remove_file","value":"","parent":{"krate":0,"index":6480}},{"kind":"Use","ref_id":{"krate":0,"index":7168},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":13799222,"byte_end":13799228,"line_start":52,"line_end":52,"column_start":17,"column_end":23},"alias_span":null,"name":"rename","value":"","parent":{"krate":0,"index":6480}},{"kind":"Use","ref_id":{"krate":0,"index":7188},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":13799255,"byte_end":13799270,"line_start":53,"line_end":53,"column_start":26,"column_end":41},"alias_span":null,"name":"set_permissions","value":"","parent":{"krate":0,"index":6480}},{"kind":"Use","ref_id":{"krate":0,"index":7206},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":13799298,"byte_end":13799314,"line_start":54,"line_end":54,"column_start":27,"column_end":43},"alias_span":null,"name":"symlink_metadata","value":"","parent":{"krate":0,"index":6480}},{"kind":"Use","ref_id":{"krate":0,"index":7224},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":13799331,"byte_end":13799336,"line_start":55,"line_end":55,"column_start":16,"column_end":21},"alias_span":null,"name":"write","value":"","parent":{"krate":0,"index":6480}},{"kind":"Use","ref_id":{"krate":1,"index":10587},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file_type.rs","byte_start":13842939,"byte_end":13842947,"line_start":2,"line_end":2,"column_start":22,"column_end":30},"alias_span":null,"name":"FileType","value":"","parent":{"krate":0,"index":6921}},{"kind":"Use","ref_id":{"krate":1,"index":10556},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/metadata.rs","byte_start":13848179,"byte_end":13848187,"line_start":41,"line_end":41,"column_start":22,"column_end":30},"alias_span":null,"name":"Metadata","value":"","parent":{"krate":0,"index":6942}},{"kind":"Use","ref_id":{"krate":1,"index":10573},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/permissions.rs","byte_start":13862912,"byte_end":13862923,"line_start":2,"line_end":2,"column_start":22,"column_end":33},"alias_span":null,"name":"Permissions","value":"","parent":{"krate":0,"index":6988}},{"kind":"Use","ref_id":{"krate":1,"index":6949},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13882612,"byte_end":13882624,"line_start":80,"line_end":80,"column_start":5,"column_end":17},"alias_span":null,"name":"is_separator","value":"","parent":{"krate":0,"index":7231}},{"kind":"Use","ref_id":{"krate":1,"index":11206},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13882626,"byte_end":13882635,"line_start":80,"line_end":80,"column_start":19,"column_end":28},"alias_span":null,"name":"Component","value":"","parent":{"krate":0,"index":7231}},{"kind":"Use","ref_id":{"krate":1,"index":7240},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13882637,"byte_end":13882644,"line_start":80,"line_end":80,"column_start":30,"column_end":37},"alias_span":null,"name":"Display","value":"","parent":{"krate":0,"index":7231}},{"kind":"Use","ref_id":{"krate":1,"index":11115},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13882646,"byte_end":13882652,"line_start":80,"line_end":80,"column_start":39,"column_end":45},"alias_span":null,"name":"Prefix","value":"","parent":{"krate":0,"index":7231}},{"kind":"Use","ref_id":{"krate":1,"index":11189},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13882654,"byte_end":13882669,"line_start":80,"line_end":80,"column_start":47,"column_end":62},"alias_span":null,"name":"PrefixComponent","value":"","parent":{"krate":0,"index":7231}},{"kind":"Use","ref_id":{"krate":1,"index":11276},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13882671,"byte_end":13882687,"line_start":80,"line_end":80,"column_start":64,"column_end":80},"alias_span":null,"name":"StripPrefixError","value":"","parent":{"krate":0,"index":7231}},{"kind":"Use","ref_id":{"krate":1,"index":6950},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13882689,"byte_end":13882703,"line_start":80,"line_end":80,"column_start":82,"column_end":96},"alias_span":null,"name":"MAIN_SEPARATOR","value":"","parent":{"krate":0,"index":7231}},{"kind":"Use","ref_id":{"krate":0,"index":8119},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13882728,"byte_end":13882737,"line_start":83,"line_end":83,"column_start":20,"column_end":29},"alias_span":null,"name":"Ancestors","value":"","parent":{"krate":0,"index":7231}},{"kind":"Use","ref_id":{"krate":0,"index":8130},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13882759,"byte_end":13882769,"line_start":84,"line_end":84,"column_start":21,"column_end":31},"alias_span":null,"name":"Components","value":"","parent":{"krate":0,"index":7231}},{"kind":"Use","ref_id":{"krate":0,"index":8156},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13882785,"byte_end":13882789,"line_start":85,"line_end":85,"column_start":15,"column_end":19},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":7231}},{"kind":"Use","ref_id":{"krate":0,"index":8162},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13882805,"byte_end":13882809,"line_start":86,"line_end":86,"column_start":15,"column_end":19},"alias_span":null,"name":"Path","value":"","parent":{"krate":0,"index":7231}},{"kind":"Use","ref_id":{"krate":0,"index":8436},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13882828,"byte_end":13882835,"line_start":87,"line_end":87,"column_start":18,"column_end":25},"alias_span":null,"name":"PathBuf","value":"","parent":{"krate":0,"index":7231}},{"kind":"Use","ref_id":{"krate":1,"index":10947},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":13931627,"byte_end":13931641,"line_start":59,"line_end":59,"column_start":19,"column_end":33},"alias_span":null,"name":"AddrParseError","value":"","parent":{"krate":0,"index":7644}},{"kind":"Use","ref_id":{"krate":1,"index":10971},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":13931661,"byte_end":13931669,"line_start":60,"line_end":60,"column_start":19,"column_end":27},"alias_span":null,"name":"Shutdown","value":"","parent":{"krate":0,"index":7644}},{"kind":"Use","ref_id":{"krate":1,"index":10868},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":13931690,"byte_end":13931696,"line_start":61,"line_end":61,"column_start":20,"column_end":26},"alias_span":null,"name":"IpAddr","value":"","parent":{"krate":0,"index":7644}},{"kind":"Use","ref_id":{"krate":1,"index":10892},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":13931698,"byte_end":13931706,"line_start":61,"line_end":61,"column_start":28,"column_end":36},"alias_span":null,"name":"Ipv4Addr","value":"","parent":{"krate":0,"index":7644}},{"kind":"Use","ref_id":{"krate":1,"index":10895},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":13931708,"byte_end":13931716,"line_start":61,"line_end":61,"column_start":38,"column_end":46},"alias_span":null,"name":"Ipv6Addr","value":"","parent":{"krate":0,"index":7644}},{"kind":"Use","ref_id":{"krate":1,"index":10838},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":13931738,"byte_end":13931748,"line_start":62,"line_end":62,"column_start":20,"column_end":30},"alias_span":null,"name":"SocketAddr","value":"","parent":{"krate":0,"index":7644}},{"kind":"Use","ref_id":{"krate":1,"index":10862},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":13931750,"byte_end":13931762,"line_start":62,"line_end":62,"column_start":32,"column_end":44},"alias_span":null,"name":"SocketAddrV4","value":"","parent":{"krate":0,"index":7644}},{"kind":"Use","ref_id":{"krate":1,"index":10865},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":13931764,"byte_end":13931776,"line_start":62,"line_end":62,"column_start":46,"column_end":58},"alias_span":null,"name":"SocketAddrV6","value":"","parent":{"krate":0,"index":7644}},{"kind":"Use","ref_id":{"krate":0,"index":7736},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":13931829,"byte_end":13931842,"line_start":65,"line_end":65,"column_start":15,"column_end":28},"alias_span":null,"name":"ToSocketAddrs","value":"","parent":{"krate":0,"index":7644}},{"kind":"Use","ref_id":{"krate":0,"index":7869},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":13931893,"byte_end":13931901,"line_start":67,"line_end":67,"column_start":15,"column_end":23},"alias_span":null,"name":"Incoming","value":"","parent":{"krate":0,"index":7644}},{"kind":"Use","ref_id":{"krate":0,"index":8459},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":13931903,"byte_end":13931914,"line_start":67,"line_end":67,"column_start":25,"column_end":36},"alias_span":null,"name":"TcpListener","value":"","parent":{"krate":0,"index":7644}},{"kind":"Use","ref_id":{"krate":0,"index":8482},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":13931916,"byte_end":13931925,"line_start":67,"line_end":67,"column_start":38,"column_end":47},"alias_span":null,"name":"TcpStream","value":"","parent":{"krate":0,"index":7644}},{"kind":"Use","ref_id":{"krate":0,"index":8507},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":13931976,"byte_end":13931985,"line_start":69,"line_end":69,"column_start":14,"column_end":23},"alias_span":null,"name":"UdpSocket","value":"","parent":{"krate":0,"index":7644}},{"kind":"Use","ref_id":{"krate":2,"index":45210},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/pin/mod.rs","byte_start":13986124,"byte_end":13986127,"line_start":6,"line_end":6,"column_start":19,"column_end":22},"alias_span":null,"name":"Pin","value":"","parent":{"krate":0,"index":8530}},{"kind":"Use","ref_id":{"krate":1,"index":11613},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/process.rs","byte_start":13986558,"byte_end":13986568,"line_start":12,"line_end":12,"column_start":24,"column_end":34},"alias_span":null,"name":"ExitStatus","value":"","parent":{"krate":0,"index":8534}},{"kind":"Use","ref_id":{"krate":1,"index":11600},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/process.rs","byte_start":13986659,"byte_end":13986665,"line_start":16,"line_end":16,"column_start":24,"column_end":30},"alias_span":null,"name":"Output","value":"","parent":{"krate":0,"index":8534}},{"kind":"Use","ref_id":{"krate":1,"index":7463},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/process.rs","byte_start":13986756,"byte_end":13986761,"line_start":20,"line_end":20,"column_start":24,"column_end":29},"alias_span":null,"name":"Stdio","value":"","parent":{"krate":0,"index":8534}},{"kind":"Use","ref_id":{"krate":34,"index":98},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/process.rs","byte_start":13986852,"byte_end":13986857,"line_start":24,"line_end":24,"column_start":24,"column_end":29},"alias_span":null,"name":"Child","value":"","parent":{"krate":0,"index":8534}},{"kind":"Use","ref_id":{"krate":34,"index":205},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/process.rs","byte_start":13986948,"byte_end":13986959,"line_start":28,"line_end":28,"column_start":24,"column_end":35},"alias_span":null,"name":"ChildStderr","value":"","parent":{"krate":0,"index":8534}},{"kind":"Use","ref_id":{"krate":34,"index":195},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/process.rs","byte_start":13987050,"byte_end":13987060,"line_start":32,"line_end":32,"column_start":24,"column_end":34},"alias_span":null,"name":"ChildStdin","value":"","parent":{"krate":0,"index":8534}},{"kind":"Use","ref_id":{"krate":34,"index":200},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/process.rs","byte_start":13987151,"byte_end":13987162,"line_start":36,"line_end":36,"column_start":24,"column_end":35},"alias_span":null,"name":"ChildStdout","value":"","parent":{"krate":0,"index":8534}},{"kind":"Use","ref_id":{"krate":34,"index":143},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/process.rs","byte_start":13987253,"byte_end":13987260,"line_start":40,"line_end":40,"column_start":24,"column_end":31},"alias_span":null,"name":"Command","value":"","parent":{"krate":0,"index":8534}},{"kind":"Use","ref_id":{"krate":1,"index":7513},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/process.rs","byte_start":13987310,"byte_end":13987315,"line_start":43,"line_end":43,"column_start":24,"column_end":29},"alias_span":null,"name":"abort","value":"","parent":{"krate":0,"index":8534}},{"kind":"Use","ref_id":{"krate":1,"index":7512},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/process.rs","byte_start":13987317,"byte_end":13987321,"line_start":43,"line_end":43,"column_start":31,"column_end":35},"alias_span":null,"name":"exit","value":"","parent":{"krate":0,"index":8534}},{"kind":"Use","ref_id":{"krate":1,"index":7514},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/process.rs","byte_start":13987323,"byte_end":13987325,"line_start":43,"line_end":43,"column_start":37,"column_end":39},"alias_span":null,"name":"id","value":"","parent":{"krate":0,"index":8534}},{"kind":"Use","ref_id":{"krate":2,"index":14},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":11511,"byte_end":11516,"line_start":337,"line_end":337,"column_start":19,"column_end":24},"alias_span":null,"name":"write","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":2,"index":15},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":11518,"byte_end":11525,"line_start":337,"line_end":337,"column_start":26,"column_end":33},"alias_span":null,"name":"writeln","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":0,"byte_end":11529,"line_start":1,"line_end":338,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":40},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":107},{"krate":0,"index":4279},{"krate":0,"index":4281},{"krate":0,"index":4282},{"krate":0,"index":4283},{"krate":0,"index":4314},{"krate":0,"index":6480},{"krate":0,"index":7231},{"krate":0,"index":7644},{"krate":0,"index":8030},{"krate":0,"index":8530},{"krate":0,"index":8534},{"krate":0,"index":8569},{"krate":0,"index":8603},{"krate":0,"index":8680},{"krate":0,"index":8706},{"krate":0,"index":8733},{"krate":0,"index":8826},{"krate":0,"index":9317},{"krate":0,"index":9318},{"krate":0,"index":9321}],"decl_id":null,"docs":" # Async version of the Rust standard library","sig":null,"attributes":[{"value":"/ # Async version of the Rust standard library","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":0,"byte_end":48,"line_start":1,"line_end":1,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":49,"byte_end":52,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ `async-std` is a foundation of portable Rust software, a set of minimal and battle-tested","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":53,"byte_end":146,"line_start":3,"line_end":3,"column_start":1,"column_end":94}},{"value":"/ shared abstractions for the [broader Rust ecosystem][crates.io]. It offers std types, like","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":147,"byte_end":241,"line_start":4,"line_end":4,"column_start":1,"column_end":95}},{"value":"/ [`Future`] and [`Stream`], library-defined [operations on language primitives](#primitives),","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":242,"byte_end":338,"line_start":5,"line_end":5,"column_start":1,"column_end":97}},{"value":"/ [standard macros](#macros), [I/O] and [multithreading], among [many other things][other].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":339,"byte_end":432,"line_start":6,"line_end":6,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":433,"byte_end":436,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ `async-std` is available from [crates.io]. Once included, `async-std` can be accessed","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":437,"byte_end":526,"line_start":8,"line_end":8,"column_start":1,"column_end":90}},{"value":"/ in [`use`] statements through the path `async_std`, as in [`use async_std::future`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":527,"byte_end":615,"line_start":9,"line_end":9,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":616,"byte_end":619,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [I/O]: io/index.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":620,"byte_end":644,"line_start":11,"line_end":11,"column_start":1,"column_end":25}},{"value":"/ [multithreading]: task/index.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":645,"byte_end":682,"line_start":12,"line_end":12,"column_start":1,"column_end":38}},{"value":"/ [other]: #what-is-in-the-standard-library-documentation","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":683,"byte_end":742,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/ [`use`]: https://doc.rust-lang.org/book/ch07-02-defining-modules-to-control-scope-and-privacy.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":743,"byte_end":845,"line_start":14,"line_end":14,"column_start":1,"column_end":103}},{"value":"/ [`use async_std::future`]: future/index.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":846,"byte_end":894,"line_start":15,"line_end":15,"column_start":1,"column_end":49}},{"value":"/ [crates.io]: https://crates.io","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":895,"byte_end":929,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"/ [`Future`]: future/trait.Future.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":930,"byte_end":970,"line_start":17,"line_end":17,"column_start":1,"column_end":41}},{"value":"/ [`Stream`]: stream/trait.Stream.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":971,"byte_end":1011,"line_start":18,"line_end":18,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":1012,"byte_end":1015,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # How to read this documentation","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":1016,"byte_end":1052,"line_start":20,"line_end":20,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":1053,"byte_end":1056,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ If you already know the name of what you are looking for, the fastest way to","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":1057,"byte_end":1137,"line_start":22,"line_end":22,"column_start":1,"column_end":81}},{"value":"/ find it is to use the <a href=\"#\" onclick=\"focusSearchBar();\">search","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":1138,"byte_end":1210,"line_start":23,"line_end":23,"column_start":1,"column_end":73}},{"value":"/ bar</a> at the top of the page.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":1211,"byte_end":1246,"line_start":24,"line_end":24,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":1247,"byte_end":1250,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Otherwise, you may want to jump to one of these useful sections:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":1251,"byte_end":1319,"line_start":26,"line_end":26,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":1320,"byte_end":1323,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ * [`async_std::*` modules](#modules)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":1324,"byte_end":1364,"line_start":28,"line_end":28,"column_start":1,"column_end":41}},{"value":"/ * [Async macros](#macros)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":1365,"byte_end":1394,"line_start":29,"line_end":29,"column_start":1,"column_end":30}},{"value":"/ * [The Async Prelude](prelude/index.html)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":1395,"byte_end":1440,"line_start":30,"line_end":30,"column_start":1,"column_end":46}},{"value":"/ * [Cargo.toml feature flags](#features)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":1441,"byte_end":1484,"line_start":31,"line_end":31,"column_start":1,"column_end":44}},{"value":"/ * [Examples](#examples)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":1485,"byte_end":1512,"line_start":32,"line_end":32,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":1513,"byte_end":1516,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ If this is your first time, the documentation for `async-std` is","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":1517,"byte_end":1585,"line_start":34,"line_end":34,"column_start":1,"column_end":69}},{"value":"/ written to be casually perused. Clicking on interesting things should","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":1586,"byte_end":1659,"line_start":35,"line_end":35,"column_start":1,"column_end":74}},{"value":"/ generally lead you to interesting places. Still, there are important bits","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":1660,"byte_end":1737,"line_start":36,"line_end":36,"column_start":1,"column_end":78}},{"value":"/ you don't want to miss, so read on for a tour of the `async-std` and","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":1738,"byte_end":1810,"line_start":37,"line_end":37,"column_start":1,"column_end":73}},{"value":"/ its documentation!","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":1811,"byte_end":1833,"line_start":38,"line_end":38,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":1834,"byte_end":1837,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ Once you are familiar with the contents of `async-std` you may","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":1838,"byte_end":1904,"line_start":40,"line_end":40,"column_start":1,"column_end":67}},{"value":"/ begin to find the verbosity of the prose distracting. At this stage in your","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":1905,"byte_end":1984,"line_start":41,"line_end":41,"column_start":1,"column_end":80}},{"value":"/ development you may want to press the `[-]` button near the top of the","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":1985,"byte_end":2059,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/ page to collapse it into a more skimmable view.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":2060,"byte_end":2111,"line_start":43,"line_end":43,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":2112,"byte_end":2115,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ While you are looking at that `[-]` button also notice the `[src]`","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":2116,"byte_end":2186,"line_start":45,"line_end":45,"column_start":1,"column_end":71}},{"value":"/ button. Rust's API documentation comes with the source code and you are","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":2187,"byte_end":2262,"line_start":46,"line_end":46,"column_start":1,"column_end":76}},{"value":"/ encouraged to read it. The `async-std` source is generally high","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":2263,"byte_end":2330,"line_start":47,"line_end":47,"column_start":1,"column_end":68}},{"value":"/ quality and a peek behind the curtains is often enlightening.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":2331,"byte_end":2396,"line_start":48,"line_end":48,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":2397,"byte_end":2400,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ Modules in this crate are organized in the same way as in `std`, except blocking","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":2401,"byte_end":2485,"line_start":50,"line_end":50,"column_start":1,"column_end":85}},{"value":"/ functions have been replaced with async functions and threads have been replaced with","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":2486,"byte_end":2575,"line_start":51,"line_end":51,"column_start":1,"column_end":90}},{"value":"/ lightweight tasks.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":2576,"byte_end":2598,"line_start":52,"line_end":52,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":2599,"byte_end":2602,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ You can find more information, reading materials, and other resources here:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":2603,"byte_end":2682,"line_start":54,"line_end":54,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":2683,"byte_end":2686,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ * [The async-std website](https://async.rs/)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":2687,"byte_end":2735,"line_start":56,"line_end":56,"column_start":1,"column_end":49}},{"value":"/ * [The async-std book](https://book.async.rs)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":2736,"byte_end":2785,"line_start":57,"line_end":57,"column_start":1,"column_end":50}},{"value":"/ * [GitHub repository](https://github.com/async-rs/async-std)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":2786,"byte_end":2850,"line_start":58,"line_end":58,"column_start":1,"column_end":65}},{"value":"/ * [List of code examples](https://github.com/async-rs/async-std/tree/master/examples)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":2851,"byte_end":2940,"line_start":59,"line_end":59,"column_start":1,"column_end":90}},{"value":"/ * [Discord chat](https://discord.gg/JvZeVNe)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":2941,"byte_end":2989,"line_start":60,"line_end":60,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":2990,"byte_end":2993,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ # What is in the `async-std` documentation?","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":2994,"byte_end":3041,"line_start":62,"line_end":62,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":3042,"byte_end":3045,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ First, `async-std` is divided into a number of focused","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":3046,"byte_end":3104,"line_start":64,"line_end":64,"column_start":1,"column_end":59}},{"value":"/ modules, [all listed further down this page](#modules). These modules are","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":3105,"byte_end":3182,"line_start":65,"line_end":65,"column_start":1,"column_end":78}},{"value":"/ the bedrock upon which async Rust is forged, and they have mighty names","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":3183,"byte_end":3258,"line_start":66,"line_end":66,"column_start":1,"column_end":76}},{"value":"/ like [`async_std::os`] and [`async_std::task`]. Modules' documentation","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":3259,"byte_end":3333,"line_start":67,"line_end":67,"column_start":1,"column_end":75}},{"value":"/ typically includes an overview of the module along with examples, and are","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":3334,"byte_end":3411,"line_start":68,"line_end":68,"column_start":1,"column_end":78}},{"value":"/ a smart place to start familiarizing yourself with the library.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":3412,"byte_end":3479,"line_start":69,"line_end":69,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":3480,"byte_end":3483,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ Second, `async-std` defines [The Async Prelude], a small collection","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":3484,"byte_end":3555,"line_start":71,"line_end":71,"column_start":1,"column_end":72}},{"value":"/ of items - mostly traits - that should be imported into every module of","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":3556,"byte_end":3631,"line_start":72,"line_end":72,"column_start":1,"column_end":76}},{"value":"/ every async crate. The traits in the prelude are pervasive, making the","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":3632,"byte_end":3706,"line_start":73,"line_end":73,"column_start":1,"column_end":75}},{"value":"/ prelude documentation a good entry point to learning about the library.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":3707,"byte_end":3782,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":3783,"byte_end":3786,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ [The Async Prelude]: prelude/index.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":3787,"byte_end":3830,"line_start":76,"line_end":76,"column_start":1,"column_end":44}},{"value":"/ [`async_std::os`]: os/index.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":3831,"byte_end":3867,"line_start":77,"line_end":77,"column_start":1,"column_end":37}},{"value":"/ [`async_std::task`]: task/index.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":3868,"byte_end":3908,"line_start":78,"line_end":78,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":3909,"byte_end":3912,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ And finally, `async-std` exports a number of async macros, and","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":3913,"byte_end":3979,"line_start":80,"line_end":80,"column_start":1,"column_end":67}},{"value":"/ [lists them on this page](#macros).","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":3980,"byte_end":4019,"line_start":81,"line_end":81,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":4020,"byte_end":4023,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ # Contributing changes to the documentation","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":4024,"byte_end":4071,"line_start":83,"line_end":83,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":4072,"byte_end":4075,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ Check out `async-std`'s contribution guidelines [here](https://async.rs/contribute).","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":4076,"byte_end":4164,"line_start":85,"line_end":85,"column_start":1,"column_end":89}},{"value":"/ The source for this documentation can be found on [GitHub](https://github.com/async-rs).","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":4165,"byte_end":4257,"line_start":86,"line_end":86,"column_start":1,"column_end":93}},{"value":"/ To contribute changes, make sure you read the guidelines first, then submit","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":4258,"byte_end":4337,"line_start":87,"line_end":87,"column_start":1,"column_end":80}},{"value":"/ pull requests for your suggested changes.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":4338,"byte_end":4383,"line_start":88,"line_end":88,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":4384,"byte_end":4387,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ Contributions are appreciated! If you see a part of the docs that can be","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":4388,"byte_end":4464,"line_start":90,"line_end":90,"column_start":1,"column_end":77}},{"value":"/ improved, submit a PR, or chat with us first on","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":4465,"byte_end":4516,"line_start":91,"line_end":91,"column_start":1,"column_end":52}},{"value":"/ [Discord](https://discord.gg/JvZeVNe).","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":4517,"byte_end":4559,"line_start":92,"line_end":92,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":4560,"byte_end":4563,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ # A tour of `async-std`","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":4564,"byte_end":4591,"line_start":94,"line_end":94,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":4592,"byte_end":4595,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ The rest of this crate documentation is dedicated to pointing out notable","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":4596,"byte_end":4673,"line_start":96,"line_end":96,"column_start":1,"column_end":78}},{"value":"/ features of `async-std`.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":4674,"byte_end":4702,"line_start":97,"line_end":97,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":4703,"byte_end":4706,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ ## Platform abstractions and I/O","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":4707,"byte_end":4743,"line_start":99,"line_end":99,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":4744,"byte_end":4747,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ Besides basic data types, `async-std` is largely concerned with","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":4748,"byte_end":4815,"line_start":101,"line_end":101,"column_start":1,"column_end":68}},{"value":"/ abstracting over differences in common platforms, most notably Windows and","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":4816,"byte_end":4894,"line_start":102,"line_end":102,"column_start":1,"column_end":79}},{"value":"/ Unix derivatives.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":4895,"byte_end":4916,"line_start":103,"line_end":103,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":4917,"byte_end":4920,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ Common types of I/O, including [files], [TCP], [UDP], are defined in the","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":4921,"byte_end":4997,"line_start":105,"line_end":105,"column_start":1,"column_end":77}},{"value":"/ [`io`], [`fs`], and [`net`] modules.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":4998,"byte_end":5038,"line_start":106,"line_end":106,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":5039,"byte_end":5042,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ The [`task`] module contains `async-std`'s task abstractions. [`sync`]","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":5043,"byte_end":5117,"line_start":108,"line_end":108,"column_start":1,"column_end":75}},{"value":"/ contains further primitive shared memory types. [`channel`]  contains the channel types for message passing.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":5118,"byte_end":5230,"line_start":109,"line_end":109,"column_start":1,"column_end":113}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":5231,"byte_end":5234,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ [files]: fs/struct.File.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":5235,"byte_end":5267,"line_start":111,"line_end":111,"column_start":1,"column_end":33}},{"value":"/ [TCP]: net/struct.TcpStream.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":5268,"byte_end":5304,"line_start":112,"line_end":112,"column_start":1,"column_end":37}},{"value":"/ [UDP]: net/struct.UdpSocket.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":5305,"byte_end":5341,"line_start":113,"line_end":113,"column_start":1,"column_end":37}},{"value":"/ [`io`]: io/index.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":5342,"byte_end":5367,"line_start":114,"line_end":114,"column_start":1,"column_end":26}},{"value":"/ [`sync`]: sync/index.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":5368,"byte_end":5397,"line_start":115,"line_end":115,"column_start":1,"column_end":30}},{"value":"/ [`channel`]: channel/index.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":5398,"byte_end":5433,"line_start":116,"line_end":116,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":5434,"byte_end":5437,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ ## Timeouts, intervals, and delays","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":5438,"byte_end":5476,"line_start":118,"line_end":118,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":5477,"byte_end":5480,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ `async-std` provides several methods to manipulate time:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":5481,"byte_end":5541,"line_start":120,"line_end":120,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":5542,"byte_end":5545,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ * [`task::sleep`] to wait for a duration to pass without blocking.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":5546,"byte_end":5616,"line_start":122,"line_end":122,"column_start":1,"column_end":71}},{"value":"/ * [`stream::interval`] for emitting an event at a set interval.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":5617,"byte_end":5684,"line_start":123,"line_end":123,"column_start":1,"column_end":68}},{"value":"/ * [`future::timeout`] to time-out futures if they don't resolve within a","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":5685,"byte_end":5761,"line_start":124,"line_end":124,"column_start":1,"column_end":77}},{"value":"/   set interval.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":5762,"byte_end":5781,"line_start":125,"line_end":125,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":5782,"byte_end":5785,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ [`task::sleep`]: task/fn.sleep.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":5786,"byte_end":5825,"line_start":127,"line_end":127,"column_start":1,"column_end":40}},{"value":"/ [`stream::interval`]: stream/fn.interval.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":5826,"byte_end":5875,"line_start":128,"line_end":128,"column_start":1,"column_end":50}},{"value":"/ [`future::timeout`]: future/fn.timeout.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":5876,"byte_end":5923,"line_start":129,"line_end":129,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":5924,"byte_end":5927,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":5928,"byte_end":5942,"line_start":131,"line_end":131,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":5943,"byte_end":5946,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ All examples require the [`\"attributes\"` feature](#features) to be enabled.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":5947,"byte_end":6026,"line_start":133,"line_end":133,"column_start":1,"column_end":80}},{"value":"/ This feature is not enabled by default because it significantly impacts","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":6027,"byte_end":6102,"line_start":134,"line_end":134,"column_start":1,"column_end":76}},{"value":"/ compile times. See [`task::block_on`] for an alternative way to start","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":6103,"byte_end":6176,"line_start":135,"line_end":135,"column_start":1,"column_end":74}},{"value":"/ executing tasks.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":6177,"byte_end":6197,"line_start":136,"line_end":136,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":6198,"byte_end":6201,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ Call an async function from the main function:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":6202,"byte_end":6252,"line_start":138,"line_end":138,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":6253,"byte_end":6256,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ async fn say_hello() {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":6368,"byte_end":6394,"line_start":142,"line_end":142,"column_start":1,"column_end":27}},{"value":"/     println!(\"Hello, world!\");","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":6395,"byte_end":6429,"line_start":143,"line_end":143,"column_start":1,"column_end":35}},{"value":"/ }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":6430,"byte_end":6435,"line_start":144,"line_end":144,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":6436,"byte_end":6439,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ #[async_std::main]","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":6440,"byte_end":6462,"line_start":146,"line_end":146,"column_start":1,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":6463,"byte_end":6484,"line_start":147,"line_end":147,"column_start":1,"column_end":22}},{"value":"/     say_hello().await;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":6485,"byte_end":6511,"line_start":148,"line_end":148,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":6512,"byte_end":6517,"line_start":149,"line_end":149,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":6518,"byte_end":6525,"line_start":150,"line_end":150,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":6526,"byte_end":6529,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ Await two futures concurrently, and return a tuple of their output:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":6530,"byte_end":6601,"line_start":152,"line_end":152,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":6602,"byte_end":6605,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":6717,"byte_end":6747,"line_start":156,"line_end":156,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":6748,"byte_end":6751,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ #[async_std::main]","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":6752,"byte_end":6774,"line_start":158,"line_end":158,"column_start":1,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":6775,"byte_end":6796,"line_start":159,"line_end":159,"column_start":1,"column_end":22}},{"value":"/     let a = async { 1u8 };","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":6797,"byte_end":6827,"line_start":160,"line_end":160,"column_start":1,"column_end":31}},{"value":"/     let b = async { 2u8 };","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":6828,"byte_end":6858,"line_start":161,"line_end":161,"column_start":1,"column_end":31}},{"value":"/     assert_eq!(a.join(b).await, (1u8, 2u8))","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":6859,"byte_end":6906,"line_start":162,"line_end":162,"column_start":1,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":6907,"byte_end":6912,"line_start":163,"line_end":163,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":6913,"byte_end":6920,"line_start":164,"line_end":164,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":6921,"byte_end":6924,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ Create a UDP server that echoes back each received message to the sender:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":6925,"byte_end":7002,"line_start":166,"line_end":166,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":7003,"byte_end":7006,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":7124,"byte_end":7158,"line_start":170,"line_end":170,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":7159,"byte_end":7162,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ #[async_std::main]","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":7163,"byte_end":7185,"line_start":172,"line_end":172,"column_start":1,"column_end":23}},{"value":"/ async fn main() -> std::io::Result<()> {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":7186,"byte_end":7230,"line_start":173,"line_end":173,"column_start":1,"column_end":45}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":7231,"byte_end":7293,"line_start":174,"line_end":174,"column_start":1,"column_end":63}},{"value":"/     println!(\"Listening on {}\", socket.local_addr()?);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":7294,"byte_end":7352,"line_start":175,"line_end":175,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":7353,"byte_end":7356,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/     let mut buf = vec![0u8; 1024];","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":7357,"byte_end":7395,"line_start":177,"line_end":177,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":7396,"byte_end":7399,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":7400,"byte_end":7414,"line_start":179,"line_end":179,"column_start":1,"column_end":15}},{"value":"/         let (recv, peer) = socket.recv_from(&mut buf).await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":7415,"byte_end":7480,"line_start":180,"line_end":180,"column_start":1,"column_end":66}},{"value":"/         let sent = socket.send_to(&buf[..recv], &peer).await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":7481,"byte_end":7547,"line_start":181,"line_end":181,"column_start":1,"column_end":67}},{"value":"/         println!(\"Sent {} out of {} bytes to {}\", sent, recv, peer);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":7548,"byte_end":7620,"line_start":182,"line_end":182,"column_start":1,"column_end":73}},{"value":"/     }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":7621,"byte_end":7630,"line_start":183,"line_end":183,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":7631,"byte_end":7636,"line_start":184,"line_end":184,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":7637,"byte_end":7644,"line_start":185,"line_end":185,"column_start":1,"column_end":8}},{"value":"/ [`task::block_on`]: task/fn.block_on.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":7645,"byte_end":7690,"line_start":186,"line_end":186,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":7691,"byte_end":7694,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ # Features","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":7695,"byte_end":7709,"line_start":188,"line_end":188,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":7710,"byte_end":7713,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ Items marked with","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":7714,"byte_end":7735,"line_start":190,"line_end":190,"column_start":1,"column_end":22}},{"value":"/ <span","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":7736,"byte_end":7745,"line_start":191,"line_end":191,"column_start":1,"column_end":10}},{"value":"/   class=\"module-item stab portability\"","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":7746,"byte_end":7788,"line_start":192,"line_end":192,"column_start":1,"column_end":43}},{"value":"/   style=\"display: inline; border-radius: 3px; padding: 2px; font-size: 80%; line-height: 1.2;\"","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":7789,"byte_end":7887,"line_start":193,"line_end":193,"column_start":1,"column_end":99}},{"value":"/ ><code>unstable</code></span>","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":7888,"byte_end":7921,"line_start":194,"line_end":194,"column_start":1,"column_end":34}},{"value":"/ are available only when the `unstable` Cargo feature is enabled:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":7922,"byte_end":7990,"line_start":195,"line_end":195,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":7991,"byte_end":7994,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":7995,"byte_end":8006,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"/ [dependencies.async-std]","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":8007,"byte_end":8035,"line_start":198,"line_end":198,"column_start":1,"column_end":29}},{"value":"/ version = \"1.7.0\"","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":8036,"byte_end":8057,"line_start":199,"line_end":199,"column_start":1,"column_end":22}},{"value":"/ features = [\"unstable\"]","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":8058,"byte_end":8085,"line_start":200,"line_end":200,"column_start":1,"column_end":28}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":8086,"byte_end":8093,"line_start":201,"line_end":201,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":8094,"byte_end":8097,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ Items marked with","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":8098,"byte_end":8119,"line_start":203,"line_end":203,"column_start":1,"column_end":22}},{"value":"/ <span","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":8120,"byte_end":8129,"line_start":204,"line_end":204,"column_start":1,"column_end":10}},{"value":"/   class=\"module-item stab portability\"","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":8130,"byte_end":8172,"line_start":205,"line_end":205,"column_start":1,"column_end":43}},{"value":"/   style=\"display: inline; border-radius: 3px; padding: 2px; font-size: 80%; line-height: 1.2;\"","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":8173,"byte_end":8271,"line_start":206,"line_end":206,"column_start":1,"column_end":99}},{"value":"/ ><code>attributes</code></span>","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":8272,"byte_end":8307,"line_start":207,"line_end":207,"column_start":1,"column_end":36}},{"value":"/ are available only when the `attributes` Cargo feature is enabled:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":8308,"byte_end":8378,"line_start":208,"line_end":208,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":8379,"byte_end":8382,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":8383,"byte_end":8394,"line_start":210,"line_end":210,"column_start":1,"column_end":12}},{"value":"/ [dependencies.async-std]","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":8395,"byte_end":8423,"line_start":211,"line_end":211,"column_start":1,"column_end":29}},{"value":"/ version = \"1.7.0\"","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":8424,"byte_end":8445,"line_start":212,"line_end":212,"column_start":1,"column_end":22}},{"value":"/ features = [\"attributes\"]","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":8446,"byte_end":8475,"line_start":213,"line_end":213,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":8476,"byte_end":8483,"line_start":214,"line_end":214,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":8484,"byte_end":8487,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ Compatibility with the `tokio` 1.0 runtime is also simultaneously possible","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":8488,"byte_end":8566,"line_start":216,"line_end":216,"column_start":1,"column_end":79}},{"value":"/ using the `tokio1` Cargo feature:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":8567,"byte_end":8604,"line_start":217,"line_end":217,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":8605,"byte_end":8608,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":8609,"byte_end":8620,"line_start":219,"line_end":219,"column_start":1,"column_end":12}},{"value":"/ [dependencies.async-std]","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":8621,"byte_end":8649,"line_start":220,"line_end":220,"column_start":1,"column_end":29}},{"value":"/ version = \"1.7.0\"","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":8650,"byte_end":8671,"line_start":221,"line_end":221,"column_start":1,"column_end":22}},{"value":"/ features = [\"tokio1\"]","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":8672,"byte_end":8697,"line_start":222,"line_end":222,"column_start":1,"column_end":26}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":8698,"byte_end":8705,"line_start":223,"line_end":223,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":8706,"byte_end":8709,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ Compatibility with the `tokio` 0.2 runtime is possible using the `tokio02`","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":8710,"byte_end":8788,"line_start":225,"line_end":225,"column_start":1,"column_end":79}},{"value":"/ Cargo feature:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":8789,"byte_end":8807,"line_start":226,"line_end":226,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":8808,"byte_end":8811,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":8812,"byte_end":8823,"line_start":228,"line_end":228,"column_start":1,"column_end":12}},{"value":"/ [dependencies.async-std]","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":8824,"byte_end":8852,"line_start":229,"line_end":229,"column_start":1,"column_end":29}},{"value":"/ version = \"1.7.0\"","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":8853,"byte_end":8874,"line_start":230,"line_end":230,"column_start":1,"column_end":22}},{"value":"/ features = [\"tokio02\"]","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":8875,"byte_end":8901,"line_start":231,"line_end":231,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":8902,"byte_end":8909,"line_start":232,"line_end":232,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":8910,"byte_end":8913,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ Compatibility with the `tokio` 0.3 runtime is also simultaneously possible","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":8914,"byte_end":8992,"line_start":234,"line_end":234,"column_start":1,"column_end":79}},{"value":"/ using the `tokio03` Cargo feature:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":8993,"byte_end":9031,"line_start":235,"line_end":235,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":9032,"byte_end":9035,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":9036,"byte_end":9047,"line_start":237,"line_end":237,"column_start":1,"column_end":12}},{"value":"/ [dependencies.async-std]","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":9048,"byte_end":9076,"line_start":238,"line_end":238,"column_start":1,"column_end":29}},{"value":"/ version = \"1.7.0\"","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":9077,"byte_end":9098,"line_start":239,"line_end":239,"column_start":1,"column_end":22}},{"value":"/ features = [\"tokio03\"]","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":9099,"byte_end":9125,"line_start":240,"line_end":240,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":9126,"byte_end":9133,"line_start":241,"line_end":241,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":9134,"byte_end":9137,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/ Additionally it's possible to only use the core traits and combinators by","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":9138,"byte_end":9215,"line_start":243,"line_end":243,"column_start":1,"column_end":78}},{"value":"/ only enabling the `std` Cargo feature:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":9216,"byte_end":9258,"line_start":244,"line_end":244,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":9259,"byte_end":9262,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":9263,"byte_end":9274,"line_start":246,"line_end":246,"column_start":1,"column_end":12}},{"value":"/ [dependencies.async-std]","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":9275,"byte_end":9303,"line_start":247,"line_end":247,"column_start":1,"column_end":29}},{"value":"/ version = \"1.7.0\"","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":9304,"byte_end":9325,"line_start":248,"line_end":248,"column_start":1,"column_end":22}},{"value":"/ default-features = false","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":9326,"byte_end":9354,"line_start":249,"line_end":249,"column_start":1,"column_end":29}},{"value":"/ features = [\"std\"]","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":9355,"byte_end":9377,"line_start":250,"line_end":250,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":9378,"byte_end":9385,"line_start":251,"line_end":251,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":9386,"byte_end":9389,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ And to use async-std on `no_std` targets that only support `alloc` only","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":9390,"byte_end":9465,"line_start":253,"line_end":253,"column_start":1,"column_end":76}},{"value":"/ enable the `alloc` Cargo feature:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":9466,"byte_end":9503,"line_start":254,"line_end":254,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":9504,"byte_end":9507,"line_start":255,"line_end":255,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":9508,"byte_end":9519,"line_start":256,"line_end":256,"column_start":1,"column_end":12}},{"value":"/ [dependencies.async-std]","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":9520,"byte_end":9548,"line_start":257,"line_end":257,"column_start":1,"column_end":29}},{"value":"/ version = \"1.7.0\"","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":9549,"byte_end":9570,"line_start":258,"line_end":258,"column_start":1,"column_end":22}},{"value":"/ default-features = false","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":9571,"byte_end":9599,"line_start":259,"line_end":259,"column_start":1,"column_end":29}},{"value":"/ features = [\"alloc\"]","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":9600,"byte_end":9624,"line_start":260,"line_end":260,"column_start":1,"column_end":25}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":9625,"byte_end":9632,"line_start":261,"line_end":261,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":9633,"byte_end":9636,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ # Runtime configuration","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":9637,"byte_end":9664,"line_start":263,"line_end":263,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":9665,"byte_end":9668,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ Several environment variables are available to tune the async-std","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":9669,"byte_end":9738,"line_start":265,"line_end":265,"column_start":1,"column_end":70}},{"value":"/ runtime:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":9739,"byte_end":9751,"line_start":266,"line_end":266,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":9752,"byte_end":9755,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ * `ASYNC_STD_THREAD_COUNT`: The number of threads that the","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":9756,"byte_end":9818,"line_start":268,"line_end":268,"column_start":1,"column_end":63}},{"value":"/ async-std runtime will start. By default, this is one per logical","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":9819,"byte_end":9888,"line_start":269,"line_end":269,"column_start":1,"column_end":70}},{"value":"/ cpu as reported by the [num_cpus](num_cpus) crate, which may be","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":9889,"byte_end":9956,"line_start":270,"line_end":270,"column_start":1,"column_end":68}},{"value":"/ different than the number of physical cpus. Async-std _will panic_","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":9957,"byte_end":10027,"line_start":271,"line_end":271,"column_start":1,"column_end":71}},{"value":"/ if this is set to any value other than a positive integer.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":10028,"byte_end":10090,"line_start":272,"line_end":272,"column_start":1,"column_end":63}},{"value":"/ * `ASYNC_STD_THREAD_NAME`: The name that async-std's runtime","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":10091,"byte_end":10155,"line_start":273,"line_end":273,"column_start":1,"column_end":65}},{"value":"/ threads report to the operating system. The default value is","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":10156,"byte_end":10220,"line_start":274,"line_end":274,"column_start":1,"column_end":65}},{"value":"/ `\"async-std/runtime\"`.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":10221,"byte_end":10247,"line_start":275,"line_end":275,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":10248,"byte_end":10251,"line_start":276,"line_end":276,"column_start":1,"column_end":4}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":10345,"byte_end":10416,"line_start":280,"line_end":280,"column_start":1,"column_end":72}},{"value":"allow(clippy :: mutex_atomic, clippy :: module_inception)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":10417,"byte_end":10474,"line_start":281,"line_end":281,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":50},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","parent":null,"children":[{"krate":0,"index":1954},{"krate":0,"index":1955},{"krate":0,"index":1958},{"krate":0,"index":1961},{"krate":0,"index":1964},{"krate":0,"index":1967},{"krate":0,"index":1971},{"krate":0,"index":1974},{"krate":0,"index":1997},{"krate":0,"index":2000},{"krate":0,"index":2003},{"krate":0,"index":2004},{"krate":0,"index":2007},{"krate":0,"index":2010},{"krate":0,"index":2013},{"krate":0,"index":2014},{"krate":0,"index":2016},{"krate":0,"index":2019},{"krate":0,"index":2022},{"krate":0,"index":2025},{"krate":0,"index":2026},{"krate":0,"index":2029},{"krate":0,"index":2032},{"krate":0,"index":2035},{"krate":0,"index":2038},{"krate":0,"index":2048},{"krate":0,"index":2106},{"krate":0,"index":2117},{"krate":0,"index":2150},{"krate":0,"index":2163},{"krate":0,"index":2177},{"krate":0,"index":2188},{"krate":0,"index":2205},{"krate":0,"index":2221},{"krate":0,"index":2270},{"krate":0,"index":2309},{"krate":0,"index":2387},{"krate":0,"index":2390}],"decl_id":null,"docs":" Types and traits for working with asynchronous tasks.","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/utils.rs","byte_start":16620,"byte_end":16645,"line_start":219,"line_end":219,"column_start":13,"column_end":38}},{"value":"/ Types and traits for working with asynchronous tasks.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13209952,"byte_end":13210009,"line_start":1,"line_end":1,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13210010,"byte_end":13210013,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is similar to [`std::thread`], except it uses asynchronous tasks in place of","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13210014,"byte_end":13210106,"line_start":3,"line_end":3,"column_start":1,"column_end":93}},{"value":"/ threads.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13210107,"byte_end":13210119,"line_start":4,"line_end":4,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13210120,"byte_end":13210123,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ [`std::thread`]: https://doc.rust-lang.org/std/thread","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13210124,"byte_end":13210181,"line_start":6,"line_end":6,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13210182,"byte_end":13210185,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ ## The task model","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13210186,"byte_end":13210207,"line_start":8,"line_end":8,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13210208,"byte_end":13210211,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ An executing asynchronous Rust program consists of a collection of native OS threads, on top of","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13210212,"byte_end":13210311,"line_start":10,"line_end":10,"column_start":1,"column_end":100}},{"value":"/ which multiple stackless coroutines are multiplexed. We refer to these as \"tasks\".  Tasks can","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13210312,"byte_end":13210409,"line_start":11,"line_end":11,"column_start":1,"column_end":98}},{"value":"/ be named, and provide some built-in support for synchronization.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13210410,"byte_end":13210478,"line_start":12,"line_end":12,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13210479,"byte_end":13210482,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Communication between tasks can be done through channels, Rust's message-passing types, along","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13210483,"byte_end":13210580,"line_start":14,"line_end":14,"column_start":1,"column_end":98}},{"value":"/ with [other forms of tasks synchronization](../sync/index.html) and shared-memory data","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13210581,"byte_end":13210671,"line_start":15,"line_end":15,"column_start":1,"column_end":91}},{"value":"/ structures. In particular, types that are guaranteed to be threadsafe are easily shared between","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13210672,"byte_end":13210771,"line_start":16,"line_end":16,"column_start":1,"column_end":100}},{"value":"/ tasks using the atomically-reference-counted container, [`Arc`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13210772,"byte_end":13210840,"line_start":17,"line_end":17,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13210841,"byte_end":13210844,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Fatal logic errors in Rust cause *thread panic*, during which a thread will unwind the stack,","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13210845,"byte_end":13210942,"line_start":19,"line_end":19,"column_start":1,"column_end":98}},{"value":"/ running destructors and freeing owned resources. If a panic occurs inside a task, there is no","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13210943,"byte_end":13211040,"line_start":20,"line_end":20,"column_start":1,"column_end":98}},{"value":"/ meaningful way of recovering, so the panic will propagate through any thread boundaries all the","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13211041,"byte_end":13211140,"line_start":21,"line_end":21,"column_start":1,"column_end":100}},{"value":"/ way to the root task. This is also known as a \"panic = abort\" model.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13211141,"byte_end":13211213,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13211214,"byte_end":13211217,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ## Spawning a task","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13211218,"byte_end":13211240,"line_start":24,"line_end":24,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13211241,"byte_end":13211244,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ A new task can be spawned using the [`task::spawn`][`spawn`] function:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13211245,"byte_end":13211319,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13211320,"byte_end":13211323,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13211324,"byte_end":13211337,"line_start":28,"line_end":28,"column_start":1,"column_end":14}},{"value":"/ use async_std::task;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13211338,"byte_end":13211362,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13211363,"byte_end":13211366,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ task::spawn(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13211367,"byte_end":13211390,"line_start":31,"line_end":31,"column_start":1,"column_end":24}},{"value":"/     // some work here","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13211391,"byte_end":13211416,"line_start":32,"line_end":32,"column_start":1,"column_end":26}},{"value":"/ });","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13211417,"byte_end":13211424,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13211425,"byte_end":13211432,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13211433,"byte_end":13211436,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ In this example, the spawned task is \"detached\" from the current task. This means that it can","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13211437,"byte_end":13211534,"line_start":36,"line_end":36,"column_start":1,"column_end":98}},{"value":"/ outlive its parent (the task that spawned it), unless this parent is the root task.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13211535,"byte_end":13211622,"line_start":37,"line_end":37,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13211623,"byte_end":13211626,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ The root task can also wait on the completion of the child task; a call to [`spawn`] produces a","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13211627,"byte_end":13211726,"line_start":39,"line_end":39,"column_start":1,"column_end":100}},{"value":"/ [`JoinHandle`], which implements `Future` and can be `await`ed:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13211727,"byte_end":13211794,"line_start":40,"line_end":40,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13211795,"byte_end":13211798,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13211799,"byte_end":13211806,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/ use async_std::task;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13211807,"byte_end":13211831,"line_start":43,"line_end":43,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13211832,"byte_end":13211835,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13211836,"byte_end":13211875,"line_start":45,"line_end":45,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13211876,"byte_end":13211881,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ let child = task::spawn(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13211882,"byte_end":13211917,"line_start":47,"line_end":47,"column_start":1,"column_end":36}},{"value":"/     // some work here","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13211918,"byte_end":13211943,"line_start":48,"line_end":48,"column_start":1,"column_end":26}},{"value":"/ });","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13211944,"byte_end":13211951,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/ // some work here","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13211952,"byte_end":13211973,"line_start":50,"line_end":50,"column_start":1,"column_end":22}},{"value":"/ let res = child.await;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13211974,"byte_end":13212000,"line_start":51,"line_end":51,"column_start":1,"column_end":27}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13212001,"byte_end":13212006,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13212007,"byte_end":13212015,"line_start":53,"line_end":53,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13212016,"byte_end":13212023,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13212024,"byte_end":13212027,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ The `await` operator returns the final value produced by the child task.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13212028,"byte_end":13212104,"line_start":56,"line_end":56,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13212105,"byte_end":13212108,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ ## Configuring tasks","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13212109,"byte_end":13212133,"line_start":58,"line_end":58,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13212134,"byte_end":13212137,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ A new task can be configured before it is spawned via the [`Builder`] type,","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13212138,"byte_end":13212217,"line_start":60,"line_end":60,"column_start":1,"column_end":80}},{"value":"/ which currently allows you to set the name for the child task:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13212218,"byte_end":13212284,"line_start":61,"line_end":61,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13212285,"byte_end":13212288,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13212289,"byte_end":13212296,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/ # #![allow(unused_must_use)]","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13212297,"byte_end":13212329,"line_start":64,"line_end":64,"column_start":1,"column_end":33}},{"value":"/ use async_std::task;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13212330,"byte_end":13212354,"line_start":65,"line_end":65,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13212355,"byte_end":13212358,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13212359,"byte_end":13212398,"line_start":67,"line_end":67,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13212399,"byte_end":13212404,"line_start":68,"line_end":68,"column_start":1,"column_end":6}},{"value":"/ task::Builder::new().name(\"child1\".to_string()).spawn(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13212405,"byte_end":13212470,"line_start":69,"line_end":69,"column_start":1,"column_end":66}},{"value":"/     println!(\"Hello, world!\");","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13212471,"byte_end":13212505,"line_start":70,"line_end":70,"column_start":1,"column_end":35}},{"value":"/ });","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13212506,"byte_end":13212513,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13212514,"byte_end":13212519,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13212520,"byte_end":13212528,"line_start":73,"line_end":73,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13212529,"byte_end":13212536,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13212537,"byte_end":13212540,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ## The `Task` type","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13212541,"byte_end":13212563,"line_start":76,"line_end":76,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13212564,"byte_end":13212567,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ Tasks are represented via the [`Task`] type, which you can get in one of","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13212568,"byte_end":13212644,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"/ two ways:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13212645,"byte_end":13212658,"line_start":79,"line_end":79,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13212659,"byte_end":13212662,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ * By spawning a new task, e.g., using the [`task::spawn`][`spawn`]","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13212663,"byte_end":13212733,"line_start":81,"line_end":81,"column_start":1,"column_end":71}},{"value":"/   function, and calling [`task`][`JoinHandle::task`] on the [`JoinHandle`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13212734,"byte_end":13212813,"line_start":82,"line_end":82,"column_start":1,"column_end":80}},{"value":"/ * By requesting the current task, using the [`task::current`] function.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13212814,"byte_end":13212889,"line_start":83,"line_end":83,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13212890,"byte_end":13212893,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ ## Task-local storage","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13212894,"byte_end":13212919,"line_start":85,"line_end":85,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13212920,"byte_end":13212923,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ This module also provides an implementation of task-local storage for Rust","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13212924,"byte_end":13213002,"line_start":87,"line_end":87,"column_start":1,"column_end":79}},{"value":"/ programs. Task-local storage is a method of storing data into a global","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13213003,"byte_end":13213077,"line_start":88,"line_end":88,"column_start":1,"column_end":75}},{"value":"/ variable that each task in the program will have its own copy of.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13213078,"byte_end":13213147,"line_start":89,"line_end":89,"column_start":1,"column_end":70}},{"value":"/ Tasks do not share this data, so accesses do not need to be synchronized.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13213148,"byte_end":13213225,"line_start":90,"line_end":90,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13213226,"byte_end":13213229,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ A task-local key owns the value it contains and will destroy the value when the","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13213230,"byte_end":13213313,"line_start":92,"line_end":92,"column_start":1,"column_end":84}},{"value":"/ task exits. It is created with the [`task_local!`] macro and can contain any","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13213314,"byte_end":13213394,"line_start":93,"line_end":93,"column_start":1,"column_end":81}},{"value":"/ value that is `'static` (no borrowed pointers). It provides an accessor function,","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13213395,"byte_end":13213480,"line_start":94,"line_end":94,"column_start":1,"column_end":86}},{"value":"/ [`with`], that yields a shared reference to the value to the specified","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13213481,"byte_end":13213555,"line_start":95,"line_end":95,"column_start":1,"column_end":75}},{"value":"/ closure. Task-local keys allow only shared access to values, as there would be no","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13213556,"byte_end":13213641,"line_start":96,"line_end":96,"column_start":1,"column_end":86}},{"value":"/ way to guarantee uniqueness if mutable borrows were allowed.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13213642,"byte_end":13213706,"line_start":97,"line_end":97,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13213707,"byte_end":13213710,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ ## Naming tasks","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13213711,"byte_end":13213730,"line_start":99,"line_end":99,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13213731,"byte_end":13213734,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ Tasks are able to have associated names for identification purposes. By default, spawned","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13213735,"byte_end":13213827,"line_start":101,"line_end":101,"column_start":1,"column_end":93}},{"value":"/ tasks are unnamed. To specify a name for a task, build the task with [`Builder`] and pass","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13213828,"byte_end":13213921,"line_start":102,"line_end":102,"column_start":1,"column_end":94}},{"value":"/ the desired task name to [`Builder::name`]. To retrieve the task name from within the","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13213922,"byte_end":13214011,"line_start":103,"line_end":103,"column_start":1,"column_end":90}},{"value":"/ task, use [`Task::name`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13214012,"byte_end":13214041,"line_start":104,"line_end":104,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13214042,"byte_end":13214045,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ [`Arc`]: ../sync/struct.Arc.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13214046,"byte_end":13214082,"line_start":106,"line_end":106,"column_start":1,"column_end":37}},{"value":"/ [`spawn`]: fn.spawn.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13214083,"byte_end":13214111,"line_start":107,"line_end":107,"column_start":1,"column_end":29}},{"value":"/ [`JoinHandle`]: struct.JoinHandle.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13214112,"byte_end":13214154,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"/ [`JoinHandle::task`]: struct.JoinHandle.html#method.task","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13214155,"byte_end":13214215,"line_start":109,"line_end":109,"column_start":1,"column_end":61}},{"value":"/ [`join`]: struct.JoinHandle.html#method.join","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13214216,"byte_end":13214264,"line_start":110,"line_end":110,"column_start":1,"column_end":49}},{"value":"/ [`panic!`]: https://doc.rust-lang.org/std/macro.panic.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13214265,"byte_end":13214327,"line_start":111,"line_end":111,"column_start":1,"column_end":63}},{"value":"/ [`Builder`]: struct.Builder.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13214328,"byte_end":13214364,"line_start":112,"line_end":112,"column_start":1,"column_end":37}},{"value":"/ [`Builder::name`]: struct.Builder.html#method.name","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13214365,"byte_end":13214419,"line_start":113,"line_end":113,"column_start":1,"column_end":55}},{"value":"/ [`task::current`]: fn.current.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13214420,"byte_end":13214458,"line_start":114,"line_end":114,"column_start":1,"column_end":39}},{"value":"/ [`Task`]: struct.Task.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13214459,"byte_end":13214489,"line_start":115,"line_end":115,"column_start":1,"column_end":31}},{"value":"/ [`Task::name`]: struct.Task.html#method.name","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13214490,"byte_end":13214538,"line_start":116,"line_end":116,"column_start":1,"column_end":49}},{"value":"/ [`task_local!`]: ../macro.task_local.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13214539,"byte_end":13214584,"line_start":117,"line_end":117,"column_start":1,"column_end":46}},{"value":"/ [`with`]: struct.LocalKey.html#method.with","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/mod.rs","byte_start":13214585,"byte_end":13214631,"line_start":118,"line_end":118,"column_start":1,"column_end":47}}]},{"kind":"Function","id":{"krate":0,"index":1988},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/yield_now.rs","byte_start":13355560,"byte_end":13355569,"line_start":30,"line_end":30,"column_start":14,"column_end":23},"name":"yield_now","qualname":"::task::yield_now::yield_now","value":"pub async fn yield_now() -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Cooperatively gives up a timeslice to the task scheduler.","sig":null,"attributes":[{"value":"/ Cooperatively gives up a timeslice to the task scheduler.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/yield_now.rs","byte_start":13354957,"byte_end":13355018,"line_start":6,"line_end":6,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/yield_now.rs","byte_start":13355019,"byte_end":13355022,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Calling this function will move the currently executing future to the back","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/yield_now.rs","byte_start":13355023,"byte_end":13355101,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ of the execution queue, making room for other futures to execute. This is","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/yield_now.rs","byte_start":13355102,"byte_end":13355179,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/ especially useful after running CPU-intensive operations inside a future.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/yield_now.rs","byte_start":13355180,"byte_end":13355257,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/yield_now.rs","byte_start":13355258,"byte_end":13355261,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ See also [`task::spawn_blocking`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/yield_now.rs","byte_start":13355262,"byte_end":13355300,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/yield_now.rs","byte_start":13355301,"byte_end":13355304,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`task::spawn_blocking`]: fn.spawn_blocking.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/yield_now.rs","byte_start":13355305,"byte_end":13355357,"line_start":14,"line_end":14,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/yield_now.rs","byte_start":13355358,"byte_end":13355361,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/yield_now.rs","byte_start":13355362,"byte_end":13355376,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/yield_now.rs","byte_start":13355377,"byte_end":13355380,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/yield_now.rs","byte_start":13355381,"byte_end":13355397,"line_start":18,"line_end":18,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/yield_now.rs","byte_start":13355398,"byte_end":13355401,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/yield_now.rs","byte_start":13355402,"byte_end":13355409,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/yield_now.rs","byte_start":13355410,"byte_end":13355449,"line_start":21,"line_end":21,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/yield_now.rs","byte_start":13355450,"byte_end":13355455,"line_start":22,"line_end":22,"column_start":1,"column_end":6}},{"value":"/ use async_std::task;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/yield_now.rs","byte_start":13355456,"byte_end":13355480,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/yield_now.rs","byte_start":13355481,"byte_end":13355484,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ task::yield_now().await;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/yield_now.rs","byte_start":13355485,"byte_end":13355513,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/yield_now.rs","byte_start":13355514,"byte_end":13355519,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/yield_now.rs","byte_start":13355520,"byte_end":13355528,"line_start":27,"line_end":27,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/yield_now.rs","byte_start":13355529,"byte_end":13355536,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/yield_now.rs","byte_start":13355537,"byte_end":13355546,"line_start":29,"line_end":29,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2045},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/block_on.rs","byte_start":13356871,"byte_end":13356879,"line_start":29,"line_end":29,"column_start":8,"column_end":16},"name":"block_on","qualname":"::task::block_on::block_on","value":"pub fn block_on<F, T>(F) -> T where F: Future<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Spawns a task and blocks the current thread on its result.","sig":null,"attributes":[{"value":"/ Spawns a task and blocks the current thread on its result.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/block_on.rs","byte_start":13356187,"byte_end":13356249,"line_start":5,"line_end":5,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/block_on.rs","byte_start":13356250,"byte_end":13356253,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Calling this function is similar to [spawning] a thread and immediately [joining] it, except an","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/block_on.rs","byte_start":13356254,"byte_end":13356353,"line_start":7,"line_end":7,"column_start":1,"column_end":100}},{"value":"/ asynchronous task will be spawned.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/block_on.rs","byte_start":13356354,"byte_end":13356392,"line_start":8,"line_end":8,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/block_on.rs","byte_start":13356393,"byte_end":13356396,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ See also: [`task::spawn_blocking`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/block_on.rs","byte_start":13356397,"byte_end":13356436,"line_start":10,"line_end":10,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/block_on.rs","byte_start":13356437,"byte_end":13356440,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`task::spawn_blocking`]: fn.spawn_blocking.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/block_on.rs","byte_start":13356441,"byte_end":13356493,"line_start":12,"line_end":12,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/block_on.rs","byte_start":13356494,"byte_end":13356497,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [spawning]: https://doc.rust-lang.org/std/thread/fn.spawn.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/block_on.rs","byte_start":13356498,"byte_end":13356564,"line_start":14,"line_end":14,"column_start":1,"column_end":67}},{"value":"/ [joining]: https://doc.rust-lang.org/std/thread/struct.JoinHandle.html#method.join","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/block_on.rs","byte_start":13356565,"byte_end":13356651,"line_start":15,"line_end":15,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/block_on.rs","byte_start":13356652,"byte_end":13356655,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/block_on.rs","byte_start":13356656,"byte_end":13356670,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/block_on.rs","byte_start":13356671,"byte_end":13356674,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/block_on.rs","byte_start":13356675,"byte_end":13356688,"line_start":19,"line_end":19,"column_start":1,"column_end":14}},{"value":"/ use async_std::task;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/block_on.rs","byte_start":13356689,"byte_end":13356713,"line_start":20,"line_end":20,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/block_on.rs","byte_start":13356714,"byte_end":13356717,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/block_on.rs","byte_start":13356718,"byte_end":13356733,"line_start":22,"line_end":22,"column_start":1,"column_end":16}},{"value":"/     task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/block_on.rs","byte_start":13356734,"byte_end":13356764,"line_start":23,"line_end":23,"column_start":1,"column_end":31}},{"value":"/         println!(\"Hello, world!\");","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/block_on.rs","byte_start":13356765,"byte_end":13356803,"line_start":24,"line_end":24,"column_start":1,"column_end":39}},{"value":"/     })","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/block_on.rs","byte_start":13356804,"byte_end":13356814,"line_start":25,"line_end":25,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/block_on.rs","byte_start":13356815,"byte_end":13356820,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/block_on.rs","byte_start":13356821,"byte_end":13356828,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/block_on.rs","byte_start":13356829,"byte_end":13356863,"line_start":28,"line_end":28,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":2312},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/builder.rs","byte_start":13357495,"byte_end":13357502,"line_start":13,"line_end":13,"column_start":12,"column_end":19},"name":"Builder","qualname":"::task::builder::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":2313}],"decl_id":null,"docs":" Task builder that configures the settings of a new task.\n","sig":null,"attributes":[{"value":"/ Task builder that configures the settings of a new task.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/builder.rs","byte_start":13357397,"byte_end":13357457,"line_start":11,"line_end":11,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2082},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/builder.rs","byte_start":13357616,"byte_end":13357619,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new builder.\n","sig":null,"attributes":[{"value":"/ Creates a new builder.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/builder.rs","byte_start":13357564,"byte_end":13357590,"line_start":18,"line_end":18,"column_start":5,"column_end":31}},{"value":"inline","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/builder.rs","byte_start":13357595,"byte_end":13357604,"line_start":19,"line_end":19,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2083},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/builder.rs","byte_start":13357739,"byte_end":13357743,"line_start":26,"line_end":26,"column_start":12,"column_end":16},"name":"name","qualname":"<Builder>::name","value":"pub fn name(Self, String) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Configures the name of the task.\n","sig":null,"attributes":[{"value":"/ Configures the name of the task.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/builder.rs","byte_start":13357677,"byte_end":13357713,"line_start":24,"line_end":24,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/builder.rs","byte_start":13357718,"byte_end":13357727,"line_start":25,"line_end":25,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2087},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/builder.rs","byte_start":13358362,"byte_end":13358367,"line_start":50,"line_end":50,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Builder>::spawn","value":"pub fn spawn<F, T>(Self, F) -> io::Result<JoinHandle<T>> where\nF: Future<Output = T> + Send + 'static, T: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a task with the configured settings.\n","sig":null,"attributes":[{"value":"/ Spawns a task with the configured settings.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/builder.rs","byte_start":13358264,"byte_end":13358311,"line_start":48,"line_end":48,"column_start":5,"column_end":52}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/builder.rs","byte_start":13358316,"byte_end":13358350,"line_start":49,"line_end":49,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2090},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/builder.rs","byte_start":13359029,"byte_end":13359034,"line_start":70,"line_end":70,"column_start":12,"column_end":17},"name":"local","qualname":"<Builder>::local","value":"pub fn local<F, T>(Self, F) -> io::Result<JoinHandle<T>> where\nF: Future<Output = T> + 'static, T: 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a task locally with the configured settings.\n","sig":null,"attributes":[{"value":"/ Spawns a task locally with the configured settings.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/builder.rs","byte_start":13358896,"byte_end":13358951,"line_start":68,"line_end":68,"column_start":5,"column_end":60}},{"value":"cfg(all(not(target_os = \"unknown\"), feature = \"unstable\"))","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/builder.rs","byte_start":13358956,"byte_end":13359017,"line_start":69,"line_end":69,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2093},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/builder.rs","byte_start":13361359,"byte_end":13361367,"line_start":141,"line_end":141,"column_start":12,"column_end":20},"name":"blocking","qualname":"<Builder>::blocking","value":"pub fn blocking<F, T>(Self, F) -> T where F: Future<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Spawns a task with the configured settings, blocking on its execution.\n","sig":null,"attributes":[{"value":"/ Spawns a task with the configured settings, blocking on its execution.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/builder.rs","byte_start":13361234,"byte_end":13361308,"line_start":139,"line_end":139,"column_start":5,"column_end":79}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/builder.rs","byte_start":13361313,"byte_end":13361347,"line_start":140,"line_end":140,"column_start":5,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":2114},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":13363812,"byte_end":13363819,"line_start":25,"line_end":25,"column_start":8,"column_end":15},"name":"current","qualname":"::task::current::current","value":"pub fn current() -> Task","parent":null,"children":[],"decl_id":null,"docs":" Returns a handle to the current task.","sig":null,"attributes":[{"value":"/ Returns a handle to the current task.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":13363282,"byte_end":13363323,"line_start":3,"line_end":3,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":13363324,"byte_end":13363327,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":13363328,"byte_end":13363340,"line_start":5,"line_end":5,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":13363341,"byte_end":13363344,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This function will panic if not called within the context of a task created by [`block_on`],","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":13363345,"byte_end":13363441,"line_start":7,"line_end":7,"column_start":1,"column_end":97}},{"value":"/ [`spawn`], or [`Builder::spawn`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":13363442,"byte_end":13363479,"line_start":8,"line_end":8,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":13363480,"byte_end":13363483,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`block_on`]: fn.block_on.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":13363484,"byte_end":13363518,"line_start":10,"line_end":10,"column_start":1,"column_end":35}},{"value":"/ [`spawn`]: fn.spawn.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":13363519,"byte_end":13363547,"line_start":11,"line_end":11,"column_start":1,"column_end":29}},{"value":"/ [`Builder::spawn`]: struct.Builder.html#method.spawn","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":13363548,"byte_end":13363604,"line_start":12,"line_end":12,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":13363605,"byte_end":13363608,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":13363609,"byte_end":13363623,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":13363624,"byte_end":13363627,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":13363628,"byte_end":13363635,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":13363636,"byte_end":13363675,"line_start":17,"line_end":17,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":13363676,"byte_end":13363681,"line_start":18,"line_end":18,"column_start":1,"column_end":6}},{"value":"/ use async_std::task;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":13363682,"byte_end":13363706,"line_start":19,"line_end":19,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":13363707,"byte_end":13363710,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ println!(\"The name of this task is {:?}\", task::current().name());","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":13363711,"byte_end":13363781,"line_start":21,"line_end":21,"column_start":1,"column_end":71}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":13363782,"byte_end":13363787,"line_start":22,"line_end":22,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":13363788,"byte_end":13363796,"line_start":23,"line_end":23,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":13363797,"byte_end":13363804,"line_start":24,"line_end":24,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2115},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":13364448,"byte_end":13364459,"line_start":46,"line_end":46,"column_start":8,"column_end":19},"name":"try_current","qualname":"::task::current::try_current","value":"pub fn try_current() -> Option<Task>","parent":null,"children":[],"decl_id":null,"docs":" Returns a handle to the current task if called within the context of a task created by [`block_on`],\n [`spawn`], or [`Builder::spawn`], otherwise returns `None`.","sig":null,"attributes":[{"value":"/ Returns a handle to the current task if called within the context of a task created by [`block_on`],","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":13363918,"byte_end":13364022,"line_start":29,"line_end":29,"column_start":1,"column_end":105}},{"value":"/ [`spawn`], or [`Builder::spawn`], otherwise returns `None`.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":13364023,"byte_end":13364086,"line_start":30,"line_end":30,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":13364087,"byte_end":13364090,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ [`block_on`]: fn.block_on.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":13364091,"byte_end":13364125,"line_start":32,"line_end":32,"column_start":1,"column_end":35}},{"value":"/ [`spawn`]: fn.spawn.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":13364126,"byte_end":13364154,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/ [`Builder::spawn`]: struct.Builder.html#method.spawn","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":13364155,"byte_end":13364211,"line_start":34,"line_end":34,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":13364212,"byte_end":13364215,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":13364216,"byte_end":13364230,"line_start":36,"line_end":36,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":13364231,"byte_end":13364234,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":13364235,"byte_end":13364242,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ use async_std::task;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":13364243,"byte_end":13364267,"line_start":39,"line_end":39,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":13364268,"byte_end":13364271,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ match task::try_current() {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":13364272,"byte_end":13364303,"line_start":41,"line_end":41,"column_start":1,"column_end":32}},{"value":"/     Some(t) => println!(\"The name of this task is {:?}\", t.name()),","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":13364304,"byte_end":13364375,"line_start":42,"line_end":42,"column_start":1,"column_end":72}},{"value":"/     None    => println!(\"Not inside a task!\"),","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":13364376,"byte_end":13364426,"line_start":43,"line_end":43,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":13364427,"byte_end":13364432,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/current.rs","byte_start":13364433,"byte_end":13364440,"line_start":45,"line_end":45,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2325},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/join_handle.rs","byte_start":13364916,"byte_end":13364926,"line_start":15,"line_end":15,"column_start":12,"column_end":22},"name":"JoinHandle","qualname":"::task::join_handle::JoinHandle","value":"JoinHandle {  }","parent":null,"children":[{"krate":0,"index":2327},{"krate":0,"index":2328}],"decl_id":null,"docs":" A handle that awaits the result of a task.","sig":null,"attributes":[{"value":"/ A handle that awaits the result of a task.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/join_handle.rs","byte_start":13364625,"byte_end":13364671,"line_start":6,"line_end":6,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/join_handle.rs","byte_start":13364672,"byte_end":13364675,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Dropping a [`JoinHandle`] will detach the task, meaning that there is no longer","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/join_handle.rs","byte_start":13364676,"byte_end":13364759,"line_start":8,"line_end":8,"column_start":1,"column_end":84}},{"value":"/ a handle to the task and no way to `join` on it.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/join_handle.rs","byte_start":13364760,"byte_end":13364812,"line_start":9,"line_end":9,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/join_handle.rs","byte_start":13364813,"byte_end":13364816,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Created when a task is [spawned].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/join_handle.rs","byte_start":13364817,"byte_end":13364854,"line_start":11,"line_end":11,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/join_handle.rs","byte_start":13364855,"byte_end":13364858,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [spawned]: fn.spawn.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/join_handle.rs","byte_start":13364859,"byte_end":13364887,"line_start":13,"line_end":13,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2139},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/join_handle.rs","byte_start":13365735,"byte_end":13365739,"line_start":49,"line_end":49,"column_start":12,"column_end":16},"name":"task","qualname":"<JoinHandle<T>>::task","value":"pub fn task(&Self) -> &Task","parent":null,"children":[],"decl_id":null,"docs":" Returns a handle to the underlying task.","sig":null,"attributes":[{"value":"/ Returns a handle to the underlying task.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/join_handle.rs","byte_start":13365398,"byte_end":13365442,"line_start":34,"line_end":34,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/join_handle.rs","byte_start":13365447,"byte_end":13365450,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/join_handle.rs","byte_start":13365455,"byte_end":13365469,"line_start":36,"line_end":36,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/join_handle.rs","byte_start":13365474,"byte_end":13365477,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/join_handle.rs","byte_start":13365482,"byte_end":13365489,"line_start":38,"line_end":38,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/join_handle.rs","byte_start":13365494,"byte_end":13365533,"line_start":39,"line_end":39,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/join_handle.rs","byte_start":13365538,"byte_end":13365543,"line_start":40,"line_end":40,"column_start":5,"column_end":10}},{"value":"/ use async_std::task;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/join_handle.rs","byte_start":13365548,"byte_end":13365572,"line_start":41,"line_end":41,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/join_handle.rs","byte_start":13365577,"byte_end":13365580,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ let handle = task::spawn(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/join_handle.rs","byte_start":13365585,"byte_end":13365621,"line_start":43,"line_end":43,"column_start":5,"column_end":41}},{"value":"/     1 + 2","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/join_handle.rs","byte_start":13365626,"byte_end":13365639,"line_start":44,"line_end":44,"column_start":5,"column_end":18}},{"value":"/ });","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/join_handle.rs","byte_start":13365644,"byte_end":13365651,"line_start":45,"line_end":45,"column_start":5,"column_end":12}},{"value":"/ println!(\"id = {}\", handle.task().id());","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/join_handle.rs","byte_start":13365656,"byte_end":13365700,"line_start":46,"line_end":46,"column_start":5,"column_end":49}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/join_handle.rs","byte_start":13365705,"byte_end":13365710,"line_start":47,"line_end":47,"column_start":5,"column_end":10}},{"value":"/ # })","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/join_handle.rs","byte_start":13365715,"byte_end":13365723,"line_start":48,"line_end":48,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":2140},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/join_handle.rs","byte_start":13365866,"byte_end":13365872,"line_start":55,"line_end":55,"column_start":18,"column_end":24},"name":"cancel","qualname":"<JoinHandle<T>>::cancel","value":"pub async fn cancel(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Cancel this task.\n","sig":null,"attributes":[{"value":"/ Cancel this task.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/join_handle.rs","byte_start":13365788,"byte_end":13365809,"line_start":53,"line_end":53,"column_start":5,"column_end":26}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/join_handle.rs","byte_start":13365814,"byte_end":13365848,"line_start":54,"line_end":54,"column_start":5,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":2160},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/sleep.rs","byte_start":13367707,"byte_end":13367712,"line_start":31,"line_end":31,"column_start":14,"column_end":19},"name":"sleep","qualname":"::task::sleep::sleep","value":"pub async fn sleep(Duration) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sleeps for the specified amount of time.","sig":null,"attributes":[{"value":"/ Sleeps for the specified amount of time.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/sleep.rs","byte_start":13367093,"byte_end":13367137,"line_start":6,"line_end":6,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/sleep.rs","byte_start":13367138,"byte_end":13367141,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function might sleep for slightly longer than the specified duration but never less.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/sleep.rs","byte_start":13367142,"byte_end":13367235,"line_start":8,"line_end":8,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/sleep.rs","byte_start":13367236,"byte_end":13367239,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::thread::sleep`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/sleep.rs","byte_start":13367240,"byte_end":13367304,"line_start":10,"line_end":10,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/sleep.rs","byte_start":13367305,"byte_end":13367308,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`std::thread::sleep`]: https://doc.rust-lang.org/std/thread/fn.sleep.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/sleep.rs","byte_start":13367309,"byte_end":13367387,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/sleep.rs","byte_start":13367388,"byte_end":13367391,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ See also: [`stream::interval`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/sleep.rs","byte_start":13367392,"byte_end":13367427,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/sleep.rs","byte_start":13367428,"byte_end":13367431,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`stream::interval`]: ../stream/fn.interval.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/sleep.rs","byte_start":13367432,"byte_end":13367484,"line_start":16,"line_end":16,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/sleep.rs","byte_start":13367485,"byte_end":13367488,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/sleep.rs","byte_start":13367489,"byte_end":13367503,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/sleep.rs","byte_start":13367504,"byte_end":13367507,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/sleep.rs","byte_start":13367508,"byte_end":13367515,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/sleep.rs","byte_start":13367516,"byte_end":13367555,"line_start":21,"line_end":21,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/sleep.rs","byte_start":13367556,"byte_end":13367561,"line_start":22,"line_end":22,"column_start":1,"column_end":6}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/sleep.rs","byte_start":13367562,"byte_end":13367590,"line_start":23,"line_end":23,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/sleep.rs","byte_start":13367591,"byte_end":13367594,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ use async_std::task;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/sleep.rs","byte_start":13367595,"byte_end":13367619,"line_start":25,"line_end":25,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/sleep.rs","byte_start":13367620,"byte_end":13367623,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ task::sleep(Duration::from_secs(1)).await;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/sleep.rs","byte_start":13367624,"byte_end":13367670,"line_start":27,"line_end":27,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/sleep.rs","byte_start":13367671,"byte_end":13367676,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/sleep.rs","byte_start":13367677,"byte_end":13367685,"line_start":29,"line_end":29,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/sleep.rs","byte_start":13367686,"byte_end":13367693,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2174},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn.rs","byte_start":13368297,"byte_end":13368302,"line_start":26,"line_end":26,"column_start":8,"column_end":13},"name":"spawn","qualname":"::task::spawn::spawn","value":"pub fn spawn<F, T>(F) -> JoinHandle<T> where F: Future<Output = T> + Send +\n'static, T: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a task.","sig":null,"attributes":[{"value":"/ Spawns a task.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn.rs","byte_start":13367871,"byte_end":13367889,"line_start":5,"line_end":5,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn.rs","byte_start":13367890,"byte_end":13367893,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This function is similar to [`std::thread::spawn`], except it spawns an asynchronous task.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn.rs","byte_start":13367894,"byte_end":13367988,"line_start":7,"line_end":7,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn.rs","byte_start":13367989,"byte_end":13367992,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`std::thread`]: https://doc.rust-lang.org/std/thread/fn.spawn.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn.rs","byte_start":13367993,"byte_end":13368064,"line_start":9,"line_end":9,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn.rs","byte_start":13368065,"byte_end":13368068,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn.rs","byte_start":13368069,"byte_end":13368083,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn.rs","byte_start":13368084,"byte_end":13368087,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn.rs","byte_start":13368088,"byte_end":13368095,"line_start":13,"line_end":13,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn.rs","byte_start":13368096,"byte_end":13368135,"line_start":14,"line_end":14,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn.rs","byte_start":13368136,"byte_end":13368141,"line_start":15,"line_end":15,"column_start":1,"column_end":6}},{"value":"/ use async_std::task;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn.rs","byte_start":13368142,"byte_end":13368166,"line_start":16,"line_end":16,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn.rs","byte_start":13368167,"byte_end":13368170,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ let handle = task::spawn(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn.rs","byte_start":13368171,"byte_end":13368207,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/     1 + 2","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn.rs","byte_start":13368208,"byte_end":13368221,"line_start":19,"line_end":19,"column_start":1,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn.rs","byte_start":13368222,"byte_end":13368229,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn.rs","byte_start":13368230,"byte_end":13368233,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(handle.await, 3);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn.rs","byte_start":13368234,"byte_end":13368266,"line_start":22,"line_end":22,"column_start":1,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn.rs","byte_start":13368267,"byte_end":13368272,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn.rs","byte_start":13368273,"byte_end":13368281,"line_start":24,"line_end":24,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn.rs","byte_start":13368282,"byte_end":13368289,"line_start":25,"line_end":25,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2185},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_blocking.rs","byte_start":13369227,"byte_end":13369241,"line_start":33,"line_end":33,"column_start":8,"column_end":22},"name":"spawn_blocking","qualname":"::task::spawn_blocking::spawn_blocking","value":"pub fn spawn_blocking<F, T>(F) -> JoinHandle<T> where F: FnOnce() -> T +\nSend + 'static, T: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a blocking task.","sig":null,"attributes":[{"value":"/ Spawns a blocking task.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_blocking.rs","byte_start":13368514,"byte_end":13368541,"line_start":3,"line_end":3,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_blocking.rs","byte_start":13368542,"byte_end":13368545,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ The task will be spawned onto a thread pool specifically dedicated to blocking tasks. This","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_blocking.rs","byte_start":13368546,"byte_end":13368640,"line_start":5,"line_end":5,"column_start":1,"column_end":95}},{"value":"/ is useful to prevent long-running synchronous operations from blocking the main futures","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_blocking.rs","byte_start":13368641,"byte_end":13368732,"line_start":6,"line_end":6,"column_start":1,"column_end":92}},{"value":"/ executor.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_blocking.rs","byte_start":13368733,"byte_end":13368746,"line_start":7,"line_end":7,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_blocking.rs","byte_start":13368747,"byte_end":13368750,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ See also: [`task::block_on`], [`task::spawn`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_blocking.rs","byte_start":13368751,"byte_end":13368801,"line_start":9,"line_end":9,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_blocking.rs","byte_start":13368802,"byte_end":13368805,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`task::block_on`]: fn.block_on.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_blocking.rs","byte_start":13368806,"byte_end":13368846,"line_start":11,"line_end":11,"column_start":1,"column_end":41}},{"value":"/ [`task::spawn`]: fn.spawn.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_blocking.rs","byte_start":13368847,"byte_end":13368881,"line_start":12,"line_end":12,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_blocking.rs","byte_start":13368882,"byte_end":13368885,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_blocking.rs","byte_start":13368886,"byte_end":13368900,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_blocking.rs","byte_start":13368901,"byte_end":13368904,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_blocking.rs","byte_start":13368905,"byte_end":13368921,"line_start":16,"line_end":16,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_blocking.rs","byte_start":13368922,"byte_end":13368925,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_blocking.rs","byte_start":13368926,"byte_end":13368933,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(feature = \"unstable\")]","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_blocking.rs","byte_start":13368934,"byte_end":13368968,"line_start":19,"line_end":19,"column_start":1,"column_end":35}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_blocking.rs","byte_start":13368969,"byte_end":13369008,"line_start":20,"line_end":20,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_blocking.rs","byte_start":13369009,"byte_end":13369014,"line_start":21,"line_end":21,"column_start":1,"column_end":6}},{"value":"/ use async_std::task;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_blocking.rs","byte_start":13369015,"byte_end":13369039,"line_start":22,"line_end":22,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_blocking.rs","byte_start":13369040,"byte_end":13369043,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ task::spawn_blocking(|| {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_blocking.rs","byte_start":13369044,"byte_end":13369073,"line_start":24,"line_end":24,"column_start":1,"column_end":30}},{"value":"/     println!(\"long-running task here\");","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_blocking.rs","byte_start":13369074,"byte_end":13369117,"line_start":25,"line_end":25,"column_start":1,"column_end":44}},{"value":"/ })","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_blocking.rs","byte_start":13369118,"byte_end":13369124,"line_start":26,"line_end":26,"column_start":1,"column_end":7}},{"value":"/ .await;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_blocking.rs","byte_start":13369125,"byte_end":13369136,"line_start":27,"line_end":27,"column_start":1,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_blocking.rs","byte_start":13369137,"byte_end":13369142,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_blocking.rs","byte_start":13369143,"byte_end":13369151,"line_start":29,"line_end":29,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_blocking.rs","byte_start":13369152,"byte_end":13369159,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_blocking.rs","byte_start":13369210,"byte_end":13369219,"line_start":32,"line_end":32,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":2332},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task.rs","byte_start":13369515,"byte_end":13369519,"line_start":8,"line_end":8,"column_start":12,"column_end":16},"name":"Task","qualname":"::task::task::Task","value":"Task {  }","parent":null,"children":[{"krate":0,"index":2333},{"krate":0,"index":2334}],"decl_id":null,"docs":" A handle to a task.\n","sig":null,"attributes":[{"value":"/ A handle to a task.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task.rs","byte_start":13369463,"byte_end":13369486,"line_start":6,"line_end":6,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":2200},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task.rs","byte_start":13369900,"byte_end":13369902,"line_start":28,"line_end":28,"column_start":12,"column_end":14},"name":"id","qualname":"<Task>::id","value":"pub fn id(&Self) -> TaskId","parent":null,"children":[],"decl_id":null,"docs":" Gets the task's unique identifier.\n","sig":null,"attributes":[{"value":"/ Gets the task's unique identifier.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task.rs","byte_start":13369836,"byte_end":13369874,"line_start":26,"line_end":26,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task.rs","byte_start":13369879,"byte_end":13369888,"line_start":27,"line_end":27,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2201},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task.rs","byte_start":13370139,"byte_end":13370143,"line_start":37,"line_end":37,"column_start":12,"column_end":16},"name":"name","qualname":"<Task>::name","value":"pub fn name(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the name of this task.","sig":null,"attributes":[{"value":"/ Returns the name of this task.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task.rs","byte_start":13369949,"byte_end":13369983,"line_start":32,"line_end":32,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task.rs","byte_start":13369988,"byte_end":13369991,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ The name is configured by [`Builder::name`] before spawning.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task.rs","byte_start":13369996,"byte_end":13370060,"line_start":34,"line_end":34,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task.rs","byte_start":13370065,"byte_end":13370068,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ [`Builder::name`]: struct.Builder.html#method.name","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task.rs","byte_start":13370073,"byte_end":13370127,"line_start":36,"line_end":36,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":2337},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_id.rs","byte_start":13370771,"byte_end":13370777,"line_start":16,"line_end":16,"column_start":12,"column_end":18},"name":"TaskId","qualname":"::task::task_id::TaskId","value":"","parent":null,"children":[],"decl_id":null,"docs":" A unique identifier for a task.","sig":null,"attributes":[{"value":"/ A unique identifier for a task.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_id.rs","byte_start":13370518,"byte_end":13370553,"line_start":4,"line_end":4,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_id.rs","byte_start":13370554,"byte_end":13370557,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_id.rs","byte_start":13370558,"byte_end":13370572,"line_start":6,"line_end":6,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_id.rs","byte_start":13370573,"byte_end":13370576,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_id.rs","byte_start":13370577,"byte_end":13370584,"line_start":8,"line_end":8,"column_start":1,"column_end":8}},{"value":"/ use async_std::task;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_id.rs","byte_start":13370585,"byte_end":13370609,"line_start":9,"line_end":9,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_id.rs","byte_start":13370610,"byte_end":13370613,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_id.rs","byte_start":13370614,"byte_end":13370640,"line_start":11,"line_end":11,"column_start":1,"column_end":27}},{"value":"/     println!(\"id = {:?}\", task::current().id());","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_id.rs","byte_start":13370641,"byte_end":13370693,"line_start":12,"line_end":12,"column_start":1,"column_end":53}},{"value":"/ })","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_id.rs","byte_start":13370694,"byte_end":13370700,"line_start":13,"line_end":13,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_id.rs","byte_start":13370701,"byte_end":13370708,"line_start":14,"line_end":14,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2355},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13371667,"byte_end":13371675,"line_start":13,"line_end":13,"column_start":12,"column_end":20},"name":"LocalKey","qualname":"::task::task_local::LocalKey","value":"LocalKey { __init, __key }","parent":null,"children":[{"krate":0,"index":2357},{"krate":0,"index":2358}],"decl_id":null,"docs":" The key for accessing a task-local value.","sig":null,"attributes":[{"value":"/ The key for accessing a task-local value.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13371481,"byte_end":13371526,"line_start":8,"line_end":8,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13371527,"byte_end":13371530,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Every task-local value is lazily initialized on first access and destroyed when the task","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13371531,"byte_end":13371623,"line_start":10,"line_end":10,"column_start":1,"column_end":93}},{"value":"/ completes.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13371624,"byte_end":13371638,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Field","id":{"krate":0,"index":2357},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13371724,"byte_end":13371730,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"name":"__init","qualname":"::task::task_local::LocalKey::__init","value":"fn() -> T","parent":{"krate":0,"index":2355},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2358},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13371771,"byte_end":13371776,"line_start":18,"line_end":18,"column_start":9,"column_end":14},"name":"__key","qualname":"::task::task_local::LocalKey::__key","value":"std::sync::atomic::AtomicU32","parent":{"krate":0,"index":2355},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2243},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13372798,"byte_end":13372802,"line_start":55,"line_end":55,"column_start":12,"column_end":16},"name":"with","qualname":"<LocalKey<T>>::with","value":"pub fn with<F, R>(&'static Self, F) -> R where F: FnOnce(&T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the task-local value with this key.","sig":null,"attributes":[{"value":"/ Gets a reference to the task-local value with this key.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13371834,"byte_end":13371893,"line_start":22,"line_end":22,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13371898,"byte_end":13371901,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ The passed closure receives a reference to the task-local value.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13371906,"byte_end":13371974,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13371979,"byte_end":13371982,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ The task-local value will be lazily initialized if this task has not accessed it before.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13371987,"byte_end":13372079,"line_start":26,"line_end":26,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13372084,"byte_end":13372087,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13372092,"byte_end":13372104,"line_start":28,"line_end":28,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13372109,"byte_end":13372112,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ This function will panic if not called within the context of a task created by","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13372117,"byte_end":13372199,"line_start":30,"line_end":30,"column_start":5,"column_end":87}},{"value":"/ [`block_on`], [`spawn`], or [`Builder::spawn`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13372204,"byte_end":13372255,"line_start":31,"line_end":31,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13372260,"byte_end":13372263,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ [`block_on`]: fn.block_on.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13372268,"byte_end":13372302,"line_start":33,"line_end":33,"column_start":5,"column_end":39}},{"value":"/ [`spawn`]: fn.spawn.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13372307,"byte_end":13372335,"line_start":34,"line_end":34,"column_start":5,"column_end":33}},{"value":"/ [`Builder::spawn`]: struct.Builder.html#method.spawn","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13372340,"byte_end":13372396,"line_start":35,"line_end":35,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13372401,"byte_end":13372404,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13372409,"byte_end":13372423,"line_start":37,"line_end":37,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13372428,"byte_end":13372431,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13372436,"byte_end":13372443,"line_start":39,"line_end":39,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13372448,"byte_end":13372453,"line_start":40,"line_end":40,"column_start":5,"column_end":10}},{"value":"/ use std::cell::Cell;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13372458,"byte_end":13372482,"line_start":41,"line_end":41,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13372487,"byte_end":13372490,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ use async_std::task;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13372495,"byte_end":13372519,"line_start":43,"line_end":43,"column_start":5,"column_end":29}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13372524,"byte_end":13372554,"line_start":44,"line_end":44,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13372559,"byte_end":13372562,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ task_local! {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13372567,"byte_end":13372584,"line_start":46,"line_end":46,"column_start":5,"column_end":22}},{"value":"/     static NUMBER: Cell<u32> = Cell::new(5);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13372589,"byte_end":13372637,"line_start":47,"line_end":47,"column_start":5,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13372642,"byte_end":13372647,"line_start":48,"line_end":48,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13372652,"byte_end":13372655,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13372660,"byte_end":13372686,"line_start":50,"line_end":50,"column_start":5,"column_end":31}},{"value":"/     let v = NUMBER.with(|c| c.get());","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13372691,"byte_end":13372732,"line_start":51,"line_end":51,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(v, 5);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13372737,"byte_end":13372762,"line_start":52,"line_end":52,"column_start":5,"column_end":30}},{"value":"/ });","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13372767,"byte_end":13372774,"line_start":53,"line_end":53,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13372779,"byte_end":13372786,"line_start":54,"line_end":54,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2246},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13374088,"byte_end":13374096,"line_start":97,"line_end":97,"column_start":12,"column_end":20},"name":"try_with","qualname":"<LocalKey<T>>::try_with","value":"pub fn try_with<F, R>(&'static Self, F) -> Result<R, AccessError> where\nF: FnOnce(&T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Attempts to get a reference to the task-local value with this key.","sig":null,"attributes":[{"value":"/ Attempts to get a reference to the task-local value with this key.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13372992,"byte_end":13373062,"line_start":63,"line_end":63,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13373067,"byte_end":13373070,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ The passed closure receives a reference to the task-local value.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13373075,"byte_end":13373143,"line_start":65,"line_end":65,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13373148,"byte_end":13373151,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ The task-local value will be lazily initialized if this task has not accessed it before.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13373156,"byte_end":13373248,"line_start":67,"line_end":67,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13373253,"byte_end":13373256,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ This function returns an error if not called within the context of a task created by","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13373261,"byte_end":13373349,"line_start":69,"line_end":69,"column_start":5,"column_end":93}},{"value":"/ [`block_on`], [`spawn`], or [`Builder::spawn`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13373354,"byte_end":13373405,"line_start":70,"line_end":70,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13373410,"byte_end":13373413,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ [`block_on`]: fn.block_on.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13373418,"byte_end":13373452,"line_start":72,"line_end":72,"column_start":5,"column_end":39}},{"value":"/ [`spawn`]: fn.spawn.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13373457,"byte_end":13373485,"line_start":73,"line_end":73,"column_start":5,"column_end":33}},{"value":"/ [`Builder::spawn`]: struct.Builder.html#method.spawn","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13373490,"byte_end":13373546,"line_start":74,"line_end":74,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13373551,"byte_end":13373554,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13373559,"byte_end":13373573,"line_start":76,"line_end":76,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13373578,"byte_end":13373581,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13373586,"byte_end":13373593,"line_start":78,"line_end":78,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13373598,"byte_end":13373603,"line_start":79,"line_end":79,"column_start":5,"column_end":10}},{"value":"/ use std::cell::Cell;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13373608,"byte_end":13373632,"line_start":80,"line_end":80,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13373637,"byte_end":13373640,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ use async_std::task;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13373645,"byte_end":13373669,"line_start":82,"line_end":82,"column_start":5,"column_end":29}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13373674,"byte_end":13373704,"line_start":83,"line_end":83,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13373709,"byte_end":13373712,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ task_local! {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13373717,"byte_end":13373734,"line_start":85,"line_end":85,"column_start":5,"column_end":22}},{"value":"/     static VAL: Cell<u32> = Cell::new(5);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13373739,"byte_end":13373784,"line_start":86,"line_end":86,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13373789,"byte_end":13373794,"line_start":87,"line_end":87,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13373799,"byte_end":13373802,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13373807,"byte_end":13373833,"line_start":89,"line_end":89,"column_start":5,"column_end":31}},{"value":"/     let v = VAL.try_with(|c| c.get());","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13373838,"byte_end":13373880,"line_start":90,"line_end":90,"column_start":5,"column_end":47}},{"value":"/     assert_eq!(v, Ok(5));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13373885,"byte_end":13373914,"line_start":91,"line_end":91,"column_start":5,"column_end":34}},{"value":"/ });","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13373919,"byte_end":13373926,"line_start":92,"line_end":92,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13373931,"byte_end":13373934,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ // Returns an error because not called within the context of a task.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13373939,"byte_end":13374011,"line_start":94,"line_end":94,"column_start":5,"column_end":77}},{"value":"/ assert!(VAL.try_with(|c| c.get()).is_err());","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13374016,"byte_end":13374064,"line_start":95,"line_end":95,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13374069,"byte_end":13374076,"line_start":96,"line_end":96,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":2362},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13375649,"byte_end":13375660,"line_start":144,"line_end":144,"column_start":12,"column_end":23},"name":"AccessError","qualname":"::task::task_local::AccessError","value":"AccessError {  }","parent":null,"children":[{"krate":0,"index":2363}],"decl_id":null,"docs":" An error returned by [`LocalKey::try_with`].","sig":null,"attributes":[{"value":"/ An error returned by [`LocalKey::try_with`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13375482,"byte_end":13375530,"line_start":140,"line_end":140,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13375531,"byte_end":13375534,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ [`LocalKey::try_with`]: struct.LocalKey.html#method.try_with","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13375535,"byte_end":13375599,"line_start":142,"line_end":142,"column_start":1,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":2401},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_local.rs","byte_start":13507459,"byte_end":13507470,"line_start":25,"line_end":25,"column_start":8,"column_end":19},"name":"spawn_local","qualname":"::task::spawn_local::spawn_local","value":"pub fn spawn_local<F, T>(F) -> JoinHandle<T> where F: Future<Output = T> +\n'static, T: 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a task onto the thread-local executor.","sig":null,"attributes":[{"value":"/ Spawns a task onto the thread-local executor.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_local.rs","byte_start":13507076,"byte_end":13507125,"line_start":5,"line_end":5,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_local.rs","byte_start":13507126,"byte_end":13507129,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_local.rs","byte_start":13507130,"byte_end":13507144,"line_start":7,"line_end":7,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_local.rs","byte_start":13507145,"byte_end":13507148,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_local.rs","byte_start":13507149,"byte_end":13507156,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(feature = \"unstable\")]","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_local.rs","byte_start":13507157,"byte_end":13507191,"line_start":10,"line_end":10,"column_start":1,"column_end":35}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_local.rs","byte_start":13507192,"byte_end":13507231,"line_start":11,"line_end":11,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_local.rs","byte_start":13507232,"byte_end":13507237,"line_start":12,"line_end":12,"column_start":1,"column_end":6}},{"value":"/ use async_std::task;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_local.rs","byte_start":13507238,"byte_end":13507262,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_local.rs","byte_start":13507263,"byte_end":13507266,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ let handle = task::spawn_local(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_local.rs","byte_start":13507267,"byte_end":13507309,"line_start":15,"line_end":15,"column_start":1,"column_end":43}},{"value":"/     1 + 2","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_local.rs","byte_start":13507310,"byte_end":13507323,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_local.rs","byte_start":13507324,"byte_end":13507331,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_local.rs","byte_start":13507332,"byte_end":13507335,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(handle.await, 3);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_local.rs","byte_start":13507336,"byte_end":13507368,"line_start":19,"line_end":19,"column_start":1,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_local.rs","byte_start":13507369,"byte_end":13507374,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_local.rs","byte_start":13507375,"byte_end":13507383,"line_start":21,"line_end":21,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_local.rs","byte_start":13507384,"byte_end":13507391,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/spawn_local.rs","byte_start":13507442,"byte_end":13507451,"line_start":24,"line_end":24,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":51},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::future","value":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","parent":null,"children":[{"krate":0,"index":2404},{"krate":0,"index":2407},{"krate":0,"index":2643},{"krate":0,"index":2646},{"krate":0,"index":2649},{"krate":0,"index":2652},{"krate":0,"index":2680},{"krate":0,"index":2709},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":56},{"krate":0,"index":59},{"krate":0,"index":2728},{"krate":0,"index":2731},{"krate":0,"index":2734},{"krate":0,"index":2747}],"decl_id":null,"docs":" Asynchronous values.","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/utils.rs","byte_start":16620,"byte_end":16645,"line_start":219,"line_end":219,"column_start":13,"column_end":38}},{"value":"/ Asynchronous values.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13215978,"byte_end":13216002,"line_start":1,"line_end":1,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13216003,"byte_end":13216006,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ ## Base Futures Concurrency","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13216007,"byte_end":13216038,"line_start":3,"line_end":3,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13216039,"byte_end":13216042,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Often it's desireable to await multiple futures as if it was a single","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13216043,"byte_end":13216116,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/ future. The `join` family of operations converts multiple futures into a","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13216117,"byte_end":13216193,"line_start":6,"line_end":6,"column_start":1,"column_end":77}},{"value":"/ single future that returns all of their outputs. The `race` family of","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13216194,"byte_end":13216267,"line_start":7,"line_end":7,"column_start":1,"column_end":74}},{"value":"/ operations converts multiple future into a single future that returns the","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13216268,"byte_end":13216345,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/ first output.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13216346,"byte_end":13216363,"line_start":9,"line_end":9,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13216364,"byte_end":13216367,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ For operating on futures the following functions can be used:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13216368,"byte_end":13216433,"line_start":11,"line_end":11,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13216434,"byte_end":13216437,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ | Name               | Return signature | When does it return?     |","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13216438,"byte_end":13216510,"line_start":13,"line_end":13,"column_start":1,"column_end":73}},{"value":"/ | ---                | ---              | ---                      |","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13216511,"byte_end":13216583,"line_start":14,"line_end":14,"column_start":1,"column_end":73}},{"value":"/ | [`Future::join`]   | `(T1, T2)`       | Wait for all to complete","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13216584,"byte_end":13216654,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/ | [`Future::race`]   | `T`              | Return on first value","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13216655,"byte_end":13216722,"line_start":16,"line_end":16,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13216723,"byte_end":13216726,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ## Fallible Futures Concurrency","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13216727,"byte_end":13216762,"line_start":18,"line_end":18,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13216763,"byte_end":13216766,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ For operating on futures that return `Result` additional `try_` variants of","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13216767,"byte_end":13216846,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ the functions mentioned before can be used. These functions are aware of `Result`,","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13216847,"byte_end":13216933,"line_start":21,"line_end":21,"column_start":1,"column_end":87}},{"value":"/ and will behave slightly differently from their base variants.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13216934,"byte_end":13217000,"line_start":22,"line_end":22,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13217001,"byte_end":13217004,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ In the case of `try_join`, if any of the futures returns `Err` all","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13217005,"byte_end":13217075,"line_start":24,"line_end":24,"column_start":1,"column_end":71}},{"value":"/ futures are dropped and an error is returned. This is referred to as","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13217076,"byte_end":13217148,"line_start":25,"line_end":25,"column_start":1,"column_end":73}},{"value":"/ \"short-circuiting\".","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13217149,"byte_end":13217172,"line_start":26,"line_end":26,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13217173,"byte_end":13217176,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ In the case of `try_race`, instead of returning the first future that","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13217177,"byte_end":13217250,"line_start":28,"line_end":28,"column_start":1,"column_end":74}},{"value":"/ completes it returns the first future that _successfully_ completes. This","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13217251,"byte_end":13217328,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ means `try_race` will keep going until any one of the futures returns","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13217329,"byte_end":13217402,"line_start":30,"line_end":30,"column_start":1,"column_end":74}},{"value":"/ `Ok`, or _all_ futures have returned `Err`.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13217403,"byte_end":13217450,"line_start":31,"line_end":31,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13217451,"byte_end":13217454,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ However sometimes it can be useful to use the base variants of the functions","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13217455,"byte_end":13217535,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ even on futures that return `Result`. Here is an overview of operations that","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13217536,"byte_end":13217616,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"/ work on `Result`, and their respective semantics:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13217617,"byte_end":13217670,"line_start":35,"line_end":35,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13217671,"byte_end":13217674,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ | Name                   | Return signature               | When does it return? |","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13217675,"byte_end":13217761,"line_start":37,"line_end":37,"column_start":1,"column_end":87}},{"value":"/ | ---                    | ---                            | ---                  |","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13217762,"byte_end":13217848,"line_start":38,"line_end":38,"column_start":1,"column_end":87}},{"value":"/ | [`Future::join`]       | `(Result<T, E>, Result<T, E>)` | Wait for all to complete","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13217849,"byte_end":13217937,"line_start":39,"line_end":39,"column_start":1,"column_end":89}},{"value":"/ | [`Future::try_join`]   | `Result<(T1, T2), E>`          | Return on first `Err`, wait for all to complete","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13217938,"byte_end":13218049,"line_start":40,"line_end":40,"column_start":1,"column_end":112}},{"value":"/ | [`Future::race`]       | `Result<T, E>`                 | Return on first value","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13218050,"byte_end":13218135,"line_start":41,"line_end":41,"column_start":1,"column_end":86}},{"value":"/ | [`Future::try_race`]   | `Result<T, E>`                 | Return on first `Ok`, reject on last Err","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13218136,"byte_end":13218240,"line_start":42,"line_end":42,"column_start":1,"column_end":105}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13218241,"byte_end":13218244,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ [`Future::join`]: trait.Future.html#method.join","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13218245,"byte_end":13218296,"line_start":44,"line_end":44,"column_start":1,"column_end":52}},{"value":"/ [`Future::try_join`]: trait.Future.html#method.try_join","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13218297,"byte_end":13218356,"line_start":45,"line_end":45,"column_start":1,"column_end":60}},{"value":"/ [`Future::race`]: trait.Future.html#method.race","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13218357,"byte_end":13218408,"line_start":46,"line_end":46,"column_start":1,"column_end":52}},{"value":"/ [`Future::try_race`]: trait.Future.html#method.try_race","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/mod.rs","byte_start":13218409,"byte_end":13218468,"line_start":47,"line_end":47,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":12272},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/delay.rs","byte_start":13515703,"byte_end":13515714,"line_start":13,"line_end":13,"column_start":16,"column_end":27},"name":"DelayFuture","qualname":"::future::future::delay::DelayFuture","value":"DelayFuture {  }","parent":null,"children":[{"krate":0,"index":12274},{"krate":0,"index":12275}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":14046700,"byte_end":14046709,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2459},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/delay.rs","byte_start":13515836,"byte_end":13515839,"line_start":22,"line_end":22,"column_start":12,"column_end":15},"name":"new","qualname":"<DelayFuture<F>>::new","value":"pub fn new(F, Duration) -> DelayFuture<F>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12231},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/flatten.rs","byte_start":13516679,"byte_end":13516692,"line_start":11,"line_end":11,"column_start":16,"column_end":29},"name":"FlattenFuture","qualname":"::future::future::flatten::FlattenFuture","value":"FlattenFuture {  }","parent":null,"children":[{"krate":0,"index":12234}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":14046700,"byte_end":14046709,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12139},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/race.rs","byte_start":13518342,"byte_end":13518346,"line_start":12,"line_end":12,"column_start":16,"column_end":20},"name":"Race","qualname":"::future::future::race::Race","value":"Race {  }","parent":null,"children":[{"krate":0,"index":12142},{"krate":0,"index":12143}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":14046700,"byte_end":14046709,"line_start":650,"line_end":650,"column_start":11,"column_end":20}},{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":14046700,"byte_end":14046709,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12094},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/try_race.rs","byte_start":13519594,"byte_end":13519601,"line_start":12,"line_end":12,"column_start":16,"column_end":23},"name":"TryRace","qualname":"::future::future::try_race::TryRace","value":"TryRace {  }","parent":null,"children":[{"krate":0,"index":12097},{"krate":0,"index":12098}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":14046700,"byte_end":14046709,"line_start":650,"line_end":650,"column_start":11,"column_end":20}},{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":14046700,"byte_end":14046709,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12049},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/join.rs","byte_start":13521362,"byte_end":13521366,"line_start":12,"line_end":12,"column_start":16,"column_end":20},"name":"Join","qualname":"::future::future::join::Join","value":"Join {  }","parent":null,"children":[{"krate":0,"index":12052},{"krate":0,"index":12053}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":14046700,"byte_end":14046709,"line_start":650,"line_end":650,"column_start":11,"column_end":20}},{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":14046700,"byte_end":14046709,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12004},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/try_join.rs","byte_start":13522779,"byte_end":13522786,"line_start":12,"line_end":12,"column_start":16,"column_end":23},"name":"TryJoin","qualname":"::future::future::try_join::TryJoin","value":"TryJoin {  }","parent":null,"children":[{"krate":0,"index":12007},{"krate":0,"index":12008}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":14046700,"byte_end":14046709,"line_start":650,"line_end":650,"column_start":11,"column_end":20}},{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":14046700,"byte_end":14046709,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":2411},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":13508188,"byte_end":13508197,"line_start":30,"line_end":30,"column_start":11,"column_end":20},"name":"FutureExt","qualname":"::future::future::FutureExt","value":"FutureExt: Future","parent":null,"children":[{"krate":0,"index":2412},{"krate":0,"index":2413},{"krate":0,"index":2414},{"krate":0,"index":2416},{"krate":0,"index":2420},{"krate":0,"index":2422},{"krate":0,"index":2427}],"decl_id":null,"docs":"    Extension methods for [`Future`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2412},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":13508686,"byte_end":13508691,"line_start":47,"line_end":47,"column_start":8,"column_end":13},"name":"delay","qualname":"::future::future::FutureExt::delay","value":"pub fn delay(Self, Duration) -> DelayFuture<Self> where Self: Sized","parent":{"krate":0,"index":2411},"children":[],"decl_id":null,"docs":" Returns a Future that delays execution for a specified time.","sig":null,"attributes":[{"value":"/ Returns a Future that delays execution for a specified time.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":13508212,"byte_end":13508276,"line_start":31,"line_end":31,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":13508281,"byte_end":13508284,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":13508289,"byte_end":13508303,"line_start":33,"line_end":33,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":13508308,"byte_end":13508311,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":13508316,"byte_end":13508323,"line_start":35,"line_end":35,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":13508328,"byte_end":13508367,"line_start":36,"line_end":36,"column_start":5,"column_end":44}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":13508372,"byte_end":13508402,"line_start":37,"line_end":37,"column_start":5,"column_end":35}},{"value":"/ use async_std::future;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":13508407,"byte_end":13508433,"line_start":38,"line_end":38,"column_start":5,"column_end":31}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":13508438,"byte_end":13508466,"line_start":39,"line_end":39,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":13508471,"byte_end":13508474,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ let a = future::ready(1).delay(Duration::from_millis(2000));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":13508479,"byte_end":13508543,"line_start":41,"line_end":41,"column_start":5,"column_end":69}},{"value":"/ dbg!(a.await);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":13508548,"byte_end":13508566,"line_start":42,"line_end":42,"column_start":5,"column_end":23}},{"value":"/ # })","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":13508571,"byte_end":13508579,"line_start":43,"line_end":43,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":13508584,"byte_end":13508591,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":13508596,"byte_end":13508624,"line_start":45,"line_end":45,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2413},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":13509319,"byte_end":13509326,"line_start":70,"line_end":70,"column_start":8,"column_end":15},"name":"flatten","qualname":"::future::future::FutureExt::flatten","value":"pub fn flatten(Self)\n-> FlattenFuture<Self, <Self::Output as IntoFuture>::Future> where\nSelf: Sized, <Self as Future>::Output: IntoFuture","parent":{"krate":0,"index":2411},"children":[],"decl_id":null,"docs":" Flatten out the execution of this future when the result itself\n can be converted into another future.","sig":null,"attributes":[{"value":"/ Flatten out the execution of this future when the result itself","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":13508818,"byte_end":13508885,"line_start":54,"line_end":54,"column_start":5,"column_end":72}},{"value":"/ can be converted into another future.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":13508890,"byte_end":13508931,"line_start":55,"line_end":55,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":13508936,"byte_end":13508939,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":13508944,"byte_end":13508958,"line_start":57,"line_end":57,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":13508963,"byte_end":13508966,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":13508971,"byte_end":13508978,"line_start":59,"line_end":59,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":13508983,"byte_end":13509022,"line_start":60,"line_end":60,"column_start":5,"column_end":44}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":13509027,"byte_end":13509057,"line_start":61,"line_end":61,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":13509062,"byte_end":13509065,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ let nested_future = async { async { 1 } };","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":13509070,"byte_end":13509116,"line_start":63,"line_end":63,"column_start":5,"column_end":51}},{"value":"/ let future = nested_future.flatten();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":13509121,"byte_end":13509162,"line_start":64,"line_end":64,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(future.await, 1);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":13509167,"byte_end":13509199,"line_start":65,"line_end":65,"column_start":5,"column_end":37}},{"value":"/ # })","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":13509204,"byte_end":13509212,"line_start":66,"line_end":66,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":13509217,"byte_end":13509224,"line_start":67,"line_end":67,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":13509229,"byte_end":13509257,"line_start":68,"line_end":68,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2414},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":13510545,"byte_end":13510549,"line_start":111,"line_end":111,"column_start":8,"column_end":12},"name":"race","qualname":"::future::future::FutureExt::race","value":"pub fn race<F>(Self, F) -> Race<Self, F> where Self: std::future::Future +\nSized, F: std::future::Future<Output = <Self as std::future::Future>::Output>","parent":{"krate":0,"index":2411},"children":[],"decl_id":null,"docs":"        Waits for one of two similarly-typed futures to complete.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":13510455,"byte_end":13510483,"line_start":109,"line_end":109,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2416},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":13511926,"byte_end":13511934,"line_start":157,"line_end":157,"column_start":8,"column_end":16},"name":"try_race","qualname":"::future::future::FutureExt::try_race","value":"pub fn try_race<F, T, E>(Self, F) -> TryRace<Self, F> where\nSelf: std::future::Future<Output = Result<T, E>> + Sized,\nF: std::future::Future<Output = <Self as std::future::Future>::Output>","parent":{"krate":0,"index":2411},"children":[],"decl_id":null,"docs":"        Waits for one of two similarly-typed fallible futures to complete.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":13511836,"byte_end":13511864,"line_start":155,"line_end":155,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2420},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":13512922,"byte_end":13512926,"line_start":194,"line_end":194,"column_start":8,"column_end":12},"name":"join","qualname":"::future::future::FutureExt::join","value":"pub fn join<F>(Self, F) -> Join<Self, F> where Self: std::future::Future +\nSized, F: std::future::Future","parent":{"krate":0,"index":2411},"children":[],"decl_id":null,"docs":"        Waits for two similarly-typed futures to complete.","sig":null,"attributes":[{"value":"cfg(any(feature = \"unstable\", feature = \"docs\"))","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":13512809,"byte_end":13512860,"line_start":192,"line_end":192,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2422},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":13514162,"byte_end":13514170,"line_start":241,"line_end":241,"column_start":8,"column_end":16},"name":"try_join","qualname":"::future::future::FutureExt::try_join","value":"pub fn try_join<F, A, B, E>(Self, F) -> TryJoin<Self, F> where\nSelf: std::future::Future<Output = Result<A, E>> + Sized,\nF: std::future::Future<Output = Result<B, E>>","parent":{"krate":0,"index":2411},"children":[],"decl_id":null,"docs":"        Waits for two similarly-typed fallible futures to complete.","sig":null,"attributes":[{"value":"cfg(any(feature = \"unstable\", feature = \"docs\"))","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":13514049,"byte_end":13514100,"line_start":239,"line_end":239,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2427},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":13515252,"byte_end":13515259,"line_start":280,"line_end":280,"column_start":8,"column_end":15},"name":"timeout","qualname":"::future::future::FutureExt::timeout","value":"pub fn timeout(Self, Duration) -> TimeoutFuture<Self> where Self: Sized","parent":{"krate":0,"index":2411},"children":[],"decl_id":null,"docs":"        Waits for both the future and a timeout, if the timeout completes before\n        the future, it returns a TimeoutError.","sig":null,"attributes":[{"value":"cfg(any(all(feature = \"default\", feature = \"unstable\"), feature = \"docs\"))","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":13515113,"byte_end":13515190,"line_start":278,"line_end":278,"column_start":5,"column_end":82}}]},{"kind":"Function","id":{"krate":0,"index":2669},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/pending.rs","byte_start":13524956,"byte_end":13524963,"line_start":27,"line_end":27,"column_start":14,"column_end":21},"name":"pending","qualname":"::future::pending::pending","value":"pub async fn pending<T>() -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Never resolves to a value.","sig":null,"attributes":[{"value":"/ Never resolves to a value.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/pending.rs","byte_start":13524564,"byte_end":13524594,"line_start":7,"line_end":7,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/pending.rs","byte_start":13524595,"byte_end":13524598,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/pending.rs","byte_start":13524599,"byte_end":13524613,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/pending.rs","byte_start":13524614,"byte_end":13524617,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/pending.rs","byte_start":13524618,"byte_end":13524625,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/pending.rs","byte_start":13524626,"byte_end":13524665,"line_start":12,"line_end":12,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/pending.rs","byte_start":13524666,"byte_end":13524671,"line_start":13,"line_end":13,"column_start":1,"column_end":6}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/pending.rs","byte_start":13524672,"byte_end":13524700,"line_start":14,"line_end":14,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/pending.rs","byte_start":13524701,"byte_end":13524704,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ use async_std::future;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/pending.rs","byte_start":13524705,"byte_end":13524731,"line_start":16,"line_end":16,"column_start":1,"column_end":27}},{"value":"/ use async_std::io;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/pending.rs","byte_start":13524732,"byte_end":13524754,"line_start":17,"line_end":17,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/pending.rs","byte_start":13524755,"byte_end":13524758,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ let dur = Duration::from_secs(1);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/pending.rs","byte_start":13524759,"byte_end":13524796,"line_start":19,"line_end":19,"column_start":1,"column_end":38}},{"value":"/ let fut = future::pending();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/pending.rs","byte_start":13524797,"byte_end":13524829,"line_start":20,"line_end":20,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/pending.rs","byte_start":13524830,"byte_end":13524833,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ let res: io::Result<()> = io::timeout(dur, fut).await;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/pending.rs","byte_start":13524834,"byte_end":13524892,"line_start":22,"line_end":22,"column_start":1,"column_end":59}},{"value":"/ assert!(res.is_err());","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/pending.rs","byte_start":13524893,"byte_end":13524919,"line_start":23,"line_end":23,"column_start":1,"column_end":27}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/pending.rs","byte_start":13524920,"byte_end":13524925,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/pending.rs","byte_start":13524926,"byte_end":13524934,"line_start":25,"line_end":25,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/pending.rs","byte_start":13524935,"byte_end":13524942,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2694},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/poll_fn.rs","byte_start":13525854,"byte_end":13525861,"line_start":26,"line_end":26,"column_start":14,"column_end":21},"name":"poll_fn","qualname":"::future::poll_fn::poll_fn","value":"pub async fn poll_fn<F, T>(F) -> /*impl Trait*/ where F: FnMut(&mut Context)\n-> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future wrapping around a function returning [`Poll`].","sig":null,"attributes":[{"value":"/ Creates a new future wrapping around a function returning [`Poll`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/poll_fn.rs","byte_start":13525339,"byte_end":13525410,"line_start":6,"line_end":6,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/poll_fn.rs","byte_start":13525411,"byte_end":13525414,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Polling the returned future delegates to the wrapped function.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/poll_fn.rs","byte_start":13525415,"byte_end":13525481,"line_start":8,"line_end":8,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/poll_fn.rs","byte_start":13525482,"byte_end":13525485,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/poll_fn.rs","byte_start":13525486,"byte_end":13525500,"line_start":10,"line_end":10,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/poll_fn.rs","byte_start":13525501,"byte_end":13525504,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/poll_fn.rs","byte_start":13525505,"byte_end":13525512,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/poll_fn.rs","byte_start":13525513,"byte_end":13525552,"line_start":13,"line_end":13,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/poll_fn.rs","byte_start":13525553,"byte_end":13525558,"line_start":14,"line_end":14,"column_start":1,"column_end":6}},{"value":"/ use async_std::future;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/poll_fn.rs","byte_start":13525559,"byte_end":13525585,"line_start":15,"line_end":15,"column_start":1,"column_end":27}},{"value":"/ use async_std::task::{Context, Poll};","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/poll_fn.rs","byte_start":13525586,"byte_end":13525627,"line_start":16,"line_end":16,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/poll_fn.rs","byte_start":13525628,"byte_end":13525631,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ fn poll_greeting(_: &mut Context<'_>) -> Poll<String> {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/poll_fn.rs","byte_start":13525632,"byte_end":13525691,"line_start":18,"line_end":18,"column_start":1,"column_end":60}},{"value":"/     Poll::Ready(\"hello world\".to_string())","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/poll_fn.rs","byte_start":13525692,"byte_end":13525738,"line_start":19,"line_end":19,"column_start":1,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/poll_fn.rs","byte_start":13525739,"byte_end":13525744,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/poll_fn.rs","byte_start":13525745,"byte_end":13525748,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(future::poll_fn(poll_greeting).await, \"hello world\");","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/poll_fn.rs","byte_start":13525749,"byte_end":13525817,"line_start":22,"line_end":22,"column_start":1,"column_end":69}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/poll_fn.rs","byte_start":13525818,"byte_end":13525823,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/poll_fn.rs","byte_start":13525824,"byte_end":13525832,"line_start":24,"line_end":24,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/poll_fn.rs","byte_start":13525833,"byte_end":13525840,"line_start":25,"line_end":25,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2710},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/ready.rs","byte_start":13526641,"byte_end":13526646,"line_start":18,"line_end":18,"column_start":14,"column_end":19},"name":"ready","qualname":"::future::ready::ready","value":"pub async fn ready<T>(T) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Resolves to the provided value.","sig":null,"attributes":[{"value":"/ Resolves to the provided value.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/ready.rs","byte_start":13526252,"byte_end":13526287,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/ready.rs","byte_start":13526288,"byte_end":13526291,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::convert::identity`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/ready.rs","byte_start":13526292,"byte_end":13526360,"line_start":3,"line_end":3,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/ready.rs","byte_start":13526361,"byte_end":13526364,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ [`std::convert::identity`]: https://doc.rust-lang.org/std/convert/fn.identity.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/ready.rs","byte_start":13526365,"byte_end":13526451,"line_start":5,"line_end":5,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/ready.rs","byte_start":13526452,"byte_end":13526455,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/ready.rs","byte_start":13526456,"byte_end":13526470,"line_start":7,"line_end":7,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/ready.rs","byte_start":13526471,"byte_end":13526474,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/ready.rs","byte_start":13526475,"byte_end":13526482,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/ready.rs","byte_start":13526483,"byte_end":13526522,"line_start":10,"line_end":10,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/ready.rs","byte_start":13526523,"byte_end":13526528,"line_start":11,"line_end":11,"column_start":1,"column_end":6}},{"value":"/ use async_std::future;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/ready.rs","byte_start":13526529,"byte_end":13526555,"line_start":12,"line_end":12,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/ready.rs","byte_start":13526556,"byte_end":13526559,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(future::ready(10).await, 10);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/ready.rs","byte_start":13526560,"byte_end":13526604,"line_start":14,"line_end":14,"column_start":1,"column_end":45}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/ready.rs","byte_start":13526605,"byte_end":13526610,"line_start":15,"line_end":15,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/ready.rs","byte_start":13526611,"byte_end":13526619,"line_start":16,"line_end":16,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/ready.rs","byte_start":13526620,"byte_end":13526627,"line_start":17,"line_end":17,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":92},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/timeout.rs","byte_start":13219742,"byte_end":13219749,"line_start":32,"line_end":32,"column_start":14,"column_end":21},"name":"timeout","qualname":"::future::timeout::timeout","value":"pub async fn timeout<F, T>(Duration, F) -> /*impl Trait*/ where\nF: Future<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Awaits a future or times out after a duration of time.","sig":null,"attributes":[{"value":"/ Awaits a future or times out after a duration of time.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/timeout.rs","byte_start":13219214,"byte_end":13219272,"line_start":12,"line_end":12,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/timeout.rs","byte_start":13219273,"byte_end":13219276,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ If you want to await an I/O future consider using","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/timeout.rs","byte_start":13219277,"byte_end":13219330,"line_start":14,"line_end":14,"column_start":1,"column_end":54}},{"value":"/ [`io::timeout`](../io/fn.timeout.html) instead.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/timeout.rs","byte_start":13219331,"byte_end":13219382,"line_start":15,"line_end":15,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/timeout.rs","byte_start":13219383,"byte_end":13219386,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/timeout.rs","byte_start":13219387,"byte_end":13219401,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/timeout.rs","byte_start":13219402,"byte_end":13219405,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/timeout.rs","byte_start":13219406,"byte_end":13219413,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/timeout.rs","byte_start":13219414,"byte_end":13219488,"line_start":20,"line_end":20,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/timeout.rs","byte_start":13219489,"byte_end":13219494,"line_start":21,"line_end":21,"column_start":1,"column_end":6}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/timeout.rs","byte_start":13219495,"byte_end":13219523,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/timeout.rs","byte_start":13219524,"byte_end":13219527,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ use async_std::future;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/timeout.rs","byte_start":13219528,"byte_end":13219554,"line_start":24,"line_end":24,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/timeout.rs","byte_start":13219555,"byte_end":13219558,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let never = future::pending::<()>();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/timeout.rs","byte_start":13219559,"byte_end":13219599,"line_start":26,"line_end":26,"column_start":1,"column_end":41}},{"value":"/ let dur = Duration::from_millis(5);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/timeout.rs","byte_start":13219600,"byte_end":13219639,"line_start":27,"line_end":27,"column_start":1,"column_end":40}},{"value":"/ assert!(future::timeout(dur, never).await.is_err());","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/timeout.rs","byte_start":13219640,"byte_end":13219696,"line_start":28,"line_end":28,"column_start":1,"column_end":57}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/timeout.rs","byte_start":13219697,"byte_end":13219702,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/timeout.rs","byte_start":13219703,"byte_end":13219720,"line_start":30,"line_end":30,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/timeout.rs","byte_start":13219721,"byte_end":13219728,"line_start":31,"line_end":31,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":11967},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/timeout.rs","byte_start":13219967,"byte_end":13219980,"line_start":41,"line_end":41,"column_start":16,"column_end":29},"name":"TimeoutFuture","qualname":"::future::timeout::TimeoutFuture","value":"TimeoutFuture {  }","parent":null,"children":[{"krate":0,"index":11969},{"krate":0,"index":11970}],"decl_id":null,"docs":" A future that times out after a duration of time.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2714},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/timeout.rs","byte_start":13220912,"byte_end":13220924,"line_start":76,"line_end":76,"column_start":12,"column_end":24},"name":"TimeoutError","qualname":"::future::timeout::TimeoutError","value":"TimeoutError {  }","parent":null,"children":[{"krate":0,"index":2715}],"decl_id":null,"docs":" An error returned when a future times out.\n","sig":null,"attributes":[{"value":"/ An error returned when a future times out.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/timeout.rs","byte_start":13220809,"byte_end":13220855,"line_start":74,"line_end":74,"column_start":1,"column_end":47}}]},{"kind":"Trait","id":{"krate":0,"index":2738},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":13527420,"byte_end":13527430,"line_start":35,"line_end":35,"column_start":11,"column_end":21},"name":"IntoFuture","qualname":"::future::into_future::IntoFuture","value":"IntoFuture","parent":null,"children":[{"krate":0,"index":2739},{"krate":0,"index":2740},{"krate":0,"index":2741}],"decl_id":null,"docs":" Convert a type into a `Future`.","sig":null,"attributes":[{"value":"/ Convert a type into a `Future`.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":13526702,"byte_end":13526737,"line_start":3,"line_end":3,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":13526738,"byte_end":13526741,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":13526742,"byte_end":13526756,"line_start":5,"line_end":5,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":13526757,"byte_end":13526760,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":13526761,"byte_end":13526768,"line_start":7,"line_end":7,"column_start":1,"column_end":8}},{"value":"/ use async_std::future::{Future, IntoFuture};","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":13526769,"byte_end":13526817,"line_start":8,"line_end":8,"column_start":1,"column_end":49}},{"value":"/ use async_std::io;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":13526818,"byte_end":13526840,"line_start":9,"line_end":9,"column_start":1,"column_end":23}},{"value":"/ use async_std::pin::Pin;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":13526841,"byte_end":13526869,"line_start":10,"line_end":10,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":13526870,"byte_end":13526873,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ struct Client;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":13526874,"byte_end":13526892,"line_start":12,"line_end":12,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":13526893,"byte_end":13526896,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ impl Client {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":13526897,"byte_end":13526914,"line_start":14,"line_end":14,"column_start":1,"column_end":18}},{"value":"/     pub async fn send(self) -> io::Result<()> {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":13526915,"byte_end":13526966,"line_start":15,"line_end":15,"column_start":1,"column_end":52}},{"value":"/         // Send a request","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":13526967,"byte_end":13526996,"line_start":16,"line_end":16,"column_start":1,"column_end":30}},{"value":"/         Ok(())","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":13526997,"byte_end":13527015,"line_start":17,"line_end":17,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":13527016,"byte_end":13527025,"line_start":18,"line_end":18,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":13527026,"byte_end":13527031,"line_start":19,"line_end":19,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":13527032,"byte_end":13527035,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ impl IntoFuture for Client {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":13527036,"byte_end":13527068,"line_start":21,"line_end":21,"column_start":1,"column_end":33}},{"value":"/     type Output = io::Result<()>;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":13527069,"byte_end":13527106,"line_start":22,"line_end":22,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":13527107,"byte_end":13527110,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/     type Future = Pin<Box<dyn Future<Output = Self::Output>>>;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":13527111,"byte_end":13527177,"line_start":24,"line_end":24,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":13527178,"byte_end":13527181,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/     fn into_future(self) -> Self::Future {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":13527182,"byte_end":13527228,"line_start":26,"line_end":26,"column_start":1,"column_end":47}},{"value":"/         Box::pin(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":13527229,"byte_end":13527257,"line_start":27,"line_end":27,"column_start":1,"column_end":29}},{"value":"/             self.send().await","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":13527258,"byte_end":13527291,"line_start":28,"line_end":28,"column_start":1,"column_end":34}},{"value":"/         })","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":13527292,"byte_end":13527306,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":13527307,"byte_end":13527316,"line_start":30,"line_end":30,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":13527317,"byte_end":13527322,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":13527323,"byte_end":13527330,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":13527331,"byte_end":13527359,"line_start":33,"line_end":33,"column_start":1,"column_end":29}}]},{"kind":"Type","id":{"krate":0,"index":2739},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":13527492,"byte_end":13527498,"line_start":37,"line_end":37,"column_start":10,"column_end":16},"name":"Output","qualname":"::future::into_future::IntoFuture::Output","value":"type Output;","parent":{"krate":0,"index":2738},"children":[],"decl_id":null,"docs":" The type of value produced on completion.\n","sig":null,"attributes":[{"value":"/ The type of value produced on completion.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":13527437,"byte_end":13527482,"line_start":36,"line_end":36,"column_start":5,"column_end":50}}]},{"kind":"Type","id":{"krate":0,"index":2740},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":13527565,"byte_end":13527571,"line_start":40,"line_end":40,"column_start":10,"column_end":16},"name":"Future","qualname":"::future::into_future::IntoFuture::Future","value":"type Future: Future<Output = Self::Output>;","parent":{"krate":0,"index":2738},"children":[],"decl_id":null,"docs":" Which kind of future are we turning this into?\n","sig":null,"attributes":[{"value":"/ Which kind of future are we turning this into?","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":13527505,"byte_end":13527555,"line_start":39,"line_end":39,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2741},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":13527649,"byte_end":13527660,"line_start":43,"line_end":43,"column_start":8,"column_end":19},"name":"into_future","qualname":"::future::into_future::IntoFuture::into_future","value":"pub fn into_future(Self) -> Self::Future","parent":{"krate":0,"index":2738},"children":[],"decl_id":null,"docs":" Create a future from a value\n","sig":null,"attributes":[{"value":"/ Create a future from a value","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":13527609,"byte_end":13527641,"line_start":42,"line_end":42,"column_start":5,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":107},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","parent":null,"children":[{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":112},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":119},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":126},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":133},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":140},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":147},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":1805},{"krate":0,"index":1828},{"krate":0,"index":1852},{"krate":0,"index":1881},{"krate":0,"index":1910},{"krate":0,"index":1930},{"krate":0,"index":3220},{"krate":0,"index":3418},{"krate":0,"index":3427},{"krate":0,"index":3449},{"krate":0,"index":3464},{"krate":0,"index":3471},{"krate":0,"index":3502},{"krate":0,"index":3515},{"krate":0,"index":3556},{"krate":0,"index":3582},{"krate":0,"index":3610},{"krate":0,"index":3636},{"krate":0,"index":3639},{"krate":0,"index":3642},{"krate":0,"index":3643},{"krate":0,"index":3646},{"krate":0,"index":3649},{"krate":0,"index":3652},{"krate":0,"index":3655},{"krate":0,"index":3656},{"krate":0,"index":3659},{"krate":0,"index":3662},{"krate":0,"index":3665},{"krate":0,"index":3666},{"krate":0,"index":3669},{"krate":0,"index":3672},{"krate":0,"index":3675},{"krate":0,"index":3678},{"krate":0,"index":3679},{"krate":0,"index":3682},{"krate":0,"index":3685}],"decl_id":null,"docs":" Composable asynchronous iteration.","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/utils.rs","byte_start":16620,"byte_end":16645,"line_start":219,"line_end":219,"column_start":13,"column_end":38}},{"value":"/ Composable asynchronous iteration.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13221127,"byte_end":13221165,"line_start":1,"line_end":1,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13221166,"byte_end":13221169,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is an async version of [`std::iter`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13221170,"byte_end":13221223,"line_start":3,"line_end":3,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13221224,"byte_end":13221227,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ If you've found yourself with an asynchronous collection of some kind,","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13221228,"byte_end":13221302,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"/ and needed to perform an operation on the elements of said collection,","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13221303,"byte_end":13221377,"line_start":6,"line_end":6,"column_start":1,"column_end":75}},{"value":"/ you'll quickly run into 'streams'. Streams are heavily used in idiomatic","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13221378,"byte_end":13221454,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ asynchronous Rust code, so it's worth becoming familiar with them.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13221455,"byte_end":13221525,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13221526,"byte_end":13221529,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Before explaining more, let's talk about how this module is structured:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13221530,"byte_end":13221605,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13221606,"byte_end":13221609,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Organization","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13221610,"byte_end":13221628,"line_start":12,"line_end":12,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13221629,"byte_end":13221632,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This module is largely organized by type:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13221633,"byte_end":13221678,"line_start":14,"line_end":14,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13221679,"byte_end":13221682,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * [Traits] are the core portion: these traits define what kind of streams","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13221683,"byte_end":13221760,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/   exist and what you can do with them. The methods of these traits are worth","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13221761,"byte_end":13221841,"line_start":17,"line_end":17,"column_start":1,"column_end":81}},{"value":"/   putting some extra study time into.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13221842,"byte_end":13221883,"line_start":18,"line_end":18,"column_start":1,"column_end":42}},{"value":"/ * [Functions] provide some helpful ways to create some basic streams.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13221884,"byte_end":13221957,"line_start":19,"line_end":19,"column_start":1,"column_end":74}},{"value":"/ * [Structs] are often the return types of the various methods on this","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13221958,"byte_end":13222031,"line_start":20,"line_end":20,"column_start":1,"column_end":74}},{"value":"/   module's traits. You'll usually want to look at the method that creates","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13222032,"byte_end":13222109,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/   the `struct`, rather than the `struct` itself. For more detail about why,","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13222110,"byte_end":13222189,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/   see '[Implementing Stream](#implementing-stream)'.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13222190,"byte_end":13222246,"line_start":23,"line_end":23,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13222247,"byte_end":13222250,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [Traits]: #traits","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13222251,"byte_end":13222272,"line_start":25,"line_end":25,"column_start":1,"column_end":22}},{"value":"/ [Functions]: #functions","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13222273,"byte_end":13222300,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/ [Structs]: #structs","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13222301,"byte_end":13222324,"line_start":27,"line_end":27,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13222325,"byte_end":13222328,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ That's it! Let's dig into streams.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13222329,"byte_end":13222367,"line_start":29,"line_end":29,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13222368,"byte_end":13222371,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Stream","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13222372,"byte_end":13222384,"line_start":31,"line_end":31,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13222385,"byte_end":13222388,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ The heart and soul of this module is the [`Stream`] trait. The core of","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13222389,"byte_end":13222463,"line_start":33,"line_end":33,"column_start":1,"column_end":75}},{"value":"/ [`Stream`] looks like this:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13222464,"byte_end":13222495,"line_start":34,"line_end":34,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13222496,"byte_end":13222499,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13222500,"byte_end":13222507,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/ # use async_std::task::{Context, Poll};","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13222508,"byte_end":13222551,"line_start":37,"line_end":37,"column_start":1,"column_end":44}},{"value":"/ # use std::pin::Pin;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13222552,"byte_end":13222576,"line_start":38,"line_end":38,"column_start":1,"column_end":25}},{"value":"/ trait Stream {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13222577,"byte_end":13222595,"line_start":39,"line_end":39,"column_start":1,"column_end":19}},{"value":"/     type Item;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13222596,"byte_end":13222614,"line_start":40,"line_end":40,"column_start":1,"column_end":19}},{"value":"/     fn poll_next(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Option<Self::Item>>;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13222615,"byte_end":13222708,"line_start":41,"line_end":41,"column_start":1,"column_end":94}},{"value":"/ }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13222709,"byte_end":13222714,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13222715,"byte_end":13222722,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13222723,"byte_end":13222726,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ A stream has a method, [`next`], which when called, returns an","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13222727,"byte_end":13222793,"line_start":45,"line_end":45,"column_start":1,"column_end":67}},{"value":"/ [`Poll`]<[`Option`]`<Item>>`. [`next`] will return `Ready(Some(Item))`","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13222794,"byte_end":13222868,"line_start":46,"line_end":46,"column_start":1,"column_end":75}},{"value":"/ as long as there are elements, and once they've all been exhausted, will","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13222869,"byte_end":13222945,"line_start":47,"line_end":47,"column_start":1,"column_end":77}},{"value":"/ return `None` to indicate that iteration is finished. If we're waiting on","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13222946,"byte_end":13223023,"line_start":48,"line_end":48,"column_start":1,"column_end":78}},{"value":"/ something asynchronous to resolve `Pending` is returned.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13223024,"byte_end":13223084,"line_start":49,"line_end":49,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13223085,"byte_end":13223088,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Individual streams may choose to resume iteration, and so calling","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13223089,"byte_end":13223158,"line_start":51,"line_end":51,"column_start":1,"column_end":70}},{"value":"/ [`next`] again may or may not eventually start returning `Ready(Some(Item))`","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13223159,"byte_end":13223239,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/ again at some point.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13223240,"byte_end":13223264,"line_start":53,"line_end":53,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13223265,"byte_end":13223268,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ [`Stream`]'s full definition includes a number of other methods as well,","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13223269,"byte_end":13223345,"line_start":55,"line_end":55,"column_start":1,"column_end":77}},{"value":"/ but they are default methods, built on top of [`next`], and so you get","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13223346,"byte_end":13223420,"line_start":56,"line_end":56,"column_start":1,"column_end":75}},{"value":"/ them for free.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13223421,"byte_end":13223439,"line_start":57,"line_end":57,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13223440,"byte_end":13223443,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ Streams are also composable, and it's common to chain them together to do","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13223444,"byte_end":13223521,"line_start":59,"line_end":59,"column_start":1,"column_end":78}},{"value":"/ more complex forms of processing. See the [Adapters](#adapters) section","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13223522,"byte_end":13223597,"line_start":60,"line_end":60,"column_start":1,"column_end":76}},{"value":"/ below for more details.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13223598,"byte_end":13223625,"line_start":61,"line_end":61,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13223626,"byte_end":13223629,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ [`Poll`]: ../task/enum.Poll.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13223630,"byte_end":13223666,"line_start":63,"line_end":63,"column_start":1,"column_end":37}},{"value":"/ [`Stream`]: trait.Stream.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13223667,"byte_end":13223700,"line_start":64,"line_end":64,"column_start":1,"column_end":34}},{"value":"/ [`next`]: trait.Stream.html#tymethod.next","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13223701,"byte_end":13223746,"line_start":65,"line_end":65,"column_start":1,"column_end":46}},{"value":"/ [`Option`]: ../../std/option/enum.Option.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13223747,"byte_end":13223796,"line_start":66,"line_end":66,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13223797,"byte_end":13223800,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # The three forms of streaming","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13223801,"byte_end":13223835,"line_start":68,"line_end":68,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13223836,"byte_end":13223839,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ There are three common methods which can create streams from a collection:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13223840,"byte_end":13223918,"line_start":70,"line_end":70,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13223919,"byte_end":13223922,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ * `stream()`, which iterates over `&T`.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13223923,"byte_end":13223966,"line_start":72,"line_end":72,"column_start":1,"column_end":44}},{"value":"/ * `stream_mut()`, which iterates over `&mut T`.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13223967,"byte_end":13224018,"line_start":73,"line_end":73,"column_start":1,"column_end":52}},{"value":"/ * `into_stream()`, which iterates over `T`.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13224019,"byte_end":13224066,"line_start":74,"line_end":74,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13224067,"byte_end":13224070,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ Various things in async-std may implement one or more of the","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13224071,"byte_end":13224135,"line_start":76,"line_end":76,"column_start":1,"column_end":65}},{"value":"/ three, where appropriate.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13224136,"byte_end":13224165,"line_start":77,"line_end":77,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13224166,"byte_end":13224169,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ # Implementing Stream","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13224170,"byte_end":13224195,"line_start":79,"line_end":79,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13224196,"byte_end":13224199,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ Creating a stream of your own involves two steps: creating a `struct` to","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13224200,"byte_end":13224276,"line_start":81,"line_end":81,"column_start":1,"column_end":77}},{"value":"/ hold the stream's state, and then `impl`ementing [`Stream`] for that","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13224277,"byte_end":13224349,"line_start":82,"line_end":82,"column_start":1,"column_end":73}},{"value":"/ `struct`. This is why there are so many `struct`s in this module: there is","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13224350,"byte_end":13224428,"line_start":83,"line_end":83,"column_start":1,"column_end":79}},{"value":"/ one for each stream and iterator adapter.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13224429,"byte_end":13224474,"line_start":84,"line_end":84,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13224475,"byte_end":13224478,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ Let's make a stream named `Counter` which counts from `1` to `5`:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13224479,"byte_end":13224548,"line_start":86,"line_end":86,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13224549,"byte_end":13224552,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13224553,"byte_end":13224560,"line_start":88,"line_end":88,"column_start":1,"column_end":8}},{"value":"/ # use async_std::prelude::*;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13224561,"byte_end":13224593,"line_start":89,"line_end":89,"column_start":1,"column_end":33}},{"value":"/ # use async_std::task::{Context, Poll};","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13224594,"byte_end":13224637,"line_start":90,"line_end":90,"column_start":1,"column_end":44}},{"value":"/ # use std::pin::Pin;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13224638,"byte_end":13224662,"line_start":91,"line_end":91,"column_start":1,"column_end":25}},{"value":"/ // First, the struct:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13224663,"byte_end":13224688,"line_start":92,"line_end":92,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13224689,"byte_end":13224692,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ /// A stream which counts from one to five","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13224693,"byte_end":13224739,"line_start":94,"line_end":94,"column_start":1,"column_end":47}},{"value":"/ struct Counter {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13224740,"byte_end":13224760,"line_start":95,"line_end":95,"column_start":1,"column_end":21}},{"value":"/     count: usize,","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13224761,"byte_end":13224782,"line_start":96,"line_end":96,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13224783,"byte_end":13224788,"line_start":97,"line_end":97,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13224789,"byte_end":13224792,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ // we want our count to start at one, so let's add a new() method to help.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13224793,"byte_end":13224871,"line_start":99,"line_end":99,"column_start":1,"column_end":79}},{"value":"/ // This isn't strictly necessary, but is convenient. Note that we start","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13224872,"byte_end":13224947,"line_start":100,"line_end":100,"column_start":1,"column_end":76}},{"value":"/ // `count` at zero, we'll see why in `next()`'s implementation below.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13224948,"byte_end":13225021,"line_start":101,"line_end":101,"column_start":1,"column_end":74}},{"value":"/ impl Counter {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13225022,"byte_end":13225040,"line_start":102,"line_end":102,"column_start":1,"column_end":19}},{"value":"/     fn new() -> Counter {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13225041,"byte_end":13225070,"line_start":103,"line_end":103,"column_start":1,"column_end":30}},{"value":"/         Counter { count: 0 }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13225071,"byte_end":13225103,"line_start":104,"line_end":104,"column_start":1,"column_end":33}},{"value":"/     }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13225104,"byte_end":13225113,"line_start":105,"line_end":105,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13225114,"byte_end":13225119,"line_start":106,"line_end":106,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13225120,"byte_end":13225123,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ // Then, we implement `Stream` for our `Counter`:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13225124,"byte_end":13225177,"line_start":108,"line_end":108,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13225178,"byte_end":13225181,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ impl Stream for Counter {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13225182,"byte_end":13225211,"line_start":110,"line_end":110,"column_start":1,"column_end":30}},{"value":"/     // we will be counting with usize","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13225212,"byte_end":13225253,"line_start":111,"line_end":111,"column_start":1,"column_end":42}},{"value":"/     type Item = usize;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13225254,"byte_end":13225280,"line_start":112,"line_end":112,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13225281,"byte_end":13225284,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/     // poll_next() is the only required method","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13225285,"byte_end":13225335,"line_start":114,"line_end":114,"column_start":1,"column_end":51}},{"value":"/     fn poll_next(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Option<Self::Item>> {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13225336,"byte_end":13225434,"line_start":115,"line_end":115,"column_start":1,"column_end":99}},{"value":"/         // Increment our count. This is why we started at zero.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13225435,"byte_end":13225502,"line_start":116,"line_end":116,"column_start":1,"column_end":68}},{"value":"/         self.count += 1;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13225503,"byte_end":13225531,"line_start":117,"line_end":117,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13225532,"byte_end":13225535,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/         // Check to see if we've finished counting or not.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13225536,"byte_end":13225598,"line_start":119,"line_end":119,"column_start":1,"column_end":63}},{"value":"/         if self.count < 6 {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13225599,"byte_end":13225630,"line_start":120,"line_end":120,"column_start":1,"column_end":32}},{"value":"/             Poll::Ready(Some(self.count))","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13225631,"byte_end":13225676,"line_start":121,"line_end":121,"column_start":1,"column_end":46}},{"value":"/         } else {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13225677,"byte_end":13225697,"line_start":122,"line_end":122,"column_start":1,"column_end":21}},{"value":"/             Poll::Ready(None)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13225698,"byte_end":13225731,"line_start":123,"line_end":123,"column_start":1,"column_end":34}},{"value":"/         }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13225732,"byte_end":13225745,"line_start":124,"line_end":124,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13225746,"byte_end":13225755,"line_start":125,"line_end":125,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13225756,"byte_end":13225761,"line_start":126,"line_end":126,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13225762,"byte_end":13225765,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ // And now we can use it!","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13225766,"byte_end":13225795,"line_start":128,"line_end":128,"column_start":1,"column_end":30}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13225796,"byte_end":13225870,"line_start":129,"line_end":129,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13225871,"byte_end":13225876,"line_start":130,"line_end":130,"column_start":1,"column_end":6}},{"value":"/ let mut counter = Counter::new();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13225877,"byte_end":13225914,"line_start":131,"line_end":131,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13225915,"byte_end":13225918,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ let x = counter.next().await.unwrap();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13225919,"byte_end":13225961,"line_start":133,"line_end":133,"column_start":1,"column_end":43}},{"value":"/ println!(\"{}\", x);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13225962,"byte_end":13225984,"line_start":134,"line_end":134,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13225985,"byte_end":13225988,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ let x = counter.next().await.unwrap();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13225989,"byte_end":13226031,"line_start":136,"line_end":136,"column_start":1,"column_end":43}},{"value":"/ println!(\"{}\", x);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13226032,"byte_end":13226054,"line_start":137,"line_end":137,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13226055,"byte_end":13226058,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ let x = counter.next().await.unwrap();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13226059,"byte_end":13226101,"line_start":139,"line_end":139,"column_start":1,"column_end":43}},{"value":"/ println!(\"{}\", x);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13226102,"byte_end":13226124,"line_start":140,"line_end":140,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13226125,"byte_end":13226128,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ let x = counter.next().await.unwrap();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13226129,"byte_end":13226171,"line_start":142,"line_end":142,"column_start":1,"column_end":43}},{"value":"/ println!(\"{}\", x);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13226172,"byte_end":13226194,"line_start":143,"line_end":143,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13226195,"byte_end":13226198,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ let x = counter.next().await.unwrap();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13226199,"byte_end":13226241,"line_start":145,"line_end":145,"column_start":1,"column_end":43}},{"value":"/ println!(\"{}\", x);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13226242,"byte_end":13226264,"line_start":146,"line_end":146,"column_start":1,"column_end":23}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13226265,"byte_end":13226270,"line_start":147,"line_end":147,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13226271,"byte_end":13226288,"line_start":148,"line_end":148,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13226289,"byte_end":13226296,"line_start":149,"line_end":149,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13226297,"byte_end":13226300,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ This will print `1` through `5`, each on their own line.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13226301,"byte_end":13226361,"line_start":151,"line_end":151,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13226362,"byte_end":13226365,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ Calling `next().await` this way gets repetitive. Rust has a construct which","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13226366,"byte_end":13226445,"line_start":153,"line_end":153,"column_start":1,"column_end":80}},{"value":"/ can call `next()` on your stream, until it reaches `None`. Let's go over","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13226446,"byte_end":13226522,"line_start":154,"line_end":154,"column_start":1,"column_end":77}},{"value":"/ that next.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13226523,"byte_end":13226537,"line_start":155,"line_end":155,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13226538,"byte_end":13226541,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ # while let Loops and IntoStream","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13226542,"byte_end":13226578,"line_start":157,"line_end":157,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13226579,"byte_end":13226582,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ Rust's `while let` loop syntax is an idiomatic way to iterate over streams. Here's a basic","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13226583,"byte_end":13226677,"line_start":159,"line_end":159,"column_start":1,"column_end":95}},{"value":"/ example of `while let`:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13226678,"byte_end":13226705,"line_start":160,"line_end":160,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13226706,"byte_end":13226709,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13226710,"byte_end":13226717,"line_start":162,"line_end":162,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13226718,"byte_end":13226792,"line_start":163,"line_end":163,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13226793,"byte_end":13226798,"line_start":164,"line_end":164,"column_start":1,"column_end":6}},{"value":"/ # use async_std::prelude::*;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13226799,"byte_end":13226831,"line_start":165,"line_end":165,"column_start":1,"column_end":33}},{"value":"/ # use async_std::stream;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13226832,"byte_end":13226860,"line_start":166,"line_end":166,"column_start":1,"column_end":29}},{"value":"/ let mut values = stream::from_iter(1u8..6);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13226861,"byte_end":13226908,"line_start":167,"line_end":167,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13226909,"byte_end":13226912,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ while let Some(x) = values.next().await {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13226913,"byte_end":13226958,"line_start":169,"line_end":169,"column_start":1,"column_end":46}},{"value":"/     println!(\"{}\", x);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13226959,"byte_end":13226985,"line_start":170,"line_end":170,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13226986,"byte_end":13226991,"line_start":171,"line_end":171,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13226992,"byte_end":13226997,"line_start":172,"line_end":172,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13226998,"byte_end":13227015,"line_start":173,"line_end":173,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13227016,"byte_end":13227023,"line_start":174,"line_end":174,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13227024,"byte_end":13227027,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ This will print the numbers one through five, each on their own line. But","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13227028,"byte_end":13227105,"line_start":176,"line_end":176,"column_start":1,"column_end":78}},{"value":"/ you'll notice something here: we never called anything on our vector to","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13227106,"byte_end":13227181,"line_start":177,"line_end":177,"column_start":1,"column_end":76}},{"value":"/ produce a stream. What gives?","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13227182,"byte_end":13227215,"line_start":178,"line_end":178,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13227216,"byte_end":13227219,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ There's a trait in the standard library for converting something into an","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13227220,"byte_end":13227296,"line_start":180,"line_end":180,"column_start":1,"column_end":77}},{"value":"/ stream: [`IntoStream`]. This trait has one method, [`into_stream`],","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13227297,"byte_end":13227368,"line_start":181,"line_end":181,"column_start":1,"column_end":72}},{"value":"/ which converts the thing implementing [`IntoStream`] into a stream.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13227369,"byte_end":13227440,"line_start":182,"line_end":182,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13227441,"byte_end":13227444,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ Unlike `std::iter::IntoIterator`, `IntoStream` does not have compiler","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13227445,"byte_end":13227518,"line_start":184,"line_end":184,"column_start":1,"column_end":74}},{"value":"/ support yet. This means that automatic conversions like with `for` loops","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13227519,"byte_end":13227595,"line_start":185,"line_end":185,"column_start":1,"column_end":77}},{"value":"/ doesn't occur yet, and `into_stream` or `from_iter` as above will always","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13227596,"byte_end":13227672,"line_start":186,"line_end":186,"column_start":1,"column_end":77}},{"value":"/ have to be called manually.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13227673,"byte_end":13227704,"line_start":187,"line_end":187,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13227705,"byte_end":13227708,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ [`IntoStream`]: trait.IntoStream.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13227709,"byte_end":13227750,"line_start":189,"line_end":189,"column_start":1,"column_end":42}},{"value":"/ [`into_stream`]: trait.IntoStream.html#tymethod.into_stream","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13227751,"byte_end":13227814,"line_start":190,"line_end":190,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13227815,"byte_end":13227818,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ # Adapters","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13227819,"byte_end":13227833,"line_start":192,"line_end":192,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13227834,"byte_end":13227837,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ Functions which take an [`Stream`] and return another [`Stream`] are","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13227838,"byte_end":13227910,"line_start":194,"line_end":194,"column_start":1,"column_end":73}},{"value":"/ often called 'stream adapters', as they are a form of the 'adapter","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13227911,"byte_end":13227981,"line_start":195,"line_end":195,"column_start":1,"column_end":71}},{"value":"/ pattern'.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13227982,"byte_end":13227995,"line_start":196,"line_end":196,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13227996,"byte_end":13227999,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ Common stream adapters include [`map`], [`take`], and [`filter`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13228000,"byte_end":13228069,"line_start":198,"line_end":198,"column_start":1,"column_end":70}},{"value":"/ For more, see their documentation.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13228070,"byte_end":13228108,"line_start":199,"line_end":199,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13228109,"byte_end":13228112,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ [`map`]: trait.Stream.html#method.map","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13228113,"byte_end":13228154,"line_start":201,"line_end":201,"column_start":1,"column_end":42}},{"value":"/ [`take`]: trait.Stream.html#method.take","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13228155,"byte_end":13228198,"line_start":202,"line_end":202,"column_start":1,"column_end":44}},{"value":"/ [`filter`]: trait.Stream.html#method.filter","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13228199,"byte_end":13228246,"line_start":203,"line_end":203,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13228247,"byte_end":13228250,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ # Laziness","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13228251,"byte_end":13228265,"line_start":205,"line_end":205,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13228266,"byte_end":13228269,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/ Streams (and stream [adapters](#adapters)) are *lazy*. This means that","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13228270,"byte_end":13228344,"line_start":207,"line_end":207,"column_start":1,"column_end":75}},{"value":"/ just creating a stream doesn't _do_ a whole lot. Nothing really happens","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13228345,"byte_end":13228420,"line_start":208,"line_end":208,"column_start":1,"column_end":76}},{"value":"/ until you call [`next`]. This is sometimes a source of confusion when","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13228421,"byte_end":13228494,"line_start":209,"line_end":209,"column_start":1,"column_end":74}},{"value":"/ creating a stream solely for its side effects. For example, the [`map`]","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13228495,"byte_end":13228570,"line_start":210,"line_end":210,"column_start":1,"column_end":76}},{"value":"/ method calls a closure on each element it iterates over:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13228571,"byte_end":13228631,"line_start":211,"line_end":211,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13228632,"byte_end":13228635,"line_start":212,"line_end":212,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13228636,"byte_end":13228643,"line_start":213,"line_end":213,"column_start":1,"column_end":8}},{"value":"/ # #![allow(unused_must_use)]","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13228644,"byte_end":13228676,"line_start":214,"line_end":214,"column_start":1,"column_end":33}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13228677,"byte_end":13228751,"line_start":215,"line_end":215,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13228752,"byte_end":13228757,"line_start":216,"line_end":216,"column_start":1,"column_end":6}},{"value":"/ # use async_std::prelude::*;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13228758,"byte_end":13228790,"line_start":217,"line_end":217,"column_start":1,"column_end":33}},{"value":"/ # use async_std::stream;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13228791,"byte_end":13228819,"line_start":218,"line_end":218,"column_start":1,"column_end":29}},{"value":"/ let v = stream::repeat(1u8).take(5);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13228820,"byte_end":13228860,"line_start":219,"line_end":219,"column_start":1,"column_end":41}},{"value":"/ v.map(|x| println!(\"{}\", x));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13228861,"byte_end":13228894,"line_start":220,"line_end":220,"column_start":1,"column_end":34}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13228895,"byte_end":13228900,"line_start":221,"line_end":221,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13228901,"byte_end":13228918,"line_start":222,"line_end":222,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13228919,"byte_end":13228926,"line_start":223,"line_end":223,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13228927,"byte_end":13228930,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ This will not print any values, as we only created a stream, rather than","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13228931,"byte_end":13229007,"line_start":225,"line_end":225,"column_start":1,"column_end":77}},{"value":"/ using it. The compiler will warn us about this kind of behavior:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13229008,"byte_end":13229076,"line_start":226,"line_end":226,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13229077,"byte_end":13229080,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13229081,"byte_end":13229092,"line_start":228,"line_end":228,"column_start":1,"column_end":12}},{"value":"/ warning: unused result that must be used: streams are lazy and","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13229093,"byte_end":13229159,"line_start":229,"line_end":229,"column_start":1,"column_end":67}},{"value":"/ do nothing unless consumed","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13229160,"byte_end":13229190,"line_start":230,"line_end":230,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13229191,"byte_end":13229198,"line_start":231,"line_end":231,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13229199,"byte_end":13229202,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"/ The idiomatic way to write a [`map`] for its side effects is to use a","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13229203,"byte_end":13229276,"line_start":233,"line_end":233,"column_start":1,"column_end":74}},{"value":"/ `while let` loop instead:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13229277,"byte_end":13229306,"line_start":234,"line_end":234,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13229307,"byte_end":13229310,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13229311,"byte_end":13229318,"line_start":236,"line_end":236,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13229319,"byte_end":13229393,"line_start":237,"line_end":237,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13229394,"byte_end":13229399,"line_start":238,"line_end":238,"column_start":1,"column_end":6}},{"value":"/ # use async_std::prelude::*;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13229400,"byte_end":13229432,"line_start":239,"line_end":239,"column_start":1,"column_end":33}},{"value":"/ # use async_std::stream;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13229433,"byte_end":13229461,"line_start":240,"line_end":240,"column_start":1,"column_end":29}},{"value":"/ let mut v = stream::repeat(1u8).take(5);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13229462,"byte_end":13229506,"line_start":241,"line_end":241,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13229507,"byte_end":13229510,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/ while let Some(x) = &v.next().await {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13229511,"byte_end":13229552,"line_start":243,"line_end":243,"column_start":1,"column_end":42}},{"value":"/     println!(\"{}\", x);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13229553,"byte_end":13229579,"line_start":244,"line_end":244,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13229580,"byte_end":13229585,"line_start":245,"line_end":245,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13229586,"byte_end":13229591,"line_start":246,"line_end":246,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13229592,"byte_end":13229609,"line_start":247,"line_end":247,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13229610,"byte_end":13229617,"line_start":248,"line_end":248,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13229618,"byte_end":13229621,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/ [`map`]: trait.Stream.html#method.map","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13229622,"byte_end":13229663,"line_start":250,"line_end":250,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13229664,"byte_end":13229667,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ The two most common ways to evaluate a stream are to use a `while let` loop","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13229668,"byte_end":13229747,"line_start":252,"line_end":252,"column_start":1,"column_end":80}},{"value":"/ like this, or using the [`collect`] method to produce a new collection.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13229748,"byte_end":13229823,"line_start":253,"line_end":253,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13229824,"byte_end":13229827,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"/ [`collect`]: trait.Stream.html#method.collect","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13229828,"byte_end":13229877,"line_start":255,"line_end":255,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13229878,"byte_end":13229881,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/ # Infinity","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13229882,"byte_end":13229896,"line_start":257,"line_end":257,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13229897,"byte_end":13229900,"line_start":258,"line_end":258,"column_start":1,"column_end":4}},{"value":"/ Streams do not have to be finite. As an example, a repeat stream is","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13229901,"byte_end":13229972,"line_start":259,"line_end":259,"column_start":1,"column_end":72}},{"value":"/ an infinite stream:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13229973,"byte_end":13229996,"line_start":260,"line_end":260,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13229997,"byte_end":13230000,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13230001,"byte_end":13230008,"line_start":262,"line_end":262,"column_start":1,"column_end":8}},{"value":"/ # use async_std::stream;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13230009,"byte_end":13230037,"line_start":263,"line_end":263,"column_start":1,"column_end":29}},{"value":"/ let numbers = stream::repeat(1u8);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13230038,"byte_end":13230076,"line_start":264,"line_end":264,"column_start":1,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13230077,"byte_end":13230084,"line_start":265,"line_end":265,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13230085,"byte_end":13230088,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"/ It is common to use the [`take`] stream adapter to turn an infinite","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13230089,"byte_end":13230160,"line_start":267,"line_end":267,"column_start":1,"column_end":72}},{"value":"/ stream into a finite one:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13230161,"byte_end":13230190,"line_start":268,"line_end":268,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13230191,"byte_end":13230194,"line_start":269,"line_end":269,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13230195,"byte_end":13230202,"line_start":270,"line_end":270,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13230203,"byte_end":13230277,"line_start":271,"line_end":271,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13230278,"byte_end":13230283,"line_start":272,"line_end":272,"column_start":1,"column_end":6}},{"value":"/ # use async_std::prelude::*;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13230284,"byte_end":13230316,"line_start":273,"line_end":273,"column_start":1,"column_end":33}},{"value":"/ # use async_std::stream;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13230317,"byte_end":13230345,"line_start":274,"line_end":274,"column_start":1,"column_end":29}},{"value":"/ let numbers = stream::from_iter(0u8..);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13230346,"byte_end":13230389,"line_start":275,"line_end":275,"column_start":1,"column_end":44}},{"value":"/ let mut five_numbers = numbers.take(5);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13230390,"byte_end":13230433,"line_start":276,"line_end":276,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13230434,"byte_end":13230437,"line_start":277,"line_end":277,"column_start":1,"column_end":4}},{"value":"/ while let Some(number) = five_numbers.next().await {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13230438,"byte_end":13230494,"line_start":278,"line_end":278,"column_start":1,"column_end":57}},{"value":"/     println!(\"{}\", number);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13230495,"byte_end":13230526,"line_start":279,"line_end":279,"column_start":1,"column_end":32}},{"value":"/ }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13230527,"byte_end":13230532,"line_start":280,"line_end":280,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13230533,"byte_end":13230538,"line_start":281,"line_end":281,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13230539,"byte_end":13230556,"line_start":282,"line_end":282,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13230557,"byte_end":13230564,"line_start":283,"line_end":283,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13230565,"byte_end":13230568,"line_start":284,"line_end":284,"column_start":1,"column_end":4}},{"value":"/ This will print the numbers `0` through `4`, each on their own line.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13230569,"byte_end":13230641,"line_start":285,"line_end":285,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13230642,"byte_end":13230645,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/ Bear in mind that methods on infinite streams, even those for which a","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13230646,"byte_end":13230719,"line_start":287,"line_end":287,"column_start":1,"column_end":74}},{"value":"/ result can be determined mathematically in finite time, may not terminate.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13230720,"byte_end":13230798,"line_start":288,"line_end":288,"column_start":1,"column_end":79}},{"value":"/ Specifically, methods such as [`min`], which in the general case require","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13230799,"byte_end":13230875,"line_start":289,"line_end":289,"column_start":1,"column_end":77}},{"value":"/ traversing every element in the stream, are likely not to return","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13230876,"byte_end":13230944,"line_start":290,"line_end":290,"column_start":1,"column_end":69}},{"value":"/ successfully for any infinite streams.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13230945,"byte_end":13230987,"line_start":291,"line_end":291,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13230988,"byte_end":13230991,"line_start":292,"line_end":292,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13230992,"byte_end":13231005,"line_start":293,"line_end":293,"column_start":1,"column_end":14}},{"value":"/ let ones = async_std::stream::repeat(1);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13231006,"byte_end":13231050,"line_start":294,"line_end":294,"column_start":1,"column_end":45}},{"value":"/ let least = ones.min().await.unwrap(); // Oh no! An infinite loop!","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13231051,"byte_end":13231121,"line_start":295,"line_end":295,"column_start":1,"column_end":71}},{"value":"/ // `ones.min()` causes an infinite loop, so we won't reach this point!","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13231122,"byte_end":13231196,"line_start":296,"line_end":296,"column_start":1,"column_end":75}},{"value":"/ println!(\"The smallest number one is {}.\", least);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13231197,"byte_end":13231251,"line_start":297,"line_end":297,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13231252,"byte_end":13231259,"line_start":298,"line_end":298,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13231260,"byte_end":13231263,"line_start":299,"line_end":299,"column_start":1,"column_end":4}},{"value":"/ [`std::iter`]: https://doc.rust-lang.org/std/iter/index.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13231264,"byte_end":13231328,"line_start":300,"line_end":300,"column_start":1,"column_end":65}},{"value":"/ [`take`]: trait.Stream.html#method.take","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13231329,"byte_end":13231372,"line_start":301,"line_end":301,"column_start":1,"column_end":44}},{"value":"/ [`min`]: trait.Stream.html#method.min","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/mod.rs","byte_start":13231373,"byte_end":13231414,"line_start":302,"line_end":302,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":172},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/all.rs","byte_start":13291241,"byte_end":13291250,"line_start":10,"line_end":10,"column_start":12,"column_end":21},"name":"AllFuture","qualname":"::stream::stream::all::AllFuture","value":"AllFuture {  }","parent":null,"children":[{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/all.rs","byte_start":13291190,"byte_end":13291229,"line_start":9,"line_end":9,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":215},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/any.rs","byte_start":13292596,"byte_end":13292605,"line_start":10,"line_end":10,"column_start":12,"column_end":21},"name":"AnyFuture","qualname":"::stream::stream::any::AnyFuture","value":"AnyFuture {  }","parent":null,"children":[{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/any.rs","byte_start":13292545,"byte_end":13292584,"line_start":9,"line_end":9,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":11918},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/chain.rs","byte_start":13294252,"byte_end":13294257,"line_start":19,"line_end":19,"column_start":16,"column_end":21},"name":"Chain","qualname":"::stream::stream::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":11921},{"krate":0,"index":11922}],"decl_id":null,"docs":" A stream that chains two streams one after another.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11882},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/cloned.rs","byte_start":13295584,"byte_end":13295590,"line_start":9,"line_end":9,"column_start":16,"column_end":22},"name":"Cloned","qualname":"::stream::stream::cloned::Cloned","value":"Cloned {  }","parent":null,"children":[{"krate":0,"index":11884}],"decl_id":null,"docs":" A stream that clones the elements of an underlying stream.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11829},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/cmp.rs","byte_start":13296514,"byte_end":13296523,"line_start":17,"line_end":17,"column_start":16,"column_end":25},"name":"CmpFuture","qualname":"::stream::stream::cmp::CmpFuture","value":"CmpFuture {  }","parent":null,"children":[{"krate":0,"index":11832},{"krate":0,"index":11833},{"krate":0,"index":11834},{"krate":0,"index":11835}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":14046700,"byte_end":14046709,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11793},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/copied.rs","byte_start":13299205,"byte_end":13299211,"line_start":9,"line_end":9,"column_start":16,"column_end":22},"name":"Copied","qualname":"::stream::stream::copied::Copied","value":"Copied {  }","parent":null,"children":[{"krate":0,"index":11795}],"decl_id":null,"docs":" A stream that copies the elements of an underlying stream.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11753},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/cycle.rs","byte_start":13299970,"byte_end":13299975,"line_start":12,"line_end":12,"column_start":16,"column_end":21},"name":"Cycle","qualname":"::stream::stream::cycle::Cycle","value":"Cycle {  }","parent":null,"children":[{"krate":0,"index":11755},{"krate":0,"index":11756}],"decl_id":null,"docs":" A stream that will repeatedly yield the same list of elements.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11713},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/enumerate.rs","byte_start":13300853,"byte_end":13300862,"line_start":10,"line_end":10,"column_start":16,"column_end":25},"name":"Enumerate","qualname":"::stream::stream::enumerate::Enumerate","value":"Enumerate {  }","parent":null,"children":[{"krate":0,"index":11715},{"krate":0,"index":11716}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11668},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/eq.rs","byte_start":13301939,"byte_end":13301947,"line_start":16,"line_end":16,"column_start":16,"column_end":24},"name":"EqFuture","qualname":"::stream::stream::eq::EqFuture","value":"EqFuture {  }","parent":null,"children":[{"krate":0,"index":11671},{"krate":0,"index":11672}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":14046700,"byte_end":14046709,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11619},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/filter.rs","byte_start":13303486,"byte_end":13303492,"line_start":17,"line_end":17,"column_start":16,"column_end":22},"name":"Filter","qualname":"::stream::stream::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":11622},{"krate":0,"index":11623}],"decl_id":null,"docs":" A stream to filter elements of another stream with a predicate.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11570},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/filter_map.rs","byte_start":13304465,"byte_end":13304474,"line_start":10,"line_end":10,"column_start":16,"column_end":25},"name":"FilterMap","qualname":"::stream::stream::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":11573},{"krate":0,"index":11574}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":516},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/find.rs","byte_start":13305453,"byte_end":13305463,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"FindFuture","qualname":"::stream::stream::find::FindFuture","value":"FindFuture {  }","parent":null,"children":[{"krate":0,"index":520},{"krate":0,"index":521}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/find.rs","byte_start":13305402,"byte_end":13305441,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":553},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/find_map.rs","byte_start":13306449,"byte_end":13306462,"line_start":9,"line_end":9,"column_start":12,"column_end":25},"name":"FindMapFuture","qualname":"::stream::stream::find_map::FindMapFuture","value":"FindMapFuture {  }","parent":null,"children":[{"krate":0,"index":557},{"krate":0,"index":558}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/find_map.rs","byte_start":13306398,"byte_end":13306437,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":11508},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/fold.rs","byte_start":13307539,"byte_end":13307549,"line_start":11,"line_end":11,"column_start":16,"column_end":26},"name":"FoldFuture","qualname":"::stream::stream::fold::FoldFuture","value":"FoldFuture {  }","parent":null,"children":[{"krate":0,"index":11512},{"krate":0,"index":11513},{"krate":0,"index":11514}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11463},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/for_each.rs","byte_start":13308739,"byte_end":13308752,"line_start":12,"line_end":12,"column_start":16,"column_end":29},"name":"ForEachFuture","qualname":"::stream::stream::for_each::ForEachFuture","value":"ForEachFuture {  }","parent":null,"children":[{"krate":0,"index":11466},{"krate":0,"index":11467}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":14046700,"byte_end":14046709,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11420},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/fuse.rs","byte_start":13309932,"byte_end":13309936,"line_start":17,"line_end":17,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::stream::stream::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":11422},{"krate":0,"index":11423}],"decl_id":null,"docs":" A stream that yields `None` forever after the underlying stream yields `None` once.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11379},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/ge.rs","byte_start":13311092,"byte_end":13311100,"line_start":17,"line_end":17,"column_start":16,"column_end":24},"name":"GeFuture","qualname":"::stream::stream::ge::GeFuture","value":"GeFuture {  }","parent":null,"children":[{"krate":0,"index":11382}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":14046700,"byte_end":14046709,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11338},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/gt.rs","byte_start":13312325,"byte_end":13312333,"line_start":17,"line_end":17,"column_start":16,"column_end":24},"name":"GtFuture","qualname":"::stream::stream::gt::GtFuture","value":"GtFuture {  }","parent":null,"children":[{"krate":0,"index":11341}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":14046700,"byte_end":14046709,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11289},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/inspect.rs","byte_start":13313562,"byte_end":13313569,"line_start":17,"line_end":17,"column_start":16,"column_end":23},"name":"Inspect","qualname":"::stream::stream::inspect::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":11292},{"krate":0,"index":11293}],"decl_id":null,"docs":" A stream that does something with each element of another stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11244},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/last.rs","byte_start":13314431,"byte_end":13314441,"line_start":12,"line_end":12,"column_start":16,"column_end":26},"name":"LastFuture","qualname":"::stream::stream::last::LastFuture","value":"LastFuture {  }","parent":null,"children":[{"krate":0,"index":11247},{"krate":0,"index":11248}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":14046700,"byte_end":14046709,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11203},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/le.rs","byte_start":13315654,"byte_end":13315662,"line_start":17,"line_end":17,"column_start":16,"column_end":24},"name":"LeFuture","qualname":"::stream::stream::le::LeFuture","value":"LeFuture {  }","parent":null,"children":[{"krate":0,"index":11206}],"decl_id":null,"docs":" Determines if the elements of this `Stream` are lexicographically\n less or equal to those of another.\n","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":14046700,"byte_end":14046709,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11162},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/lt.rs","byte_start":13316897,"byte_end":13316905,"line_start":17,"line_end":17,"column_start":16,"column_end":24},"name":"LtFuture","qualname":"::stream::stream::lt::LtFuture","value":"LtFuture {  }","parent":null,"children":[{"krate":0,"index":11165}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":14046700,"byte_end":14046709,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11113},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/map.rs","byte_start":13317903,"byte_end":13317906,"line_start":11,"line_end":11,"column_start":16,"column_end":19},"name":"Map","qualname":"::stream::stream::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":11116},{"krate":0,"index":11117}],"decl_id":null,"docs":" A stream that maps value of another stream with a function.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11068},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/max.rs","byte_start":13318730,"byte_end":13318739,"line_start":13,"line_end":13,"column_start":16,"column_end":25},"name":"MaxFuture","qualname":"::stream::stream::max::MaxFuture","value":"MaxFuture {  }","parent":null,"children":[{"krate":0,"index":11071},{"krate":0,"index":11072}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":14046700,"byte_end":14046709,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11011},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/max_by.rs","byte_start":13320007,"byte_end":13320018,"line_start":13,"line_end":13,"column_start":16,"column_end":27},"name":"MaxByFuture","qualname":"::stream::stream::max_by::MaxByFuture","value":"MaxByFuture {  }","parent":null,"children":[{"krate":0,"index":11015},{"krate":0,"index":11016},{"krate":0,"index":11017}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":14046700,"byte_end":14046709,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10954},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/max_by_key.rs","byte_start":13321431,"byte_end":13321445,"line_start":13,"line_end":13,"column_start":16,"column_end":30},"name":"MaxByKeyFuture","qualname":"::stream::stream::max_by_key::MaxByKeyFuture","value":"MaxByKeyFuture {  }","parent":null,"children":[{"krate":0,"index":10958},{"krate":0,"index":10959},{"krate":0,"index":10960}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":14046700,"byte_end":14046709,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10909},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/min.rs","byte_start":13323085,"byte_end":13323094,"line_start":13,"line_end":13,"column_start":16,"column_end":25},"name":"MinFuture","qualname":"::stream::stream::min::MinFuture","value":"MinFuture {  }","parent":null,"children":[{"krate":0,"index":10912},{"krate":0,"index":10913}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":14046700,"byte_end":14046709,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10852},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/min_by.rs","byte_start":13324359,"byte_end":13324370,"line_start":13,"line_end":13,"column_start":16,"column_end":27},"name":"MinByFuture","qualname":"::stream::stream::min_by::MinByFuture","value":"MinByFuture {  }","parent":null,"children":[{"krate":0,"index":10856},{"krate":0,"index":10857},{"krate":0,"index":10858}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":14046700,"byte_end":14046709,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10795},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/min_by_key.rs","byte_start":13325809,"byte_end":13325823,"line_start":13,"line_end":13,"column_start":16,"column_end":30},"name":"MinByKeyFuture","qualname":"::stream::stream::min_by_key::MinByKeyFuture","value":"MinByKeyFuture {  }","parent":null,"children":[{"krate":0,"index":10799},{"krate":0,"index":10800},{"krate":0,"index":10801}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":14046700,"byte_end":14046709,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10750},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/ne.rs","byte_start":13327583,"byte_end":13327591,"line_start":16,"line_end":16,"column_start":16,"column_end":24},"name":"NeFuture","qualname":"::stream::stream::ne::NeFuture","value":"NeFuture {  }","parent":null,"children":[{"krate":0,"index":10753},{"krate":0,"index":10754}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":14046700,"byte_end":14046709,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":1160},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/next.rs","byte_start":13328891,"byte_end":13328901,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"NextFuture","qualname":"::stream::stream::next::NextFuture","value":"NextFuture {  }","parent":null,"children":[{"krate":0,"index":1163}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/next.rs","byte_start":13328840,"byte_end":13328879,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1185},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/nth.rs","byte_start":13329381,"byte_end":13329390,"line_start":9,"line_end":9,"column_start":12,"column_end":21},"name":"NthFuture","qualname":"::stream::stream::nth::NthFuture","value":"NthFuture {  }","parent":null,"children":[{"krate":0,"index":1188},{"krate":0,"index":1189}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/nth.rs","byte_start":13329330,"byte_end":13329369,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":10697},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/partial_cmp.rs","byte_start":13330644,"byte_end":13330660,"line_start":17,"line_end":17,"column_start":16,"column_end":32},"name":"PartialCmpFuture","qualname":"::stream::stream::partial_cmp::PartialCmpFuture","value":"PartialCmpFuture {  }","parent":null,"children":[{"krate":0,"index":10700},{"krate":0,"index":10701},{"krate":0,"index":10702},{"krate":0,"index":10703}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":14046700,"byte_end":14046709,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":1256},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/position.rs","byte_start":13333389,"byte_end":13333403,"line_start":9,"line_end":9,"column_start":12,"column_end":26},"name":"PositionFuture","qualname":"::stream::stream::position::PositionFuture","value":"PositionFuture {  }","parent":null,"children":[{"krate":0,"index":1260},{"krate":0,"index":1261},{"krate":0,"index":1262}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/position.rs","byte_start":13333338,"byte_end":13333377,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":10639},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/scan.rs","byte_start":13334875,"byte_end":13334879,"line_start":17,"line_end":17,"column_start":16,"column_end":20},"name":"Scan","qualname":"::stream::stream::scan::Scan","value":"Scan {  }","parent":null,"children":[{"krate":0,"index":10643},{"krate":0,"index":10644}],"decl_id":null,"docs":" A stream to maintain state while polling another stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10599},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/skip.rs","byte_start":13336095,"byte_end":13336099,"line_start":17,"line_end":17,"column_start":16,"column_end":20},"name":"Skip","qualname":"::stream::stream::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":10601},{"krate":0,"index":10602}],"decl_id":null,"docs":" A stream to skip first n elements of another stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10550},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/skip_while.rs","byte_start":13337314,"byte_end":13337323,"line_start":17,"line_end":17,"column_start":16,"column_end":25},"name":"SkipWhile","qualname":"::stream::stream::skip_while::SkipWhile","value":"SkipWhile {  }","parent":null,"children":[{"krate":0,"index":10553},{"krate":0,"index":10554}],"decl_id":null,"docs":" A stream to skip elements of another stream based on a predicate.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10506},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/step_by.rs","byte_start":13338857,"byte_end":13338863,"line_start":17,"line_end":17,"column_start":16,"column_end":22},"name":"StepBy","qualname":"::stream::stream::step_by::StepBy","value":"StepBy {  }","parent":null,"children":[{"krate":0,"index":10508},{"krate":0,"index":10509},{"krate":0,"index":10510}],"decl_id":null,"docs":" A stream that steps a given amount of elements of another stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10463},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/take.rs","byte_start":13340266,"byte_end":13340270,"line_start":17,"line_end":17,"column_start":16,"column_end":20},"name":"Take","qualname":"::stream::stream::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":10465},{"krate":0,"index":10466}],"decl_id":null,"docs":" A stream that yields the first `n` items of another stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10414},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/take_while.rs","byte_start":13341505,"byte_end":13341514,"line_start":17,"line_end":17,"column_start":16,"column_end":25},"name":"TakeWhile","qualname":"::stream::stream::take_while::TakeWhile","value":"TakeWhile {  }","parent":null,"children":[{"krate":0,"index":10417},{"krate":0,"index":10418}],"decl_id":null,"docs":" A stream that yields elements based on a predicate.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1450},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/try_fold.rs","byte_start":13342523,"byte_end":13342536,"line_start":9,"line_end":9,"column_start":12,"column_end":25},"name":"TryFoldFuture","qualname":"::stream::stream::try_fold::TryFoldFuture","value":"TryFoldFuture {  }","parent":null,"children":[{"krate":0,"index":1455},{"krate":0,"index":1456},{"krate":0,"index":1457}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/try_fold.rs","byte_start":13342472,"byte_end":13342511,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1494},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/try_for_each.rs","byte_start":13343863,"byte_end":13343879,"line_start":9,"line_end":9,"column_start":12,"column_end":28},"name":"TryForEachFuture","qualname":"::stream::stream::try_for_each::TryForEachFuture","value":"TryForEachFuture {  }","parent":null,"children":[{"krate":0,"index":1498},{"krate":0,"index":1499}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/try_for_each.rs","byte_start":13343812,"byte_end":13343851,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":10365},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/zip.rs","byte_start":13345237,"byte_end":13345240,"line_start":17,"line_end":17,"column_start":16,"column_end":19},"name":"Zip","qualname":"::stream::stream::zip::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":10368},{"krate":0,"index":10369},{"krate":0,"index":10370}],"decl_id":null,"docs":" A stream that takes items from two other streams simultaneously.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10328},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/count.rs","byte_start":13560177,"byte_end":13560188,"line_start":14,"line_end":14,"column_start":16,"column_end":27},"name":"CountFuture","qualname":"::stream::stream::count::CountFuture","value":"CountFuture {  }","parent":null,"children":[{"krate":0,"index":10330},{"krate":0,"index":10331}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":14046700,"byte_end":14046709,"line_start":650,"line_end":650,"column_start":11,"column_end":20}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":14046700,"byte_end":14046709,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10279},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/merge.rs","byte_start":13561490,"byte_end":13561495,"line_start":22,"line_end":22,"column_start":16,"column_end":21},"name":"Merge","qualname":"::stream::stream::merge::Merge","value":"Merge {  }","parent":null,"children":[{"krate":0,"index":10282},{"krate":0,"index":10283}],"decl_id":null,"docs":" A stream that merges two other streams into a single stream.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":14046700,"byte_end":14046709,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10242},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/flatten.rs","byte_start":13563231,"byte_end":13563238,"line_start":18,"line_end":18,"column_start":16,"column_end":23},"name":"Flatten","qualname":"::stream::stream::flatten::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":10244},{"krate":0,"index":10245}],"decl_id":null,"docs":" A stream that flattens one level of nesting in an stream of things that can be turned into\n streams.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10189},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/flat_map.rs","byte_start":13565376,"byte_end":13565383,"line_start":19,"line_end":19,"column_start":16,"column_end":23},"name":"FlatMap","qualname":"::stream::stream::flat_map::FlatMap","value":"FlatMap {  }","parent":null,"children":[{"krate":0,"index":10193},{"krate":0,"index":10194}],"decl_id":null,"docs":" A stream that maps each element to a stream, and yields the elements of the produced\n streams.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10127},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/partition.rs","byte_start":13566883,"byte_end":13566898,"line_start":13,"line_end":13,"column_start":16,"column_end":31},"name":"PartitionFuture","qualname":"::stream::stream::partition::PartitionFuture","value":"PartitionFuture {  }","parent":null,"children":[{"krate":0,"index":10131},{"krate":0,"index":10132},{"krate":0,"index":10133}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":14046700,"byte_end":14046709,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10083},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/timeout.rs","byte_start":13568358,"byte_end":13568365,"line_start":16,"line_end":16,"column_start":16,"column_end":23},"name":"Timeout","qualname":"::stream::stream::timeout::Timeout","value":"Timeout {  }","parent":null,"children":[{"krate":0,"index":10085},{"krate":0,"index":10086},{"krate":0,"index":10087}],"decl_id":null,"docs":" A stream with timeout time set\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3173},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/timeout.rs","byte_start":13569573,"byte_end":13569585,"line_start":58,"line_end":58,"column_start":12,"column_end":24},"name":"TimeoutError","qualname":"::stream::stream::timeout::TimeoutError","value":"TimeoutError {  }","parent":null,"children":[{"krate":0,"index":3174}],"decl_id":null,"docs":" An error returned when a stream times out.\n","sig":null,"attributes":[{"value":"/ An error returned when a stream times out.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/timeout.rs","byte_start":13569368,"byte_end":13569414,"line_start":54,"line_end":54,"column_start":1,"column_end":47}},{"value":"cfg(any(feature = \"unstable\", feature = \"docs\"))","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/timeout.rs","byte_start":13569465,"byte_end":13569516,"line_start":56,"line_end":56,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":10038},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/throttle.rs","byte_start":13570383,"byte_end":13570391,"line_start":21,"line_end":21,"column_start":16,"column_end":24},"name":"Throttle","qualname":"::stream::stream::throttle::Throttle","value":"Throttle {  }","parent":null,"children":[{"krate":0,"index":10040},{"krate":0,"index":10041},{"krate":0,"index":10042},{"krate":0,"index":10043}],"decl_id":null,"docs":" A stream that only yields one element once every `duration`.","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":14046700,"byte_end":14046709,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9997},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/delay.rs","byte_start":13571895,"byte_end":13571900,"line_start":14,"line_end":14,"column_start":16,"column_end":21},"name":"Delay","qualname":"::stream::stream::delay::Delay","value":"Delay {  }","parent":null,"children":[{"krate":0,"index":9999},{"krate":0,"index":10000},{"krate":0,"index":10001}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":14046700,"byte_end":14046709,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9934},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/unzip.rs","byte_start":13572883,"byte_end":13572894,"line_start":13,"line_end":13,"column_start":16,"column_end":27},"name":"UnzipFuture","qualname":"::stream::stream::unzip::UnzipFuture","value":"UnzipFuture {  }","parent":null,"children":[{"krate":0,"index":9938},{"krate":0,"index":9939}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":14046700,"byte_end":14046709,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":1685},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13235264,"byte_end":13235273,"line_start":153,"line_end":153,"column_start":11,"column_end":20},"name":"StreamExt","qualname":"::stream::stream::StreamExt","value":"StreamExt: Stream","parent":null,"children":[{"krate":0,"index":1686},{"krate":0,"index":1687},{"krate":0,"index":1688},{"krate":0,"index":1690},{"krate":0,"index":1691},{"krate":0,"index":1692},{"krate":0,"index":1694},{"krate":0,"index":1697},{"krate":0,"index":1700},{"krate":0,"index":1701},{"krate":0,"index":1702},{"krate":0,"index":1703},{"krate":0,"index":1706},{"krate":0,"index":1708},{"krate":0,"index":1709},{"krate":0,"index":1710},{"krate":0,"index":1712},{"krate":0,"index":1715},{"krate":0,"index":1716},{"krate":0,"index":1719},{"krate":0,"index":1722},{"krate":0,"index":1725},{"krate":0,"index":1727},{"krate":0,"index":1728},{"krate":0,"index":1729},{"krate":0,"index":1731},{"krate":0,"index":1732},{"krate":0,"index":1734},{"krate":0,"index":1736},{"krate":0,"index":1739},{"krate":0,"index":1742},{"krate":0,"index":1745},{"krate":0,"index":1747},{"krate":0,"index":1749},{"krate":0,"index":1750},{"krate":0,"index":1754},{"krate":0,"index":1756},{"krate":0,"index":1757},{"krate":0,"index":1758},{"krate":0,"index":1763},{"krate":0,"index":1766},{"krate":0,"index":1768},{"krate":0,"index":1773},{"krate":0,"index":1776},{"krate":0,"index":1778},{"krate":0,"index":1780},{"krate":0,"index":1782},{"krate":0,"index":1784},{"krate":0,"index":1785},{"krate":0,"index":1787},{"krate":0,"index":1789},{"krate":0,"index":1791},{"krate":0,"index":1793},{"krate":0,"index":1795},{"krate":0,"index":1797},{"krate":0,"index":1800}],"decl_id":null,"docs":"    Extension methods for [`Stream`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1686},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13236006,"byte_end":13236010,"line_start":179,"line_end":179,"column_start":8,"column_end":12},"name":"next","qualname":"::stream::stream::StreamExt::next","value":"pub fn next(&mut Self) -> NextFuture<, Self> where Self: Unpin","parent":{"krate":0,"index":1685},"children":[],"decl_id":null,"docs":"        Advances the stream and returns the next value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1687},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13236554,"byte_end":13236558,"line_start":206,"line_end":206,"column_start":8,"column_end":12},"name":"take","qualname":"::stream::stream::StreamExt::take","value":"pub fn take(Self, usize) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":1685},"children":[],"decl_id":null,"docs":"        Creates a stream that yields its first `n` elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1688},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13237195,"byte_end":13237205,"line_start":234,"line_end":234,"column_start":8,"column_end":18},"name":"take_while","qualname":"::stream::stream::StreamExt::take_while","value":"pub fn take_while<P>(Self, P) -> TakeWhile<Self, P> where Self: Sized,\nP: FnMut(&Self::Item) -> bool","parent":{"krate":0,"index":1685},"children":[],"decl_id":null,"docs":"        Creates a stream that yields elements based on a predicate.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1690},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13238388,"byte_end":13238396,"line_start":276,"line_end":276,"column_start":8,"column_end":16},"name":"throttle","qualname":"::stream::stream::StreamExt::throttle","value":"pub fn throttle(Self, Duration) -> Throttle<Self> where Self: Sized","parent":{"krate":0,"index":1685},"children":[],"decl_id":null,"docs":"        Limit the amount of items yielded per timeslice in a stream.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13238298,"byte_end":13238326,"line_start":274,"line_end":274,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1691},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13239202,"byte_end":13239209,"line_start":312,"line_end":312,"column_start":8,"column_end":15},"name":"step_by","qualname":"::stream::stream::StreamExt::step_by","value":"pub fn step_by(Self, usize) -> StepBy<Self> where Self: Sized","parent":{"krate":0,"index":1685},"children":[],"decl_id":null,"docs":"        Creates a stream that yields each `step`th element.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1692},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13240021,"byte_end":13240026,"line_start":346,"line_end":346,"column_start":8,"column_end":13},"name":"chain","qualname":"::stream::stream::StreamExt::chain","value":"pub fn chain<U>(Self, U) -> Chain<Self, U> where Self: Sized, U: Stream<Item =\nSelf::Item> + Sized","parent":{"krate":0,"index":1685},"children":[],"decl_id":null,"docs":"        Takes two streams and creates a new stream over both in sequence.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1694},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13240806,"byte_end":13240812,"line_start":380,"line_end":380,"column_start":8,"column_end":14},"name":"cloned","qualname":"::stream::stream::StreamExt::cloned","value":"pub fn cloned<'a, T>(Self) -> Cloned<Self> where Self: Sized + Stream<Item =\n&'a T>, T: Clone + 'a","parent":{"krate":0,"index":1685},"children":[],"decl_id":null,"docs":"        Creates an stream which copies all of its elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1697},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13241574,"byte_end":13241580,"line_start":413,"line_end":413,"column_start":8,"column_end":14},"name":"copied","qualname":"::stream::stream::StreamExt::copied","value":"pub fn copied<'a, T>(Self) -> Copied<Self> where Self: Sized + Stream<Item =\n&'a T>, T: Copy + 'a","parent":{"krate":0,"index":1685},"children":[],"decl_id":null,"docs":"        Creates an stream which copies all of its elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1700},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13242320,"byte_end":13242325,"line_start":445,"line_end":445,"column_start":8,"column_end":13},"name":"cycle","qualname":"::stream::stream::StreamExt::cycle","value":"pub fn cycle(Self) -> Cycle<Self> where Self: Clone + Sized","parent":{"krate":0,"index":1685},"children":[],"decl_id":null,"docs":"        Creates a stream that yields the provided values infinitely and in order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1701},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13243131,"byte_end":13243140,"line_start":478,"line_end":478,"column_start":8,"column_end":17},"name":"enumerate","qualname":"::stream::stream::StreamExt::enumerate","value":"pub fn enumerate(Self) -> Enumerate<Self> where Self: Sized","parent":{"krate":0,"index":1685},"children":[],"decl_id":null,"docs":"        Creates a stream that gives the current element's count as well as the next value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1702},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13244339,"byte_end":13244344,"line_start":519,"line_end":519,"column_start":8,"column_end":13},"name":"delay","qualname":"::stream::stream::StreamExt::delay","value":"pub fn delay(Self, std::time::Duration) -> Delay<Self> where Self: Sized","parent":{"krate":0,"index":1685},"children":[],"decl_id":null,"docs":"        Creates a stream that is delayed before it starts yielding items.","sig":null,"attributes":[{"value":"cfg(any(feature = \"unstable\", feature = \"docs\"))","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13244226,"byte_end":13244277,"line_start":517,"line_end":517,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1703},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13245069,"byte_end":13245072,"line_start":549,"line_end":549,"column_start":8,"column_end":11},"name":"map","qualname":"::stream::stream::StreamExt::map","value":"pub fn map<B, F>(Self, F) -> Map<Self, F> where Self: Sized,\nF: FnMut(Self::Item) -> B","parent":{"krate":0,"index":1685},"children":[],"decl_id":null,"docs":"        Takes a closure and creates a stream that calls that closure on every element of this stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1706},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13245896,"byte_end":13245903,"line_start":585,"line_end":585,"column_start":8,"column_end":15},"name":"inspect","qualname":"::stream::stream::StreamExt::inspect","value":"pub fn inspect<F>(Self, F) -> Inspect<Self, F> where Self: Sized,\nF: FnMut(&Self::Item) -> ()","parent":{"krate":0,"index":1685},"children":[],"decl_id":null,"docs":"        A combinator that does something with each element in the stream, passing the value\n        on.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1708},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13246812,"byte_end":13246816,"line_start":629,"line_end":629,"column_start":8,"column_end":12},"name":"last","qualname":"::stream::stream::StreamExt::last","value":"pub fn last(Self) -> LastFuture<Self, Self::Item> where Self: Sized","parent":{"krate":0,"index":1685},"children":[],"decl_id":null,"docs":"        Returns the last element of the stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1709},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13247624,"byte_end":13247628,"line_start":661,"line_end":661,"column_start":8,"column_end":12},"name":"fuse","qualname":"::stream::stream::StreamExt::fuse","value":"pub fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":1685},"children":[],"decl_id":null,"docs":"        Creates a stream which ends after the first `None`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1710},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13248298,"byte_end":13248304,"line_start":691,"line_end":691,"column_start":8,"column_end":14},"name":"filter","qualname":"::stream::stream::StreamExt::filter","value":"pub fn filter<P>(Self, P) -> Filter<Self, P> where Self: Sized,\nP: FnMut(&Self::Item) -> bool","parent":{"krate":0,"index":1685},"children":[],"decl_id":null,"docs":"        Creates a stream that uses a predicate to determine if an element should be yielded.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1712},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13249396,"byte_end":13249404,"line_start":731,"line_end":731,"column_start":8,"column_end":16},"name":"flat_map","qualname":"::stream::stream::StreamExt::flat_map","value":"pub fn flat_map<U, F>(Self, F) -> FlatMap<Self, U, F> where Self: Sized,\nU: IntoStream, F: FnMut(Self::Item) -> U","parent":{"krate":0,"index":1685},"children":[],"decl_id":null,"docs":"        Creates an stream that works like map, but flattens nested structure.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13249306,"byte_end":13249334,"line_start":729,"line_end":729,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1715},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13250217,"byte_end":13250224,"line_start":765,"line_end":765,"column_start":8,"column_end":15},"name":"flatten","qualname":"::stream::stream::StreamExt::flatten","value":"pub fn flatten(Self) -> Flatten<Self> where Self: Sized,\nSelf::Item: IntoStream","parent":{"krate":0,"index":1685},"children":[],"decl_id":null,"docs":"        Creates an stream that flattens nested structure.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13250127,"byte_end":13250155,"line_start":763,"line_end":763,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1716},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13251084,"byte_end":13251094,"line_start":806,"line_end":806,"column_start":8,"column_end":18},"name":"filter_map","qualname":"::stream::stream::StreamExt::filter_map","value":"pub fn filter_map<B, F>(Self, F) -> FilterMap<Self, F> where Self: Sized,\nF: FnMut(Self::Item) -> Option<B>","parent":{"krate":0,"index":1685},"children":[],"decl_id":null,"docs":"        Both filters and maps a stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1719},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13251979,"byte_end":13251989,"line_start":838,"line_end":838,"column_start":8,"column_end":18},"name":"min_by_key","qualname":"::stream::stream::StreamExt::min_by_key","value":"pub fn min_by_key<B, F>(Self, F) -> MinByKeyFuture<Self, Self::Item, F> where\nSelf: Sized, B: Ord, F: FnMut(&Self::Item) -> B","parent":{"krate":0,"index":1685},"children":[],"decl_id":null,"docs":"        Returns the element that gives the minimum value with respect to the\n        specified key function. If several elements are equally minimum,\n        the first element is returned. If the stream is empty, `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1722},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13252945,"byte_end":13252955,"line_start":874,"line_end":874,"column_start":8,"column_end":18},"name":"max_by_key","qualname":"::stream::stream::StreamExt::max_by_key","value":"pub fn max_by_key<B, F>(Self, F) -> MaxByKeyFuture<Self, Self::Item, F> where\nSelf: Sized, B: Ord, F: FnMut(&Self::Item) -> B","parent":{"krate":0,"index":1685},"children":[],"decl_id":null,"docs":"        Returns the element that gives the maximum value with respect to the\n        specified key function. If several elements are equally maximum,\n        the first element is returned. If the stream is empty, `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1725},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13253988,"byte_end":13253994,"line_start":913,"line_end":913,"column_start":8,"column_end":14},"name":"min_by","qualname":"::stream::stream::StreamExt::min_by","value":"pub fn min_by<F>(Self, F) -> MinByFuture<Self, F, Self::Item> where\nSelf: Sized, F: FnMut(&Self::Item, &Self::Item) -> Ordering","parent":{"krate":0,"index":1685},"children":[],"decl_id":null,"docs":"        Returns the element that gives the minimum value with respect to the\n        specified comparison function. If several elements are equally minimum,\n        the first element is returned. If the stream is empty, `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1727},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13254850,"byte_end":13254853,"line_start":947,"line_end":947,"column_start":8,"column_end":11},"name":"max","qualname":"::stream::stream::StreamExt::max","value":"pub fn max(Self) -> MaxFuture<Self, Self::Item> where Self: Sized,\nSelf::Item: Ord","parent":{"krate":0,"index":1685},"children":[],"decl_id":null,"docs":"        Returns the element that gives the maximum value. If several elements are equally maximum,\n        the first element is returned. If the stream is empty, `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1728},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13255647,"byte_end":13255650,"line_start":980,"line_end":980,"column_start":8,"column_end":11},"name":"min","qualname":"::stream::stream::StreamExt::min","value":"pub fn min(Self) -> MinFuture<Self, Self::Item> where Self: Sized,\nSelf::Item: Ord","parent":{"krate":0,"index":1685},"children":[],"decl_id":null,"docs":"        Returns the element that gives the minimum value. If several elements are equally minimum,\n        the first element is returned. If the stream is empty, `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1729},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13256614,"byte_end":13256620,"line_start":1017,"line_end":1017,"column_start":8,"column_end":14},"name":"max_by","qualname":"::stream::stream::StreamExt::max_by","value":"pub fn max_by<F>(Self, F) -> MaxByFuture<Self, F, Self::Item> where\nSelf: Sized, F: FnMut(&Self::Item, &Self::Item) -> Ordering","parent":{"krate":0,"index":1685},"children":[],"decl_id":null,"docs":"        Returns the element that gives the maximum value with respect to the\n        specified comparison function. If several elements are equally maximum,\n        the first element is returned. If the stream is empty, `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1731},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13258094,"byte_end":13258097,"line_start":1081,"line_end":1081,"column_start":8,"column_end":11},"name":"nth","qualname":"::stream::stream::StreamExt::nth","value":"pub fn nth(&mut Self, usize) -> NthFuture<, Self> where Self: Unpin + Sized","parent":{"krate":0,"index":1685},"children":[],"decl_id":null,"docs":"        Returns the nth element of the stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1732},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13259463,"byte_end":13259466,"line_start":1137,"line_end":1137,"column_start":8,"column_end":11},"name":"all","qualname":"::stream::stream::StreamExt::all","value":"pub fn all<F>(&mut Self, F) -> AllFuture<, Self, F, Self::Item> where\nSelf: Unpin + Sized, F: FnMut(Self::Item) -> bool","parent":{"krate":0,"index":1685},"children":[],"decl_id":null,"docs":"        Tests if every element of the stream matches a predicate.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13259446,"byte_end":13259455,"line_start":1136,"line_end":1136,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1734},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13260557,"byte_end":13260561,"line_start":1186,"line_end":1186,"column_start":8,"column_end":12},"name":"find","qualname":"::stream::stream::StreamExt::find","value":"pub fn find<P>(&mut Self, P) -> FindFuture<, Self, P> where Self: Unpin +\nSized, P: FnMut(&Self::Item) -> bool","parent":{"krate":0,"index":1685},"children":[],"decl_id":null,"docs":"        Searches for an element in a stream that satisfies a predicate.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1736},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13261238,"byte_end":13261246,"line_start":1214,"line_end":1214,"column_start":8,"column_end":16},"name":"find_map","qualname":"::stream::stream::StreamExt::find_map","value":"pub fn find_map<F, B>(&mut Self, F) -> FindMapFuture<, Self, F> where\nSelf: Unpin + Sized, F: FnMut(Self::Item) -> Option<B>","parent":{"krate":0,"index":1685},"children":[],"decl_id":null,"docs":"        Applies function to the elements of stream and returns the first non-none result.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1739},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13261959,"byte_end":13261963,"line_start":1247,"line_end":1247,"column_start":8,"column_end":12},"name":"fold","qualname":"::stream::stream::StreamExt::fold","value":"pub fn fold<B, F>(Self, B, F) -> FoldFuture<Self, F, B> where Self: Sized,\nF: FnMut(B, Self::Item) -> B","parent":{"krate":0,"index":1685},"children":[],"decl_id":null,"docs":"        A combinator that applies a function to every element in a stream\n        producing a single, final value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1742},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13262830,"byte_end":13262839,"line_start":1285,"line_end":1285,"column_start":8,"column_end":17},"name":"partition","qualname":"::stream::stream::StreamExt::partition","value":"pub fn partition<B, F>(Self, F) -> PartitionFuture<Self, F, B> where\nSelf: Sized, F: FnMut(&Self::Item) -> bool, B: Default + Extend<Self::Item>","parent":{"krate":0,"index":1685},"children":[],"decl_id":null,"docs":"        A combinator that applies a function to every element in a stream\n        creating two collections from it.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13262740,"byte_end":13262768,"line_start":1283,"line_end":1283,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1745},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13263649,"byte_end":13263657,"line_start":1321,"line_end":1321,"column_start":8,"column_end":16},"name":"for_each","qualname":"::stream::stream::StreamExt::for_each","value":"pub fn for_each<F>(Self, F) -> ForEachFuture<Self, F> where Self: Sized,\nF: FnMut(Self::Item) -> ()","parent":{"krate":0,"index":1685},"children":[],"decl_id":null,"docs":"        Call a closure on each element of the stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1747},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13265043,"byte_end":13265046,"line_start":1377,"line_end":1377,"column_start":8,"column_end":11},"name":"any","qualname":"::stream::stream::StreamExt::any","value":"pub fn any<F>(&mut Self, F) -> AnyFuture<, Self, F, Self::Item> where\nSelf: Unpin + Sized, F: FnMut(Self::Item) -> bool","parent":{"krate":0,"index":1685},"children":[],"decl_id":null,"docs":"        Tests if any element of the stream matches a predicate.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13265026,"byte_end":13265035,"line_start":1376,"line_end":1376,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1749},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13266458,"byte_end":13266464,"line_start":1432,"line_end":1432,"column_start":8,"column_end":14},"name":"by_ref","qualname":"::stream::stream::StreamExt::by_ref","value":"pub fn by_ref(&mut Self) -> &mut Self","parent":{"krate":0,"index":1685},"children":[],"decl_id":null,"docs":"        Borrows an stream, rather than consuming it.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13266368,"byte_end":13266396,"line_start":1430,"line_end":1430,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1750},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13267732,"byte_end":13267736,"line_start":1473,"line_end":1473,"column_start":8,"column_end":12},"name":"scan","qualname":"::stream::stream::StreamExt::scan","value":"pub fn scan<St, B, F>(Self, St, F) -> Scan<Self, St, F> where Self: Sized,\nF: FnMut(&mut St, Self::Item) -> Option<B>","parent":{"krate":0,"index":1685},"children":[],"decl_id":null,"docs":"        A stream adaptor similar to [`fold`] that holds internal state and produces a new\n        stream.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13267715,"byte_end":13267724,"line_start":1472,"line_end":1472,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1754},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13268744,"byte_end":13268754,"line_start":1508,"line_end":1508,"column_start":8,"column_end":18},"name":"skip_while","qualname":"::stream::stream::StreamExt::skip_while","value":"pub fn skip_while<P>(Self, P) -> SkipWhile<Self, P> where Self: Sized,\nP: FnMut(&Self::Item) -> bool","parent":{"krate":0,"index":1685},"children":[],"decl_id":null,"docs":"        Combinator that `skip`s elements based on a predicate.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1756},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13269411,"byte_end":13269415,"line_start":1536,"line_end":1536,"column_start":8,"column_end":12},"name":"skip","qualname":"::stream::stream::StreamExt::skip","value":"pub fn skip(Self, usize) -> Skip<Self> where Self: Sized","parent":{"krate":0,"index":1685},"children":[],"decl_id":null,"docs":"        Creates a combinator that skips the first `n` elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1757},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13270495,"byte_end":13270502,"line_start":1577,"line_end":1577,"column_start":8,"column_end":15},"name":"timeout","qualname":"::stream::stream::StreamExt::timeout","value":"pub fn timeout(Self, Duration) -> Timeout<Self> where Self: Stream + Sized","parent":{"krate":0,"index":1685},"children":[],"decl_id":null,"docs":"        Await a stream or times out after a duration of time.","sig":null,"attributes":[{"value":"cfg(any(feature = \"unstable\", feature = \"docs\"))","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13270382,"byte_end":13270433,"line_start":1575,"line_end":1575,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1758},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13271356,"byte_end":13271364,"line_start":1612,"line_end":1612,"column_start":8,"column_end":16},"name":"try_fold","qualname":"::stream::stream::StreamExt::try_fold","value":"pub fn try_fold<B, F, T, E>(&mut Self, T, F) -> TryFoldFuture<, Self, F, T>\nwhere Self: Unpin + Sized, F: FnMut(B, Self::Item) -> Result<T, E>","parent":{"krate":0,"index":1685},"children":[],"decl_id":null,"docs":"        A combinator that applies a function as long as it returns successfully, producing a single, final value.\n        Immediately returns the error when the function returns unsuccessfully.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1763},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13272461,"byte_end":13272473,"line_start":1658,"line_end":1658,"column_start":8,"column_end":20},"name":"try_for_each","qualname":"::stream::stream::StreamExt::try_for_each","value":"pub fn try_for_each<F, E>(&mut Self, F) -> TryForEachFuture<, Self, F> where\nSelf: Unpin + Sized, F: FnMut(Self::Item) -> Result<(), E>","parent":{"krate":0,"index":1685},"children":[],"decl_id":null,"docs":"        Applies a falliable function to each element in a stream, stopping at first error and returning it.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1766},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13273993,"byte_end":13273996,"line_start":1706,"line_end":1706,"column_start":8,"column_end":11},"name":"zip","qualname":"::stream::stream::StreamExt::zip","value":"pub fn zip<U>(Self, U) -> Zip<Self, U> where Self: Sized, U: Stream","parent":{"krate":0,"index":1685},"children":[],"decl_id":null,"docs":"        'Zips up' two streams into a single stream of pairs.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13273976,"byte_end":13273985,"line_start":1705,"line_end":1705,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1768},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13274968,"byte_end":13274973,"line_start":1743,"line_end":1743,"column_start":8,"column_end":13},"name":"unzip","qualname":"::stream::stream::StreamExt::unzip","value":"pub fn unzip<A, B, FromA, FromB>(Self) -> UnzipFuture<Self, FromA, FromB>\nwhere FromA: Default + Extend<A>, FromB: Default + Extend<B>,\nSelf: Stream<Item = (A, B)> + Sized","parent":{"krate":0,"index":1685},"children":[],"decl_id":null,"docs":"        Converts an stream of pairs into a pair of containers.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13274878,"byte_end":13274906,"line_start":1741,"line_end":1741,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1773},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13277121,"byte_end":13277128,"line_start":1805,"line_end":1805,"column_start":8,"column_end":15},"name":"collect","qualname":"::stream::stream::StreamExt::collect","value":"pub fn collect<'a, B>(Self) -> Pin<Box<dyn Future<Output = B> + Send + 'a>>\nwhere Self: Sized + 'a + Send, B: FromStream<Self::Item>, Self::Item: Send","parent":{"krate":0,"index":1685},"children":[],"decl_id":null,"docs":"        Transforms a stream into a collection.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13277031,"byte_end":13277059,"line_start":1803,"line_end":1803,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1776},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13278201,"byte_end":13278206,"line_start":1843,"line_end":1843,"column_start":8,"column_end":13},"name":"merge","qualname":"::stream::stream::StreamExt::merge","value":"pub fn merge<U>(Self, U) -> Merge<Self, U> where Self: Sized, U: Stream<Item =\nSelf::Item> + Sized","parent":{"krate":0,"index":1685},"children":[],"decl_id":null,"docs":"        Combines multiple streams into a single stream of all their outputs.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13278111,"byte_end":13278139,"line_start":1841,"line_end":1841,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1778},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13279351,"byte_end":13279362,"line_start":1878,"line_end":1878,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"::stream::stream::StreamExt::partial_cmp","value":"pub fn partial_cmp<S>(Self, S) -> PartialCmpFuture<Self, S> where\nSelf: Sized + Stream, S: Stream, <Self as Stream>::Item: PartialOrd<S::Item>","parent":{"krate":0,"index":1685},"children":[],"decl_id":null,"docs":"        Lexicographically compares the elements of this `Stream` with those\n        of another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1780},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13280349,"byte_end":13280357,"line_start":1918,"line_end":1918,"column_start":8,"column_end":16},"name":"position","qualname":"::stream::stream::StreamExt::position","value":"pub fn position<P>(&mut Self, P) -> PositionFuture<, Self, P> where\nSelf: Unpin + Sized, P: FnMut(Self::Item) -> bool","parent":{"krate":0,"index":1685},"children":[],"decl_id":null,"docs":"        Searches for an element in a Stream that satisfies a predicate, returning\n        its index.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1782},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13281500,"byte_end":13281503,"line_start":1956,"line_end":1956,"column_start":8,"column_end":11},"name":"cmp","qualname":"::stream::stream::StreamExt::cmp","value":"pub fn cmp<S>(Self, S) -> CmpFuture<Self, S> where Self: Sized + Stream,\nS: Stream, <Self as Stream>::Item: Ord","parent":{"krate":0,"index":1685},"children":[],"decl_id":null,"docs":"        Lexicographically compares the elements of this `Stream` with those\n        of another using 'Ord'.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1784},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13282262,"byte_end":13282267,"line_start":1990,"line_end":1990,"column_start":8,"column_end":13},"name":"count","qualname":"::stream::stream::StreamExt::count","value":"pub fn count(Self) -> CountFuture<Self> where Self: Sized","parent":{"krate":0,"index":1685},"children":[],"decl_id":null,"docs":"        Counts the number of elements in the stream.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13282172,"byte_end":13282200,"line_start":1988,"line_end":1988,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1785},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13283230,"byte_end":13283232,"line_start":2022,"line_end":2022,"column_start":8,"column_end":10},"name":"ne","qualname":"::stream::stream::StreamExt::ne","value":"pub fn ne<S>(Self, S) -> NeFuture<Self, S> where Self: Sized, S: Sized +\nStream, <Self as Stream>::Item: PartialEq<S::Item>","parent":{"krate":0,"index":1685},"children":[],"decl_id":null,"docs":"        Determines if the elements of this `Stream` are lexicographically\n        not equal to those of another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1787},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13284299,"byte_end":13284301,"line_start":2059,"line_end":2059,"column_start":8,"column_end":10},"name":"ge","qualname":"::stream::stream::StreamExt::ge","value":"pub fn ge<S>(Self, S) -> GeFuture<Self, S> where Self: Sized + Stream,\nS: Stream, <Self as Stream>::Item: PartialOrd<S::Item>","parent":{"krate":0,"index":1685},"children":[],"decl_id":null,"docs":"        Determines if the elements of this `Stream` are lexicographically\n        greater than or equal to those of another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1789},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13285360,"byte_end":13285362,"line_start":2096,"line_end":2096,"column_start":8,"column_end":10},"name":"eq","qualname":"::stream::stream::StreamExt::eq","value":"pub fn eq<S>(Self, S) -> EqFuture<Self, S> where Self: Sized + Stream,\nS: Sized + Stream, <Self as Stream>::Item: PartialEq<S::Item>","parent":{"krate":0,"index":1685},"children":[],"decl_id":null,"docs":"        Determines if the elements of this `Stream` are lexicographically\n        equal to those of another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1791},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13286419,"byte_end":13286421,"line_start":2133,"line_end":2133,"column_start":8,"column_end":10},"name":"gt","qualname":"::stream::stream::StreamExt::gt","value":"pub fn gt<S>(Self, S) -> GtFuture<Self, S> where Self: Sized + Stream,\nS: Stream, <Self as Stream>::Item: PartialOrd<S::Item>","parent":{"krate":0,"index":1685},"children":[],"decl_id":null,"docs":"        Determines if the elements of this `Stream` are lexicographically\n        greater than those of another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1793},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13287474,"byte_end":13287476,"line_start":2170,"line_end":2170,"column_start":8,"column_end":10},"name":"le","qualname":"::stream::stream::StreamExt::le","value":"pub fn le<S>(Self, S) -> LeFuture<Self, S> where Self: Sized + Stream,\nS: Stream, <Self as Stream>::Item: PartialOrd<S::Item>","parent":{"krate":0,"index":1685},"children":[],"decl_id":null,"docs":"        Determines if the elements of this `Stream` are lexicographically\n        less or equal to those of another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1795},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13288523,"byte_end":13288525,"line_start":2207,"line_end":2207,"column_start":8,"column_end":10},"name":"lt","qualname":"::stream::stream::StreamExt::lt","value":"pub fn lt<S>(Self, S) -> LtFuture<Self, S> where Self: Sized + Stream,\nS: Stream, <Self as Stream>::Item: PartialOrd<S::Item>","parent":{"krate":0,"index":1685},"children":[],"decl_id":null,"docs":"        Determines if the elements of this `Stream` are lexicographically\n        less than those of another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1797},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13289586,"byte_end":13289589,"line_start":2252,"line_end":2252,"column_start":8,"column_end":11},"name":"sum","qualname":"::stream::stream::StreamExt::sum","value":"pub fn sum<'a, S>(Self) -> Pin<Box<dyn Future<Output = S> + 'a>> where\nSelf: Sized + Stream<Item = S> + 'a, S: Sum<Self::Item>","parent":{"krate":0,"index":1685},"children":[],"decl_id":null,"docs":"        Sums the elements of a stream.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13289496,"byte_end":13289524,"line_start":2250,"line_end":2250,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1800},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13290791,"byte_end":13290798,"line_start":2298,"line_end":2298,"column_start":8,"column_end":15},"name":"product","qualname":"::stream::stream::StreamExt::product","value":"pub fn product<'a, P>(Self) -> Pin<Box<dyn Future<Output = P> + 'a>> where\nSelf: Sized + Stream<Item = P> + 'a, P: Product","parent":{"krate":0,"index":1685},"children":[],"decl_id":null,"docs":"        Multiplies all elements of the stream.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13290701,"byte_end":13290729,"line_start":2296,"line_end":2296,"column_start":5,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":1822},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/empty.rs","byte_start":13347113,"byte_end":13347118,"line_start":28,"line_end":28,"column_start":8,"column_end":13},"name":"empty","qualname":"::stream::empty::empty","value":"pub fn empty<T>() -> Empty<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that doesn't yield any items.","sig":null,"attributes":[{"value":"/ Creates a stream that doesn't yield any items.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/empty.rs","byte_start":13346682,"byte_end":13346732,"line_start":7,"line_end":7,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/empty.rs","byte_start":13346733,"byte_end":13346736,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`empty`] function. See its","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/empty.rs","byte_start":13346737,"byte_end":13346800,"line_start":9,"line_end":9,"column_start":1,"column_end":64}},{"value":"/ documentation for more.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/empty.rs","byte_start":13346801,"byte_end":13346828,"line_start":10,"line_end":10,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/empty.rs","byte_start":13346829,"byte_end":13346832,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`empty`]: fn.empty.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/empty.rs","byte_start":13346833,"byte_end":13346861,"line_start":12,"line_end":12,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/empty.rs","byte_start":13346862,"byte_end":13346865,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/empty.rs","byte_start":13346866,"byte_end":13346880,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/empty.rs","byte_start":13346881,"byte_end":13346884,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/empty.rs","byte_start":13346885,"byte_end":13346892,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/empty.rs","byte_start":13346893,"byte_end":13346932,"line_start":17,"line_end":17,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/empty.rs","byte_start":13346933,"byte_end":13346938,"line_start":18,"line_end":18,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/empty.rs","byte_start":13346939,"byte_end":13346969,"line_start":19,"line_end":19,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/empty.rs","byte_start":13346970,"byte_end":13346996,"line_start":20,"line_end":20,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/empty.rs","byte_start":13346997,"byte_end":13347000,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ let mut s = stream::empty::<i32>();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/empty.rs","byte_start":13347001,"byte_end":13347040,"line_start":22,"line_end":22,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/empty.rs","byte_start":13347041,"byte_end":13347044,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, None);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/empty.rs","byte_start":13347045,"byte_end":13347082,"line_start":24,"line_end":24,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/empty.rs","byte_start":13347083,"byte_end":13347088,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/empty.rs","byte_start":13347089,"byte_end":13347097,"line_start":26,"line_end":26,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/empty.rs","byte_start":13347098,"byte_end":13347105,"line_start":27,"line_end":27,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3187},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/empty.rs","byte_start":13347355,"byte_end":13347360,"line_start":40,"line_end":40,"column_start":12,"column_end":17},"name":"Empty","qualname":"::stream::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":3189}],"decl_id":null,"docs":" A stream that doesn't yield any items.","sig":null,"attributes":[{"value":"/ A stream that doesn't yield any items.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/empty.rs","byte_start":13347189,"byte_end":13347231,"line_start":34,"line_end":34,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/empty.rs","byte_start":13347232,"byte_end":13347235,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ This stream is constructed by the [`empty`] function.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/empty.rs","byte_start":13347236,"byte_end":13347293,"line_start":36,"line_end":36,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/empty.rs","byte_start":13347294,"byte_end":13347297,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [`empty`]: fn.empty.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/empty.rs","byte_start":13347298,"byte_end":13347326,"line_start":38,"line_end":38,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":3193},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":13347880,"byte_end":13347886,"line_start":13,"line_end":13,"column_start":12,"column_end":18},"name":"FromFn","qualname":"::stream::from_fn::FromFn","value":"FromFn {  }","parent":null,"children":[{"krate":0,"index":3195}],"decl_id":null,"docs":" A stream that yields elements by calling a closure.","sig":null,"attributes":[{"value":"/ A stream that yields elements by calling a closure.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":13347656,"byte_end":13347711,"line_start":6,"line_end":6,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":13347712,"byte_end":13347715,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This stream is created by the [`from_fn`] function. See its","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":13347716,"byte_end":13347779,"line_start":8,"line_end":8,"column_start":1,"column_end":64}},{"value":"/ documentation for more.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":13347780,"byte_end":13347807,"line_start":9,"line_end":9,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":13347808,"byte_end":13347811,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`from_fn`]: fn.from_fn.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":13347812,"byte_end":13347844,"line_start":11,"line_end":11,"column_start":1,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":1844},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":13348746,"byte_end":13348753,"line_start":51,"line_end":51,"column_start":8,"column_end":15},"name":"from_fn","qualname":"::stream::from_fn::from_fn","value":"pub fn from_fn<T, F>(F) -> FromFn<F> where F: FnMut() -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream where to produce each new element a provided closure is called.","sig":null,"attributes":[{"value":"/ Creates a new stream where to produce each new element a provided closure is called.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":13347937,"byte_end":13348025,"line_start":19,"line_end":19,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":13348026,"byte_end":13348029,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ This allows creating a custom stream with any behaviour without using the more verbose","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":13348030,"byte_end":13348120,"line_start":21,"line_end":21,"column_start":1,"column_end":91}},{"value":"/ syntax of creating a dedicated type and implementing a `Stream` trait for it.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":13348121,"byte_end":13348202,"line_start":22,"line_end":22,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":13348203,"byte_end":13348206,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":13348207,"byte_end":13348221,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":13348222,"byte_end":13348225,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":13348226,"byte_end":13348233,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":13348234,"byte_end":13348273,"line_start":27,"line_end":27,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":13348274,"byte_end":13348279,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":13348280,"byte_end":13348310,"line_start":29,"line_end":29,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":13348311,"byte_end":13348337,"line_start":30,"line_end":30,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":13348338,"byte_end":13348341,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let mut count = 0u8;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":13348342,"byte_end":13348366,"line_start":32,"line_end":32,"column_start":1,"column_end":25}},{"value":"/ let s = stream::from_fn(|| {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":13348367,"byte_end":13348399,"line_start":33,"line_end":33,"column_start":1,"column_end":33}},{"value":"/     count += 1;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":13348400,"byte_end":13348419,"line_start":34,"line_end":34,"column_start":1,"column_end":20}},{"value":"/     if count > 3 {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":13348420,"byte_end":13348442,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"/         None","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":13348443,"byte_end":13348459,"line_start":36,"line_end":36,"column_start":1,"column_end":17}},{"value":"/     } else {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":13348460,"byte_end":13348476,"line_start":37,"line_end":37,"column_start":1,"column_end":17}},{"value":"/         Some(count)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":13348477,"byte_end":13348500,"line_start":38,"line_end":38,"column_start":1,"column_end":24}},{"value":"/     }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":13348501,"byte_end":13348510,"line_start":39,"line_end":39,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":13348511,"byte_end":13348518,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":13348519,"byte_end":13348522,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ pin_utils::pin_mut!(s);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":13348523,"byte_end":13348550,"line_start":42,"line_end":42,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":13348551,"byte_end":13348554,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, Some(1));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":13348555,"byte_end":13348595,"line_start":44,"line_end":44,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(2));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":13348596,"byte_end":13348636,"line_start":45,"line_end":45,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(3));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":13348637,"byte_end":13348677,"line_start":46,"line_end":46,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, None);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":13348678,"byte_end":13348715,"line_start":47,"line_end":47,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":13348716,"byte_end":13348721,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":13348722,"byte_end":13348730,"line_start":49,"line_end":49,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":13348731,"byte_end":13348738,"line_start":50,"line_end":50,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9895},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_iter.rs","byte_start":13349562,"byte_end":13349570,"line_start":18,"line_end":18,"column_start":16,"column_end":24},"name":"FromIter","qualname":"::stream::from_iter::FromIter","value":"FromIter {  }","parent":null,"children":[{"krate":0,"index":9897}],"decl_id":null,"docs":" A stream that was created from iterator.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1872},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_iter.rs","byte_start":13350070,"byte_end":13350079,"line_start":43,"line_end":43,"column_start":8,"column_end":17},"name":"from_iter","qualname":"::stream::from_iter::from_iter","value":"pub fn from_iter<I: IntoIterator>(I) -> FromIter<I::IntoIter>","parent":null,"children":[],"decl_id":null,"docs":" Converts an iterator into a stream.","sig":null,"attributes":[{"value":"/ Converts an iterator into a stream.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_iter.rs","byte_start":13349602,"byte_end":13349641,"line_start":23,"line_end":23,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_iter.rs","byte_start":13349642,"byte_end":13349645,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_iter.rs","byte_start":13349646,"byte_end":13349660,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_iter.rs","byte_start":13349661,"byte_end":13349664,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_iter.rs","byte_start":13349665,"byte_end":13349672,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_iter.rs","byte_start":13349673,"byte_end":13349712,"line_start":28,"line_end":28,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_iter.rs","byte_start":13349713,"byte_end":13349718,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_iter.rs","byte_start":13349719,"byte_end":13349749,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_iter.rs","byte_start":13349750,"byte_end":13349776,"line_start":31,"line_end":31,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_iter.rs","byte_start":13349777,"byte_end":13349780,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let mut s = stream::from_iter(vec![0, 1, 2, 3]);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_iter.rs","byte_start":13349781,"byte_end":13349833,"line_start":33,"line_end":33,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_iter.rs","byte_start":13349834,"byte_end":13349837,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, Some(0));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_iter.rs","byte_start":13349838,"byte_end":13349878,"line_start":35,"line_end":35,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(1));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_iter.rs","byte_start":13349879,"byte_end":13349919,"line_start":36,"line_end":36,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(2));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_iter.rs","byte_start":13349920,"byte_end":13349960,"line_start":37,"line_end":37,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(3));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_iter.rs","byte_start":13349961,"byte_end":13350001,"line_start":38,"line_end":38,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, None);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_iter.rs","byte_start":13350002,"byte_end":13350039,"line_start":39,"line_end":39,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_iter.rs","byte_start":13350040,"byte_end":13350045,"line_start":40,"line_end":40,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_iter.rs","byte_start":13350046,"byte_end":13350054,"line_start":41,"line_end":41,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_iter.rs","byte_start":13350055,"byte_end":13350062,"line_start":42,"line_end":42,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1901},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/once.rs","byte_start":13351165,"byte_end":13351169,"line_start":28,"line_end":28,"column_start":8,"column_end":12},"name":"once","qualname":"::stream::once::once","value":"pub fn once<T>(T) -> Once<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that yields a single item.","sig":null,"attributes":[{"value":"/ Creates a stream that yields a single item.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/once.rs","byte_start":13350832,"byte_end":13350879,"line_start":11,"line_end":11,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/once.rs","byte_start":13350880,"byte_end":13350883,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/once.rs","byte_start":13350884,"byte_end":13350898,"line_start":13,"line_end":13,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/once.rs","byte_start":13350899,"byte_end":13350902,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/once.rs","byte_start":13350903,"byte_end":13350910,"line_start":15,"line_end":15,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/once.rs","byte_start":13350911,"byte_end":13350950,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/once.rs","byte_start":13350951,"byte_end":13350956,"line_start":17,"line_end":17,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/once.rs","byte_start":13350957,"byte_end":13350987,"line_start":18,"line_end":18,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/once.rs","byte_start":13350988,"byte_end":13351014,"line_start":19,"line_end":19,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/once.rs","byte_start":13351015,"byte_end":13351018,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ let mut s = stream::once(7);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/once.rs","byte_start":13351019,"byte_end":13351051,"line_start":21,"line_end":21,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/once.rs","byte_start":13351052,"byte_end":13351055,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, Some(7));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/once.rs","byte_start":13351056,"byte_end":13351096,"line_start":23,"line_end":23,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, None);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/once.rs","byte_start":13351097,"byte_end":13351134,"line_start":24,"line_end":24,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/once.rs","byte_start":13351135,"byte_end":13351140,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/once.rs","byte_start":13351141,"byte_end":13351149,"line_start":26,"line_end":26,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/once.rs","byte_start":13351150,"byte_end":13351157,"line_start":27,"line_end":27,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9856},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/once.rs","byte_start":13351469,"byte_end":13351473,"line_start":40,"line_end":40,"column_start":16,"column_end":20},"name":"Once","qualname":"::stream::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":9858}],"decl_id":null,"docs":" A stream that yields a single item.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1924},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat.rs","byte_start":13352359,"byte_end":13352365,"line_start":23,"line_end":23,"column_start":8,"column_end":14},"name":"repeat","qualname":"::stream::repeat::repeat","value":"pub fn repeat<T>(T) -> Repeat<T> where T: Clone","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that yields the same item repeatedly.","sig":null,"attributes":[{"value":"/ Creates a stream that yields the same item repeatedly.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat.rs","byte_start":13352010,"byte_end":13352068,"line_start":6,"line_end":6,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat.rs","byte_start":13352069,"byte_end":13352072,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat.rs","byte_start":13352073,"byte_end":13352087,"line_start":8,"line_end":8,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat.rs","byte_start":13352088,"byte_end":13352091,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat.rs","byte_start":13352092,"byte_end":13352099,"line_start":10,"line_end":10,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat.rs","byte_start":13352100,"byte_end":13352139,"line_start":11,"line_end":11,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat.rs","byte_start":13352140,"byte_end":13352145,"line_start":12,"line_end":12,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat.rs","byte_start":13352146,"byte_end":13352176,"line_start":13,"line_end":13,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat.rs","byte_start":13352177,"byte_end":13352203,"line_start":14,"line_end":14,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat.rs","byte_start":13352204,"byte_end":13352207,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ let mut s = stream::repeat(7);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat.rs","byte_start":13352208,"byte_end":13352242,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat.rs","byte_start":13352243,"byte_end":13352246,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, Some(7));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat.rs","byte_start":13352247,"byte_end":13352287,"line_start":18,"line_end":18,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(7));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat.rs","byte_start":13352288,"byte_end":13352328,"line_start":19,"line_end":19,"column_start":1,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat.rs","byte_start":13352329,"byte_end":13352334,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat.rs","byte_start":13352335,"byte_end":13352343,"line_start":21,"line_end":21,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat.rs","byte_start":13352344,"byte_end":13352351,"line_start":22,"line_end":22,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3202},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat.rs","byte_start":13352652,"byte_end":13352658,"line_start":37,"line_end":37,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::stream::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":3204}],"decl_id":null,"docs":" A stream that yields the same item repeatedly.","sig":null,"attributes":[{"value":"/ A stream that yields the same item repeatedly.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat.rs","byte_start":13352436,"byte_end":13352486,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat.rs","byte_start":13352487,"byte_end":13352490,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This stream is created by the [`repeat`] function. See its","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat.rs","byte_start":13352491,"byte_end":13352553,"line_start":32,"line_end":32,"column_start":1,"column_end":63}},{"value":"/ documentation for more.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat.rs","byte_start":13352554,"byte_end":13352581,"line_start":33,"line_end":33,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat.rs","byte_start":13352582,"byte_end":13352585,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ [`repeat`]: fn.repeat.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat.rs","byte_start":13352586,"byte_end":13352616,"line_start":35,"line_end":35,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":3211},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":13353234,"byte_end":13353244,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"RepeatWith","qualname":"::stream::repeat_with::RepeatWith","value":"RepeatWith {  }","parent":null,"children":[{"krate":0,"index":3213}],"decl_id":null,"docs":" A stream that repeats elements of type `T` endlessly by applying a provided closure.","sig":null,"attributes":[{"value":"/ A stream that repeats elements of type `T` endlessly by applying a provided closure.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":13352965,"byte_end":13353053,"line_start":6,"line_end":6,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":13353054,"byte_end":13353057,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This stream is created by the [`repeat_with`] function. See its","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":13353058,"byte_end":13353125,"line_start":8,"line_end":8,"column_start":1,"column_end":68}},{"value":"/ documentation for more.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":13353126,"byte_end":13353153,"line_start":9,"line_end":9,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":13353154,"byte_end":13353157,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`repeat_with`]: fn.repeat_with.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":13353158,"byte_end":13353198,"line_start":11,"line_end":11,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":1946},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":13354350,"byte_end":13354361,"line_start":67,"line_end":67,"column_start":8,"column_end":19},"name":"repeat_with","qualname":"::stream::repeat_with::repeat_with","value":"pub fn repeat_with<T, F>(F) -> RepeatWith<F> where F: FnMut() -> T","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream that repeats elements of type `A` endlessly by applying the provided closure.","sig":null,"attributes":[{"value":"/ Creates a new stream that repeats elements of type `A` endlessly by applying the provided closure.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":13353299,"byte_end":13353401,"line_start":19,"line_end":19,"column_start":1,"column_end":103}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":13353402,"byte_end":13353405,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":13353406,"byte_end":13353420,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":13353421,"byte_end":13353424,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":13353425,"byte_end":13353441,"line_start":23,"line_end":23,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":13353442,"byte_end":13353445,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":13353446,"byte_end":13353453,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":13353454,"byte_end":13353493,"line_start":26,"line_end":26,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":13353494,"byte_end":13353499,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":13353500,"byte_end":13353530,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":13353531,"byte_end":13353557,"line_start":29,"line_end":29,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":13353558,"byte_end":13353561,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let s = stream::repeat_with(|| 1);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":13353562,"byte_end":13353600,"line_start":31,"line_end":31,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":13353601,"byte_end":13353604,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ pin_utils::pin_mut!(s);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":13353605,"byte_end":13353632,"line_start":33,"line_end":33,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":13353633,"byte_end":13353636,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, Some(1));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":13353637,"byte_end":13353677,"line_start":35,"line_end":35,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(1));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":13353678,"byte_end":13353718,"line_start":36,"line_end":36,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(1));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":13353719,"byte_end":13353759,"line_start":37,"line_end":37,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(1));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":13353760,"byte_end":13353800,"line_start":38,"line_end":38,"column_start":1,"column_end":41}},{"value":"/ # })","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":13353801,"byte_end":13353809,"line_start":39,"line_end":39,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":13353810,"byte_end":13353817,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":13353818,"byte_end":13353821,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Going finite:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":13353822,"byte_end":13353839,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":13353840,"byte_end":13353843,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":13353844,"byte_end":13353851,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":13353852,"byte_end":13353891,"line_start":45,"line_end":45,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":13353892,"byte_end":13353897,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":13353898,"byte_end":13353928,"line_start":47,"line_end":47,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":13353929,"byte_end":13353955,"line_start":48,"line_end":48,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":13353956,"byte_end":13353959,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ let mut n = 1;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":13353960,"byte_end":13353978,"line_start":50,"line_end":50,"column_start":1,"column_end":19}},{"value":"/ let s = stream::repeat_with(|| {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":13353979,"byte_end":13354015,"line_start":51,"line_end":51,"column_start":1,"column_end":37}},{"value":"/     let item = n;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":13354016,"byte_end":13354037,"line_start":52,"line_end":52,"column_start":1,"column_end":22}},{"value":"/     n *= 2;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":13354038,"byte_end":13354053,"line_start":53,"line_end":53,"column_start":1,"column_end":16}},{"value":"/     item","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":13354054,"byte_end":13354066,"line_start":54,"line_end":54,"column_start":1,"column_end":13}},{"value":"/ })","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":13354067,"byte_end":13354073,"line_start":55,"line_end":55,"column_start":1,"column_end":7}},{"value":"/ .take(4);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":13354074,"byte_end":13354087,"line_start":56,"line_end":56,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":13354088,"byte_end":13354091,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ pin_utils::pin_mut!(s);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":13354092,"byte_end":13354119,"line_start":58,"line_end":58,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":13354120,"byte_end":13354123,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, Some(1));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":13354124,"byte_end":13354164,"line_start":60,"line_end":60,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(2));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":13354165,"byte_end":13354205,"line_start":61,"line_end":61,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(4));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":13354206,"byte_end":13354246,"line_start":62,"line_end":62,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(8));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":13354247,"byte_end":13354287,"line_start":63,"line_end":63,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, None);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":13354288,"byte_end":13354325,"line_start":64,"line_end":64,"column_start":1,"column_end":38}},{"value":"/ # })","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":13354326,"byte_end":13354334,"line_start":65,"line_end":65,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":13354335,"byte_end":13354342,"line_start":66,"line_end":66,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3251},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/next_back.rs","byte_start":13581208,"byte_end":13581222,"line_start":9,"line_end":9,"column_start":12,"column_end":26},"name":"NextBackFuture","qualname":"::stream::double_ended_stream::next_back::NextBackFuture","value":"NextBackFuture {  }","parent":null,"children":[{"krate":0,"index":3254}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/next_back.rs","byte_start":13581157,"byte_end":13581196,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":3276},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/nth_back.rs","byte_start":13581733,"byte_end":13581746,"line_start":9,"line_end":9,"column_start":12,"column_end":25},"name":"NthBackFuture","qualname":"::stream::double_ended_stream::nth_back::NthBackFuture","value":"NthBackFuture {  }","parent":null,"children":[{"krate":0,"index":3279},{"krate":0,"index":3280}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/nth_back.rs","byte_start":13581682,"byte_end":13581721,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":3307},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/rfind.rs","byte_start":13582755,"byte_end":13582766,"line_start":9,"line_end":9,"column_start":12,"column_end":23},"name":"RFindFuture","qualname":"::stream::double_ended_stream::rfind::RFindFuture","value":"RFindFuture {  }","parent":null,"children":[{"krate":0,"index":3311},{"krate":0,"index":3312}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/rfind.rs","byte_start":13582704,"byte_end":13582743,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":9799},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/rfold.rs","byte_start":13583852,"byte_end":13583863,"line_start":12,"line_end":12,"column_start":16,"column_end":27},"name":"RFoldFuture","qualname":"::stream::double_ended_stream::rfold::RFoldFuture","value":"RFoldFuture {  }","parent":null,"children":[{"krate":0,"index":9803},{"krate":0,"index":9804},{"krate":0,"index":9805}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":14046700,"byte_end":14046709,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9742},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/try_rfold.rs","byte_start":13585090,"byte_end":13585104,"line_start":12,"line_end":12,"column_start":16,"column_end":30},"name":"TryRFoldFuture","qualname":"::stream::double_ended_stream::try_rfold::TryRFoldFuture","value":"TryRFoldFuture {  }","parent":null,"children":[{"krate":0,"index":9746},{"krate":0,"index":9747},{"krate":0,"index":9748}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":14046700,"byte_end":14046709,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":3405},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/mod.rs","byte_start":13574678,"byte_end":13574695,"line_start":27,"line_end":27,"column_start":11,"column_end":28},"name":"DoubleEndedStream","qualname":"::stream::double_ended_stream::DoubleEndedStream","value":"DoubleEndedStream: Stream","parent":null,"children":[{"krate":0,"index":3406},{"krate":0,"index":3407},{"krate":0,"index":3408},{"krate":0,"index":3409},{"krate":0,"index":3411},{"krate":0,"index":3414}],"decl_id":null,"docs":" A stream able to yield elements from both ends.","sig":null,"attributes":[{"value":"/ A stream able to yield elements from both ends.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/mod.rs","byte_start":13574299,"byte_end":13574350,"line_start":18,"line_end":18,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/mod.rs","byte_start":13574351,"byte_end":13574354,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Something that implements `DoubleEndedStream` has one extra capability","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/mod.rs","byte_start":13574355,"byte_end":13574429,"line_start":20,"line_end":20,"column_start":1,"column_end":75}},{"value":"/ over something that implements [`Stream`]: the ability to also take","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/mod.rs","byte_start":13574430,"byte_end":13574501,"line_start":21,"line_end":21,"column_start":1,"column_end":72}},{"value":"/ `Item`s from the back, as well as the front.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/mod.rs","byte_start":13574502,"byte_end":13574550,"line_start":22,"line_end":22,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/mod.rs","byte_start":13574551,"byte_end":13574554,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [`Stream`]: trait.Stream.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/mod.rs","byte_start":13574555,"byte_end":13574588,"line_start":24,"line_end":24,"column_start":1,"column_end":34}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/mod.rs","byte_start":13574589,"byte_end":13574617,"line_start":25,"line_end":25,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3406},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/mod.rs","byte_start":13576923,"byte_end":13576937,"line_start":92,"line_end":92,"column_start":8,"column_end":22},"name":"poll_next_back","qualname":"::stream::double_ended_stream::DoubleEndedStream::poll_next_back","value":"pub fn poll_next_back(Pin<&mut Self>, &mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":0,"index":3405},"children":[],"decl_id":null,"docs":"        Attempts to receive the next item from the back of the stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3407},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/mod.rs","byte_start":13577829,"byte_end":13577838,"line_start":119,"line_end":119,"column_start":8,"column_end":17},"name":"next_back","qualname":"::stream::double_ended_stream::DoubleEndedStream::next_back","value":"pub fn next_back(&mut Self) -> NextBackFuture<, Self> where Self: Unpin","parent":{"krate":0,"index":3405},"children":[],"decl_id":null,"docs":"            Advances the stream and returns the next value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3408},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/mod.rs","byte_start":13578481,"byte_end":13578489,"line_start":147,"line_end":147,"column_start":8,"column_end":16},"name":"nth_back","qualname":"::stream::double_ended_stream::DoubleEndedStream::nth_back","value":"pub fn nth_back(&mut Self, usize) -> NthBackFuture<, Self> where Self: Unpin +\nSized","parent":{"krate":0,"index":3405},"children":[],"decl_id":null,"docs":"            Returns the nth element from the back of the stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3409},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/mod.rs","byte_start":13579171,"byte_end":13579176,"line_start":175,"line_end":175,"column_start":8,"column_end":13},"name":"rfind","qualname":"::stream::double_ended_stream::DoubleEndedStream::rfind","value":"pub fn rfind<P>(&mut Self, P) -> RFindFuture<, Self, P> where Self: Unpin +\nSized, P: FnMut(&Self::Item) -> bool","parent":{"krate":0,"index":3405},"children":[],"decl_id":null,"docs":"            Returns the first element from the right that matches the predicate.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3411},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/mod.rs","byte_start":13579810,"byte_end":13579815,"line_start":203,"line_end":203,"column_start":8,"column_end":13},"name":"rfold","qualname":"::stream::double_ended_stream::DoubleEndedStream::rfold","value":"pub fn rfold<B, F>(Self, B, F) -> RFoldFuture<Self, F, B> where Self: Sized,\nF: FnMut(B, Self::Item) -> B","parent":{"krate":0,"index":3405},"children":[],"decl_id":null,"docs":"            # Examples","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3414},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/mod.rs","byte_start":13580812,"byte_end":13580821,"line_start":239,"line_end":239,"column_start":8,"column_end":17},"name":"try_rfold","qualname":"::stream::double_ended_stream::DoubleEndedStream::try_rfold","value":"pub fn try_rfold<B, F, E>(Self, B, F) -> TryRFoldFuture<Self, F, B> where\nSelf: Sized, F: FnMut(B, Self::Item) -> Result<B, E>","parent":{"krate":0,"index":3405},"children":[],"decl_id":null,"docs":"            A combinator that applies a function as long as it returns successfully, producing a single, final value.\n            Immediately returns the error when the function returns unsuccessfully.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3422},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13588674,"byte_end":13588689,"line_start":81,"line_end":81,"column_start":11,"column_end":26},"name":"ExactSizeStream","qualname":"::stream::exact_size_stream::ExactSizeStream","value":"ExactSizeStream: Stream","parent":null,"children":[{"krate":0,"index":3423}],"decl_id":null,"docs":" A stream that knows its exact length.","sig":null,"attributes":[{"value":"/ A stream that knows its exact length.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13586279,"byte_end":13586320,"line_start":3,"line_end":3,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13586321,"byte_end":13586324,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Many [`Stream`]s don't know how many times they will iterate, but some do.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13586325,"byte_end":13586403,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"/ If a stream knows how many times it can iterate, providing access to","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13586404,"byte_end":13586476,"line_start":6,"line_end":6,"column_start":1,"column_end":73}},{"value":"/ that information can be useful. For example, if you want to iterate","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13586477,"byte_end":13586548,"line_start":7,"line_end":7,"column_start":1,"column_end":72}},{"value":"/ backwards, a good start is to know where the end is.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13586549,"byte_end":13586605,"line_start":8,"line_end":8,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13586606,"byte_end":13586609,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ When implementing an `ExactSizeStream`, you must also implement","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13586610,"byte_end":13586677,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"/ [`Stream`]. When doing so, the implementation of [`size_hint`] *must*","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13586678,"byte_end":13586751,"line_start":11,"line_end":11,"column_start":1,"column_end":74}},{"value":"/ return the exact size of the stream.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13586752,"byte_end":13586792,"line_start":12,"line_end":12,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13586793,"byte_end":13586796,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`Stream`]: trait.Stream.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13586797,"byte_end":13586830,"line_start":14,"line_end":14,"column_start":1,"column_end":34}},{"value":"/ [`size_hint`]: trait.Stream.html#method.size_hint","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13586831,"byte_end":13586884,"line_start":15,"line_end":15,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13586885,"byte_end":13586888,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ The [`len`] method has a default implementation, so you usually shouldn't","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13586889,"byte_end":13586966,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ implement it. However, you may be able to provide a more performant","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13586967,"byte_end":13587038,"line_start":18,"line_end":18,"column_start":1,"column_end":72}},{"value":"/ implementation than the default, so overriding it in this case makes sense.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13587039,"byte_end":13587118,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13587119,"byte_end":13587122,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [`len`]: #method.len","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13587123,"byte_end":13587147,"line_start":21,"line_end":21,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13587148,"byte_end":13587151,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13587152,"byte_end":13587166,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13587167,"byte_end":13587170,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13587171,"byte_end":13587187,"line_start":25,"line_end":25,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13587188,"byte_end":13587191,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13587192,"byte_end":13587199,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/ // a finite range knows exactly how many times it will iterate","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13587200,"byte_end":13587266,"line_start":28,"line_end":28,"column_start":1,"column_end":67}},{"value":"/ let five = 0..5;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13587267,"byte_end":13587287,"line_start":29,"line_end":29,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13587288,"byte_end":13587291,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(5, five.len());","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13587292,"byte_end":13587322,"line_start":31,"line_end":31,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13587323,"byte_end":13587330,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13587331,"byte_end":13587334,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ In the [module level docs][moddocs], we implemented an [`Stream`],","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13587335,"byte_end":13587405,"line_start":34,"line_end":34,"column_start":1,"column_end":71}},{"value":"/ `Counter`. Let's implement `ExactSizeStream` for it as well:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13587406,"byte_end":13587470,"line_start":35,"line_end":35,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13587471,"byte_end":13587474,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ [moddocs]: index.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13587475,"byte_end":13587500,"line_start":37,"line_end":37,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13587501,"byte_end":13587504,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13587505,"byte_end":13587512,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ # use std::task::{Context, Poll};","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13587513,"byte_end":13587550,"line_start":40,"line_end":40,"column_start":1,"column_end":38}},{"value":"/ # use std::pin::Pin;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13587551,"byte_end":13587575,"line_start":41,"line_end":41,"column_start":1,"column_end":25}},{"value":"/ # use async_std::prelude::*;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13587576,"byte_end":13587608,"line_start":42,"line_end":42,"column_start":1,"column_end":33}},{"value":"/ # struct Counter {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13587609,"byte_end":13587631,"line_start":43,"line_end":43,"column_start":1,"column_end":23}},{"value":"/ #     count: usize,","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13587632,"byte_end":13587655,"line_start":44,"line_end":44,"column_start":1,"column_end":24}},{"value":"/ # }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13587656,"byte_end":13587663,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/ # impl Counter {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13587664,"byte_end":13587684,"line_start":46,"line_end":46,"column_start":1,"column_end":21}},{"value":"/ #     fn new() -> Counter {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13587685,"byte_end":13587716,"line_start":47,"line_end":47,"column_start":1,"column_end":32}},{"value":"/ #         Counter { count: 0 }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13587717,"byte_end":13587751,"line_start":48,"line_end":48,"column_start":1,"column_end":35}},{"value":"/ #     }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13587752,"byte_end":13587763,"line_start":49,"line_end":49,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13587764,"byte_end":13587771,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"/ # impl Stream for Counter {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13587772,"byte_end":13587803,"line_start":51,"line_end":51,"column_start":1,"column_end":32}},{"value":"/ #     type Item = usize;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13587804,"byte_end":13587832,"line_start":52,"line_end":52,"column_start":1,"column_end":29}},{"value":"/ #     fn poll_next(mut self: Pin<&mut Self>, _cx: &mut Context<'_>) -> Poll<Option<Self::Item>> {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13587833,"byte_end":13587934,"line_start":53,"line_end":53,"column_start":1,"column_end":102}},{"value":"/ #         self.count += 1;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13587935,"byte_end":13587965,"line_start":54,"line_end":54,"column_start":1,"column_end":31}},{"value":"/ #         if self.count < 6 {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13587966,"byte_end":13587999,"line_start":55,"line_end":55,"column_start":1,"column_end":34}},{"value":"/ #             Poll::Ready(Some(self.count))","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13588000,"byte_end":13588047,"line_start":56,"line_end":56,"column_start":1,"column_end":48}},{"value":"/ #         } else {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13588048,"byte_end":13588070,"line_start":57,"line_end":57,"column_start":1,"column_end":23}},{"value":"/ #             Poll::Ready(None)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13588071,"byte_end":13588106,"line_start":58,"line_end":58,"column_start":1,"column_end":36}},{"value":"/ #         }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13588107,"byte_end":13588122,"line_start":59,"line_end":59,"column_start":1,"column_end":16}},{"value":"/ #     }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13588123,"byte_end":13588134,"line_start":60,"line_end":60,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13588135,"byte_end":13588142,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13588143,"byte_end":13588182,"line_start":62,"line_end":62,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13588183,"byte_end":13588188,"line_start":63,"line_end":63,"column_start":1,"column_end":6}},{"value":"/ impl ExactSizeStream for Counter {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13588189,"byte_end":13588227,"line_start":64,"line_end":64,"column_start":1,"column_end":39}},{"value":"/     // We can easily calculate the remaining number of iterations.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13588228,"byte_end":13588298,"line_start":65,"line_end":65,"column_start":1,"column_end":71}},{"value":"/     fn len(&self) -> usize {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13588299,"byte_end":13588331,"line_start":66,"line_end":66,"column_start":1,"column_end":33}},{"value":"/         5 - self.count","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13588332,"byte_end":13588358,"line_start":67,"line_end":67,"column_start":1,"column_end":27}},{"value":"/     }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13588359,"byte_end":13588368,"line_start":68,"line_end":68,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13588369,"byte_end":13588374,"line_start":69,"line_end":69,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13588375,"byte_end":13588378,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ // And now we can use it!","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13588379,"byte_end":13588408,"line_start":71,"line_end":71,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13588409,"byte_end":13588412,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ let counter = Counter::new();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13588413,"byte_end":13588446,"line_start":73,"line_end":73,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13588447,"byte_end":13588450,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(5, counter.len());","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13588451,"byte_end":13588484,"line_start":75,"line_end":75,"column_start":1,"column_end":34}},{"value":"/ # });","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13588485,"byte_end":13588494,"line_start":76,"line_end":76,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13588495,"byte_end":13588502,"line_start":77,"line_end":77,"column_start":1,"column_end":8}},{"value":"allow(clippy :: len_without_is_empty)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13588503,"byte_end":13588541,"line_start":78,"line_end":78,"column_start":1,"column_end":39}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13588585,"byte_end":13588613,"line_start":79,"line_end":79,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3423},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13589467,"byte_end":13589470,"line_start":105,"line_end":105,"column_start":8,"column_end":11},"name":"len","qualname":"::stream::exact_size_stream::ExactSizeStream::len","value":"pub fn len(&Self) -> usize","parent":{"krate":0,"index":3422},"children":[],"decl_id":null,"docs":" Returns the exact number of times the stream will iterate.","sig":null,"attributes":[{"value":"/ Returns the exact number of times the stream will iterate.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13588704,"byte_end":13588766,"line_start":82,"line_end":82,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13588771,"byte_end":13588774,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ This method has a default implementation, so you usually should not","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13588779,"byte_end":13588850,"line_start":84,"line_end":84,"column_start":5,"column_end":76}},{"value":"/ implement it directly. However, if you can provide a more efficient","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13588855,"byte_end":13588926,"line_start":85,"line_end":85,"column_start":5,"column_end":76}},{"value":"/ implementation, you can do so. See the [trait-level] docs for an","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13588931,"byte_end":13588999,"line_start":86,"line_end":86,"column_start":5,"column_end":73}},{"value":"/ example.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13589004,"byte_end":13589016,"line_start":87,"line_end":87,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13589021,"byte_end":13589024,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ This function has the same safety guarantees as the [`size_hint`]","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13589029,"byte_end":13589098,"line_start":89,"line_end":89,"column_start":5,"column_end":74}},{"value":"/ function.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13589103,"byte_end":13589116,"line_start":90,"line_end":90,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13589121,"byte_end":13589124,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ [trait-level]: trait.ExactSizeStream.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13589129,"byte_end":13589174,"line_start":92,"line_end":92,"column_start":5,"column_end":50}},{"value":"/ [`size_hint`]: trait.Stream.html#method.size_hint","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13589179,"byte_end":13589232,"line_start":93,"line_end":93,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13589237,"byte_end":13589240,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13589245,"byte_end":13589259,"line_start":95,"line_end":95,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13589264,"byte_end":13589267,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13589272,"byte_end":13589288,"line_start":97,"line_end":97,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13589293,"byte_end":13589296,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13589301,"byte_end":13589308,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"/ // a finite range knows exactly how many times it will iterate","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13589313,"byte_end":13589379,"line_start":100,"line_end":100,"column_start":5,"column_end":71}},{"value":"/ let five = 0..5;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13589384,"byte_end":13589404,"line_start":101,"line_end":101,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13589409,"byte_end":13589412,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(5, five.len());","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13589417,"byte_end":13589447,"line_start":103,"line_end":103,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13589452,"byte_end":13589459,"line_start":104,"line_end":104,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":3437},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":13590997,"byte_end":13591003,"line_start":32,"line_end":32,"column_start":11,"column_end":17},"name":"Extend","qualname":"::stream::extend::Extend","value":"Extend<A>","parent":null,"children":[{"krate":0,"index":3439}],"decl_id":null,"docs":" Extends a collection with the contents of a stream.","sig":null,"attributes":[{"value":"/ Extends a collection with the contents of a stream.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":13590068,"byte_end":13590123,"line_start":6,"line_end":6,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":13590124,"byte_end":13590127,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Streams produce a series of values asynchronously, and collections can also be thought of as a","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":13590128,"byte_end":13590226,"line_start":8,"line_end":8,"column_start":1,"column_end":99}},{"value":"/ series of values. The `Extend` trait bridges this gap, allowing you to extend a collection","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":13590227,"byte_end":13590321,"line_start":9,"line_end":9,"column_start":1,"column_end":95}},{"value":"/ asynchronously by including the contents of that stream. When extending a collection with an","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":13590322,"byte_end":13590418,"line_start":10,"line_end":10,"column_start":1,"column_end":97}},{"value":"/ already existing key, that entry is updated or, in the case of collections that permit multiple","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":13590419,"byte_end":13590518,"line_start":11,"line_end":11,"column_start":1,"column_end":100}},{"value":"/ entries with equal keys, that entry is inserted.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":13590519,"byte_end":13590571,"line_start":12,"line_end":12,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":13590572,"byte_end":13590575,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":13590576,"byte_end":13590591,"line_start":14,"line_end":14,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":13590592,"byte_end":13590595,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":13590596,"byte_end":13590603,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":13590604,"byte_end":13590643,"line_start":17,"line_end":17,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":13590644,"byte_end":13590649,"line_start":18,"line_end":18,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":13590650,"byte_end":13590680,"line_start":19,"line_end":19,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":13590681,"byte_end":13590707,"line_start":20,"line_end":20,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":13590708,"byte_end":13590711,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ let mut v: Vec<usize> = vec![1, 2];","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":13590712,"byte_end":13590751,"line_start":22,"line_end":22,"column_start":1,"column_end":40}},{"value":"/ let s = stream::repeat(3usize).take(3);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":13590752,"byte_end":13590795,"line_start":23,"line_end":23,"column_start":1,"column_end":44}},{"value":"/ stream::Extend::extend(&mut v, s).await;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":13590796,"byte_end":13590840,"line_start":24,"line_end":24,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":13590841,"byte_end":13590844,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(v, vec![1, 2, 3, 3, 3]);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":13590845,"byte_end":13590884,"line_start":26,"line_end":26,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":13590885,"byte_end":13590890,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":13590891,"byte_end":13590899,"line_start":28,"line_end":28,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":13590900,"byte_end":13590907,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":13590908,"byte_end":13590936,"line_start":30,"line_end":30,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3439},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":13591076,"byte_end":13591082,"line_start":34,"line_end":34,"column_start":8,"column_end":14},"name":"extend","qualname":"::stream::extend::Extend::extend","value":"pub fn extend<'a, T: IntoStream<Item = A> + 'a>(&'a mut Self, T)\n-> Pin<Box<dyn Future<Output = ()> + Send + 'a>> where\n<T as IntoStream>::IntoStream: Send","parent":{"krate":0,"index":3437},"children":[],"decl_id":null,"docs":" Extends a collection with the contents of a stream.\n","sig":null,"attributes":[{"value":"/ Extends a collection with the contents of a stream.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":13591013,"byte_end":13591068,"line_start":33,"line_end":33,"column_start":5,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":3442},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":13592236,"byte_end":13592242,"line_start":70,"line_end":70,"column_start":14,"column_end":20},"name":"extend","qualname":"::stream::extend::extend","value":"pub async fn extend<'a, C, T, S, '_>(&'_ mut C, S) -> /*impl Trait*/ where\nC: Extend<T>, S: IntoStream<Item = T> + 'a,\n<S as IntoStream>::IntoStream: Send","parent":null,"children":[],"decl_id":null,"docs":" Extends a collection with the contents of a stream.","sig":null,"attributes":[{"value":"/ Extends a collection with the contents of a stream.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":13591272,"byte_end":13591327,"line_start":42,"line_end":42,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":13591328,"byte_end":13591331,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ Streams produce a series of values asynchronously, and collections can also be thought of as a","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":13591332,"byte_end":13591430,"line_start":44,"line_end":44,"column_start":1,"column_end":99}},{"value":"/ series of values. The [`Extend`] trait bridges this gap, allowing you to extend a collection","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":13591431,"byte_end":13591527,"line_start":45,"line_end":45,"column_start":1,"column_end":97}},{"value":"/ asynchronously by including the contents of that stream. When extending a collection with an","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":13591528,"byte_end":13591624,"line_start":46,"line_end":46,"column_start":1,"column_end":97}},{"value":"/ already existing key, that entry is updated or, in the case of collections that permit multiple","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":13591625,"byte_end":13591724,"line_start":47,"line_end":47,"column_start":1,"column_end":100}},{"value":"/ entries with equal keys, that entry is inserted.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":13591725,"byte_end":13591777,"line_start":48,"line_end":48,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":13591778,"byte_end":13591781,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ [`Extend`]: trait.Extend.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":13591782,"byte_end":13591815,"line_start":50,"line_end":50,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":13591816,"byte_end":13591819,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":13591820,"byte_end":13591835,"line_start":52,"line_end":52,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":13591836,"byte_end":13591839,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":13591840,"byte_end":13591847,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":13591848,"byte_end":13591887,"line_start":55,"line_end":55,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":13591888,"byte_end":13591893,"line_start":56,"line_end":56,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":13591894,"byte_end":13591924,"line_start":57,"line_end":57,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":13591925,"byte_end":13591951,"line_start":58,"line_end":58,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":13591952,"byte_end":13591955,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ let mut v: Vec<usize> = vec![1, 2];","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":13591956,"byte_end":13591995,"line_start":60,"line_end":60,"column_start":1,"column_end":40}},{"value":"/ let s = stream::repeat(3usize).take(3);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":13591996,"byte_end":13592039,"line_start":61,"line_end":61,"column_start":1,"column_end":44}},{"value":"/ stream::extend(&mut v, s).await;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":13592040,"byte_end":13592076,"line_start":62,"line_end":62,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":13592077,"byte_end":13592080,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(v, vec![1, 2, 3, 3, 3]);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":13592081,"byte_end":13592120,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":13592121,"byte_end":13592126,"line_start":65,"line_end":65,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":13592127,"byte_end":13592135,"line_start":66,"line_end":66,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":13592136,"byte_end":13592143,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/extend.rs","byte_start":13592144,"byte_end":13592172,"line_start":68,"line_end":68,"column_start":1,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":3459},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13595422,"byte_end":13595432,"line_start":118,"line_end":118,"column_start":11,"column_end":21},"name":"FromStream","qualname":"::stream::from_stream::FromStream","value":"FromStream<T: Send>","parent":null,"children":[{"krate":0,"index":3461}],"decl_id":null,"docs":" Conversion from a `Stream`.","sig":null,"attributes":[{"value":"/ Conversion from a `Stream`.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13592515,"byte_end":13592546,"line_start":6,"line_end":6,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13592547,"byte_end":13592550,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ By implementing `FromStream` for a type, you define how it will be created from a stream.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13592551,"byte_end":13592644,"line_start":8,"line_end":8,"column_start":1,"column_end":94}},{"value":"/ This is common for types which describe a collection of some kind.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13592645,"byte_end":13592715,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13592716,"byte_end":13592719,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ See also: [`IntoStream`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13592720,"byte_end":13592749,"line_start":11,"line_end":11,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13592750,"byte_end":13592753,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13592754,"byte_end":13592768,"line_start":13,"line_end":13,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13592769,"byte_end":13592772,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13592773,"byte_end":13592789,"line_start":15,"line_end":15,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13592790,"byte_end":13592793,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13592794,"byte_end":13592801,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13592802,"byte_end":13592876,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13592877,"byte_end":13592882,"line_start":19,"line_end":19,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13592883,"byte_end":13592913,"line_start":20,"line_end":20,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream::{self, FromStream};","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13592914,"byte_end":13592960,"line_start":21,"line_end":21,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13592961,"byte_end":13592964,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ let five_fives = stream::repeat(5).take(5);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13592965,"byte_end":13593012,"line_start":23,"line_end":23,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13593013,"byte_end":13593016,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let v = Vec::from_stream(five_fives).await;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13593017,"byte_end":13593064,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13593065,"byte_end":13593068,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(v, vec![5, 5, 5, 5, 5]);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13593069,"byte_end":13593108,"line_start":27,"line_end":27,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13593109,"byte_end":13593114,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13593115,"byte_end":13593132,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13593133,"byte_end":13593140,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13593141,"byte_end":13593144,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Using `collect` to  implicitly use `FromStream`","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13593145,"byte_end":13593196,"line_start":32,"line_end":32,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13593197,"byte_end":13593200,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13593201,"byte_end":13593208,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13593209,"byte_end":13593283,"line_start":35,"line_end":35,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13593284,"byte_end":13593289,"line_start":36,"line_end":36,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13593290,"byte_end":13593320,"line_start":37,"line_end":37,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13593321,"byte_end":13593347,"line_start":38,"line_end":38,"column_start":1,"column_end":27}},{"value":"/ let five_fives = stream::repeat(5).take(5);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13593348,"byte_end":13593395,"line_start":39,"line_end":39,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13593396,"byte_end":13593399,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ let v: Vec<i32> = five_fives.collect().await;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13593400,"byte_end":13593449,"line_start":41,"line_end":41,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13593450,"byte_end":13593453,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(v, vec![5, 5, 5, 5, 5]);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13593454,"byte_end":13593493,"line_start":43,"line_end":43,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13593494,"byte_end":13593499,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13593500,"byte_end":13593517,"line_start":45,"line_end":45,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13593518,"byte_end":13593525,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13593526,"byte_end":13593529,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ Implementing `FromStream` for your type:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13593530,"byte_end":13593574,"line_start":48,"line_end":48,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13593575,"byte_end":13593578,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13593579,"byte_end":13593586,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13593587,"byte_end":13593617,"line_start":51,"line_end":51,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream::{self, FromStream, IntoStream};","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13593618,"byte_end":13593676,"line_start":52,"line_end":52,"column_start":1,"column_end":59}},{"value":"/ use std::pin::Pin;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13593677,"byte_end":13593699,"line_start":53,"line_end":53,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13593700,"byte_end":13593703,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ // A sample collection, that's just a wrapper over Vec<T>","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13593704,"byte_end":13593765,"line_start":55,"line_end":55,"column_start":1,"column_end":62}},{"value":"/ #[derive(Debug)]","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13593766,"byte_end":13593786,"line_start":56,"line_end":56,"column_start":1,"column_end":21}},{"value":"/ struct MyCollection(Vec<i32>);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13593787,"byte_end":13593821,"line_start":57,"line_end":57,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13593822,"byte_end":13593825,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ // Let's give it some methods so we can create one and add things","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13593826,"byte_end":13593895,"line_start":59,"line_end":59,"column_start":1,"column_end":70}},{"value":"/ // to it.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13593896,"byte_end":13593909,"line_start":60,"line_end":60,"column_start":1,"column_end":14}},{"value":"/ impl MyCollection {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13593910,"byte_end":13593933,"line_start":61,"line_end":61,"column_start":1,"column_end":24}},{"value":"/     fn new() -> MyCollection {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13593934,"byte_end":13593968,"line_start":62,"line_end":62,"column_start":1,"column_end":35}},{"value":"/         MyCollection(Vec::new())","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13593969,"byte_end":13594005,"line_start":63,"line_end":63,"column_start":1,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13594006,"byte_end":13594015,"line_start":64,"line_end":64,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13594016,"byte_end":13594019,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/     fn add(&mut self, elem: i32) {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13594020,"byte_end":13594058,"line_start":66,"line_end":66,"column_start":1,"column_end":39}},{"value":"/         self.0.push(elem);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13594059,"byte_end":13594089,"line_start":67,"line_end":67,"column_start":1,"column_end":31}},{"value":"/     }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13594090,"byte_end":13594099,"line_start":68,"line_end":68,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13594100,"byte_end":13594105,"line_start":69,"line_end":69,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13594106,"byte_end":13594109,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ // and we'll implement FromIterator","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13594110,"byte_end":13594149,"line_start":71,"line_end":71,"column_start":1,"column_end":40}},{"value":"/ impl FromStream<i32> for MyCollection {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13594150,"byte_end":13594193,"line_start":72,"line_end":72,"column_start":1,"column_end":44}},{"value":"/     fn from_stream<'a, S: IntoStream<Item = i32> + 'a>(","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13594194,"byte_end":13594253,"line_start":73,"line_end":73,"column_start":1,"column_end":60}},{"value":"/         stream: S,","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13594254,"byte_end":13594276,"line_start":74,"line_end":74,"column_start":1,"column_end":23}},{"value":"/     ) -> Pin<Box<dyn Future<Output = Self> + 'a + Send>>","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13594277,"byte_end":13594337,"line_start":75,"line_end":75,"column_start":1,"column_end":61}},{"value":"/    where","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13594338,"byte_end":13594350,"line_start":76,"line_end":76,"column_start":1,"column_end":13}},{"value":"/        <S as IntoStream>::IntoStream: Send,","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13594351,"byte_end":13594398,"line_start":77,"line_end":77,"column_start":1,"column_end":48}},{"value":"/    {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13594399,"byte_end":13594407,"line_start":78,"line_end":78,"column_start":1,"column_end":9}},{"value":"/         let stream = stream.into_stream();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13594408,"byte_end":13594454,"line_start":79,"line_end":79,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13594455,"byte_end":13594458,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/         Box::pin(async move {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13594459,"byte_end":13594492,"line_start":81,"line_end":81,"column_start":1,"column_end":34}},{"value":"/             let mut c = MyCollection::new();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13594493,"byte_end":13594541,"line_start":82,"line_end":82,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13594542,"byte_end":13594545,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/             let mut v = vec![];","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13594546,"byte_end":13594581,"line_start":84,"line_end":84,"column_start":1,"column_end":36}},{"value":"/             stream::extend(&mut v, stream).await;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13594582,"byte_end":13594635,"line_start":85,"line_end":85,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13594636,"byte_end":13594639,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/             for i in v {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13594640,"byte_end":13594668,"line_start":87,"line_end":87,"column_start":1,"column_end":29}},{"value":"/                 c.add(i);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13594669,"byte_end":13594698,"line_start":88,"line_end":88,"column_start":1,"column_end":30}},{"value":"/             }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13594699,"byte_end":13594716,"line_start":89,"line_end":89,"column_start":1,"column_end":18}},{"value":"/             c","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13594717,"byte_end":13594734,"line_start":90,"line_end":90,"column_start":1,"column_end":18}},{"value":"/         })","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13594735,"byte_end":13594749,"line_start":91,"line_end":91,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13594750,"byte_end":13594759,"line_start":92,"line_end":92,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13594760,"byte_end":13594765,"line_start":93,"line_end":93,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13594766,"byte_end":13594769,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13594770,"byte_end":13594844,"line_start":95,"line_end":95,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13594845,"byte_end":13594850,"line_start":96,"line_end":96,"column_start":1,"column_end":6}},{"value":"/ // Now we can make a new stream...","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13594851,"byte_end":13594889,"line_start":97,"line_end":97,"column_start":1,"column_end":39}},{"value":"/ let stream = stream::repeat(5).take(5);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13594890,"byte_end":13594933,"line_start":98,"line_end":98,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13594934,"byte_end":13594937,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ // ...and make a MyCollection out of it","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13594938,"byte_end":13594981,"line_start":100,"line_end":100,"column_start":1,"column_end":44}},{"value":"/ let c = MyCollection::from_stream(stream).await;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13594982,"byte_end":13595034,"line_start":101,"line_end":101,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13595035,"byte_end":13595038,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(c.0, vec![5, 5, 5, 5, 5]);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13595039,"byte_end":13595080,"line_start":103,"line_end":103,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13595081,"byte_end":13595084,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ // collect works too!","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13595085,"byte_end":13595110,"line_start":105,"line_end":105,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13595111,"byte_end":13595114,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::repeat(5).take(5);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13595115,"byte_end":13595158,"line_start":107,"line_end":107,"column_start":1,"column_end":44}},{"value":"/ let c: MyCollection = stream.collect().await;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13595159,"byte_end":13595208,"line_start":108,"line_end":108,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13595209,"byte_end":13595212,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(c.0, vec![5, 5, 5, 5, 5]);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13595213,"byte_end":13595254,"line_start":110,"line_end":110,"column_start":1,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13595255,"byte_end":13595260,"line_start":111,"line_end":111,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13595261,"byte_end":13595278,"line_start":112,"line_end":112,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13595279,"byte_end":13595286,"line_start":113,"line_end":113,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13595287,"byte_end":13595290,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ [`IntoStream`]: trait.IntoStream.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13595291,"byte_end":13595332,"line_start":115,"line_end":115,"column_start":1,"column_end":42}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13595333,"byte_end":13595361,"line_start":116,"line_end":116,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3461},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13595957,"byte_end":13595968,"line_start":139,"line_end":139,"column_start":8,"column_end":19},"name":"from_stream","qualname":"::stream::from_stream::FromStream::from_stream","value":"pub fn from_stream<'a, S: IntoStream<Item = T> + 'a>(S)\n-> Pin<Box<dyn Future<Output = Self> + Send + 'a>> where\n<S as IntoStream>::IntoStream: Send","parent":{"krate":0,"index":3459},"children":[],"decl_id":null,"docs":" Creates a value from a stream.","sig":null,"attributes":[{"value":"/ Creates a value from a stream.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13595448,"byte_end":13595482,"line_start":119,"line_end":119,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13595487,"byte_end":13595490,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13595495,"byte_end":13595509,"line_start":121,"line_end":121,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13595514,"byte_end":13595517,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13595522,"byte_end":13595538,"line_start":123,"line_end":123,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13595543,"byte_end":13595546,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13595551,"byte_end":13595558,"line_start":125,"line_end":125,"column_start":5,"column_end":12}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13595563,"byte_end":13595637,"line_start":126,"line_end":126,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13595642,"byte_end":13595647,"line_start":127,"line_end":127,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13595652,"byte_end":13595682,"line_start":128,"line_end":128,"column_start":5,"column_end":35}},{"value":"/ use async_std::stream::{self, FromStream};","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13595687,"byte_end":13595733,"line_start":129,"line_end":129,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13595738,"byte_end":13595741,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ let five_fives = stream::repeat(5).take(5);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13595746,"byte_end":13595793,"line_start":131,"line_end":131,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13595798,"byte_end":13595801,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ let v = Vec::from_stream(five_fives).await;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13595806,"byte_end":13595853,"line_start":133,"line_end":133,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13595858,"byte_end":13595861,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(v, vec![5, 5, 5, 5, 5]);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13595866,"byte_end":13595905,"line_start":135,"line_end":135,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13595910,"byte_end":13595915,"line_start":136,"line_end":136,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13595920,"byte_end":13595937,"line_start":137,"line_end":137,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_stream.rs","byte_start":13595942,"byte_end":13595949,"line_start":138,"line_end":138,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":3468},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/fused_stream.rs","byte_start":13597011,"byte_end":13597022,"line_start":19,"line_end":19,"column_start":11,"column_end":22},"name":"FusedStream","qualname":"::stream::fused_stream::FusedStream","value":"FusedStream: Stream","parent":null,"children":[],"decl_id":null,"docs":" A stream that always continues to yield `None` when exhausted.","sig":null,"attributes":[{"value":"/ A stream that always continues to yield `None` when exhausted.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/fused_stream.rs","byte_start":13596166,"byte_end":13596232,"line_start":3,"line_end":3,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/fused_stream.rs","byte_start":13596233,"byte_end":13596236,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Calling next on a fused stream that has returned `None` once is guaranteed","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/fused_stream.rs","byte_start":13596237,"byte_end":13596315,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"/ to return [`None`] again. This trait should be implemented by all streams","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/fused_stream.rs","byte_start":13596316,"byte_end":13596393,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ that behave this way because it allows optimizing [`Stream::fuse`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/fused_stream.rs","byte_start":13596394,"byte_end":13596465,"line_start":7,"line_end":7,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/fused_stream.rs","byte_start":13596466,"byte_end":13596469,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Note: In general, you should not use `FusedStream` in generic bounds if","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/fused_stream.rs","byte_start":13596470,"byte_end":13596545,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/ you need a fused stream. Instead, you should just call [`Stream::fuse`]","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/fused_stream.rs","byte_start":13596546,"byte_end":13596621,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ on the stream. If the stream is already fused, the additional [`Fuse`]","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/fused_stream.rs","byte_start":13596622,"byte_end":13596696,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ wrapper will be a no-op with no performance penalty.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/fused_stream.rs","byte_start":13596697,"byte_end":13596753,"line_start":12,"line_end":12,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/fused_stream.rs","byte_start":13596754,"byte_end":13596757,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/fused_stream.rs","byte_start":13596758,"byte_end":13596838,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/ [`Stream::fuse`]: trait.Stream.html#method.fuse","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/fused_stream.rs","byte_start":13596839,"byte_end":13596890,"line_start":15,"line_end":15,"column_start":1,"column_end":52}},{"value":"/ [`Fuse`]: struct.Fuse.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/fused_stream.rs","byte_start":13596891,"byte_end":13596921,"line_start":16,"line_end":16,"column_start":1,"column_end":31}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/fused_stream.rs","byte_start":13596922,"byte_end":13596950,"line_start":17,"line_end":17,"column_start":1,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":3498},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":13598421,"byte_end":13598429,"line_start":46,"line_end":46,"column_start":8,"column_end":16},"name":"interval","qualname":"::stream::interval::interval","value":"pub fn interval(Duration) -> Interval","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream that yields at a set interval.","sig":null,"attributes":[{"value":"/ Creates a new stream that yields at a set interval.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":13597270,"byte_end":13597325,"line_start":9,"line_end":9,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":13597326,"byte_end":13597329,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The stream first yields after `dur`, and continues to yield every","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":13597330,"byte_end":13597399,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"/ `dur` after that. The stream accounts for time elapsed between calls, and","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":13597400,"byte_end":13597477,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ will adjust accordingly to prevent time skews.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":13597478,"byte_end":13597528,"line_start":13,"line_end":13,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":13597529,"byte_end":13597532,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Each interval may be slightly longer than the specified duration, but never","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":13597533,"byte_end":13597612,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ less.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":13597613,"byte_end":13597622,"line_start":16,"line_end":16,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":13597623,"byte_end":13597626,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Note that intervals are not intended for high resolution timers, but rather","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":13597627,"byte_end":13597706,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ they will likely fire some granularity after the exact instant that they're","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":13597707,"byte_end":13597786,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/ otherwise indicated to fire at.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":13597787,"byte_end":13597822,"line_start":20,"line_end":20,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":13597823,"byte_end":13597826,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ See also: [`task::sleep`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":13597827,"byte_end":13597857,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":13597858,"byte_end":13597861,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [`task::sleep`]: ../task/fn.sleep.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":13597862,"byte_end":13597904,"line_start":24,"line_end":24,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":13597905,"byte_end":13597908,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":13597909,"byte_end":13597923,"line_start":26,"line_end":26,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":13597924,"byte_end":13597927,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ Basic example:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":13597928,"byte_end":13597946,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":13597947,"byte_end":13597950,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":13597951,"byte_end":13597964,"line_start":30,"line_end":30,"column_start":1,"column_end":14}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":13597965,"byte_end":13597995,"line_start":31,"line_end":31,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":13597996,"byte_end":13598022,"line_start":32,"line_end":32,"column_start":1,"column_end":27}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":13598023,"byte_end":13598051,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":13598052,"byte_end":13598055,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":13598056,"byte_end":13598130,"line_start":35,"line_end":35,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":13598131,"byte_end":13598136,"line_start":36,"line_end":36,"column_start":1,"column_end":6}},{"value":"/ let mut interval = stream::interval(Duration::from_secs(4));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":13598137,"byte_end":13598201,"line_start":37,"line_end":37,"column_start":1,"column_end":65}},{"value":"/ while let Some(_) = interval.next().await {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":13598202,"byte_end":13598249,"line_start":38,"line_end":38,"column_start":1,"column_end":48}},{"value":"/     println!(\"prints every four seconds\");","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":13598250,"byte_end":13598296,"line_start":39,"line_end":39,"column_start":1,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":13598297,"byte_end":13598302,"line_start":40,"line_end":40,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":13598303,"byte_end":13598308,"line_start":41,"line_end":41,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":13598309,"byte_end":13598326,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":13598327,"byte_end":13598334,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":13598335,"byte_end":13598363,"line_start":44,"line_end":44,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":3688},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":13598840,"byte_end":13598848,"line_start":62,"line_end":62,"column_start":12,"column_end":20},"name":"Interval","qualname":"::stream::interval::Interval","value":"Interval {  }","parent":null,"children":[{"krate":0,"index":3689},{"krate":0,"index":3690}],"decl_id":null,"docs":" A stream representing notifications at fixed interval","sig":null,"attributes":[{"value":"/ A stream representing notifications at fixed interval","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":13598539,"byte_end":13598596,"line_start":53,"line_end":53,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":13598597,"byte_end":13598600,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ This stream is created by the [`interval`] function. See its","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":13598601,"byte_end":13598665,"line_start":55,"line_end":55,"column_start":1,"column_end":65}},{"value":"/ documentation for more.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":13598666,"byte_end":13598693,"line_start":56,"line_end":56,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":13598694,"byte_end":13598697,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ [`interval`]: fn.interval.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":13598698,"byte_end":13598732,"line_start":58,"line_end":58,"column_start":1,"column_end":35}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":13598733,"byte_end":13598761,"line_start":59,"line_end":59,"column_start":1,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":3506},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/into_stream.rs","byte_start":13599834,"byte_end":13599844,"line_start":18,"line_end":18,"column_start":11,"column_end":21},"name":"IntoStream","qualname":"::stream::into_stream::IntoStream","value":"IntoStream","parent":null,"children":[{"krate":0,"index":3507},{"krate":0,"index":3508},{"krate":0,"index":3509}],"decl_id":null,"docs":" Conversion into a `Stream`.","sig":null,"attributes":[{"value":"/ Conversion into a `Stream`.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/into_stream.rs","byte_start":13599324,"byte_end":13599355,"line_start":3,"line_end":3,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/into_stream.rs","byte_start":13599356,"byte_end":13599359,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ By implementing `IntoIterator` for a type, you define how it will be","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/into_stream.rs","byte_start":13599360,"byte_end":13599432,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ converted to an iterator. This is common for types which describe a","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/into_stream.rs","byte_start":13599433,"byte_end":13599504,"line_start":6,"line_end":6,"column_start":1,"column_end":72}},{"value":"/ collection of some kind.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/into_stream.rs","byte_start":13599505,"byte_end":13599533,"line_start":7,"line_end":7,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/into_stream.rs","byte_start":13599534,"byte_end":13599537,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`from_stream`]: #tymethod.from_stream","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/into_stream.rs","byte_start":13599538,"byte_end":13599580,"line_start":9,"line_end":9,"column_start":1,"column_end":43}},{"value":"/ [`Stream`]: trait.Stream.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/into_stream.rs","byte_start":13599581,"byte_end":13599614,"line_start":10,"line_end":10,"column_start":1,"column_end":34}},{"value":"/ [`collect`]: trait.Stream.html#method.collect","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/into_stream.rs","byte_start":13599615,"byte_end":13599664,"line_start":11,"line_end":11,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/into_stream.rs","byte_start":13599665,"byte_end":13599668,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ See also: [`FromStream`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/into_stream.rs","byte_start":13599669,"byte_end":13599698,"line_start":13,"line_end":13,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/into_stream.rs","byte_start":13599699,"byte_end":13599702,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`FromStream`]: trait.FromStream.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/into_stream.rs","byte_start":13599703,"byte_end":13599744,"line_start":15,"line_end":15,"column_start":1,"column_end":42}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/into_stream.rs","byte_start":13599745,"byte_end":13599773,"line_start":16,"line_end":16,"column_start":1,"column_end":29}}]},{"kind":"Type","id":{"krate":0,"index":3507},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/into_stream.rs","byte_start":13599910,"byte_end":13599914,"line_start":20,"line_end":20,"column_start":10,"column_end":14},"name":"Item","qualname":"::stream::into_stream::IntoStream::Item","value":"type Item;","parent":{"krate":0,"index":3506},"children":[],"decl_id":null,"docs":" The type of the elements being iterated over.\n","sig":null,"attributes":[{"value":"/ The type of the elements being iterated over.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/into_stream.rs","byte_start":13599851,"byte_end":13599900,"line_start":19,"line_end":19,"column_start":5,"column_end":54}}]},{"kind":"Type","id":{"krate":0,"index":3508},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/into_stream.rs","byte_start":13599981,"byte_end":13599991,"line_start":23,"line_end":23,"column_start":10,"column_end":20},"name":"IntoStream","qualname":"::stream::into_stream::IntoStream::IntoStream","value":"type IntoStream: Stream<Item = Self::Item>;","parent":{"krate":0,"index":3506},"children":[],"decl_id":null,"docs":" Which kind of stream are we turning this into?\n","sig":null,"attributes":[{"value":"/ Which kind of stream are we turning this into?","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/into_stream.rs","byte_start":13599921,"byte_end":13599971,"line_start":22,"line_end":22,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3509},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/into_stream.rs","byte_start":13600067,"byte_end":13600078,"line_start":26,"line_end":26,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::stream::into_stream::IntoStream::into_stream","value":"pub fn into_stream(Self) -> Self::IntoStream","parent":{"krate":0,"index":3506},"children":[],"decl_id":null,"docs":" Creates a stream from a value.\n","sig":null,"attributes":[{"value":"/ Creates a stream from a value.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/into_stream.rs","byte_start":13600025,"byte_end":13600059,"line_start":25,"line_end":25,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":3693},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":13600631,"byte_end":13600638,"line_start":14,"line_end":14,"column_start":12,"column_end":19},"name":"Pending","qualname":"::stream::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":3695}],"decl_id":null,"docs":" A stream that never returns any items.","sig":null,"attributes":[{"value":"/ A stream that never returns any items.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":13600427,"byte_end":13600469,"line_start":7,"line_end":7,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":13600470,"byte_end":13600473,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This stream is created by the [`pending`] function. See its","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":13600474,"byte_end":13600537,"line_start":9,"line_end":9,"column_start":1,"column_end":64}},{"value":"/ documentation for more.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":13600538,"byte_end":13600565,"line_start":10,"line_end":10,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":13600566,"byte_end":13600569,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`pending`]: fn.pending.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":13600570,"byte_end":13600602,"line_start":12,"line_end":12,"column_start":1,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":3542},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":13601200,"byte_end":13601207,"line_start":42,"line_end":42,"column_start":8,"column_end":15},"name":"pending","qualname":"::stream::pending::pending","value":"pub fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that never returns any items.","sig":null,"attributes":[{"value":"/ Creates a stream that never returns any items.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":13600676,"byte_end":13600726,"line_start":18,"line_end":18,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":13600727,"byte_end":13600730,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Pending` when polled.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":13600731,"byte_end":13600796,"line_start":20,"line_end":20,"column_start":1,"column_end":66}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":13600797,"byte_end":13600811,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":13600812,"byte_end":13600815,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":13600816,"byte_end":13600823,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":13600824,"byte_end":13600863,"line_start":24,"line_end":24,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":13600864,"byte_end":13600869,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":13600870,"byte_end":13600898,"line_start":26,"line_end":26,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":13600899,"byte_end":13600902,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":13600903,"byte_end":13600933,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":13600934,"byte_end":13600960,"line_start":29,"line_end":29,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":13600961,"byte_end":13600964,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let dur = Duration::from_millis(100);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":13600965,"byte_end":13601006,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/ let mut s = stream::pending::<()>().timeout(dur);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":13601007,"byte_end":13601060,"line_start":32,"line_end":32,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":13601061,"byte_end":13601064,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let item = s.next().await;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":13601065,"byte_end":13601095,"line_start":34,"line_end":34,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":13601096,"byte_end":13601099,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ assert!(item.is_some());","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":13601100,"byte_end":13601128,"line_start":36,"line_end":36,"column_start":1,"column_end":29}},{"value":"/ assert!(item.unwrap().is_err());","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":13601129,"byte_end":13601165,"line_start":37,"line_end":37,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":13601166,"byte_end":13601169,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":13601170,"byte_end":13601175,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":13601176,"byte_end":13601184,"line_start":40,"line_end":40,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":13601185,"byte_end":13601192,"line_start":41,"line_end":41,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":3566},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/product.rs","byte_start":13602429,"byte_end":13602436,"line_start":18,"line_end":18,"column_start":11,"column_end":18},"name":"Product","qualname":"::stream::product::Product","value":"Product<A = Self>: Sized","parent":null,"children":[{"krate":0,"index":3568}],"decl_id":null,"docs":" Trait to represent types that can be created by multiplying the elements of a stream.","sig":null,"attributes":[{"value":"/ Trait to represent types that can be created by multiplying the elements of a stream.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/product.rs","byte_start":13601809,"byte_end":13601898,"line_start":6,"line_end":6,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/product.rs","byte_start":13601899,"byte_end":13601902,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This trait is used to implement the [`product`] method on streams. Types which","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/product.rs","byte_start":13601903,"byte_end":13601985,"line_start":8,"line_end":8,"column_start":1,"column_end":83}},{"value":"/ implement the trait can be generated by the [`product`] method. Like","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/product.rs","byte_start":13601986,"byte_end":13602058,"line_start":9,"line_end":9,"column_start":1,"column_end":73}},{"value":"/ [`FromStream`] this trait should rarely be called directly and instead","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/product.rs","byte_start":13602059,"byte_end":13602133,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ interacted with through [`Stream::product`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/product.rs","byte_start":13602134,"byte_end":13602182,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/product.rs","byte_start":13602183,"byte_end":13602186,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`product`]: trait.Product.html#tymethod.product","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/product.rs","byte_start":13602187,"byte_end":13602239,"line_start":13,"line_end":13,"column_start":1,"column_end":53}},{"value":"/ [`FromStream`]: trait.FromStream.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/product.rs","byte_start":13602240,"byte_end":13602281,"line_start":14,"line_end":14,"column_start":1,"column_end":42}},{"value":"/ [`Stream::product`]: trait.Stream.html#method.product","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/product.rs","byte_start":13602282,"byte_end":13602339,"line_start":15,"line_end":15,"column_start":1,"column_end":58}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/product.rs","byte_start":13602340,"byte_end":13602368,"line_start":16,"line_end":16,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3568},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/product.rs","byte_start":13602572,"byte_end":13602579,"line_start":21,"line_end":21,"column_start":8,"column_end":15},"name":"product","qualname":"::stream::product::Product::product","value":"pub fn product<'a, S>(S) -> Pin<Box<dyn Future<Output = Self> + 'a>> where\nS: Stream<Item = A> + 'a","parent":{"krate":0,"index":3566},"children":[],"decl_id":null,"docs":" Method which takes a stream and generates `Self` from the elements by\n multiplying the items.\n","sig":null,"attributes":[{"value":"/ Method which takes a stream and generates `Self` from the elements by","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/product.rs","byte_start":13602460,"byte_end":13602533,"line_start":19,"line_end":19,"column_start":5,"column_end":78}},{"value":"/ multiplying the items.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/product.rs","byte_start":13602538,"byte_end":13602564,"line_start":20,"line_end":20,"column_start":5,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":3602},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/successors.rs","byte_start":13605178,"byte_end":13605188,"line_start":32,"line_end":32,"column_start":8,"column_end":18},"name":"successors","qualname":"::stream::successors::successors","value":"pub fn successors<F, T>(Option<T>, F) -> Successors<F, T> where F: FnMut(&T)\n-> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream where to produce each new element a closure is called with the previous\n value.","sig":null,"attributes":[{"value":"/ Creates a new stream where to produce each new element a closure is called with the previous","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/successors.rs","byte_start":13604564,"byte_end":13604660,"line_start":9,"line_end":9,"column_start":1,"column_end":97}},{"value":"/ value.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/successors.rs","byte_start":13604661,"byte_end":13604671,"line_start":10,"line_end":10,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/successors.rs","byte_start":13604672,"byte_end":13604675,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/successors.rs","byte_start":13604676,"byte_end":13604690,"line_start":12,"line_end":12,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/successors.rs","byte_start":13604691,"byte_end":13604694,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/successors.rs","byte_start":13604695,"byte_end":13604702,"line_start":14,"line_end":14,"column_start":1,"column_end":8}},{"value":"/ # fn main() { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/successors.rs","byte_start":13604703,"byte_end":13604754,"line_start":15,"line_end":15,"column_start":1,"column_end":52}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/successors.rs","byte_start":13604755,"byte_end":13604760,"line_start":16,"line_end":16,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/successors.rs","byte_start":13604761,"byte_end":13604791,"line_start":17,"line_end":17,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/successors.rs","byte_start":13604792,"byte_end":13604818,"line_start":18,"line_end":18,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/successors.rs","byte_start":13604819,"byte_end":13604822,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ let mut s = stream::successors(Some(22), |&val| Some(val + 1));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/successors.rs","byte_start":13604823,"byte_end":13604890,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/successors.rs","byte_start":13604891,"byte_end":13604894,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, Some(22));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/successors.rs","byte_start":13604895,"byte_end":13604936,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(s.next().await, Some(23));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/successors.rs","byte_start":13604937,"byte_end":13604978,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(s.next().await, Some(24));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/successors.rs","byte_start":13604979,"byte_end":13605020,"line_start":24,"line_end":24,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(s.next().await, Some(25));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/successors.rs","byte_start":13605021,"byte_end":13605062,"line_start":25,"line_end":25,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/successors.rs","byte_start":13605063,"byte_end":13605066,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/successors.rs","byte_start":13605067,"byte_end":13605072,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ # }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/successors.rs","byte_start":13605073,"byte_end":13605083,"line_start":28,"line_end":28,"column_start":1,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/successors.rs","byte_start":13605084,"byte_end":13605091,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/successors.rs","byte_start":13605092,"byte_end":13605120,"line_start":30,"line_end":30,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":9693},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/successors.rs","byte_start":13605692,"byte_end":13605702,"line_start":49,"line_end":49,"column_start":16,"column_end":26},"name":"Successors","qualname":"::stream::successors::Successors","value":"Successors {  }","parent":null,"children":[{"krate":0,"index":9696},{"krate":0,"index":9697}],"decl_id":null,"docs":" A stream that yields elements by calling an async closure with the previous value as an\n argument","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":14046700,"byte_end":14046709,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":3620},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/sum.rs","byte_start":13607024,"byte_end":13607027,"line_start":18,"line_end":18,"column_start":11,"column_end":14},"name":"Sum","qualname":"::stream::sum::Sum","value":"Sum<A = Self>: Sized","parent":null,"children":[{"krate":0,"index":3622}],"decl_id":null,"docs":" Trait to represent types that can be created by summing up a stream.","sig":null,"attributes":[{"value":"/ Trait to represent types that can be created by summing up a stream.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/sum.rs","byte_start":13606453,"byte_end":13606525,"line_start":6,"line_end":6,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/sum.rs","byte_start":13606526,"byte_end":13606529,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This trait is used to implement the [`sum`] method on streams. Types which","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/sum.rs","byte_start":13606530,"byte_end":13606608,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ implement the trait can be generated by the [`sum`] method. Like","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/sum.rs","byte_start":13606609,"byte_end":13606677,"line_start":9,"line_end":9,"column_start":1,"column_end":69}},{"value":"/ [`FromStream`] this trait should rarely be called directly and instead","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/sum.rs","byte_start":13606678,"byte_end":13606752,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ interacted with through [`Stream::sum`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/sum.rs","byte_start":13606753,"byte_end":13606797,"line_start":11,"line_end":11,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/sum.rs","byte_start":13606798,"byte_end":13606801,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`sum`]: trait.Sum.html#tymethod.sum","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/sum.rs","byte_start":13606802,"byte_end":13606842,"line_start":13,"line_end":13,"column_start":1,"column_end":41}},{"value":"/ [`FromStream`]: trait.FromStream.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/sum.rs","byte_start":13606843,"byte_end":13606884,"line_start":14,"line_end":14,"column_start":1,"column_end":42}},{"value":"/ [`Stream::sum`]: trait.Stream.html#method.sum","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/sum.rs","byte_start":13606885,"byte_end":13606934,"line_start":15,"line_end":15,"column_start":1,"column_end":50}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/sum.rs","byte_start":13606935,"byte_end":13606963,"line_start":16,"line_end":16,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3622},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/sum.rs","byte_start":13607164,"byte_end":13607167,"line_start":21,"line_end":21,"column_start":8,"column_end":11},"name":"sum","qualname":"::stream::sum::Sum::sum","value":"pub fn sum<'a, S>(S) -> Pin<Box<dyn Future<Output = Self> + 'a>> where\nS: Stream<Item = A> + 'a","parent":{"krate":0,"index":3620},"children":[],"decl_id":null,"docs":" Method which takes a stream and generates `Self` from the elements by\n \"summing up\" the items.\n","sig":null,"attributes":[{"value":"/ Method which takes a stream and generates `Self` from the elements by","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/sum.rs","byte_start":13607051,"byte_end":13607124,"line_start":19,"line_end":19,"column_start":5,"column_end":78}},{"value":"/ \"summing up\" the items.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/sum.rs","byte_start":13607129,"byte_end":13607156,"line_start":20,"line_end":20,"column_start":5,"column_end":32}}]},{"kind":"Mod","id":{"krate":0,"index":4279},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","parent":null,"children":[{"krate":0,"index":4280},{"krate":0,"index":4316},{"krate":0,"index":4317},{"krate":0,"index":4320},{"krate":0,"index":4323},{"krate":0,"index":4326},{"krate":0,"index":4329},{"krate":0,"index":4332},{"krate":0,"index":4335},{"krate":0,"index":4336},{"krate":0,"index":4339},{"krate":0,"index":4342},{"krate":0,"index":4345},{"krate":0,"index":4348},{"krate":0,"index":4349},{"krate":0,"index":4352},{"krate":0,"index":4355},{"krate":0,"index":4358},{"krate":0,"index":4361},{"krate":0,"index":4362},{"krate":0,"index":4365},{"krate":0,"index":4368},{"krate":0,"index":4369},{"krate":0,"index":4370},{"krate":0,"index":4373},{"krate":0,"index":4376},{"krate":0,"index":4379},{"krate":0,"index":4380},{"krate":0,"index":4383},{"krate":0,"index":4386},{"krate":0,"index":4387},{"krate":0,"index":4412},{"krate":0,"index":4606},{"krate":0,"index":4959},{"krate":0,"index":5006},{"krate":0,"index":5203},{"krate":0,"index":5229},{"krate":0,"index":5304},{"krate":0,"index":5366},{"krate":0,"index":5413},{"krate":0,"index":5481},{"krate":0,"index":5516},{"krate":0,"index":5544},{"krate":0,"index":5605},{"krate":0,"index":5606},{"krate":0,"index":5609},{"krate":0,"index":5612},{"krate":0,"index":5613},{"krate":0,"index":5616},{"krate":0,"index":5619},{"krate":0,"index":5620},{"krate":0,"index":5623},{"krate":0,"index":5626},{"krate":0,"index":5627},{"krate":0,"index":5630},{"krate":0,"index":5633},{"krate":0,"index":5636},{"krate":0,"index":5676},{"krate":0,"index":5713},{"krate":0,"index":5760},{"krate":0,"index":5778}],"decl_id":null,"docs":" Traits, helpers, and type definitions for core I/O functionality.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/utils.rs","byte_start":16418,"byte_end":16441,"line_start":207,"line_end":207,"column_start":13,"column_end":36}},{"value":"/ Traits, helpers, and type definitions for core I/O functionality.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13608995,"byte_end":13609064,"line_start":1,"line_end":1,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13609065,"byte_end":13609068,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The `async_std::io` module contains a number of common things you'll need","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13609069,"byte_end":13609146,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/ when doing input and output. The most core part of this module is","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13609147,"byte_end":13609216,"line_start":4,"line_end":4,"column_start":1,"column_end":70}},{"value":"/ the [`Read`] and [`Write`] traits, which provide the","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13609217,"byte_end":13609273,"line_start":5,"line_end":5,"column_start":1,"column_end":57}},{"value":"/ most general interface for reading and writing input and output.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13609274,"byte_end":13609342,"line_start":6,"line_end":6,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13609343,"byte_end":13609346,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This module is an async version of [`std::io`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13609347,"byte_end":13609398,"line_start":8,"line_end":8,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13609399,"byte_end":13609402,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`std::io`]: https://doc.rust-lang.org/std/io/index.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13609403,"byte_end":13609463,"line_start":10,"line_end":10,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13609464,"byte_end":13609467,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Read and Write","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13609468,"byte_end":13609488,"line_start":12,"line_end":12,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13609489,"byte_end":13609492,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Because they are traits, [`Read`] and [`Write`] are implemented by a number","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13609493,"byte_end":13609572,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ of other types, and you can implement them for your types too. As such,","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13609573,"byte_end":13609648,"line_start":15,"line_end":15,"column_start":1,"column_end":76}},{"value":"/ you'll see a few different types of I/O throughout the documentation in","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13609649,"byte_end":13609724,"line_start":16,"line_end":16,"column_start":1,"column_end":76}},{"value":"/ this module: [`File`]s, [`TcpStream`]s, and sometimes even [`Vec<T>`]s. For","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13609725,"byte_end":13609804,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ example, [`Read`] adds a [`read`][`Read::read`] method, which we can use on","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13609805,"byte_end":13609884,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ [`File`]s:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13609885,"byte_end":13609899,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13609900,"byte_end":13609903,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13609904,"byte_end":13609917,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13609918,"byte_end":13609946,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13609947,"byte_end":13609977,"line_start":23,"line_end":23,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13609978,"byte_end":13609981,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13609982,"byte_end":13610056,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13610057,"byte_end":13610062,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ let mut f = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13610063,"byte_end":13610108,"line_start":27,"line_end":27,"column_start":1,"column_end":46}},{"value":"/ let mut buffer = [0; 10];","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13610109,"byte_end":13610138,"line_start":28,"line_end":28,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13610139,"byte_end":13610142,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ // read up to 10 bytes","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13610143,"byte_end":13610169,"line_start":30,"line_end":30,"column_start":1,"column_end":27}},{"value":"/ let n = f.read(&mut buffer).await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13610170,"byte_end":13610209,"line_start":31,"line_end":31,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13610210,"byte_end":13610213,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ println!(\"The bytes: {:?}\", &buffer[..n]);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13610214,"byte_end":13610260,"line_start":33,"line_end":33,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13610261,"byte_end":13610266,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13610267,"byte_end":13610284,"line_start":35,"line_end":35,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13610285,"byte_end":13610292,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13610293,"byte_end":13610296,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [`Read`] and [`Write`] are so important, implementors of the two traits have a","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13610297,"byte_end":13610379,"line_start":38,"line_end":38,"column_start":1,"column_end":83}},{"value":"/ nickname: readers and writers. So you'll sometimes see 'a reader' instead","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13610380,"byte_end":13610457,"line_start":39,"line_end":39,"column_start":1,"column_end":78}},{"value":"/ of 'a type that implements the [`Read`] trait'. Much easier!","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13610458,"byte_end":13610522,"line_start":40,"line_end":40,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13610523,"byte_end":13610526,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ ## Seek and BufRead","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13610527,"byte_end":13610550,"line_start":42,"line_end":42,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13610551,"byte_end":13610554,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ Beyond that, there are two important traits that are provided: [`Seek`]","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13610555,"byte_end":13610630,"line_start":44,"line_end":44,"column_start":1,"column_end":76}},{"value":"/ and [`BufRead`]. Both of these build on top of a reader to control","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13610631,"byte_end":13610701,"line_start":45,"line_end":45,"column_start":1,"column_end":71}},{"value":"/ how the reading happens. [`Seek`] lets you control where the next byte is","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13610702,"byte_end":13610779,"line_start":46,"line_end":46,"column_start":1,"column_end":78}},{"value":"/ coming from:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13610780,"byte_end":13610796,"line_start":47,"line_end":47,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13610797,"byte_end":13610800,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13610801,"byte_end":13610814,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13610815,"byte_end":13610843,"line_start":50,"line_end":50,"column_start":1,"column_end":29}},{"value":"/ use async_std::io::SeekFrom;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13610844,"byte_end":13610876,"line_start":51,"line_end":51,"column_start":1,"column_end":33}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13610877,"byte_end":13610907,"line_start":52,"line_end":52,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13610908,"byte_end":13610911,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13610912,"byte_end":13610986,"line_start":54,"line_end":54,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13610987,"byte_end":13610992,"line_start":55,"line_end":55,"column_start":1,"column_end":6}},{"value":"/ let mut f = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13610993,"byte_end":13611038,"line_start":56,"line_end":56,"column_start":1,"column_end":46}},{"value":"/ let mut buffer = [0; 10];","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13611039,"byte_end":13611068,"line_start":57,"line_end":57,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13611069,"byte_end":13611072,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ // skip to the last 10 bytes of the file","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13611073,"byte_end":13611117,"line_start":59,"line_end":59,"column_start":1,"column_end":45}},{"value":"/ f.seek(SeekFrom::End(-10)).await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13611118,"byte_end":13611156,"line_start":60,"line_end":60,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13611157,"byte_end":13611160,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ // read up to 10 bytes","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13611161,"byte_end":13611187,"line_start":62,"line_end":62,"column_start":1,"column_end":27}},{"value":"/ let n = f.read(&mut buffer).await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13611188,"byte_end":13611227,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13611228,"byte_end":13611231,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ println!(\"The bytes: {:?}\", &buffer[..n]);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13611232,"byte_end":13611278,"line_start":65,"line_end":65,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13611279,"byte_end":13611284,"line_start":66,"line_end":66,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13611285,"byte_end":13611302,"line_start":67,"line_end":67,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13611303,"byte_end":13611310,"line_start":68,"line_end":68,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13611311,"byte_end":13611314,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [`BufRead`] uses an internal buffer to provide a number of other ways to read, but","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13611315,"byte_end":13611401,"line_start":70,"line_end":70,"column_start":1,"column_end":87}},{"value":"/ to show it off, we'll need to talk about buffers in general. Keep reading!","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13611402,"byte_end":13611480,"line_start":71,"line_end":71,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13611481,"byte_end":13611484,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ## BufReader and BufWriter","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13611485,"byte_end":13611515,"line_start":73,"line_end":73,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13611516,"byte_end":13611519,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ Byte-based interfaces are unwieldy and can be inefficient, as we'd need to be","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13611520,"byte_end":13611601,"line_start":75,"line_end":75,"column_start":1,"column_end":82}},{"value":"/ making near-constant calls to the operating system. To help with this,","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13611602,"byte_end":13611676,"line_start":76,"line_end":76,"column_start":1,"column_end":75}},{"value":"/ `std::io` comes with two structs, [`BufReader`] and [`BufWriter`], which wrap","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13611677,"byte_end":13611758,"line_start":77,"line_end":77,"column_start":1,"column_end":82}},{"value":"/ readers and writers. The wrapper uses a buffer, reducing the number of","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13611759,"byte_end":13611833,"line_start":78,"line_end":78,"column_start":1,"column_end":75}},{"value":"/ calls and providing nicer methods for accessing exactly what you want.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13611834,"byte_end":13611908,"line_start":79,"line_end":79,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13611909,"byte_end":13611912,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ For example, [`BufReader`] works with the [`BufRead`] trait to add extra","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13611913,"byte_end":13611989,"line_start":81,"line_end":81,"column_start":1,"column_end":77}},{"value":"/ methods to any reader:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13611990,"byte_end":13612016,"line_start":82,"line_end":82,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13612017,"byte_end":13612020,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13612021,"byte_end":13612034,"line_start":84,"line_end":84,"column_start":1,"column_end":14}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13612035,"byte_end":13612063,"line_start":85,"line_end":85,"column_start":1,"column_end":29}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13612064,"byte_end":13612097,"line_start":86,"line_end":86,"column_start":1,"column_end":34}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13612098,"byte_end":13612128,"line_start":87,"line_end":87,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13612129,"byte_end":13612132,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13612133,"byte_end":13612207,"line_start":89,"line_end":89,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13612208,"byte_end":13612213,"line_start":90,"line_end":90,"column_start":1,"column_end":6}},{"value":"/ let f = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13612214,"byte_end":13612255,"line_start":91,"line_end":91,"column_start":1,"column_end":42}},{"value":"/ let mut reader = BufReader::new(f);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13612256,"byte_end":13612295,"line_start":92,"line_end":92,"column_start":1,"column_end":40}},{"value":"/ let mut buffer = String::new();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13612296,"byte_end":13612331,"line_start":93,"line_end":93,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13612332,"byte_end":13612335,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ // read a line into buffer","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13612336,"byte_end":13612366,"line_start":95,"line_end":95,"column_start":1,"column_end":31}},{"value":"/ reader.read_line(&mut buffer).await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13612367,"byte_end":13612408,"line_start":96,"line_end":96,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13612409,"byte_end":13612412,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ println!(\"{}\", buffer);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13612413,"byte_end":13612440,"line_start":98,"line_end":98,"column_start":1,"column_end":28}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13612441,"byte_end":13612446,"line_start":99,"line_end":99,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13612447,"byte_end":13612464,"line_start":100,"line_end":100,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13612465,"byte_end":13612472,"line_start":101,"line_end":101,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13612473,"byte_end":13612476,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ [`BufWriter`] doesn't add any new ways of writing; it just buffers every call","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13612477,"byte_end":13612558,"line_start":103,"line_end":103,"column_start":1,"column_end":82}},{"value":"/ to [`write`][`Write::write`]:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13612559,"byte_end":13612592,"line_start":104,"line_end":104,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13612593,"byte_end":13612596,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13612597,"byte_end":13612610,"line_start":106,"line_end":106,"column_start":1,"column_end":14}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13612611,"byte_end":13612639,"line_start":107,"line_end":107,"column_start":1,"column_end":29}},{"value":"/ use async_std::io::prelude::*;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13612640,"byte_end":13612674,"line_start":108,"line_end":108,"column_start":1,"column_end":35}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13612675,"byte_end":13612708,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13612709,"byte_end":13612712,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13612713,"byte_end":13612787,"line_start":111,"line_end":111,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13612788,"byte_end":13612793,"line_start":112,"line_end":112,"column_start":1,"column_end":6}},{"value":"/ let f = File::create(\"foo.txt\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13612794,"byte_end":13612837,"line_start":113,"line_end":113,"column_start":1,"column_end":44}},{"value":"/ {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13612838,"byte_end":13612843,"line_start":114,"line_end":114,"column_start":1,"column_end":6}},{"value":"/     let mut writer = BufWriter::new(f);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13612844,"byte_end":13612887,"line_start":115,"line_end":115,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13612888,"byte_end":13612891,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/     // write a byte to the buffer","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13612892,"byte_end":13612929,"line_start":117,"line_end":117,"column_start":1,"column_end":38}},{"value":"/     writer.write(&[42]).await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13612930,"byte_end":13612965,"line_start":118,"line_end":118,"column_start":1,"column_end":36}},{"value":"/ } // the buffer is flushed once writer goes out of scope","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13612966,"byte_end":13613026,"line_start":119,"line_end":119,"column_start":1,"column_end":61}},{"value":"/ //","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13613027,"byte_end":13613033,"line_start":120,"line_end":120,"column_start":1,"column_end":7}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13613034,"byte_end":13613039,"line_start":121,"line_end":121,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13613040,"byte_end":13613057,"line_start":122,"line_end":122,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13613058,"byte_end":13613065,"line_start":123,"line_end":123,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13613066,"byte_end":13613069,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ ## Standard input and output","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13613070,"byte_end":13613102,"line_start":125,"line_end":125,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13613103,"byte_end":13613106,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ A very common source of input is standard input:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13613107,"byte_end":13613159,"line_start":127,"line_end":127,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13613160,"byte_end":13613163,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13613164,"byte_end":13613177,"line_start":129,"line_end":129,"column_start":1,"column_end":14}},{"value":"/ use async_std::io;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13613178,"byte_end":13613200,"line_start":130,"line_end":130,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13613201,"byte_end":13613204,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13613205,"byte_end":13613279,"line_start":132,"line_end":132,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13613280,"byte_end":13613285,"line_start":133,"line_end":133,"column_start":1,"column_end":6}},{"value":"/ let mut input = String::new();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13613286,"byte_end":13613320,"line_start":134,"line_end":134,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13613321,"byte_end":13613324,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ io::stdin().read_line(&mut input).await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13613325,"byte_end":13613370,"line_start":136,"line_end":136,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13613371,"byte_end":13613374,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ println!(\"You typed: {}\", input.trim());","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13613375,"byte_end":13613419,"line_start":138,"line_end":138,"column_start":1,"column_end":45}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13613420,"byte_end":13613425,"line_start":139,"line_end":139,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13613426,"byte_end":13613443,"line_start":140,"line_end":140,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13613444,"byte_end":13613451,"line_start":141,"line_end":141,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13613452,"byte_end":13613455,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ Note that you cannot use the [`?` operator] in functions that do not return","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13613456,"byte_end":13613535,"line_start":143,"line_end":143,"column_start":1,"column_end":80}},{"value":"/ a [`Result<T, E>`][`Result`]. Instead, you can call [`.unwrap()`]","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13613536,"byte_end":13613605,"line_start":144,"line_end":144,"column_start":1,"column_end":70}},{"value":"/ or `match` on the return value to catch any possible errors:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13613606,"byte_end":13613670,"line_start":145,"line_end":145,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13613671,"byte_end":13613674,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13613675,"byte_end":13613688,"line_start":147,"line_end":147,"column_start":1,"column_end":14}},{"value":"/ use async_std::io;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13613689,"byte_end":13613711,"line_start":148,"line_end":148,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13613712,"byte_end":13613715,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13613716,"byte_end":13613790,"line_start":150,"line_end":150,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13613791,"byte_end":13613796,"line_start":151,"line_end":151,"column_start":1,"column_end":6}},{"value":"/ let mut input = String::new();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13613797,"byte_end":13613831,"line_start":152,"line_end":152,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13613832,"byte_end":13613835,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ io::stdin().read_line(&mut input).await.unwrap();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13613836,"byte_end":13613889,"line_start":154,"line_end":154,"column_start":1,"column_end":54}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13613890,"byte_end":13613895,"line_start":155,"line_end":155,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13613896,"byte_end":13613913,"line_start":156,"line_end":156,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13613914,"byte_end":13613921,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13613922,"byte_end":13613925,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ And a very common source of output is standard output:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13613926,"byte_end":13613984,"line_start":159,"line_end":159,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13613985,"byte_end":13613988,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13613989,"byte_end":13614002,"line_start":161,"line_end":161,"column_start":1,"column_end":14}},{"value":"/ use async_std::io;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13614003,"byte_end":13614025,"line_start":162,"line_end":162,"column_start":1,"column_end":23}},{"value":"/ use async_std::io::prelude::*;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13614026,"byte_end":13614060,"line_start":163,"line_end":163,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13614061,"byte_end":13614064,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13614065,"byte_end":13614139,"line_start":165,"line_end":165,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13614140,"byte_end":13614145,"line_start":166,"line_end":166,"column_start":1,"column_end":6}},{"value":"/ io::stdout().write(&[42]).await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13614146,"byte_end":13614183,"line_start":167,"line_end":167,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13614184,"byte_end":13614189,"line_start":168,"line_end":168,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13614190,"byte_end":13614207,"line_start":169,"line_end":169,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13614208,"byte_end":13614215,"line_start":170,"line_end":170,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13614216,"byte_end":13614219,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ Of course, using [`io::stdout`] directly is less common than something like","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13614220,"byte_end":13614299,"line_start":172,"line_end":172,"column_start":1,"column_end":80}},{"value":"/ [`println!`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13614300,"byte_end":13614317,"line_start":173,"line_end":173,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13614318,"byte_end":13614321,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ ## Iterator types","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13614322,"byte_end":13614343,"line_start":175,"line_end":175,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13614344,"byte_end":13614347,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ A large number of the structures provided by `std::io` are for various","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13614348,"byte_end":13614422,"line_start":177,"line_end":177,"column_start":1,"column_end":75}},{"value":"/ ways of iterating over I/O. For example, [`Lines`] is used to split over","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13614423,"byte_end":13614499,"line_start":178,"line_end":178,"column_start":1,"column_end":77}},{"value":"/ lines:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13614500,"byte_end":13614510,"line_start":179,"line_end":179,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13614511,"byte_end":13614514,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13614515,"byte_end":13614528,"line_start":181,"line_end":181,"column_start":1,"column_end":14}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13614529,"byte_end":13614557,"line_start":182,"line_end":182,"column_start":1,"column_end":29}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13614558,"byte_end":13614591,"line_start":183,"line_end":183,"column_start":1,"column_end":34}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13614592,"byte_end":13614622,"line_start":184,"line_end":184,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13614623,"byte_end":13614626,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13614627,"byte_end":13614701,"line_start":186,"line_end":186,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13614702,"byte_end":13614707,"line_start":187,"line_end":187,"column_start":1,"column_end":6}},{"value":"/ let f = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13614708,"byte_end":13614749,"line_start":188,"line_end":188,"column_start":1,"column_end":42}},{"value":"/ let reader = BufReader::new(f);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13614750,"byte_end":13614785,"line_start":189,"line_end":189,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13614786,"byte_end":13614789,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ let mut lines = reader.lines();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13614790,"byte_end":13614825,"line_start":191,"line_end":191,"column_start":1,"column_end":36}},{"value":"/ while let Some(line) = lines.next().await {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13614826,"byte_end":13614873,"line_start":192,"line_end":192,"column_start":1,"column_end":48}},{"value":"/     println!(\"{}\", line?);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13614874,"byte_end":13614904,"line_start":193,"line_end":193,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13614905,"byte_end":13614910,"line_start":194,"line_end":194,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13614911,"byte_end":13614916,"line_start":195,"line_end":195,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13614917,"byte_end":13614934,"line_start":196,"line_end":196,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13614935,"byte_end":13614942,"line_start":197,"line_end":197,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13614943,"byte_end":13614946,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/ ## Functions","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13614947,"byte_end":13614963,"line_start":199,"line_end":199,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13614964,"byte_end":13614967,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ There are a number of [functions][functions-list] that offer access to various","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13614968,"byte_end":13615050,"line_start":201,"line_end":201,"column_start":1,"column_end":83}},{"value":"/ features. For example, we can use three of these functions to copy everything","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13615051,"byte_end":13615132,"line_start":202,"line_end":202,"column_start":1,"column_end":82}},{"value":"/ from standard input to standard output:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13615133,"byte_end":13615176,"line_start":203,"line_end":203,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13615177,"byte_end":13615180,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13615181,"byte_end":13615194,"line_start":205,"line_end":205,"column_start":1,"column_end":14}},{"value":"/ use async_std::io;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13615195,"byte_end":13615217,"line_start":206,"line_end":206,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13615218,"byte_end":13615221,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13615222,"byte_end":13615296,"line_start":208,"line_end":208,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13615297,"byte_end":13615302,"line_start":209,"line_end":209,"column_start":1,"column_end":6}},{"value":"/ io::copy(&mut io::stdin(), &mut io::stdout()).await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13615303,"byte_end":13615360,"line_start":210,"line_end":210,"column_start":1,"column_end":58}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13615361,"byte_end":13615366,"line_start":211,"line_end":211,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13615367,"byte_end":13615384,"line_start":212,"line_end":212,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13615385,"byte_end":13615392,"line_start":213,"line_end":213,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13615393,"byte_end":13615396,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ [functions-list]: #functions-1","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13615397,"byte_end":13615431,"line_start":215,"line_end":215,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13615432,"byte_end":13615435,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ ## io::Result","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13615436,"byte_end":13615453,"line_start":217,"line_end":217,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13615454,"byte_end":13615457,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ Last, but certainly not least, is [`io::Result`]. This type is used","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13615458,"byte_end":13615529,"line_start":219,"line_end":219,"column_start":1,"column_end":72}},{"value":"/ as the return type of many `std::io` functions that can cause an error, and","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13615530,"byte_end":13615609,"line_start":220,"line_end":220,"column_start":1,"column_end":80}},{"value":"/ can be returned from your own functions as well. Many of the examples in this","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13615610,"byte_end":13615691,"line_start":221,"line_end":221,"column_start":1,"column_end":82}},{"value":"/ module use the [`?` operator]:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13615692,"byte_end":13615726,"line_start":222,"line_end":222,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13615727,"byte_end":13615730,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13615731,"byte_end":13615738,"line_start":224,"line_end":224,"column_start":1,"column_end":8}},{"value":"/ #![allow(dead_code)]","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13615739,"byte_end":13615763,"line_start":225,"line_end":225,"column_start":1,"column_end":25}},{"value":"/ use async_std::io;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13615764,"byte_end":13615786,"line_start":226,"line_end":226,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13615787,"byte_end":13615790,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ async fn read_input() -> io::Result<()> {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13615791,"byte_end":13615836,"line_start":228,"line_end":228,"column_start":1,"column_end":46}},{"value":"/     let mut input = String::new();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13615837,"byte_end":13615875,"line_start":229,"line_end":229,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13615876,"byte_end":13615879,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"/     io::stdin().read_line(&mut input).await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13615880,"byte_end":13615929,"line_start":231,"line_end":231,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13615930,"byte_end":13615933,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"/     println!(\"You typed: {}\", input.trim());","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13615934,"byte_end":13615982,"line_start":233,"line_end":233,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13615983,"byte_end":13615986,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13615987,"byte_end":13616001,"line_start":235,"line_end":235,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13616002,"byte_end":13616007,"line_start":236,"line_end":236,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13616008,"byte_end":13616015,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13616016,"byte_end":13616019,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The return type of `read_input`, [`io::Result<()>`][`io::Result`], is a very","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13616020,"byte_end":13616100,"line_start":239,"line_end":239,"column_start":1,"column_end":81}},{"value":"/ common type for functions which don't have a 'real' return value, but do want to","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13616101,"byte_end":13616185,"line_start":240,"line_end":240,"column_start":1,"column_end":85}},{"value":"/ return errors if they happen. In this case, the only purpose of this function is","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13616186,"byte_end":13616270,"line_start":241,"line_end":241,"column_start":1,"column_end":85}},{"value":"/ to read the line and print it, so we use `()`.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13616271,"byte_end":13616321,"line_start":242,"line_end":242,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13616322,"byte_end":13616325,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ ## Platform-specific behavior","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13616326,"byte_end":13616359,"line_start":244,"line_end":244,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13616360,"byte_end":13616363,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/ Many I/O functions throughout the standard library are documented to indicate","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13616364,"byte_end":13616445,"line_start":246,"line_end":246,"column_start":1,"column_end":82}},{"value":"/ what various library or syscalls they are delegated to. This is done to help","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13616446,"byte_end":13616526,"line_start":247,"line_end":247,"column_start":1,"column_end":81}},{"value":"/ applications both understand what's happening under the hood as well as investigate","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13616527,"byte_end":13616614,"line_start":248,"line_end":248,"column_start":1,"column_end":88}},{"value":"/ any possibly unclear semantics. Note, however, that this is informative, not a binding","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13616615,"byte_end":13616705,"line_start":249,"line_end":249,"column_start":1,"column_end":91}},{"value":"/ contract. The implementation of many of these functions are subject to change over","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13616706,"byte_end":13616792,"line_start":250,"line_end":250,"column_start":1,"column_end":87}},{"value":"/ time and may call fewer or more syscalls/library functions.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13616793,"byte_end":13616856,"line_start":251,"line_end":251,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13616857,"byte_end":13616860,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ [`Read`]: trait.Read.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13616861,"byte_end":13616890,"line_start":253,"line_end":253,"column_start":1,"column_end":30}},{"value":"/ [`Write`]: trait.Write.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13616891,"byte_end":13616922,"line_start":254,"line_end":254,"column_start":1,"column_end":32}},{"value":"/ [`Seek`]: trait.Seek.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13616923,"byte_end":13616952,"line_start":255,"line_end":255,"column_start":1,"column_end":30}},{"value":"/ [`BufRead`]: trait.BufRead.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13616953,"byte_end":13616988,"line_start":256,"line_end":256,"column_start":1,"column_end":36}},{"value":"/ [`File`]: ../fs/struct.File.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13616989,"byte_end":13617025,"line_start":257,"line_end":257,"column_start":1,"column_end":37}},{"value":"/ [`TcpStream`]: ../net/struct.TcpStream.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13617026,"byte_end":13617073,"line_start":258,"line_end":258,"column_start":1,"column_end":48}},{"value":"/ [`Vec<T>`]: ../vec/struct.Vec.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13617074,"byte_end":13617112,"line_start":259,"line_end":259,"column_start":1,"column_end":39}},{"value":"/ [`BufReader`]: struct.BufReader.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13617113,"byte_end":13617153,"line_start":260,"line_end":260,"column_start":1,"column_end":41}},{"value":"/ [`BufWriter`]: struct.BufWriter.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13617154,"byte_end":13617194,"line_start":261,"line_end":261,"column_start":1,"column_end":41}},{"value":"/ [`Write::write`]: trait.Write.html#tymethod.write","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13617195,"byte_end":13617248,"line_start":262,"line_end":262,"column_start":1,"column_end":54}},{"value":"/ [`io::stdout`]: fn.stdout.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13617249,"byte_end":13617283,"line_start":263,"line_end":263,"column_start":1,"column_end":35}},{"value":"/ [`println!`]: ../macro.println.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13617284,"byte_end":13617323,"line_start":264,"line_end":264,"column_start":1,"column_end":40}},{"value":"/ [`Lines`]: struct.Lines.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13617324,"byte_end":13617356,"line_start":265,"line_end":265,"column_start":1,"column_end":33}},{"value":"/ [`io::Result`]: type.Result.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13617357,"byte_end":13617393,"line_start":266,"line_end":266,"column_start":1,"column_end":37}},{"value":"/ [`?` operator]: https://doc.rust-lang.org/stable/book/appendix-02-operators.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13617394,"byte_end":13617478,"line_start":267,"line_end":267,"column_start":1,"column_end":85}},{"value":"/ [`Read::read`]: trait.Read.html#tymethod.read","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13617479,"byte_end":13617528,"line_start":268,"line_end":268,"column_start":1,"column_end":50}},{"value":"/ [`Result`]: https://doc.rust-lang.org/std/result/enum.Result.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13617529,"byte_end":13617598,"line_start":269,"line_end":269,"column_start":1,"column_end":70}},{"value":"/ [`.unwrap()`]: https://doc.rust-lang.org/std/result/enum.Result.html#method.unwrap","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13617599,"byte_end":13617685,"line_start":270,"line_end":270,"column_start":1,"column_end":87}}]},{"kind":"Mod","id":{"krate":0,"index":4387},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::io::prelude","value":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/prelude.rs","parent":null,"children":[{"krate":0,"index":4388},{"krate":0,"index":4391},{"krate":0,"index":4394},{"krate":0,"index":4397},{"krate":0,"index":4400},{"krate":0,"index":4403},{"krate":0,"index":4406},{"krate":0,"index":4409}],"decl_id":null,"docs":" The async I/O prelude.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/utils.rs","byte_start":16418,"byte_end":16441,"line_start":207,"line_end":207,"column_start":13,"column_end":36}},{"value":"/ The async I/O prelude.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/prelude.rs","byte_start":13627764,"byte_end":13627790,"line_start":1,"line_end":1,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/prelude.rs","byte_start":13627791,"byte_end":13627794,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The purpose of this module is to alleviate imports of many common I/O traits","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/prelude.rs","byte_start":13627795,"byte_end":13627875,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/ by adding a glob import to the top of I/O heavy modules:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/prelude.rs","byte_start":13627876,"byte_end":13627936,"line_start":4,"line_end":4,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/prelude.rs","byte_start":13627937,"byte_end":13627940,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/prelude.rs","byte_start":13627941,"byte_end":13627948,"line_start":6,"line_end":6,"column_start":1,"column_end":8}},{"value":"/ # #![allow(unused_imports)]","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/prelude.rs","byte_start":13627949,"byte_end":13627980,"line_start":7,"line_end":7,"column_start":1,"column_end":32}},{"value":"/ use async_std::io::prelude::*;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/prelude.rs","byte_start":13627981,"byte_end":13628015,"line_start":8,"line_end":8,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/prelude.rs","byte_start":13628016,"byte_end":13628023,"line_start":9,"line_end":9,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9645},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_read/lines.rs","byte_start":13636555,"byte_end":13636560,"line_start":23,"line_end":23,"column_start":16,"column_end":21},"name":"Lines","qualname":"::io::buf_read::lines::Lines","value":"Lines {  }","parent":null,"children":[{"krate":0,"index":9647},{"krate":0,"index":9648},{"krate":0,"index":9649},{"krate":0,"index":9650}],"decl_id":null,"docs":" A stream of lines in a byte stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4483},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_read/read_line.rs","byte_start":13638457,"byte_end":13638471,"line_start":12,"line_end":12,"column_start":12,"column_end":26},"name":"ReadLineFuture","qualname":"::io::buf_read::read_line::ReadLineFuture","value":"ReadLineFuture {  }","parent":null,"children":[{"krate":0,"index":4486},{"krate":0,"index":4487},{"krate":0,"index":4488},{"krate":0,"index":4489}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_read/read_line.rs","byte_start":13638406,"byte_end":13638445,"line_start":11,"line_end":11,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":4519},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_read/read_until.rs","byte_start":13639934,"byte_end":13639949,"line_start":10,"line_end":10,"column_start":12,"column_end":27},"name":"ReadUntilFuture","qualname":"::io::buf_read::read_until::ReadUntilFuture","value":"ReadUntilFuture {  }","parent":null,"children":[{"krate":0,"index":4522},{"krate":0,"index":4523},{"krate":0,"index":4524},{"krate":0,"index":4525}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_read/read_until.rs","byte_start":13639883,"byte_end":13639922,"line_start":9,"line_end":9,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":9597},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_read/split.rs","byte_start":13641174,"byte_end":13641179,"line_start":22,"line_end":22,"column_start":16,"column_end":21},"name":"Split","qualname":"::io::buf_read::split::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":9599},{"krate":0,"index":9600},{"krate":0,"index":9601},{"krate":0,"index":9602}],"decl_id":null,"docs":" A stream over the contents of an instance of [`BufRead`] split on a particular byte.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":4595},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_read/mod.rs","byte_start":13628807,"byte_end":13628817,"line_start":25,"line_end":25,"column_start":11,"column_end":21},"name":"BufReadExt","qualname":"::io::buf_read::BufReadExt","value":"BufReadExt: BufRead","parent":null,"children":[{"krate":0,"index":4596},{"krate":0,"index":4598},{"krate":0,"index":4600},{"krate":0,"index":4601}],"decl_id":null,"docs":"    Extension methods for [`BufRead`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4596},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_read/mod.rs","byte_start":13630404,"byte_end":13630414,"line_start":76,"line_end":76,"column_start":8,"column_end":18},"name":"read_until","qualname":"::io::buf_read::BufReadExt::read_until","value":"pub fn read_until<'a>(&'a mut Self, u8, &'a mut Vec<u8>) -> ReadUntilFuture\nwhere Self: Unpin","parent":{"krate":0,"index":4595},"children":[],"decl_id":null,"docs":"        Reads all bytes into `buf` until the delimiter `byte` or EOF is reached.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4598},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_read/mod.rs","byte_start":13631996,"byte_end":13632005,"line_start":130,"line_end":130,"column_start":8,"column_end":17},"name":"read_line","qualname":"::io::buf_read::BufReadExt::read_line","value":"pub fn read_line<'a>(&'a mut Self, &'a mut String) -> ReadLineFuture where\nSelf: Unpin","parent":{"krate":0,"index":4595},"children":[],"decl_id":null,"docs":"        Reads all bytes and appends them into `buf` until a newline (the 0xA byte) is\n        reached.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4600},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_read/mod.rs","byte_start":13633260,"byte_end":13633265,"line_start":176,"line_end":176,"column_start":8,"column_end":13},"name":"lines","qualname":"::io::buf_read::BufReadExt::lines","value":"pub fn lines(Self) -> Lines<Self> where Self: Unpin + Sized","parent":{"krate":0,"index":4595},"children":[],"decl_id":null,"docs":"        Returns a stream over the lines of this byte stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4601},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_read/mod.rs","byte_start":13634865,"byte_end":13634870,"line_start":227,"line_end":227,"column_start":8,"column_end":13},"name":"split","qualname":"::io::buf_read::BufReadExt::split","value":"pub fn split(Self, u8) -> Split<Self> where Self: Sized","parent":{"krate":0,"index":4595},"children":[],"decl_id":null,"docs":"        Returns a stream over the contents of this reader split on the byte `byte`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5574},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/bytes.rs","byte_start":13654072,"byte_end":13654077,"line_start":14,"line_end":14,"column_start":12,"column_end":17},"name":"Bytes","qualname":"::io::read::bytes::Bytes","value":"Bytes {  }","parent":null,"children":[{"krate":0,"index":5576}],"decl_id":null,"docs":" A stream over `u8` values of a reader.","sig":null,"attributes":[{"value":"/ A stream over `u8` values of a reader.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/bytes.rs","byte_start":13653814,"byte_end":13653856,"line_start":7,"line_end":7,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/bytes.rs","byte_start":13653857,"byte_end":13653860,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This struct is generally created by calling [`bytes`] on a reader.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/bytes.rs","byte_start":13653861,"byte_end":13653931,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/ Please see the documentation of [`bytes`] for more details.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/bytes.rs","byte_start":13653932,"byte_end":13653995,"line_start":10,"line_end":10,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/bytes.rs","byte_start":13653996,"byte_end":13653999,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`bytes`]: trait.Read.html#method.bytes","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/bytes.rs","byte_start":13654000,"byte_end":13654043,"line_start":12,"line_end":12,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":9548},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":13655804,"byte_end":13655809,"line_start":16,"line_end":16,"column_start":16,"column_end":21},"name":"Chain","qualname":"::io::read::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":9551},{"krate":0,"index":9552},{"krate":0,"index":9553}],"decl_id":null,"docs":" Adaptor to chain together two readers.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4665},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":13656533,"byte_end":13656543,"line_start":44,"line_end":44,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Chain<T, U>>::into_inner","value":"pub fn into_inner(Self) -> (T, U)","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Chain`, returning the wrapped readers.","sig":null,"attributes":[{"value":"/ Consumes the `Chain`, returning the wrapped readers.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":13655982,"byte_end":13656038,"line_start":26,"line_end":26,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":13656043,"byte_end":13656046,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":13656051,"byte_end":13656065,"line_start":28,"line_end":28,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":13656070,"byte_end":13656073,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":13656078,"byte_end":13656091,"line_start":30,"line_end":30,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":13656096,"byte_end":13656176,"line_start":31,"line_end":31,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":13656181,"byte_end":13656186,"line_start":32,"line_end":32,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":13656191,"byte_end":13656221,"line_start":33,"line_end":33,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":13656226,"byte_end":13656254,"line_start":34,"line_end":34,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":13656259,"byte_end":13656262,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ let foo_file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":13656267,"byte_end":13656315,"line_start":36,"line_end":36,"column_start":5,"column_end":53}},{"value":"/ let bar_file = File::open(\"bar.txt\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":13656320,"byte_end":13656368,"line_start":37,"line_end":37,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":13656373,"byte_end":13656376,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ let chain = foo_file.chain(bar_file);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":13656381,"byte_end":13656422,"line_start":39,"line_end":39,"column_start":5,"column_end":46}},{"value":"/ let (foo_file, bar_file) = chain.into_inner();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":13656427,"byte_end":13656477,"line_start":40,"line_end":40,"column_start":5,"column_end":55}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":13656482,"byte_end":13656487,"line_start":41,"line_end":41,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":13656492,"byte_end":13656509,"line_start":42,"line_end":42,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":13656514,"byte_end":13656521,"line_start":43,"line_end":43,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4666},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":13657161,"byte_end":13657168,"line_start":66,"line_end":66,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Chain<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> (&T, &U)","parent":null,"children":[],"decl_id":null,"docs":" Gets references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets references to the underlying readers in this `Chain`.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":13656607,"byte_end":13656669,"line_start":48,"line_end":48,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":13656674,"byte_end":13656677,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":13656682,"byte_end":13656696,"line_start":50,"line_end":50,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":13656701,"byte_end":13656704,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":13656709,"byte_end":13656722,"line_start":52,"line_end":52,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":13656727,"byte_end":13656807,"line_start":53,"line_end":53,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":13656812,"byte_end":13656817,"line_start":54,"line_end":54,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":13656822,"byte_end":13656852,"line_start":55,"line_end":55,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":13656857,"byte_end":13656885,"line_start":56,"line_end":56,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":13656890,"byte_end":13656893,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ let foo_file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":13656898,"byte_end":13656946,"line_start":58,"line_end":58,"column_start":5,"column_end":53}},{"value":"/ let bar_file = File::open(\"bar.txt\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":13656951,"byte_end":13656999,"line_start":59,"line_end":59,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":13657004,"byte_end":13657007,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ let chain = foo_file.chain(bar_file);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":13657012,"byte_end":13657053,"line_start":61,"line_end":61,"column_start":5,"column_end":46}},{"value":"/ let (foo_file, bar_file) = chain.get_ref();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":13657058,"byte_end":13657105,"line_start":62,"line_end":62,"column_start":5,"column_end":52}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":13657110,"byte_end":13657115,"line_start":63,"line_end":63,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":13657120,"byte_end":13657137,"line_start":64,"line_end":64,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":13657142,"byte_end":13657149,"line_start":65,"line_end":65,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4667},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":13657984,"byte_end":13657991,"line_start":92,"line_end":92,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Chain<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut T, &mut U)","parent":null,"children":[],"decl_id":null,"docs":" Gets mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":13657237,"byte_end":13657307,"line_start":70,"line_end":70,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":13657312,"byte_end":13657315,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":13657320,"byte_end":13657393,"line_start":72,"line_end":72,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":13657398,"byte_end":13657471,"line_start":73,"line_end":73,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":13657476,"byte_end":13657488,"line_start":74,"line_end":74,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":13657493,"byte_end":13657496,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":13657501,"byte_end":13657515,"line_start":76,"line_end":76,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":13657520,"byte_end":13657523,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":13657528,"byte_end":13657541,"line_start":78,"line_end":78,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":13657546,"byte_end":13657626,"line_start":79,"line_end":79,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":13657631,"byte_end":13657636,"line_start":80,"line_end":80,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":13657641,"byte_end":13657671,"line_start":81,"line_end":81,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":13657676,"byte_end":13657704,"line_start":82,"line_end":82,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":13657709,"byte_end":13657712,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ let foo_file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":13657717,"byte_end":13657765,"line_start":84,"line_end":84,"column_start":5,"column_end":53}},{"value":"/ let bar_file = File::open(\"bar.txt\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":13657770,"byte_end":13657818,"line_start":85,"line_end":85,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":13657823,"byte_end":13657826,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ let mut chain = foo_file.chain(bar_file);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":13657831,"byte_end":13657876,"line_start":87,"line_end":87,"column_start":5,"column_end":50}},{"value":"/ let (foo_file, bar_file) = chain.get_mut();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":13657881,"byte_end":13657928,"line_start":88,"line_end":88,"column_start":5,"column_end":52}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":13657933,"byte_end":13657938,"line_start":89,"line_end":89,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":13657943,"byte_end":13657960,"line_start":90,"line_end":90,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":13657965,"byte_end":13657972,"line_start":91,"line_end":91,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4703},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/read.rs","byte_start":13661082,"byte_end":13661092,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"ReadFuture","qualname":"::io::read::read::ReadFuture","value":"ReadFuture {  }","parent":null,"children":[{"krate":0,"index":4706},{"krate":0,"index":4707}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/read.rs","byte_start":13661031,"byte_end":13661070,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":4736},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/read_exact.rs","byte_start":13661662,"byte_end":13661677,"line_start":10,"line_end":10,"column_start":12,"column_end":27},"name":"ReadExactFuture","qualname":"::io::read::read_exact::ReadExactFuture","value":"ReadExactFuture {  }","parent":null,"children":[{"krate":0,"index":4739},{"krate":0,"index":4740}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/read_exact.rs","byte_start":13661611,"byte_end":13661650,"line_start":9,"line_end":9,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":4766},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/read_to_end.rs","byte_start":13662563,"byte_end":13662578,"line_start":9,"line_end":9,"column_start":12,"column_end":27},"name":"ReadToEndFuture","qualname":"::io::read::read_to_end::ReadToEndFuture","value":"ReadToEndFuture {  }","parent":null,"children":[{"krate":0,"index":4769},{"krate":0,"index":4770},{"krate":0,"index":4771}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/read_to_end.rs","byte_start":13662512,"byte_end":13662551,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":4814},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/read_to_string.rs","byte_start":13665017,"byte_end":13665035,"line_start":12,"line_end":12,"column_start":12,"column_end":30},"name":"ReadToStringFuture","qualname":"::io::read::read_to_string::ReadToStringFuture","value":"ReadToStringFuture {  }","parent":null,"children":[{"krate":0,"index":4817},{"krate":0,"index":4818},{"krate":0,"index":4819},{"krate":0,"index":4820}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/read_to_string.rs","byte_start":13664966,"byte_end":13665005,"line_start":11,"line_end":11,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":4850},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/read_vectored.rs","byte_start":13666442,"byte_end":13666460,"line_start":9,"line_end":9,"column_start":12,"column_end":30},"name":"ReadVectoredFuture","qualname":"::io::read::read_vectored::ReadVectoredFuture","value":"ReadVectoredFuture {  }","parent":null,"children":[{"krate":0,"index":4853},{"krate":0,"index":4854}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/read_vectored.rs","byte_start":13666391,"byte_end":13666430,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":9508},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13667348,"byte_end":13667352,"line_start":17,"line_end":17,"column_start":16,"column_end":20},"name":"Take","qualname":"::io::read::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":9510},{"krate":0,"index":9511}],"decl_id":null,"docs":" Reader adaptor which limits the bytes read from an underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4888},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13668242,"byte_end":13668247,"line_start":52,"line_end":52,"column_start":12,"column_end":17},"name":"limit","qualname":"<Take<T>>::limit","value":"pub fn limit(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that can be read before this instance will\n return EOF.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that can be read before this instance will","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13667464,"byte_end":13667538,"line_start":25,"line_end":25,"column_start":5,"column_end":79}},{"value":"/ return EOF.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13667543,"byte_end":13667558,"line_start":26,"line_end":26,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13667563,"byte_end":13667566,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13667571,"byte_end":13667581,"line_start":28,"line_end":28,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13667586,"byte_end":13667589,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ This instance may reach `EOF` after reading fewer bytes than indicated by","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13667594,"byte_end":13667671,"line_start":30,"line_end":30,"column_start":5,"column_end":82}},{"value":"/ this method if the underlying [`Read`] instance reaches EOF.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13667676,"byte_end":13667740,"line_start":31,"line_end":31,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13667745,"byte_end":13667748,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ [`Read`]: trait.Read.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13667753,"byte_end":13667782,"line_start":33,"line_end":33,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13667787,"byte_end":13667790,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13667795,"byte_end":13667809,"line_start":35,"line_end":35,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13667814,"byte_end":13667817,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13667822,"byte_end":13667835,"line_start":37,"line_end":37,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13667840,"byte_end":13667920,"line_start":38,"line_end":38,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13667925,"byte_end":13667930,"line_start":39,"line_end":39,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13667935,"byte_end":13667965,"line_start":40,"line_end":40,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13667970,"byte_end":13667998,"line_start":41,"line_end":41,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13668003,"byte_end":13668006,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ let f = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13668011,"byte_end":13668052,"line_start":43,"line_end":43,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13668057,"byte_end":13668060,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ // read at most five bytes","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13668065,"byte_end":13668095,"line_start":45,"line_end":45,"column_start":5,"column_end":35}},{"value":"/ let handle = f.take(5);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13668100,"byte_end":13668127,"line_start":46,"line_end":46,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13668132,"byte_end":13668135,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ println!(\"limit: {}\", handle.limit());","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13668140,"byte_end":13668182,"line_start":48,"line_end":48,"column_start":5,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13668187,"byte_end":13668192,"line_start":49,"line_end":49,"column_start":5,"column_end":10}},{"value":"/ #     Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13668197,"byte_end":13668218,"line_start":50,"line_end":50,"column_start":5,"column_end":26}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13668223,"byte_end":13668230,"line_start":51,"line_end":51,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4889},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13669036,"byte_end":13669045,"line_start":79,"line_end":79,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Take<T>>::set_limit","value":"pub fn set_limit(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes that can be read before this instance will\n return EOF. This is the same as constructing a new `Take` instance, so\n the amount of bytes read and the previous limit value don't matter when\n calling this method.","sig":null,"attributes":[{"value":"/ Sets the number of bytes that can be read before this instance will","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13668294,"byte_end":13668365,"line_start":56,"line_end":56,"column_start":5,"column_end":76}},{"value":"/ return EOF. This is the same as constructing a new `Take` instance, so","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13668370,"byte_end":13668444,"line_start":57,"line_end":57,"column_start":5,"column_end":79}},{"value":"/ the amount of bytes read and the previous limit value don't matter when","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13668449,"byte_end":13668524,"line_start":58,"line_end":58,"column_start":5,"column_end":80}},{"value":"/ calling this method.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13668529,"byte_end":13668553,"line_start":59,"line_end":59,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13668558,"byte_end":13668561,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13668566,"byte_end":13668580,"line_start":61,"line_end":61,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13668585,"byte_end":13668588,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13668593,"byte_end":13668606,"line_start":63,"line_end":63,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13668611,"byte_end":13668691,"line_start":64,"line_end":64,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13668696,"byte_end":13668701,"line_start":65,"line_end":65,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13668706,"byte_end":13668736,"line_start":66,"line_end":66,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13668741,"byte_end":13668769,"line_start":67,"line_end":67,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13668774,"byte_end":13668777,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ let f = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13668782,"byte_end":13668823,"line_start":69,"line_end":69,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13668828,"byte_end":13668831,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ // read at most five bytes","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13668836,"byte_end":13668866,"line_start":71,"line_end":71,"column_start":5,"column_end":35}},{"value":"/ let mut handle = f.take(5);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13668871,"byte_end":13668902,"line_start":72,"line_end":72,"column_start":5,"column_end":36}},{"value":"/ handle.set_limit(10);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13668907,"byte_end":13668932,"line_start":73,"line_end":73,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13668937,"byte_end":13668940,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(handle.limit(), 10);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13668945,"byte_end":13668980,"line_start":75,"line_end":75,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13668985,"byte_end":13668990,"line_start":76,"line_end":76,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13668995,"byte_end":13669012,"line_start":77,"line_end":77,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13669017,"byte_end":13669024,"line_start":78,"line_end":78,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4890},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13669662,"byte_end":13669672,"line_start":103,"line_end":103,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Take<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Take`, returning the wrapped reader.","sig":null,"attributes":[{"value":"/ Consumes the `Take`, returning the wrapped reader.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13669110,"byte_end":13669164,"line_start":83,"line_end":83,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13669169,"byte_end":13669172,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13669177,"byte_end":13669191,"line_start":85,"line_end":85,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13669196,"byte_end":13669199,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13669204,"byte_end":13669217,"line_start":87,"line_end":87,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13669222,"byte_end":13669302,"line_start":88,"line_end":88,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13669307,"byte_end":13669312,"line_start":89,"line_end":89,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13669317,"byte_end":13669347,"line_start":90,"line_end":90,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13669352,"byte_end":13669380,"line_start":91,"line_end":91,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13669385,"byte_end":13669388,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ let file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13669393,"byte_end":13669437,"line_start":93,"line_end":93,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13669442,"byte_end":13669445,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ let mut buffer = [0; 5];","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13669450,"byte_end":13669478,"line_start":95,"line_end":95,"column_start":5,"column_end":33}},{"value":"/ let mut handle = file.take(5);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13669483,"byte_end":13669517,"line_start":96,"line_end":96,"column_start":5,"column_end":39}},{"value":"/ handle.read(&mut buffer).await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13669522,"byte_end":13669558,"line_start":97,"line_end":97,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13669563,"byte_end":13669566,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ let file = handle.into_inner();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13669571,"byte_end":13669606,"line_start":99,"line_end":99,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13669611,"byte_end":13669616,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13669621,"byte_end":13669638,"line_start":101,"line_end":101,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13669643,"byte_end":13669650,"line_start":102,"line_end":102,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4891},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13670257,"byte_end":13670264,"line_start":127,"line_end":127,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Take<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13669716,"byte_end":13669762,"line_start":107,"line_end":107,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13669767,"byte_end":13669770,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13669775,"byte_end":13669789,"line_start":109,"line_end":109,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13669794,"byte_end":13669797,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13669802,"byte_end":13669815,"line_start":111,"line_end":111,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13669820,"byte_end":13669900,"line_start":112,"line_end":112,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13669905,"byte_end":13669910,"line_start":113,"line_end":113,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13669915,"byte_end":13669945,"line_start":114,"line_end":114,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13669950,"byte_end":13669978,"line_start":115,"line_end":115,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13669983,"byte_end":13669986,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ let file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13669991,"byte_end":13670035,"line_start":117,"line_end":117,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13670040,"byte_end":13670043,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ let mut buffer = [0; 5];","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13670048,"byte_end":13670076,"line_start":119,"line_end":119,"column_start":5,"column_end":33}},{"value":"/ let mut handle = file.take(5);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13670081,"byte_end":13670115,"line_start":120,"line_end":120,"column_start":5,"column_end":39}},{"value":"/ handle.read(&mut buffer).await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13670120,"byte_end":13670156,"line_start":121,"line_end":121,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13670161,"byte_end":13670164,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ let file = handle.get_ref();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13670169,"byte_end":13670201,"line_start":123,"line_end":123,"column_start":5,"column_end":37}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13670206,"byte_end":13670211,"line_start":124,"line_end":124,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13670216,"byte_end":13670233,"line_start":125,"line_end":125,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13670238,"byte_end":13670245,"line_start":126,"line_end":126,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4892},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13671039,"byte_end":13671046,"line_start":155,"line_end":155,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Take<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13670311,"byte_end":13670365,"line_start":131,"line_end":131,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13670370,"byte_end":13670373,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13670378,"byte_end":13670451,"line_start":133,"line_end":133,"column_start":5,"column_end":78}},{"value":"/ underlying reader as doing so may corrupt the internal limit of this","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13670456,"byte_end":13670528,"line_start":134,"line_end":134,"column_start":5,"column_end":77}},{"value":"/ `Take`.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13670533,"byte_end":13670544,"line_start":135,"line_end":135,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13670549,"byte_end":13670552,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13670557,"byte_end":13670571,"line_start":137,"line_end":137,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13670576,"byte_end":13670579,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13670584,"byte_end":13670597,"line_start":139,"line_end":139,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13670602,"byte_end":13670682,"line_start":140,"line_end":140,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13670687,"byte_end":13670692,"line_start":141,"line_end":141,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13670697,"byte_end":13670727,"line_start":142,"line_end":142,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13670732,"byte_end":13670760,"line_start":143,"line_end":143,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13670765,"byte_end":13670768,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ let file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13670773,"byte_end":13670817,"line_start":145,"line_end":145,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13670822,"byte_end":13670825,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ let mut buffer = [0; 5];","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13670830,"byte_end":13670858,"line_start":147,"line_end":147,"column_start":5,"column_end":33}},{"value":"/ let mut handle = file.take(5);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13670863,"byte_end":13670897,"line_start":148,"line_end":148,"column_start":5,"column_end":39}},{"value":"/ handle.read(&mut buffer).await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13670902,"byte_end":13670938,"line_start":149,"line_end":149,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13670943,"byte_end":13670946,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ let file = handle.get_mut();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13670951,"byte_end":13670983,"line_start":151,"line_end":151,"column_start":5,"column_end":37}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13670988,"byte_end":13670993,"line_start":152,"line_end":152,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13670998,"byte_end":13671015,"line_start":153,"line_end":153,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13671020,"byte_end":13671027,"line_start":154,"line_end":154,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":4939},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/mod.rs","byte_start":13642527,"byte_end":13642534,"line_start":31,"line_end":31,"column_start":11,"column_end":18},"name":"ReadExt","qualname":"::io::read::ReadExt","value":"ReadExt: Read","parent":null,"children":[{"krate":0,"index":4940},{"krate":0,"index":4942},{"krate":0,"index":4944},{"krate":0,"index":4946},{"krate":0,"index":4948},{"krate":0,"index":4950},{"krate":0,"index":4951},{"krate":0,"index":4952},{"krate":0,"index":4953}],"decl_id":null,"docs":"    Extension methods for [`Read`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4940},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/mod.rs","byte_start":13643610,"byte_end":13643614,"line_start":63,"line_end":63,"column_start":8,"column_end":12},"name":"read","qualname":"::io::read::ReadExt::read","value":"pub fn read<'a>(&'a mut Self, &'a mut [u8]) -> ReadFuture where Self: Unpin","parent":{"krate":0,"index":4939},"children":[],"decl_id":null,"docs":"        Reads some bytes from the byte stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4942},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/mod.rs","byte_start":13644287,"byte_end":13644300,"line_start":85,"line_end":85,"column_start":8,"column_end":21},"name":"read_vectored","qualname":"::io::read::ReadExt::read_vectored","value":"pub fn read_vectored<'a>(&'a mut Self, &'a mut [IoSliceMut])\n-> ReadVectoredFuture where Self: Unpin","parent":{"krate":0,"index":4939},"children":[],"decl_id":null,"docs":"        Like [`read`], except that it reads into a slice of buffers.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4944},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/mod.rs","byte_start":13645294,"byte_end":13645305,"line_start":122,"line_end":122,"column_start":8,"column_end":19},"name":"read_to_end","qualname":"::io::read::ReadExt::read_to_end","value":"pub fn read_to_end<'a>(&'a mut Self, &'a mut Vec<u8>) -> ReadToEndFuture where\nSelf: Unpin","parent":{"krate":0,"index":4939},"children":[],"decl_id":null,"docs":"        Reads all bytes from the byte stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4946},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/mod.rs","byte_start":13646268,"byte_end":13646282,"line_start":161,"line_end":161,"column_start":8,"column_end":22},"name":"read_to_string","qualname":"::io::read::ReadExt::read_to_string","value":"pub fn read_to_string<'a>(&'a mut Self, &'a mut String) -> ReadToStringFuture\nwhere Self: Unpin","parent":{"krate":0,"index":4939},"children":[],"decl_id":null,"docs":"        Reads all bytes from the byte stream and appends them into a string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4948},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/mod.rs","byte_start":13648140,"byte_end":13648150,"line_start":216,"line_end":216,"column_start":8,"column_end":18},"name":"read_exact","qualname":"::io::read::ReadExt::read_exact","value":"pub fn read_exact<'a>(&'a mut Self, &'a mut [u8]) -> ReadExactFuture where\nSelf: Unpin","parent":{"krate":0,"index":4939},"children":[],"decl_id":null,"docs":"        Reads the exact number of bytes required to fill `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4950},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/mod.rs","byte_start":13649324,"byte_end":13649328,"line_start":259,"line_end":259,"column_start":8,"column_end":12},"name":"take","qualname":"::io::read::ReadExt::take","value":"pub fn take(Self, u64) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":4939},"children":[],"decl_id":null,"docs":"        Creates an adaptor which will read at most `limit` bytes from it.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4951},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/mod.rs","byte_start":13650415,"byte_end":13650421,"line_start":302,"line_end":302,"column_start":8,"column_end":14},"name":"by_ref","qualname":"::io::read::ReadExt::by_ref","value":"pub fn by_ref(&mut Self) -> &mut Self where Self: Sized","parent":{"krate":0,"index":4939},"children":[],"decl_id":null,"docs":"        Creates a \"by reference\" adaptor for this instance of `Read`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4952},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/mod.rs","byte_start":13651327,"byte_end":13651332,"line_start":335,"line_end":335,"column_start":8,"column_end":13},"name":"bytes","qualname":"::io::read::ReadExt::bytes","value":"pub fn bytes(Self) -> Bytes<Self> where Self: Sized","parent":{"krate":0,"index":4939},"children":[],"decl_id":null,"docs":"        Transforms this `Read` instance to a `Stream` over its bytes.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4953},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/mod.rs","byte_start":13652359,"byte_end":13652364,"line_start":371,"line_end":371,"column_start":8,"column_end":13},"name":"chain","qualname":"::io::read::ReadExt::chain","value":"pub fn chain<R: Read>(Self, R) -> Chain<Self, R> where Self: Sized","parent":{"krate":0,"index":4939},"children":[],"decl_id":null,"docs":"        Creates an adaptor which will chain this stream with another.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4984},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/seek/seek.rs","byte_start":13674796,"byte_end":13674806,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"SeekFuture","qualname":"::io::seek::seek::SeekFuture","value":"SeekFuture {  }","parent":null,"children":[{"krate":0,"index":4987},{"krate":0,"index":4988}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/seek/seek.rs","byte_start":13674745,"byte_end":13674784,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Trait","id":{"krate":0,"index":5002},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/seek/mod.rs","byte_start":13673757,"byte_end":13673764,"line_start":14,"line_end":14,"column_start":11,"column_end":18},"name":"SeekExt","qualname":"::io::seek::SeekExt","value":"SeekExt: Seek","parent":null,"children":[{"krate":0,"index":5003}],"decl_id":null,"docs":"    Extension methods for [`Seek`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5003},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/seek/mod.rs","byte_start":13674405,"byte_end":13674409,"line_start":39,"line_end":39,"column_start":8,"column_end":12},"name":"seek","qualname":"::io::seek::SeekExt::seek","value":"pub fn seek(&mut Self, SeekFrom) -> SeekFuture<, Self> where Self: Unpin","parent":{"krate":0,"index":5002},"children":[],"decl_id":null,"docs":"        Seeks to a new position in a byte stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5028},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/write/flush.rs","byte_start":13680625,"byte_end":13680636,"line_start":9,"line_end":9,"column_start":12,"column_end":23},"name":"FlushFuture","qualname":"::io::write::flush::FlushFuture","value":"FlushFuture {  }","parent":null,"children":[{"krate":0,"index":5031}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/write/flush.rs","byte_start":13680574,"byte_end":13680613,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":5057},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/write/write.rs","byte_start":13681118,"byte_end":13681129,"line_start":9,"line_end":9,"column_start":12,"column_end":23},"name":"WriteFuture","qualname":"::io::write::write::WriteFuture","value":"WriteFuture {  }","parent":null,"children":[{"krate":0,"index":5060},{"krate":0,"index":5061}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/write/write.rs","byte_start":13681067,"byte_end":13681106,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":5090},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/write/write_all.rs","byte_start":13681691,"byte_end":13681705,"line_start":10,"line_end":10,"column_start":12,"column_end":26},"name":"WriteAllFuture","qualname":"::io::write::write_all::WriteAllFuture","value":"WriteAllFuture {  }","parent":null,"children":[{"krate":0,"index":5093},{"krate":0,"index":5094}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/write/write_all.rs","byte_start":13681640,"byte_end":13681679,"line_start":9,"line_end":9,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":5120},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/write/write_fmt.rs","byte_start":13682590,"byte_end":13682604,"line_start":10,"line_end":10,"column_start":12,"column_end":26},"name":"WriteFmtFuture","qualname":"::io::write::write_fmt::WriteFmtFuture","value":"WriteFmtFuture {  }","parent":null,"children":[{"krate":0,"index":5123},{"krate":0,"index":5124},{"krate":0,"index":5125},{"krate":0,"index":5126}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/write/write_fmt.rs","byte_start":13682527,"byte_end":13682566,"line_start":8,"line_end":8,"column_start":1,"column_end":40}},{"value":"must_use","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/write/write_fmt.rs","byte_start":13682567,"byte_end":13682578,"line_start":9,"line_end":9,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":5155},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/write/write_vectored.rs","byte_start":13684160,"byte_end":13684179,"line_start":9,"line_end":9,"column_start":12,"column_end":31},"name":"WriteVectoredFuture","qualname":"::io::write::write_vectored::WriteVectoredFuture","value":"WriteVectoredFuture {  }","parent":null,"children":[{"krate":0,"index":5158},{"krate":0,"index":5159}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/write/write_vectored.rs","byte_start":13684109,"byte_end":13684148,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Trait","id":{"krate":0,"index":5189},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/write/mod.rs","byte_start":13675572,"byte_end":13675580,"line_start":22,"line_end":22,"column_start":11,"column_end":19},"name":"WriteExt","qualname":"::io::write::WriteExt","value":"WriteExt: Write","parent":null,"children":[{"krate":0,"index":5190},{"krate":0,"index":5192},{"krate":0,"index":5193},{"krate":0,"index":5195},{"krate":0,"index":5197}],"decl_id":null,"docs":"    Extension methods for [`Write`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5190},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/write/mod.rs","byte_start":13676400,"byte_end":13676405,"line_start":48,"line_end":48,"column_start":8,"column_end":13},"name":"write","qualname":"::io::write::WriteExt::write","value":"pub fn write<'a>(&'a mut Self, &'a [u8]) -> WriteFuture where Self: Unpin","parent":{"krate":0,"index":5189},"children":[],"decl_id":null,"docs":"        Writes some bytes into the byte stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5192},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/write/mod.rs","byte_start":13677064,"byte_end":13677069,"line_start":77,"line_end":77,"column_start":8,"column_end":13},"name":"flush","qualname":"::io::write::WriteExt::flush","value":"pub fn flush(&mut Self) -> FlushFuture<, Self> where Self: Unpin","parent":{"krate":0,"index":5189},"children":[],"decl_id":null,"docs":"        Flushes the stream to ensure that all buffered contents reach their destination.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5193},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/write/mod.rs","byte_start":13677688,"byte_end":13677702,"line_start":96,"line_end":96,"column_start":8,"column_end":22},"name":"write_vectored","qualname":"::io::write::WriteExt::write_vectored","value":"pub fn write_vectored<'a>(&'a mut Self, &'a [IoSlice]) -> WriteVectoredFuture\nwhere Self: Unpin","parent":{"krate":0,"index":5189},"children":[],"decl_id":null,"docs":"        Like [`write`], except that it writes from a slice of buffers.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5195},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/write/mod.rs","byte_start":13678640,"byte_end":13678649,"line_start":132,"line_end":132,"column_start":8,"column_end":17},"name":"write_all","qualname":"::io::write::WriteExt::write_all","value":"pub fn write_all<'a>(&'a mut Self, &'a [u8]) -> WriteAllFuture where\nSelf: Unpin","parent":{"krate":0,"index":5189},"children":[],"decl_id":null,"docs":"        Writes an entire buffer into the byte stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5197},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/write/mod.rs","byte_start":13679694,"byte_end":13679703,"line_start":169,"line_end":169,"column_start":8,"column_end":17},"name":"write_fmt","qualname":"::io::write::WriteExt::write_fmt","value":"pub fn write_fmt<'a>(&'a mut Self, std::fmt::Arguments) -> WriteFmtFuture\nwhere Self: Unpin","parent":{"krate":0,"index":5189},"children":[],"decl_id":null,"docs":"        Writes a formatted string into this writer, returning any error encountered.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9463},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13687366,"byte_end":13687375,"line_start":46,"line_end":46,"column_start":16,"column_end":25},"name":"BufReader","qualname":"::io::buf_reader::BufReader","value":"BufReader {  }","parent":null,"children":[{"krate":0,"index":9465},{"krate":0,"index":9466},{"krate":0,"index":9467},{"krate":0,"index":9468}],"decl_id":null,"docs":" Adds buffering to any reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5278},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13688006,"byte_end":13688009,"line_start":72,"line_end":72,"column_start":12,"column_end":15},"name":"new","qualname":"<BufReader<R>>::new","value":"pub fn new(R) -> BufReader<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a buffered reader with default buffer capacity.","sig":null,"attributes":[{"value":"/ Creates a buffered reader with default buffer capacity.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13687524,"byte_end":13687583,"line_start":56,"line_end":56,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13687588,"byte_end":13687591,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ The default capacity is currently 8 KB, but may change in the future.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13687596,"byte_end":13687669,"line_start":58,"line_end":58,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13687674,"byte_end":13687677,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13687682,"byte_end":13687696,"line_start":60,"line_end":60,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13687701,"byte_end":13687704,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13687709,"byte_end":13687722,"line_start":62,"line_end":62,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13687727,"byte_end":13687801,"line_start":63,"line_end":63,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13687806,"byte_end":13687811,"line_start":64,"line_end":64,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13687816,"byte_end":13687844,"line_start":65,"line_end":65,"column_start":5,"column_end":33}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13687849,"byte_end":13687882,"line_start":66,"line_end":66,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13687887,"byte_end":13687890,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ let f = BufReader::new(File::open(\"a.txt\").await?);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13687895,"byte_end":13687950,"line_start":68,"line_end":68,"column_start":5,"column_end":60}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13687955,"byte_end":13687960,"line_start":69,"line_end":69,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13687965,"byte_end":13687982,"line_start":70,"line_end":70,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13687987,"byte_end":13687994,"line_start":71,"line_end":71,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5279},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13688522,"byte_end":13688535,"line_start":90,"line_end":90,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufReader<R>>::with_capacity","value":"pub fn with_capacity(usize, R) -> BufReader<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new buffered reader with the specified capacity.","sig":null,"attributes":[{"value":"/ Creates a new buffered reader with the specified capacity.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13688107,"byte_end":13688169,"line_start":76,"line_end":76,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13688174,"byte_end":13688177,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13688182,"byte_end":13688196,"line_start":78,"line_end":78,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13688201,"byte_end":13688204,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13688209,"byte_end":13688222,"line_start":80,"line_end":80,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13688227,"byte_end":13688301,"line_start":81,"line_end":81,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13688306,"byte_end":13688311,"line_start":82,"line_end":82,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13688316,"byte_end":13688344,"line_start":83,"line_end":83,"column_start":5,"column_end":33}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13688349,"byte_end":13688382,"line_start":84,"line_end":84,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13688387,"byte_end":13688390,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ let f = BufReader::with_capacity(1024, File::open(\"a.txt\").await?);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13688395,"byte_end":13688466,"line_start":86,"line_end":86,"column_start":5,"column_end":76}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13688471,"byte_end":13688476,"line_start":87,"line_end":87,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13688481,"byte_end":13688498,"line_start":88,"line_end":88,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13688503,"byte_end":13688510,"line_start":89,"line_end":89,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5282},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13689256,"byte_end":13689263,"line_start":118,"line_end":118,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufReader<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13688761,"byte_end":13688807,"line_start":101,"line_end":101,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13688812,"byte_end":13688815,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13688820,"byte_end":13688886,"line_start":103,"line_end":103,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13688891,"byte_end":13688894,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13688899,"byte_end":13688913,"line_start":105,"line_end":105,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13688918,"byte_end":13688921,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13688926,"byte_end":13688939,"line_start":107,"line_end":107,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13688944,"byte_end":13689018,"line_start":108,"line_end":108,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13689023,"byte_end":13689028,"line_start":109,"line_end":109,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13689033,"byte_end":13689061,"line_start":110,"line_end":110,"column_start":5,"column_end":33}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13689066,"byte_end":13689099,"line_start":111,"line_end":111,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13689104,"byte_end":13689107,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ let f = BufReader::new(File::open(\"a.txt\").await?);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13689112,"byte_end":13689167,"line_start":113,"line_end":113,"column_start":5,"column_end":60}},{"value":"/ let inner = f.get_ref();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13689172,"byte_end":13689200,"line_start":114,"line_end":114,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13689205,"byte_end":13689210,"line_start":115,"line_end":115,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13689215,"byte_end":13689232,"line_start":116,"line_end":116,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13689237,"byte_end":13689244,"line_start":117,"line_end":117,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5283},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13689823,"byte_end":13689830,"line_start":139,"line_end":139,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufReader<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13689310,"byte_end":13689364,"line_start":122,"line_end":122,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13689369,"byte_end":13689372,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13689377,"byte_end":13689443,"line_start":124,"line_end":124,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13689448,"byte_end":13689451,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13689456,"byte_end":13689470,"line_start":126,"line_end":126,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13689475,"byte_end":13689478,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13689483,"byte_end":13689496,"line_start":128,"line_end":128,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13689501,"byte_end":13689575,"line_start":129,"line_end":129,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13689580,"byte_end":13689585,"line_start":130,"line_end":130,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13689590,"byte_end":13689618,"line_start":131,"line_end":131,"column_start":5,"column_end":33}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13689623,"byte_end":13689656,"line_start":132,"line_end":132,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13689661,"byte_end":13689664,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ let mut file = BufReader::new(File::open(\"a.txt\").await?);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13689669,"byte_end":13689731,"line_start":134,"line_end":134,"column_start":5,"column_end":67}},{"value":"/ let inner = file.get_mut();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13689736,"byte_end":13689767,"line_start":135,"line_end":135,"column_start":5,"column_end":36}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13689772,"byte_end":13689777,"line_start":136,"line_end":136,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13689782,"byte_end":13689799,"line_start":137,"line_end":137,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13689804,"byte_end":13689811,"line_start":138,"line_end":138,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5285},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13690627,"byte_end":13690633,"line_start":167,"line_end":167,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufReader<R>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internal buffer.","sig":null,"attributes":[{"value":"/ Returns a reference to the internal buffer.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13690128,"byte_end":13690175,"line_start":150,"line_end":150,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13690180,"byte_end":13690183,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ This function will not attempt to fill the buffer if it is empty.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13690188,"byte_end":13690257,"line_start":152,"line_end":152,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13690262,"byte_end":13690265,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13690270,"byte_end":13690284,"line_start":154,"line_end":154,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13690289,"byte_end":13690292,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13690297,"byte_end":13690310,"line_start":156,"line_end":156,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13690315,"byte_end":13690389,"line_start":157,"line_end":157,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13690394,"byte_end":13690399,"line_start":158,"line_end":158,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13690404,"byte_end":13690432,"line_start":159,"line_end":159,"column_start":5,"column_end":33}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13690437,"byte_end":13690470,"line_start":160,"line_end":160,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13690475,"byte_end":13690478,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ let f = BufReader::new(File::open(\"a.txt\").await?);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13690483,"byte_end":13690538,"line_start":162,"line_end":162,"column_start":5,"column_end":60}},{"value":"/ let buffer = f.buffer();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13690543,"byte_end":13690571,"line_start":163,"line_end":163,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13690576,"byte_end":13690581,"line_start":164,"line_end":164,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13690586,"byte_end":13690603,"line_start":165,"line_end":165,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13690608,"byte_end":13690615,"line_start":166,"line_end":166,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5286},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13691215,"byte_end":13691225,"line_start":188,"line_end":188,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufReader<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the buffered reader, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Unwraps the buffered reader, returning the underlying reader.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13690701,"byte_end":13690766,"line_start":171,"line_end":171,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13690771,"byte_end":13690774,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13690779,"byte_end":13690842,"line_start":173,"line_end":173,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13690847,"byte_end":13690850,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13690855,"byte_end":13690869,"line_start":175,"line_end":175,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13690874,"byte_end":13690877,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13690882,"byte_end":13690895,"line_start":177,"line_end":177,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13690900,"byte_end":13690974,"line_start":178,"line_end":178,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13690979,"byte_end":13690984,"line_start":179,"line_end":179,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13690989,"byte_end":13691017,"line_start":180,"line_end":180,"column_start":5,"column_end":33}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13691022,"byte_end":13691055,"line_start":181,"line_end":181,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13691060,"byte_end":13691063,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ let f = BufReader::new(File::open(\"a.txt\").await?);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13691068,"byte_end":13691123,"line_start":183,"line_end":183,"column_start":5,"column_end":60}},{"value":"/ let inner = f.into_inner();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13691128,"byte_end":13691159,"line_start":184,"line_end":184,"column_start":5,"column_end":36}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13691164,"byte_end":13691169,"line_start":185,"line_end":185,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13691174,"byte_end":13691191,"line_start":186,"line_end":186,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13691196,"byte_end":13691203,"line_start":187,"line_end":187,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":9422},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13700141,"byte_end":13700150,"line_start":84,"line_end":84,"column_start":16,"column_end":25},"name":"BufWriter","qualname":"::io::buf_writer::BufWriter","value":"BufWriter {  }","parent":null,"children":[{"krate":0,"index":9424},{"krate":0,"index":9425},{"krate":0,"index":9426}],"decl_id":null,"docs":" Wraps a writer and buffers its output.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5585},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13701015,"byte_end":13701029,"line_start":117,"line_end":117,"column_start":12,"column_end":26},"name":"IntoInnerError","qualname":"::io::buf_writer::IntoInnerError","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error returned by `into_inner` which combines an error that\n happened while writing out the buffer, and the buffered writer object\n which may be used to recover from the condition.","sig":null,"attributes":[{"value":"/ An error returned by `into_inner` which combines an error that","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13700244,"byte_end":13700310,"line_start":92,"line_end":92,"column_start":1,"column_end":67}},{"value":"/ happened while writing out the buffer, and the buffered writer object","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13700311,"byte_end":13700384,"line_start":93,"line_end":93,"column_start":1,"column_end":74}},{"value":"/ which may be used to recover from the condition.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13700385,"byte_end":13700437,"line_start":94,"line_end":94,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13700438,"byte_end":13700441,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13700442,"byte_end":13700456,"line_start":96,"line_end":96,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13700457,"byte_end":13700460,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13700461,"byte_end":13700474,"line_start":98,"line_end":98,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13700475,"byte_end":13700549,"line_start":99,"line_end":99,"column_start":1,"column_end":75}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13700550,"byte_end":13700583,"line_start":100,"line_end":100,"column_start":1,"column_end":34}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13700584,"byte_end":13700618,"line_start":101,"line_end":101,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13700619,"byte_end":13700622,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ let buf_writer = BufWriter::new(TcpStream::connect(\"127.0.0.1:34251\").await?);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13700623,"byte_end":13700705,"line_start":103,"line_end":103,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13700706,"byte_end":13700709,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ // unwrap the TcpStream and flush the buffer","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13700710,"byte_end":13700758,"line_start":105,"line_end":105,"column_start":1,"column_end":49}},{"value":"/ let stream = match buf_writer.into_inner().await {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13700759,"byte_end":13700813,"line_start":106,"line_end":106,"column_start":1,"column_end":55}},{"value":"/     Ok(s) => s,","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13700814,"byte_end":13700833,"line_start":107,"line_end":107,"column_start":1,"column_end":20}},{"value":"/     Err(e) => {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13700834,"byte_end":13700853,"line_start":108,"line_end":108,"column_start":1,"column_end":20}},{"value":"/         // Here, e is an IntoInnerError","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13700854,"byte_end":13700897,"line_start":109,"line_end":109,"column_start":1,"column_end":44}},{"value":"/         panic!(\"An error occurred\");","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13700898,"byte_end":13700938,"line_start":110,"line_end":110,"column_start":1,"column_end":41}},{"value":"/     }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13700939,"byte_end":13700948,"line_start":111,"line_end":111,"column_start":1,"column_end":10}},{"value":"/ };","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13700949,"byte_end":13700955,"line_start":112,"line_end":112,"column_start":1,"column_end":7}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13700956,"byte_end":13700961,"line_start":113,"line_end":113,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13700962,"byte_end":13700979,"line_start":114,"line_end":114,"column_start":1,"column_end":18}},{"value":"/```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13700980,"byte_end":13700986,"line_start":115,"line_end":115,"column_start":1,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":5345},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13701612,"byte_end":13701615,"line_start":135,"line_end":135,"column_start":12,"column_end":15},"name":"new","qualname":"<BufWriter<W>>::new","value":"pub fn new(W) -> BufWriter<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13701090,"byte_end":13701182,"line_start":120,"line_end":120,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13701187,"byte_end":13701220,"line_start":121,"line_end":121,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13701225,"byte_end":13701228,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13701233,"byte_end":13701247,"line_start":123,"line_end":123,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13701252,"byte_end":13701255,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13701260,"byte_end":13701273,"line_start":125,"line_end":125,"column_start":5,"column_end":18}},{"value":"/ # #![allow(unused_mut)]","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13701278,"byte_end":13701305,"line_start":126,"line_end":126,"column_start":5,"column_end":32}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13701310,"byte_end":13701384,"line_start":127,"line_end":127,"column_start":5,"column_end":79}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13701389,"byte_end":13701422,"line_start":128,"line_end":128,"column_start":5,"column_end":38}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13701427,"byte_end":13701461,"line_start":129,"line_end":129,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13701466,"byte_end":13701469,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ let mut buffer = BufWriter::new(TcpStream::connect(\"127.0.0.1:34254\").await?);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13701474,"byte_end":13701556,"line_start":131,"line_end":131,"column_start":5,"column_end":87}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13701561,"byte_end":13701566,"line_start":132,"line_end":132,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13701571,"byte_end":13701588,"line_start":133,"line_end":133,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13701593,"byte_end":13701600,"line_start":134,"line_end":134,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5346},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13702282,"byte_end":13702295,"line_start":156,"line_end":156,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufWriter<W>>::with_capacity","value":"pub fn with_capacity(usize, W) -> BufWriter<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with the specified buffer capacity.","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with the specified buffer capacity.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13701713,"byte_end":13701778,"line_start":139,"line_end":139,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13701783,"byte_end":13701786,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13701791,"byte_end":13701805,"line_start":141,"line_end":141,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13701810,"byte_end":13701813,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ Creating a buffer with a buffer of a hundred bytes.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13701818,"byte_end":13701873,"line_start":143,"line_end":143,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13701878,"byte_end":13701881,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13701886,"byte_end":13701899,"line_start":145,"line_end":145,"column_start":5,"column_end":18}},{"value":"/ # #![allow(unused_mut)]","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13701904,"byte_end":13701931,"line_start":146,"line_end":146,"column_start":5,"column_end":32}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13701936,"byte_end":13702010,"line_start":147,"line_end":147,"column_start":5,"column_end":79}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13702015,"byte_end":13702048,"line_start":148,"line_end":148,"column_start":5,"column_end":38}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13702053,"byte_end":13702087,"line_start":149,"line_end":149,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13702092,"byte_end":13702095,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:34254\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13702100,"byte_end":13702162,"line_start":151,"line_end":151,"column_start":5,"column_end":67}},{"value":"/ let mut buffer = BufWriter::with_capacity(100, stream);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13702167,"byte_end":13702226,"line_start":152,"line_end":152,"column_start":5,"column_end":64}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13702231,"byte_end":13702236,"line_start":153,"line_end":153,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13702241,"byte_end":13702258,"line_start":154,"line_end":154,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13702263,"byte_end":13702270,"line_start":155,"line_end":155,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5347},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13703009,"byte_end":13703016,"line_start":181,"line_end":181,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufWriter<W>>::get_ref","value":"pub fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying writer.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13702472,"byte_end":13702518,"line_start":164,"line_end":164,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13702523,"byte_end":13702526,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13702531,"byte_end":13702545,"line_start":166,"line_end":166,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13702550,"byte_end":13702553,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13702558,"byte_end":13702571,"line_start":168,"line_end":168,"column_start":5,"column_end":18}},{"value":"/ # #![allow(unused_mut)]","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13702576,"byte_end":13702603,"line_start":169,"line_end":169,"column_start":5,"column_end":32}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13702608,"byte_end":13702682,"line_start":170,"line_end":170,"column_start":5,"column_end":79}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13702687,"byte_end":13702720,"line_start":171,"line_end":171,"column_start":5,"column_end":38}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13702725,"byte_end":13702759,"line_start":172,"line_end":172,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13702764,"byte_end":13702767,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ let mut buffer = BufWriter::new(TcpStream::connect(\"127.0.0.1:34254\").await?);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13702772,"byte_end":13702854,"line_start":174,"line_end":174,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13702859,"byte_end":13702862,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ // We can use reference just like buffer","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13702867,"byte_end":13702911,"line_start":176,"line_end":176,"column_start":5,"column_end":49}},{"value":"/ let reference = buffer.get_ref();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13702916,"byte_end":13702953,"line_start":177,"line_end":177,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13702958,"byte_end":13702963,"line_start":178,"line_end":178,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13702968,"byte_end":13702985,"line_start":179,"line_end":179,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13702990,"byte_end":13702997,"line_start":180,"line_end":180,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5348},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13703654,"byte_end":13703661,"line_start":203,"line_end":203,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufWriter<W>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying writer.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13703063,"byte_end":13703117,"line_start":185,"line_end":185,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13703122,"byte_end":13703125,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying writer.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13703130,"byte_end":13703195,"line_start":187,"line_end":187,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13703200,"byte_end":13703203,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13703208,"byte_end":13703222,"line_start":189,"line_end":189,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13703227,"byte_end":13703230,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13703235,"byte_end":13703248,"line_start":191,"line_end":191,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13703253,"byte_end":13703327,"line_start":192,"line_end":192,"column_start":5,"column_end":79}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13703332,"byte_end":13703365,"line_start":193,"line_end":193,"column_start":5,"column_end":38}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13703370,"byte_end":13703404,"line_start":194,"line_end":194,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13703409,"byte_end":13703412,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ let mut buffer = BufWriter::new(TcpStream::connect(\"127.0.0.1:34254\").await?);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13703417,"byte_end":13703499,"line_start":196,"line_end":196,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13703504,"byte_end":13703507,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ // We can use reference just like buffer","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13703512,"byte_end":13703556,"line_start":198,"line_end":198,"column_start":5,"column_end":49}},{"value":"/ let reference = buffer.get_mut();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13703561,"byte_end":13703598,"line_start":199,"line_end":199,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13703603,"byte_end":13703608,"line_start":200,"line_end":200,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13703613,"byte_end":13703630,"line_start":201,"line_end":201,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13703635,"byte_end":13703642,"line_start":202,"line_end":202,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5350},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13704727,"byte_end":13704737,"line_start":234,"line_end":234,"column_start":18,"column_end":28},"name":"into_inner","qualname":"<BufWriter<W>>::into_inner","value":"pub async fn into_inner(Self) -> /*impl Trait*/ where Self: Unpin","parent":null,"children":[],"decl_id":null,"docs":" Consumes BufWriter, returning the underlying writer","sig":null,"attributes":[{"value":"/ Consumes BufWriter, returning the underlying writer","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13703958,"byte_end":13704013,"line_start":214,"line_end":214,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13704018,"byte_end":13704021,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ This method will not write leftover data, it will be lost.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13704026,"byte_end":13704088,"line_start":216,"line_end":216,"column_start":5,"column_end":67}},{"value":"/ For method that will attempt to write before returning the writer see [`poll_into_inner`]","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13704093,"byte_end":13704186,"line_start":217,"line_end":217,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13704191,"byte_end":13704194,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ [`poll_into_inner`]: #method.poll_into_inner","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13704199,"byte_end":13704247,"line_start":219,"line_end":219,"column_start":5,"column_end":53}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13704252,"byte_end":13704266,"line_start":220,"line_end":220,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13704271,"byte_end":13704274,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13704279,"byte_end":13704292,"line_start":222,"line_end":222,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13704297,"byte_end":13704371,"line_start":223,"line_end":223,"column_start":5,"column_end":79}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13704376,"byte_end":13704409,"line_start":224,"line_end":224,"column_start":5,"column_end":38}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13704414,"byte_end":13704448,"line_start":225,"line_end":225,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13704453,"byte_end":13704456,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ let buf_writer = BufWriter::new(TcpStream::connect(\"127.0.0.1:34251\").await?);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13704461,"byte_end":13704543,"line_start":227,"line_end":227,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13704548,"byte_end":13704551,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ // unwrap the TcpStream and flush the buffer","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13704556,"byte_end":13704604,"line_start":229,"line_end":229,"column_start":5,"column_end":53}},{"value":"/ let stream = buf_writer.into_inner().await.unwrap();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13704609,"byte_end":13704665,"line_start":230,"line_end":230,"column_start":5,"column_end":61}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13704670,"byte_end":13704675,"line_start":231,"line_end":231,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13704680,"byte_end":13704697,"line_start":232,"line_end":232,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13704702,"byte_end":13704709,"line_start":233,"line_end":233,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5353},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13705507,"byte_end":13705513,"line_start":260,"line_end":260,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufWriter<W>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13704974,"byte_end":13705030,"line_start":244,"line_end":244,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13705035,"byte_end":13705038,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13705043,"byte_end":13705057,"line_start":246,"line_end":246,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13705062,"byte_end":13705065,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13705070,"byte_end":13705083,"line_start":248,"line_end":248,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13705088,"byte_end":13705162,"line_start":249,"line_end":249,"column_start":5,"column_end":79}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13705167,"byte_end":13705200,"line_start":250,"line_end":250,"column_start":5,"column_end":38}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13705205,"byte_end":13705239,"line_start":251,"line_end":251,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13705244,"byte_end":13705247,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ let buf_writer = BufWriter::new(TcpStream::connect(\"127.0.0.1:34251\").await?);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13705252,"byte_end":13705334,"line_start":253,"line_end":253,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13705339,"byte_end":13705342,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ // See how many bytes are currently buffered","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13705347,"byte_end":13705395,"line_start":255,"line_end":255,"column_start":5,"column_end":53}},{"value":"/ let bytes_buffered = buf_writer.buffer().len();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13705400,"byte_end":13705451,"line_start":256,"line_end":256,"column_start":5,"column_end":56}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13705456,"byte_end":13705461,"line_start":257,"line_end":257,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13705466,"byte_end":13705483,"line_start":258,"line_end":258,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13705488,"byte_end":13705495,"line_start":259,"line_end":259,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":5402},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":13712574,"byte_end":13712578,"line_start":135,"line_end":135,"column_start":14,"column_end":18},"name":"copy","qualname":"::io::copy::copy","value":"pub async fn copy<R, W>(R, W) -> /*impl Trait*/ where R: Read + Unpin,\nW: Write + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Copies the entire contents of a reader into a writer.","sig":null,"attributes":[{"value":"/ Copies the entire contents of a reader into a writer.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":13711322,"byte_end":13711379,"line_start":97,"line_end":97,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":13711380,"byte_end":13711383,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ This function will continuously read data from `reader` and then","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":13711384,"byte_end":13711452,"line_start":99,"line_end":99,"column_start":1,"column_end":69}},{"value":"/ write it into `writer` in a streaming fashion until `reader`","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":13711453,"byte_end":13711517,"line_start":100,"line_end":100,"column_start":1,"column_end":65}},{"value":"/ returns EOF.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":13711518,"byte_end":13711534,"line_start":101,"line_end":101,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":13711535,"byte_end":13711538,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ On success, the total number of bytes that were copied from","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":13711539,"byte_end":13711602,"line_start":103,"line_end":103,"column_start":1,"column_end":64}},{"value":"/ `reader` to `writer` is returned.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":13711603,"byte_end":13711640,"line_start":104,"line_end":104,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":13711641,"byte_end":13711644,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ If you’re wanting to copy the contents of one file to another and you’re","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":13711645,"byte_end":13711725,"line_start":106,"line_end":106,"column_start":1,"column_end":77}},{"value":"/ working with filesystem paths, see the [`fs::copy`] function.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":13711726,"byte_end":13711791,"line_start":107,"line_end":107,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":13711792,"byte_end":13711795,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::io::copy`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":13711796,"byte_end":13711855,"line_start":109,"line_end":109,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":13711856,"byte_end":13711859,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ [`std::io::copy`]: https://doc.rust-lang.org/std/io/fn.copy.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":13711860,"byte_end":13711928,"line_start":111,"line_end":111,"column_start":1,"column_end":69}},{"value":"/ [`fs::copy`]: ../fs/fn.copy.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":13711929,"byte_end":13711965,"line_start":112,"line_end":112,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":13711966,"byte_end":13711969,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":13711970,"byte_end":13711982,"line_start":114,"line_end":114,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":13711983,"byte_end":13711986,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ This function will return an error immediately if any call to `read` or","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":13711987,"byte_end":13712062,"line_start":116,"line_end":116,"column_start":1,"column_end":76}},{"value":"/ `write` returns an error. All instances of `ErrorKind::Interrupted` are","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":13712063,"byte_end":13712138,"line_start":117,"line_end":117,"column_start":1,"column_end":76}},{"value":"/ handled by this function and the underlying operation is retried.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":13712139,"byte_end":13712208,"line_start":118,"line_end":118,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":13712209,"byte_end":13712212,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":13712213,"byte_end":13712227,"line_start":120,"line_end":120,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":13712228,"byte_end":13712231,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":13712232,"byte_end":13712239,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":13712240,"byte_end":13712314,"line_start":123,"line_end":123,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":13712315,"byte_end":13712320,"line_start":124,"line_end":124,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":13712321,"byte_end":13712343,"line_start":125,"line_end":125,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":13712344,"byte_end":13712347,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ let mut reader: &[u8] = b\"hello\";","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":13712348,"byte_end":13712385,"line_start":127,"line_end":127,"column_start":1,"column_end":38}},{"value":"/ let mut writer = io::stdout();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":13712386,"byte_end":13712420,"line_start":128,"line_end":128,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":13712421,"byte_end":13712424,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ io::copy(&mut reader, &mut writer).await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":13712425,"byte_end":13712471,"line_start":130,"line_end":130,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":13712472,"byte_end":13712477,"line_start":131,"line_end":131,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":13712478,"byte_end":13712495,"line_start":132,"line_end":132,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":13712496,"byte_end":13712503,"line_start":133,"line_end":133,"column_start":1,"column_end":8}},{"value":"cfg(all(feature = \"unstable\", not(feature = \"docs\")))","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":13712504,"byte_end":13712560,"line_start":134,"line_end":134,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":5593},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13714898,"byte_end":13714904,"line_start":25,"line_end":25,"column_start":12,"column_end":18},"name":"Cursor","qualname":"::io::cursor::Cursor","value":"Cursor {  }","parent":null,"children":[{"krate":0,"index":5595}],"decl_id":null,"docs":" A `Cursor` wraps an in-memory buffer and provides it with a\n [`Seek`] implementation.","sig":null,"attributes":[{"value":"/ A `Cursor` wraps an in-memory buffer and provides it with a","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13714074,"byte_end":13714137,"line_start":6,"line_end":6,"column_start":1,"column_end":64}},{"value":"/ [`Seek`] implementation.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13714138,"byte_end":13714166,"line_start":7,"line_end":7,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13714167,"byte_end":13714170,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ `Cursor`s are used with in-memory buffers, anything implementing","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13714171,"byte_end":13714239,"line_start":9,"line_end":9,"column_start":1,"column_end":69}},{"value":"/ `AsRef<[u8]>`, to allow them to implement [`Read`] and/or [`Write`],","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13714240,"byte_end":13714312,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/ allowing these buffers to be used anywhere you might use a reader or writer","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13714313,"byte_end":13714392,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ that does actual I/O.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13714393,"byte_end":13714418,"line_start":12,"line_end":12,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13714419,"byte_end":13714422,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The standard library implements some I/O traits on various types which","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13714423,"byte_end":13714497,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/ are commonly used as a buffer, like `Cursor<`[`Vec`]`<u8>>` and","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13714498,"byte_end":13714565,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/ `Cursor<`[`&[u8]`][bytes]`>`.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13714566,"byte_end":13714599,"line_start":16,"line_end":16,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13714600,"byte_end":13714603,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`Seek`]: trait.Seek.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13714604,"byte_end":13714633,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/ [`Read`]: trait.Read.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13714634,"byte_end":13714663,"line_start":19,"line_end":19,"column_start":1,"column_end":30}},{"value":"/ [`Write`]: trait.Write.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13714664,"byte_end":13714695,"line_start":20,"line_end":20,"column_start":1,"column_end":32}},{"value":"/ [`Vec`]: https://doc.rust-lang.org/std/vec/struct.Vec.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13714696,"byte_end":13714758,"line_start":21,"line_end":21,"column_start":1,"column_end":63}},{"value":"/ [bytes]: https://doc.rust-lang.org/std/primitive.slice.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13714759,"byte_end":13714822,"line_start":22,"line_end":22,"column_start":1,"column_end":64}},{"value":"/ [`File`]: struct.File.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13714823,"byte_end":13714853,"line_start":23,"line_end":23,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":5451},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13715491,"byte_end":13715494,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<Cursor<T>>::new","value":"pub fn new(T) -> Cursor<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new cursor wrapping the provided underlying in-memory buffer.","sig":null,"attributes":[{"value":"/ Creates a new cursor wrapping the provided underlying in-memory buffer.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13714968,"byte_end":13715043,"line_start":30,"line_end":30,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13715048,"byte_end":13715051,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ Cursor initial position is `0` even if underlying buffer (e.g., `Vec`)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13715056,"byte_end":13715130,"line_start":32,"line_end":32,"column_start":5,"column_end":79}},{"value":"/ is not empty. So writing to cursor starts with overwriting `Vec`","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13715135,"byte_end":13715203,"line_start":33,"line_end":33,"column_start":5,"column_end":73}},{"value":"/ content, not with appending to it.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13715208,"byte_end":13715246,"line_start":34,"line_end":34,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13715251,"byte_end":13715254,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13715259,"byte_end":13715273,"line_start":36,"line_end":36,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13715278,"byte_end":13715281,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13715286,"byte_end":13715293,"line_start":38,"line_end":38,"column_start":5,"column_end":12}},{"value":"/ use async_std::io::Cursor;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13715298,"byte_end":13715328,"line_start":39,"line_end":39,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13715333,"byte_end":13715336,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13715341,"byte_end":13715380,"line_start":41,"line_end":41,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13715385,"byte_end":13715433,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13715438,"byte_end":13715467,"line_start":43,"line_end":43,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13715472,"byte_end":13715479,"line_start":44,"line_end":44,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5452},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13715953,"byte_end":13715963,"line_start":64,"line_end":64,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Cursor<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this cursor, returning the underlying value.","sig":null,"attributes":[{"value":"/ Consumes this cursor, returning the underlying value.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13715606,"byte_end":13715663,"line_start":51,"line_end":51,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13715668,"byte_end":13715671,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13715676,"byte_end":13715690,"line_start":53,"line_end":53,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13715695,"byte_end":13715698,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13715703,"byte_end":13715710,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ use async_std::io::Cursor;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13715715,"byte_end":13715745,"line_start":56,"line_end":56,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13715750,"byte_end":13715753,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13715758,"byte_end":13715797,"line_start":58,"line_end":58,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13715802,"byte_end":13715850,"line_start":59,"line_end":59,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13715855,"byte_end":13715884,"line_start":60,"line_end":60,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13715889,"byte_end":13715892,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ let vec = buff.into_inner();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13715897,"byte_end":13715929,"line_start":62,"line_end":62,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13715934,"byte_end":13715941,"line_start":63,"line_end":63,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5453},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13716373,"byte_end":13716380,"line_start":81,"line_end":81,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Cursor<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying value in this cursor.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying value in this cursor.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13716020,"byte_end":13716080,"line_start":68,"line_end":68,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13716085,"byte_end":13716088,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13716093,"byte_end":13716107,"line_start":70,"line_end":70,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13716112,"byte_end":13716115,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13716120,"byte_end":13716127,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"/ use async_std::io::Cursor;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13716132,"byte_end":13716162,"line_start":73,"line_end":73,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13716167,"byte_end":13716170,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13716175,"byte_end":13716214,"line_start":75,"line_end":75,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13716219,"byte_end":13716267,"line_start":76,"line_end":76,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13716272,"byte_end":13716301,"line_start":77,"line_end":77,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13716306,"byte_end":13716309,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let reference = buff.get_ref();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13716314,"byte_end":13716349,"line_start":79,"line_end":79,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13716354,"byte_end":13716361,"line_start":80,"line_end":80,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5454},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13716954,"byte_end":13716961,"line_start":101,"line_end":101,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Cursor<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying value in this cursor.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying value in this cursor.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13716436,"byte_end":13716504,"line_start":85,"line_end":85,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13716509,"byte_end":13716512,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13716517,"byte_end":13716590,"line_start":87,"line_end":87,"column_start":5,"column_end":78}},{"value":"/ underlying value as it may corrupt this cursor's position.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13716595,"byte_end":13716657,"line_start":88,"line_end":88,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13716662,"byte_end":13716665,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13716670,"byte_end":13716684,"line_start":90,"line_end":90,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13716689,"byte_end":13716692,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13716697,"byte_end":13716704,"line_start":92,"line_end":92,"column_start":5,"column_end":12}},{"value":"/ use async_std::io::Cursor;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13716709,"byte_end":13716739,"line_start":93,"line_end":93,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13716744,"byte_end":13716747,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(Vec::new());","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13716752,"byte_end":13716795,"line_start":95,"line_end":95,"column_start":5,"column_end":48}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13716800,"byte_end":13716848,"line_start":96,"line_end":96,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13716853,"byte_end":13716882,"line_start":97,"line_end":97,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13716887,"byte_end":13716890,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ let reference = buff.get_mut();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13716895,"byte_end":13716930,"line_start":99,"line_end":99,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13716935,"byte_end":13716942,"line_start":100,"line_end":100,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5455},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13717682,"byte_end":13717690,"line_start":128,"line_end":128,"column_start":12,"column_end":20},"name":"position","qualname":"<Cursor<T>>::position","value":"pub fn position(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the current position of this cursor.","sig":null,"attributes":[{"value":"/ Returns the current position of this cursor.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13717025,"byte_end":13717073,"line_start":105,"line_end":105,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13717078,"byte_end":13717081,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13717086,"byte_end":13717100,"line_start":107,"line_end":107,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13717105,"byte_end":13717108,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13717113,"byte_end":13717120,"line_start":109,"line_end":109,"column_start":5,"column_end":12}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13717125,"byte_end":13717199,"line_start":110,"line_end":110,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13717204,"byte_end":13717209,"line_start":111,"line_end":111,"column_start":5,"column_end":10}},{"value":"/ use async_std::io::Cursor;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13717214,"byte_end":13717244,"line_start":112,"line_end":112,"column_start":5,"column_end":35}},{"value":"/ use async_std::io::prelude::*;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13717249,"byte_end":13717283,"line_start":113,"line_end":113,"column_start":5,"column_end":39}},{"value":"/ use async_std::io::SeekFrom;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13717288,"byte_end":13717320,"line_start":114,"line_end":114,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13717325,"byte_end":13717328,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(vec![1, 2, 3, 4, 5]);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13717333,"byte_end":13717385,"line_start":116,"line_end":116,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13717390,"byte_end":13717393,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buff.position(), 0);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13717398,"byte_end":13717433,"line_start":118,"line_end":118,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13717438,"byte_end":13717441,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ buff.seek(SeekFrom::Current(2)).await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13717446,"byte_end":13717489,"line_start":120,"line_end":120,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(buff.position(), 2);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13717494,"byte_end":13717529,"line_start":121,"line_end":121,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13717534,"byte_end":13717537,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ buff.seek(SeekFrom::Current(-1)).await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13717542,"byte_end":13717586,"line_start":123,"line_end":123,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(buff.position(), 1);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13717591,"byte_end":13717626,"line_start":124,"line_end":124,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13717631,"byte_end":13717636,"line_start":125,"line_end":125,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13717641,"byte_end":13717658,"line_start":126,"line_end":126,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13717663,"byte_end":13717670,"line_start":127,"line_end":127,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5456},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13718160,"byte_end":13718172,"line_start":149,"line_end":149,"column_start":12,"column_end":24},"name":"set_position","qualname":"<Cursor<T>>::set_position","value":"pub fn set_position(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the position of this cursor.","sig":null,"attributes":[{"value":"/ Sets the position of this cursor.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13717748,"byte_end":13717785,"line_start":132,"line_end":132,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13717790,"byte_end":13717793,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13717798,"byte_end":13717812,"line_start":134,"line_end":134,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13717817,"byte_end":13717820,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13717825,"byte_end":13717832,"line_start":136,"line_end":136,"column_start":5,"column_end":12}},{"value":"/ use async_std::io::Cursor;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13717837,"byte_end":13717867,"line_start":137,"line_end":137,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13717872,"byte_end":13717875,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(vec![1, 2, 3, 4, 5]);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13717880,"byte_end":13717932,"line_start":139,"line_end":139,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13717937,"byte_end":13717940,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buff.position(), 0);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13717945,"byte_end":13717980,"line_start":141,"line_end":141,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13717985,"byte_end":13717988,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ buff.set_position(2);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13717993,"byte_end":13718018,"line_start":143,"line_end":143,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buff.position(), 2);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13718023,"byte_end":13718058,"line_start":144,"line_end":144,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13718063,"byte_end":13718066,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ buff.set_position(4);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13718071,"byte_end":13718096,"line_start":146,"line_end":146,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buff.position(), 4);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13718101,"byte_end":13718136,"line_start":147,"line_end":147,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13718141,"byte_end":13718148,"line_start":148,"line_end":148,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":5505},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/empty.rs","byte_start":13721716,"byte_end":13721721,"line_start":25,"line_end":25,"column_start":8,"column_end":13},"name":"empty","qualname":"::io::empty::empty","value":"pub fn empty() -> Empty","parent":null,"children":[],"decl_id":null,"docs":" Creates a reader that contains no data.","sig":null,"attributes":[{"value":"/ Creates a reader that contains no data.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/empty.rs","byte_start":13721321,"byte_end":13721364,"line_start":7,"line_end":7,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/empty.rs","byte_start":13721365,"byte_end":13721368,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/empty.rs","byte_start":13721369,"byte_end":13721383,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/empty.rs","byte_start":13721384,"byte_end":13721387,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/empty.rs","byte_start":13721388,"byte_end":13721399,"line_start":11,"line_end":11,"column_start":1,"column_end":12}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/empty.rs","byte_start":13721400,"byte_end":13721474,"line_start":12,"line_end":12,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/empty.rs","byte_start":13721475,"byte_end":13721480,"line_start":13,"line_end":13,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/empty.rs","byte_start":13721481,"byte_end":13721503,"line_start":14,"line_end":14,"column_start":1,"column_end":23}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/empty.rs","byte_start":13721504,"byte_end":13721534,"line_start":15,"line_end":15,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/empty.rs","byte_start":13721535,"byte_end":13721538,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/empty.rs","byte_start":13721539,"byte_end":13721568,"line_start":17,"line_end":17,"column_start":1,"column_end":30}},{"value":"/ let mut reader = io::empty();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/empty.rs","byte_start":13721569,"byte_end":13721602,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/ reader.read_to_end(&mut buf).await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/empty.rs","byte_start":13721603,"byte_end":13721643,"line_start":19,"line_end":19,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/empty.rs","byte_start":13721644,"byte_end":13721647,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ assert!(buf.is_empty());","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/empty.rs","byte_start":13721648,"byte_end":13721676,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/empty.rs","byte_start":13721677,"byte_end":13721682,"line_start":22,"line_end":22,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/empty.rs","byte_start":13721683,"byte_end":13721700,"line_start":23,"line_end":23,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/empty.rs","byte_start":13721701,"byte_end":13721708,"line_start":24,"line_end":24,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5506},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/empty.rs","byte_start":13721939,"byte_end":13721944,"line_start":35,"line_end":35,"column_start":12,"column_end":17},"name":"Empty","qualname":"::io::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":5507}],"decl_id":null,"docs":" A reader that contains no data.","sig":null,"attributes":[{"value":"/ A reader that contains no data.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/empty.rs","byte_start":13721765,"byte_end":13721800,"line_start":29,"line_end":29,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/empty.rs","byte_start":13721801,"byte_end":13721804,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This reader is created by the [`empty`] function. See its","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/empty.rs","byte_start":13721805,"byte_end":13721866,"line_start":31,"line_end":31,"column_start":1,"column_end":62}},{"value":"/ documentation for more.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/empty.rs","byte_start":13721867,"byte_end":13721894,"line_start":32,"line_end":32,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/empty.rs","byte_start":13721895,"byte_end":13721898,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ [`empty`]: fn.empty.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/empty.rs","byte_start":13721899,"byte_end":13721927,"line_start":34,"line_end":34,"column_start":1,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":5537},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/repeat.rs","byte_start":13723189,"byte_end":13723195,"line_start":26,"line_end":26,"column_start":8,"column_end":14},"name":"repeat","qualname":"::io::repeat::repeat","value":"pub fn repeat(u8) -> Repeat","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of a reader that infinitely repeats one byte.","sig":null,"attributes":[{"value":"/ Creates an instance of a reader that infinitely repeats one byte.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/repeat.rs","byte_start":13722670,"byte_end":13722739,"line_start":7,"line_end":7,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/repeat.rs","byte_start":13722740,"byte_end":13722743,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ All reads from this reader will succeed by filling the specified buffer with the given byte.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/repeat.rs","byte_start":13722744,"byte_end":13722840,"line_start":9,"line_end":9,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/repeat.rs","byte_start":13722841,"byte_end":13722844,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/repeat.rs","byte_start":13722845,"byte_end":13722860,"line_start":11,"line_end":11,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/repeat.rs","byte_start":13722861,"byte_end":13722864,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/repeat.rs","byte_start":13722865,"byte_end":13722876,"line_start":13,"line_end":13,"column_start":1,"column_end":12}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/repeat.rs","byte_start":13722877,"byte_end":13722951,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/repeat.rs","byte_start":13722952,"byte_end":13722957,"line_start":15,"line_end":15,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/repeat.rs","byte_start":13722958,"byte_end":13722980,"line_start":16,"line_end":16,"column_start":1,"column_end":23}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/repeat.rs","byte_start":13722981,"byte_end":13723011,"line_start":17,"line_end":17,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/repeat.rs","byte_start":13723012,"byte_end":13723015,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ let mut buffer = [0; 3];","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/repeat.rs","byte_start":13723016,"byte_end":13723044,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"/ io::repeat(0b101).read_exact(&mut buffer).await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/repeat.rs","byte_start":13723045,"byte_end":13723098,"line_start":20,"line_end":20,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/repeat.rs","byte_start":13723099,"byte_end":13723102,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(buffer, [0b101, 0b101, 0b101]);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/repeat.rs","byte_start":13723103,"byte_end":13723149,"line_start":22,"line_end":22,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/repeat.rs","byte_start":13723150,"byte_end":13723155,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/repeat.rs","byte_start":13723156,"byte_end":13723173,"line_start":24,"line_end":24,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/repeat.rs","byte_start":13723174,"byte_end":13723181,"line_start":25,"line_end":25,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5538},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/repeat.rs","byte_start":13723465,"byte_end":13723471,"line_start":36,"line_end":36,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::io::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":5539}],"decl_id":null,"docs":" A reader which yields one byte over and over and over and over and over and...","sig":null,"attributes":[{"value":"/ A reader which yields one byte over and over and over and over and over and...","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/repeat.rs","byte_start":13723241,"byte_end":13723323,"line_start":30,"line_end":30,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/repeat.rs","byte_start":13723324,"byte_end":13723327,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This reader is created by the [`repeat`] function. See its","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/repeat.rs","byte_start":13723328,"byte_end":13723390,"line_start":32,"line_end":32,"column_start":1,"column_end":63}},{"value":"/ documentation for more.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/repeat.rs","byte_start":13723391,"byte_end":13723418,"line_start":33,"line_end":33,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/repeat.rs","byte_start":13723419,"byte_end":13723422,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ [`repeat`]: fn.repeat.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/repeat.rs","byte_start":13723423,"byte_end":13723453,"line_start":35,"line_end":35,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":5565},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/sink.rs","byte_start":13724347,"byte_end":13724351,"line_start":22,"line_end":22,"column_start":8,"column_end":12},"name":"sink","qualname":"::io::sink::sink","value":"pub fn sink() -> Sink","parent":null,"children":[],"decl_id":null,"docs":" Creates a writer that consumes and drops all data.","sig":null,"attributes":[{"value":"/ Creates a writer that consumes and drops all data.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/sink.rs","byte_start":13724005,"byte_end":13724059,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/sink.rs","byte_start":13724060,"byte_end":13724063,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/sink.rs","byte_start":13724064,"byte_end":13724078,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/sink.rs","byte_start":13724079,"byte_end":13724082,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/sink.rs","byte_start":13724083,"byte_end":13724094,"line_start":11,"line_end":11,"column_start":1,"column_end":12}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/sink.rs","byte_start":13724095,"byte_end":13724169,"line_start":12,"line_end":12,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/sink.rs","byte_start":13724170,"byte_end":13724175,"line_start":13,"line_end":13,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/sink.rs","byte_start":13724176,"byte_end":13724198,"line_start":14,"line_end":14,"column_start":1,"column_end":23}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/sink.rs","byte_start":13724199,"byte_end":13724229,"line_start":15,"line_end":15,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/sink.rs","byte_start":13724230,"byte_end":13724233,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ let mut writer = io::sink();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/sink.rs","byte_start":13724234,"byte_end":13724266,"line_start":17,"line_end":17,"column_start":1,"column_end":33}},{"value":"/ writer.write(b\"hello world\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/sink.rs","byte_start":13724267,"byte_end":13724307,"line_start":18,"line_end":18,"column_start":1,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/sink.rs","byte_start":13724308,"byte_end":13724313,"line_start":19,"line_end":19,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/sink.rs","byte_start":13724314,"byte_end":13724331,"line_start":20,"line_end":20,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/sink.rs","byte_start":13724332,"byte_end":13724339,"line_start":21,"line_end":21,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5566},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/sink.rs","byte_start":13724579,"byte_end":13724583,"line_start":32,"line_end":32,"column_start":12,"column_end":16},"name":"Sink","qualname":"::io::sink::Sink","value":"Sink {  }","parent":null,"children":[{"krate":0,"index":5567}],"decl_id":null,"docs":" A writer that consumes and drops all data.","sig":null,"attributes":[{"value":"/ A writer that consumes and drops all data.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/sink.rs","byte_start":13724393,"byte_end":13724439,"line_start":26,"line_end":26,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/sink.rs","byte_start":13724440,"byte_end":13724443,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This writer is constructed by the [`sink`] function. See its documentation","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/sink.rs","byte_start":13724444,"byte_end":13724522,"line_start":28,"line_end":28,"column_start":1,"column_end":79}},{"value":"/ for more.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/sink.rs","byte_start":13724523,"byte_end":13724536,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/sink.rs","byte_start":13724537,"byte_end":13724540,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ [`sink`]: fn.sink.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/sink.rs","byte_start":13724541,"byte_end":13724567,"line_start":31,"line_end":31,"column_start":1,"column_end":27}}]},{"kind":"Function","id":{"krate":0,"index":5666},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/timeout.rs","byte_start":13726027,"byte_end":13726034,"line_start":35,"line_end":35,"column_start":14,"column_end":21},"name":"timeout","qualname":"::io::timeout::timeout","value":"pub async fn timeout<F, T>(Duration, F) -> /*impl Trait*/ where\nF: Future<Output = io::Result<T>>","parent":null,"children":[],"decl_id":null,"docs":" Awaits an I/O future or times out after a duration of time.","sig":null,"attributes":[{"value":"/ Awaits an I/O future or times out after a duration of time.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/timeout.rs","byte_start":13725414,"byte_end":13725477,"line_start":11,"line_end":11,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/timeout.rs","byte_start":13725478,"byte_end":13725481,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ If you want to await a non I/O future consider using","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/timeout.rs","byte_start":13725482,"byte_end":13725538,"line_start":13,"line_end":13,"column_start":1,"column_end":57}},{"value":"/ [`future::timeout`](../future/fn.timeout.html) instead.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/timeout.rs","byte_start":13725539,"byte_end":13725598,"line_start":14,"line_end":14,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/timeout.rs","byte_start":13725599,"byte_end":13725602,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/timeout.rs","byte_start":13725603,"byte_end":13725617,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/timeout.rs","byte_start":13725618,"byte_end":13725621,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/timeout.rs","byte_start":13725622,"byte_end":13725635,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/timeout.rs","byte_start":13725636,"byte_end":13725710,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/timeout.rs","byte_start":13725711,"byte_end":13725716,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/timeout.rs","byte_start":13725717,"byte_end":13725745,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/timeout.rs","byte_start":13725746,"byte_end":13725749,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ use async_std::io;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/timeout.rs","byte_start":13725750,"byte_end":13725772,"line_start":23,"line_end":23,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/timeout.rs","byte_start":13725773,"byte_end":13725776,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ io::timeout(Duration::from_secs(5), async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/timeout.rs","byte_start":13725777,"byte_end":13725824,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/     let stdin = io::stdin();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/timeout.rs","byte_start":13725825,"byte_end":13725857,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/     let mut line = String::new();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/timeout.rs","byte_start":13725858,"byte_end":13725895,"line_start":27,"line_end":27,"column_start":1,"column_end":38}},{"value":"/     let n = stdin.read_line(&mut line).await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/timeout.rs","byte_start":13725896,"byte_end":13725946,"line_start":28,"line_end":28,"column_start":1,"column_end":51}},{"value":"/     Ok(())","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/timeout.rs","byte_start":13725947,"byte_end":13725961,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/ })","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/timeout.rs","byte_start":13725962,"byte_end":13725968,"line_start":30,"line_end":30,"column_start":1,"column_end":7}},{"value":"/ .await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/timeout.rs","byte_start":13725969,"byte_end":13725981,"line_start":31,"line_end":31,"column_start":1,"column_end":13}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/timeout.rs","byte_start":13725982,"byte_end":13725987,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/timeout.rs","byte_start":13725988,"byte_end":13726005,"line_start":33,"line_end":33,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/timeout.rs","byte_start":13726006,"byte_end":13726013,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":5706},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":13727981,"byte_end":13727987,"line_start":33,"line_end":33,"column_start":8,"column_end":14},"name":"stderr","qualname":"::io::stderr::stderr","value":"pub fn stderr() -> Stderr","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to the standard error of the current process.","sig":null,"attributes":[{"value":"/ Constructs a new handle to the standard error of the current process.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":13727212,"byte_end":13727285,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":13727286,"byte_end":13727289,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::io::stderr`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":13727290,"byte_end":13727351,"line_start":10,"line_end":10,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":13727352,"byte_end":13727355,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`std::io::stderr`]: https://doc.rust-lang.org/std/io/fn.stderr.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":13727356,"byte_end":13727428,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":13727429,"byte_end":13727432,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ### Note: Windows Portability Consideration","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":13727433,"byte_end":13727480,"line_start":14,"line_end":14,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":13727481,"byte_end":13727484,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ When operating in a console, the Windows implementation of this stream does not support","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":13727485,"byte_end":13727576,"line_start":16,"line_end":16,"column_start":1,"column_end":92}},{"value":"/ non-UTF-8 byte sequences. Attempting to write bytes that are not valid UTF-8 will return","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":13727577,"byte_end":13727669,"line_start":17,"line_end":17,"column_start":1,"column_end":93}},{"value":"/ an error.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":13727670,"byte_end":13727683,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":13727684,"byte_end":13727687,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":13727688,"byte_end":13727702,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":13727703,"byte_end":13727706,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":13727707,"byte_end":13727720,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":13727721,"byte_end":13727795,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":13727796,"byte_end":13727801,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":13727802,"byte_end":13727824,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":13727825,"byte_end":13727855,"line_start":26,"line_end":26,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":13727856,"byte_end":13727859,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let mut stderr = io::stderr();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":13727860,"byte_end":13727894,"line_start":28,"line_end":28,"column_start":1,"column_end":35}},{"value":"/ stderr.write_all(b\"Hello, world!\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":13727895,"byte_end":13727941,"line_start":29,"line_end":29,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":13727942,"byte_end":13727947,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":13727948,"byte_end":13727965,"line_start":31,"line_end":31,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":13727966,"byte_end":13727973,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5815},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":13728617,"byte_end":13728623,"line_start":54,"line_end":54,"column_start":12,"column_end":18},"name":"Stderr","qualname":"::io::stderr::Stderr","value":"","parent":null,"children":[],"decl_id":null,"docs":" A handle to the standard error of the current process.","sig":null,"attributes":[{"value":"/ A handle to the standard error of the current process.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":13728145,"byte_end":13728203,"line_start":41,"line_end":41,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":13728204,"byte_end":13728207,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ This writer is created by the [`stderr`] function. See its documentation for","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":13728208,"byte_end":13728288,"line_start":43,"line_end":43,"column_start":1,"column_end":81}},{"value":"/ more.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":13728289,"byte_end":13728298,"line_start":44,"line_end":44,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":13728299,"byte_end":13728302,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ### Note: Windows Portability Consideration","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":13728303,"byte_end":13728350,"line_start":46,"line_end":46,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":13728351,"byte_end":13728354,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ When operating in a console, the Windows implementation of this stream does not support","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":13728355,"byte_end":13728446,"line_start":48,"line_end":48,"column_start":1,"column_end":92}},{"value":"/ non-UTF-8 byte sequences. Attempting to write bytes that are not valid UTF-8 will return","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":13728447,"byte_end":13728539,"line_start":49,"line_end":49,"column_start":1,"column_end":93}},{"value":"/ an error.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":13728540,"byte_end":13728553,"line_start":50,"line_end":50,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":13728554,"byte_end":13728557,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ [`stderr`]: fn.stderr.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":13728558,"byte_end":13728588,"line_start":52,"line_end":52,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":5749},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":13734280,"byte_end":13734285,"line_start":35,"line_end":35,"column_start":8,"column_end":13},"name":"stdin","qualname":"::io::stdin::stdin","value":"pub fn stdin() -> Stdin","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to the standard input of the current process.","sig":null,"attributes":[{"value":"/ Constructs a new handle to the standard input of the current process.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":13733526,"byte_end":13733599,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":13733600,"byte_end":13733603,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::io::stdin`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":13733604,"byte_end":13733664,"line_start":12,"line_end":12,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":13733665,"byte_end":13733668,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`std::io::stdin`]: https://doc.rust-lang.org/std/io/fn.stdin.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":13733669,"byte_end":13733739,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":13733740,"byte_end":13733743,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ### Note: Windows Portability Consideration","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":13733744,"byte_end":13733791,"line_start":16,"line_end":16,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":13733792,"byte_end":13733795,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ When operating in a console, the Windows implementation of this stream does not support","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":13733796,"byte_end":13733887,"line_start":18,"line_end":18,"column_start":1,"column_end":92}},{"value":"/ non-UTF-8 byte sequences. Attempting to read bytes that are not valid UTF-8 will return","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":13733888,"byte_end":13733979,"line_start":19,"line_end":19,"column_start":1,"column_end":92}},{"value":"/ an error.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":13733980,"byte_end":13733993,"line_start":20,"line_end":20,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":13733994,"byte_end":13733997,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":13733998,"byte_end":13734012,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":13734013,"byte_end":13734016,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":13734017,"byte_end":13734030,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":13734031,"byte_end":13734105,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":13734106,"byte_end":13734111,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":13734112,"byte_end":13734134,"line_start":27,"line_end":27,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":13734135,"byte_end":13734138,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ let stdin = io::stdin();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":13734139,"byte_end":13734167,"line_start":29,"line_end":29,"column_start":1,"column_end":29}},{"value":"/ let mut line = String::new();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":13734168,"byte_end":13734201,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"/ stdin.read_line(&mut line).await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":13734202,"byte_end":13734240,"line_start":31,"line_end":31,"column_start":1,"column_end":39}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":13734241,"byte_end":13734246,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":13734247,"byte_end":13734264,"line_start":33,"line_end":33,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":13734265,"byte_end":13734272,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5853},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":13734936,"byte_end":13734941,"line_start":57,"line_end":57,"column_start":12,"column_end":17},"name":"Stdin","qualname":"::io::stdin::Stdin","value":"","parent":null,"children":[],"decl_id":null,"docs":" A handle to the standard input of the current process.","sig":null,"attributes":[{"value":"/ A handle to the standard input of the current process.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":13734468,"byte_end":13734526,"line_start":44,"line_end":44,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":13734527,"byte_end":13734530,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ This reader is created by the [`stdin`] function. See its documentation for","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":13734531,"byte_end":13734610,"line_start":46,"line_end":46,"column_start":1,"column_end":80}},{"value":"/ more.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":13734611,"byte_end":13734620,"line_start":47,"line_end":47,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":13734621,"byte_end":13734624,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ### Note: Windows Portability Consideration","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":13734625,"byte_end":13734672,"line_start":49,"line_end":49,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":13734673,"byte_end":13734676,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ When operating in a console, the Windows implementation of this stream does not support","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":13734677,"byte_end":13734768,"line_start":51,"line_end":51,"column_start":1,"column_end":92}},{"value":"/ non-UTF-8 byte sequences. Attempting to read bytes that are not valid UTF-8 will return","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":13734769,"byte_end":13734860,"line_start":52,"line_end":52,"column_start":1,"column_end":92}},{"value":"/ an error.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":13734861,"byte_end":13734874,"line_start":53,"line_end":53,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":13734875,"byte_end":13734878,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ [`stdin`]: fn.stdin.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":13734879,"byte_end":13734907,"line_start":55,"line_end":55,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5751},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":13736262,"byte_end":13736271,"line_start":112,"line_end":112,"column_start":18,"column_end":27},"name":"read_line","qualname":"<Stdin>::read_line","value":"pub async fn read_line<'_, '_>(&'_ Self, &'_ mut String) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads a line of input into the specified buffer.","sig":null,"attributes":[{"value":"/ Reads a line of input into the specified buffer.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":13735857,"byte_end":13735909,"line_start":97,"line_end":97,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":13735914,"byte_end":13735917,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":13735922,"byte_end":13735936,"line_start":99,"line_end":99,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":13735941,"byte_end":13735944,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":13735949,"byte_end":13735962,"line_start":101,"line_end":101,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":13735967,"byte_end":13736041,"line_start":102,"line_end":102,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":13736046,"byte_end":13736051,"line_start":103,"line_end":103,"column_start":5,"column_end":10}},{"value":"/ use async_std::io;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":13736056,"byte_end":13736078,"line_start":104,"line_end":104,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":13736083,"byte_end":13736086,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ let stdin = io::stdin();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":13736091,"byte_end":13736119,"line_start":106,"line_end":106,"column_start":5,"column_end":33}},{"value":"/ let mut line = String::new();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":13736124,"byte_end":13736157,"line_start":107,"line_end":107,"column_start":5,"column_end":38}},{"value":"/ stdin.read_line(&mut line).await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":13736162,"byte_end":13736200,"line_start":108,"line_end":108,"column_start":5,"column_end":43}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":13736205,"byte_end":13736210,"line_start":109,"line_end":109,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":13736215,"byte_end":13736232,"line_start":110,"line_end":110,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":13736237,"byte_end":13736244,"line_start":111,"line_end":111,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":5772},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdio.rs","byte_start":13740568,"byte_end":13740574,"line_start":10,"line_end":10,"column_start":14,"column_end":20},"name":"_print","qualname":"::io::stdio::_print","value":"pub async fn _print<'_>(fmt::Arguments) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":5775},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdio.rs","byte_start":13740745,"byte_end":13740752,"line_start":17,"line_end":17,"column_start":14,"column_end":21},"name":"_eprint","qualname":"::io::stdio::_eprint","value":"pub async fn _eprint<'_>(fmt::Arguments) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":5808},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":13741825,"byte_end":13741831,"line_start":33,"line_end":33,"column_start":8,"column_end":14},"name":"stdout","qualname":"::io::stdout::stdout","value":"pub fn stdout() -> Stdout","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to the standard output of the current process.","sig":null,"attributes":[{"value":"/ Constructs a new handle to the standard output of the current process.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":13741055,"byte_end":13741129,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":13741130,"byte_end":13741133,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::io::stdout`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":13741134,"byte_end":13741195,"line_start":10,"line_end":10,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":13741196,"byte_end":13741199,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`std::io::stdout`]: https://doc.rust-lang.org/std/io/fn.stdout.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":13741200,"byte_end":13741272,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":13741273,"byte_end":13741276,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ### Note: Windows Portability Consideration","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":13741277,"byte_end":13741324,"line_start":14,"line_end":14,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":13741325,"byte_end":13741328,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ When operating in a console, the Windows implementation of this stream does not support","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":13741329,"byte_end":13741420,"line_start":16,"line_end":16,"column_start":1,"column_end":92}},{"value":"/ non-UTF-8 byte sequences. Attempting to write bytes that are not valid UTF-8 will return","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":13741421,"byte_end":13741513,"line_start":17,"line_end":17,"column_start":1,"column_end":93}},{"value":"/ an error.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":13741514,"byte_end":13741527,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":13741528,"byte_end":13741531,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":13741532,"byte_end":13741546,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":13741547,"byte_end":13741550,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":13741551,"byte_end":13741564,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":13741565,"byte_end":13741639,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":13741640,"byte_end":13741645,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":13741646,"byte_end":13741668,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":13741669,"byte_end":13741699,"line_start":26,"line_end":26,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":13741700,"byte_end":13741703,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let mut stdout = io::stdout();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":13741704,"byte_end":13741738,"line_start":28,"line_end":28,"column_start":1,"column_end":35}},{"value":"/ stdout.write_all(b\"Hello, world!\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":13741739,"byte_end":13741785,"line_start":29,"line_end":29,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":13741786,"byte_end":13741791,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":13741792,"byte_end":13741809,"line_start":31,"line_end":31,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":13741810,"byte_end":13741817,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5892},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":13742462,"byte_end":13742468,"line_start":54,"line_end":54,"column_start":12,"column_end":18},"name":"Stdout","qualname":"::io::stdout::Stdout","value":"","parent":null,"children":[],"decl_id":null,"docs":" A handle to the standard output of the current process.","sig":null,"attributes":[{"value":"/ A handle to the standard output of the current process.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":13741989,"byte_end":13742048,"line_start":41,"line_end":41,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":13742049,"byte_end":13742052,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ This writer is created by the [`stdout`] function. See its documentation","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":13742053,"byte_end":13742129,"line_start":43,"line_end":43,"column_start":1,"column_end":77}},{"value":"/ for more.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":13742130,"byte_end":13742143,"line_start":44,"line_end":44,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":13742144,"byte_end":13742147,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ### Note: Windows Portability Consideration","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":13742148,"byte_end":13742195,"line_start":46,"line_end":46,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":13742196,"byte_end":13742199,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ When operating in a console, the Windows implementation of this stream does not support","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":13742200,"byte_end":13742291,"line_start":48,"line_end":48,"column_start":1,"column_end":92}},{"value":"/ non-UTF-8 byte sequences. Attempting to write bytes that are not valid UTF-8 will return","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":13742292,"byte_end":13742384,"line_start":49,"line_end":49,"column_start":1,"column_end":93}},{"value":"/ an error.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":13742385,"byte_end":13742398,"line_start":50,"line_end":50,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":13742399,"byte_end":13742402,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ [`stdout`]: fn.stdout.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":13742403,"byte_end":13742433,"line_start":52,"line_end":52,"column_start":1,"column_end":31}}]},{"kind":"Mod","id":{"krate":0,"index":4281},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"os","qualname":"::os","value":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/mod.rs","parent":null,"children":[{"krate":0,"index":5930}],"decl_id":null,"docs":" OS-specific extensions.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/utils.rs","byte_start":16418,"byte_end":16441,"line_start":207,"line_end":207,"column_start":13,"column_end":36}},{"value":"/ OS-specific extensions.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/mod.rs","byte_start":13619118,"byte_end":13619145,"line_start":1,"line_end":1,"column_start":1,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":5930},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"unix","qualname":"::os::unix","value":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/mod.rs","parent":null,"children":[{"krate":0,"index":5934},{"krate":0,"index":5948},{"krate":0,"index":5964},{"krate":0,"index":5931}],"decl_id":null,"docs":" Platform-specific extensions for Unix platforms.\n","sig":null,"attributes":[{"value":"cfg(any(unix, feature = \"docs\"))","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/utils.rs","byte_start":15391,"byte_end":15426,"line_start":157,"line_end":157,"column_start":13,"column_end":48}},{"value":"/ Platform-specific extensions for Unix platforms.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/mod.rs","byte_start":13747161,"byte_end":13747213,"line_start":1,"line_end":1,"column_start":1,"column_end":53}}]},{"kind":"Mod","id":{"krate":0,"index":5934},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/io.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::os::unix::io","value":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/io.rs","parent":null,"children":[{"krate":0,"index":5935},{"krate":0,"index":5936},{"krate":0,"index":5939},{"krate":0,"index":5942},{"krate":0,"index":5945}],"decl_id":null,"docs":" Unix-specific I/O extensions.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/utils.rs","byte_start":16418,"byte_end":16441,"line_start":207,"line_end":207,"column_start":13,"column_end":36}},{"value":"/ Unix-specific I/O extensions.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/io.rs","byte_start":13747453,"byte_end":13747486,"line_start":1,"line_end":1,"column_start":1,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":5948},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/fs.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"fs","qualname":"::os::unix::fs","value":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/fs.rs","parent":null,"children":[{"krate":0,"index":5949},{"krate":0,"index":5952},{"krate":0,"index":5955},{"krate":0,"index":5958},{"krate":0,"index":6228},{"krate":0,"index":6229},{"krate":0,"index":6232},{"krate":0,"index":6235}],"decl_id":null,"docs":" Unix-specific filesystem extensions.\n","sig":null,"attributes":[{"value":"cfg(feature = \"default\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/utils.rs","byte_start":16827,"byte_end":16854,"line_start":231,"line_end":231,"column_start":13,"column_end":40}},{"value":"/ Unix-specific filesystem extensions.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/fs.rs","byte_start":13749691,"byte_end":13749731,"line_start":1,"line_end":1,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":5958},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/fs.rs","byte_start":13750352,"byte_end":13750359,"line_start":26,"line_end":26,"column_start":14,"column_end":21},"name":"symlink","qualname":"::os::unix::fs::symlink","value":"pub async fn symlink<P: AsRef<Path>, Q: AsRef<Path>>(P, Q) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new symbolic link on the filesystem.","sig":null,"attributes":[{"value":"/ Creates a new symbolic link on the filesystem.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/fs.rs","byte_start":13749805,"byte_end":13749855,"line_start":7,"line_end":7,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/fs.rs","byte_start":13749856,"byte_end":13749859,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ The `dst` path will be a symbolic link pointing to the `src` path.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/fs.rs","byte_start":13749860,"byte_end":13749930,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/fs.rs","byte_start":13749931,"byte_end":13749934,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::os::unix::fs::symlink`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/fs.rs","byte_start":13749935,"byte_end":13750007,"line_start":11,"line_end":11,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/fs.rs","byte_start":13750008,"byte_end":13750011,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`std::os::unix::fs::symlink`]: https://doc.rust-lang.org/std/os/unix/fs/fn.symlink.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/fs.rs","byte_start":13750012,"byte_end":13750104,"line_start":13,"line_end":13,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/fs.rs","byte_start":13750105,"byte_end":13750108,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/fs.rs","byte_start":13750109,"byte_end":13750123,"line_start":15,"line_end":15,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/fs.rs","byte_start":13750124,"byte_end":13750127,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/fs.rs","byte_start":13750128,"byte_end":13750141,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/fs.rs","byte_start":13750142,"byte_end":13750216,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/fs.rs","byte_start":13750217,"byte_end":13750222,"line_start":19,"line_end":19,"column_start":1,"column_end":6}},{"value":"/ use async_std::os::unix::fs::symlink;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/fs.rs","byte_start":13750223,"byte_end":13750264,"line_start":20,"line_end":20,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/fs.rs","byte_start":13750265,"byte_end":13750268,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ symlink(\"a.txt\", \"b.txt\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/fs.rs","byte_start":13750269,"byte_end":13750306,"line_start":22,"line_end":22,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/fs.rs","byte_start":13750307,"byte_end":13750312,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/fs.rs","byte_start":13750313,"byte_end":13750330,"line_start":24,"line_end":24,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/fs.rs","byte_start":13750331,"byte_end":13750338,"line_start":25,"line_end":25,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":5964},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"net","qualname":"::os::unix::net","value":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/mod.rs","parent":null,"children":[{"krate":0,"index":5965},{"krate":0,"index":5968},{"krate":0,"index":5969},{"krate":0,"index":5972},{"krate":0,"index":5975},{"krate":0,"index":5978},{"krate":0,"index":6053},{"krate":0,"index":6142},{"krate":0,"index":6242}],"decl_id":null,"docs":" Unix-specific networking extensions.\n","sig":null,"attributes":[{"value":"cfg(feature = \"default\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/utils.rs","byte_start":16827,"byte_end":16854,"line_start":231,"line_end":231,"column_start":13,"column_end":40}},{"value":"/ Unix-specific networking extensions.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/mod.rs","byte_start":13752204,"byte_end":13752244,"line_start":1,"line_end":1,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":6013},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13756054,"byte_end":13756066,"line_start":42,"line_end":42,"column_start":12,"column_end":24},"name":"UnixDatagram","qualname":"::os::unix::net::datagram::UnixDatagram","value":"UnixDatagram {  }","parent":null,"children":[{"krate":0,"index":6014}],"decl_id":null,"docs":" A Unix datagram socket.","sig":null,"attributes":[{"value":"/ A Unix datagram socket.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13755165,"byte_end":13755192,"line_start":14,"line_end":14,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13755193,"byte_end":13755196,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ After creating a `UnixDatagram` by [`bind`]ing it to a path, data can be [sent to] and","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13755197,"byte_end":13755287,"line_start":16,"line_end":16,"column_start":1,"column_end":91}},{"value":"/ [received from] any other socket address.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13755288,"byte_end":13755333,"line_start":17,"line_end":17,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13755334,"byte_end":13755337,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::os::unix::net::UnixDatagram`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13755338,"byte_end":13755412,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13755413,"byte_end":13755416,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [`std::os::unix::net::UnixDatagram`]:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13755417,"byte_end":13755458,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ https://doc.rust-lang.org/std/os/unix/net/struct.UnixDatagram.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13755459,"byte_end":13755529,"line_start":22,"line_end":22,"column_start":1,"column_end":71}},{"value":"/ [`bind`]: #method.bind","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13755530,"byte_end":13755556,"line_start":23,"line_end":23,"column_start":1,"column_end":27}},{"value":"/ [received from]: #method.recv_from","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13755557,"byte_end":13755595,"line_start":24,"line_end":24,"column_start":1,"column_end":39}},{"value":"/ [sent to]: #method.send_to","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13755596,"byte_end":13755626,"line_start":25,"line_end":25,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13755627,"byte_end":13755630,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13755631,"byte_end":13755646,"line_start":27,"line_end":27,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13755647,"byte_end":13755650,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13755651,"byte_end":13755664,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13755665,"byte_end":13755739,"line_start":30,"line_end":30,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13755740,"byte_end":13755745,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13755746,"byte_end":13755793,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13755794,"byte_end":13755797,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let socket = UnixDatagram::bind(\"/tmp/socket1\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13755798,"byte_end":13755857,"line_start":34,"line_end":34,"column_start":1,"column_end":60}},{"value":"/ socket.send_to(b\"hello world\", \"/tmp/socket2\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13755858,"byte_end":13755916,"line_start":35,"line_end":35,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13755917,"byte_end":13755920,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ let mut buf = vec![0u8; 1024];","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13755921,"byte_end":13755955,"line_start":37,"line_end":37,"column_start":1,"column_end":35}},{"value":"/ let (n, peer) = socket.recv_from(&mut buf).await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13755956,"byte_end":13756010,"line_start":38,"line_end":38,"column_start":1,"column_end":55}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13756011,"byte_end":13756016,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13756017,"byte_end":13756034,"line_start":40,"line_end":40,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13756035,"byte_end":13756042,"line_start":41,"line_end":41,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6017},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13756697,"byte_end":13756701,"line_start":66,"line_end":66,"column_start":18,"column_end":22},"name":"bind","qualname":"<UnixDatagram>::bind","value":"pub async fn bind<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a Unix datagram socket bound to the given path.","sig":null,"attributes":[{"value":"/ Creates a Unix datagram socket bound to the given path.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13756311,"byte_end":13756370,"line_start":53,"line_end":53,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13756375,"byte_end":13756378,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13756383,"byte_end":13756397,"line_start":55,"line_end":55,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13756402,"byte_end":13756405,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13756410,"byte_end":13756423,"line_start":57,"line_end":57,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13756428,"byte_end":13756502,"line_start":58,"line_end":58,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13756507,"byte_end":13756512,"line_start":59,"line_end":59,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13756517,"byte_end":13756564,"line_start":60,"line_end":60,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13756569,"byte_end":13756572,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ let socket = UnixDatagram::bind(\"/tmp/socket\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13756577,"byte_end":13756635,"line_start":62,"line_end":62,"column_start":5,"column_end":63}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13756640,"byte_end":13756645,"line_start":63,"line_end":63,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13756650,"byte_end":13756667,"line_start":64,"line_end":64,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13756672,"byte_end":13756679,"line_start":65,"line_end":65,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6021},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13757285,"byte_end":13757292,"line_start":85,"line_end":85,"column_start":12,"column_end":19},"name":"unbound","qualname":"<UnixDatagram>::unbound","value":"pub fn unbound() -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Creates a Unix datagram which is not bound to any address.","sig":null,"attributes":[{"value":"/ Creates a Unix datagram which is not bound to any address.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13756918,"byte_end":13756980,"line_start":72,"line_end":72,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13756985,"byte_end":13756988,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13756993,"byte_end":13757007,"line_start":74,"line_end":74,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13757012,"byte_end":13757015,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13757020,"byte_end":13757033,"line_start":76,"line_end":76,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13757038,"byte_end":13757112,"line_start":77,"line_end":77,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13757117,"byte_end":13757122,"line_start":78,"line_end":78,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13757127,"byte_end":13757174,"line_start":79,"line_end":79,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13757179,"byte_end":13757182,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ let socket = UnixDatagram::unbound()?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13757187,"byte_end":13757229,"line_start":81,"line_end":81,"column_start":5,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13757234,"byte_end":13757239,"line_start":82,"line_end":82,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13757244,"byte_end":13757261,"line_start":83,"line_end":83,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13757266,"byte_end":13757273,"line_start":84,"line_end":84,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6022},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13757858,"byte_end":13757862,"line_start":105,"line_end":105,"column_start":12,"column_end":16},"name":"pair","qualname":"<UnixDatagram>::pair","value":"pub fn pair() -> io::Result<(UnixDatagram, UnixDatagram)>","parent":null,"children":[],"decl_id":null,"docs":" Creates an unnamed pair of connected sockets.","sig":null,"attributes":[{"value":"/ Creates an unnamed pair of connected sockets.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13757424,"byte_end":13757473,"line_start":90,"line_end":90,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13757478,"byte_end":13757481,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Returns two sockets which are connected to each other.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13757486,"byte_end":13757544,"line_start":92,"line_end":92,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13757549,"byte_end":13757552,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13757557,"byte_end":13757571,"line_start":94,"line_end":94,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13757576,"byte_end":13757579,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13757584,"byte_end":13757597,"line_start":96,"line_end":96,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13757602,"byte_end":13757676,"line_start":97,"line_end":97,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13757681,"byte_end":13757686,"line_start":98,"line_end":98,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13757691,"byte_end":13757738,"line_start":99,"line_end":99,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13757743,"byte_end":13757746,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ let (socket1, socket2) = UnixDatagram::pair()?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13757751,"byte_end":13757802,"line_start":101,"line_end":101,"column_start":5,"column_end":56}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13757807,"byte_end":13757812,"line_start":102,"line_end":102,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13757817,"byte_end":13757834,"line_start":103,"line_end":103,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13757839,"byte_end":13757846,"line_start":104,"line_end":104,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6023},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13758745,"byte_end":13758752,"line_start":133,"line_end":133,"column_start":18,"column_end":25},"name":"connect","qualname":"<UnixDatagram>::connect","value":"pub async fn connect<P: AsRef<Path>, '_>(&'_ Self, P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Connects the socket to the specified address.","sig":null,"attributes":[{"value":"/ Connects the socket to the specified address.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13758064,"byte_end":13758113,"line_start":112,"line_end":112,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13758118,"byte_end":13758121,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ The [`send`] method may be used to send data to the specified address. [`recv`] and","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13758126,"byte_end":13758213,"line_start":114,"line_end":114,"column_start":5,"column_end":92}},{"value":"/ [`recv_from`] will only receive data from that address.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13758218,"byte_end":13758277,"line_start":115,"line_end":115,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13758282,"byte_end":13758285,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ [`send`]: #method.send","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13758290,"byte_end":13758316,"line_start":117,"line_end":117,"column_start":5,"column_end":31}},{"value":"/ [`recv`]: #method.recv","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13758321,"byte_end":13758347,"line_start":118,"line_end":118,"column_start":5,"column_end":31}},{"value":"/ [`recv_from`]: #method.recv_from","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13758352,"byte_end":13758388,"line_start":119,"line_end":119,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13758393,"byte_end":13758396,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13758401,"byte_end":13758415,"line_start":121,"line_end":121,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13758420,"byte_end":13758423,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13758428,"byte_end":13758441,"line_start":123,"line_end":123,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13758446,"byte_end":13758520,"line_start":124,"line_end":124,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13758525,"byte_end":13758530,"line_start":125,"line_end":125,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13758535,"byte_end":13758582,"line_start":126,"line_end":126,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13758587,"byte_end":13758590,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ let socket = UnixDatagram::unbound()?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13758595,"byte_end":13758637,"line_start":128,"line_end":128,"column_start":5,"column_end":47}},{"value":"/ socket.connect(\"/tmp/socket\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13758642,"byte_end":13758683,"line_start":129,"line_end":129,"column_start":5,"column_end":46}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13758688,"byte_end":13758693,"line_start":130,"line_end":130,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13758698,"byte_end":13758715,"line_start":131,"line_end":131,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13758720,"byte_end":13758727,"line_start":132,"line_end":132,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6027},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13759356,"byte_end":13759366,"line_start":153,"line_end":153,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixDatagram>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the address of this socket.","sig":null,"attributes":[{"value":"/ Returns the address of this socket.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13758955,"byte_end":13758994,"line_start":139,"line_end":139,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13758999,"byte_end":13759002,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13759007,"byte_end":13759021,"line_start":141,"line_end":141,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13759026,"byte_end":13759029,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13759034,"byte_end":13759047,"line_start":143,"line_end":143,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13759052,"byte_end":13759126,"line_start":144,"line_end":144,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13759131,"byte_end":13759136,"line_start":145,"line_end":145,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13759141,"byte_end":13759188,"line_start":146,"line_end":146,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13759193,"byte_end":13759196,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ let socket = UnixDatagram::bind(\"/tmp/socket\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13759201,"byte_end":13759259,"line_start":148,"line_end":148,"column_start":5,"column_end":63}},{"value":"/ let addr = socket.local_addr()?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13759264,"byte_end":13759300,"line_start":149,"line_end":149,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13759305,"byte_end":13759310,"line_start":150,"line_end":150,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13759315,"byte_end":13759332,"line_start":151,"line_end":151,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13759337,"byte_end":13759344,"line_start":152,"line_end":152,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6028},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13760013,"byte_end":13760022,"line_start":176,"line_end":176,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UnixDatagram>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the address of this socket's peer.","sig":null,"attributes":[{"value":"/ Returns the address of this socket's peer.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13759457,"byte_end":13759503,"line_start":157,"line_end":157,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13759508,"byte_end":13759511,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect the socket to a peer.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13759516,"byte_end":13759577,"line_start":159,"line_end":159,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13759582,"byte_end":13759585,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: #method.connect","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13759590,"byte_end":13759622,"line_start":161,"line_end":161,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13759627,"byte_end":13759630,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13759635,"byte_end":13759649,"line_start":163,"line_end":163,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13759654,"byte_end":13759657,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13759662,"byte_end":13759675,"line_start":165,"line_end":165,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13759680,"byte_end":13759754,"line_start":166,"line_end":166,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13759759,"byte_end":13759764,"line_start":167,"line_end":167,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13759769,"byte_end":13759816,"line_start":168,"line_end":168,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13759821,"byte_end":13759824,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ let socket = UnixDatagram::unbound()?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13759829,"byte_end":13759871,"line_start":170,"line_end":170,"column_start":5,"column_end":47}},{"value":"/ socket.connect(\"/tmp/socket\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13759876,"byte_end":13759917,"line_start":171,"line_end":171,"column_start":5,"column_end":46}},{"value":"/ let peer = socket.peer_addr()?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13759922,"byte_end":13759957,"line_start":172,"line_end":172,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13759962,"byte_end":13759967,"line_start":173,"line_end":173,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13759972,"byte_end":13759989,"line_start":174,"line_end":174,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13759994,"byte_end":13760001,"line_start":175,"line_end":175,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6029},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13760656,"byte_end":13760665,"line_start":197,"line_end":197,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<UnixDatagram>::recv_from","value":"pub async fn recv_from<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13760112,"byte_end":13760146,"line_start":180,"line_end":180,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13760151,"byte_end":13760154,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes read and the address from where the data came.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13760159,"byte_end":13760249,"line_start":182,"line_end":182,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13760254,"byte_end":13760257,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13760262,"byte_end":13760276,"line_start":184,"line_end":184,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13760281,"byte_end":13760284,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13760289,"byte_end":13760302,"line_start":186,"line_end":186,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13760307,"byte_end":13760381,"line_start":187,"line_end":187,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13760386,"byte_end":13760391,"line_start":188,"line_end":188,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13760396,"byte_end":13760443,"line_start":189,"line_end":189,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13760448,"byte_end":13760451,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ let socket = UnixDatagram::unbound()?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13760456,"byte_end":13760498,"line_start":191,"line_end":191,"column_start":5,"column_end":47}},{"value":"/ let mut buf = vec![0; 1024];","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13760503,"byte_end":13760535,"line_start":192,"line_end":192,"column_start":5,"column_end":37}},{"value":"/ let (n, peer) = socket.recv_from(&mut buf).await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13760540,"byte_end":13760594,"line_start":193,"line_end":193,"column_start":5,"column_end":59}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13760599,"byte_end":13760604,"line_start":194,"line_end":194,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13760609,"byte_end":13760626,"line_start":195,"line_end":195,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13760631,"byte_end":13760638,"line_start":196,"line_end":196,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6032},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13761285,"byte_end":13761289,"line_start":218,"line_end":218,"column_start":18,"column_end":22},"name":"recv","qualname":"<UnixDatagram>::recv","value":"pub async fn recv<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13760779,"byte_end":13760813,"line_start":201,"line_end":201,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13760818,"byte_end":13760821,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes read.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13760826,"byte_end":13760875,"line_start":203,"line_end":203,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13760880,"byte_end":13760883,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13760888,"byte_end":13760902,"line_start":205,"line_end":205,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13760907,"byte_end":13760910,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13760915,"byte_end":13760928,"line_start":207,"line_end":207,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13760933,"byte_end":13761007,"line_start":208,"line_end":208,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13761012,"byte_end":13761017,"line_start":209,"line_end":209,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13761022,"byte_end":13761069,"line_start":210,"line_end":210,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13761074,"byte_end":13761077,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ let socket = UnixDatagram::bind(\"/tmp/socket\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13761082,"byte_end":13761140,"line_start":212,"line_end":212,"column_start":5,"column_end":63}},{"value":"/ let mut buf = vec![0; 1024];","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13761145,"byte_end":13761177,"line_start":213,"line_end":213,"column_start":5,"column_end":37}},{"value":"/ let n = socket.recv(&mut buf).await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13761182,"byte_end":13761223,"line_start":214,"line_end":214,"column_start":5,"column_end":46}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13761228,"byte_end":13761233,"line_start":215,"line_end":215,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13761238,"byte_end":13761255,"line_start":216,"line_end":216,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13761260,"byte_end":13761267,"line_start":217,"line_end":217,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6035},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13761876,"byte_end":13761883,"line_start":238,"line_end":238,"column_start":18,"column_end":25},"name":"send_to","qualname":"<UnixDatagram>::send_to","value":"pub async fn send_to<P: AsRef<Path>, '_, '_>(&'_ Self, &'_ [u8], P)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the specified address.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the specified address.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13761384,"byte_end":13761438,"line_start":222,"line_end":222,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13761443,"byte_end":13761446,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes written.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13761451,"byte_end":13761503,"line_start":224,"line_end":224,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13761508,"byte_end":13761511,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13761516,"byte_end":13761530,"line_start":226,"line_end":226,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13761535,"byte_end":13761538,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13761543,"byte_end":13761556,"line_start":228,"line_end":228,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13761561,"byte_end":13761635,"line_start":229,"line_end":229,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13761640,"byte_end":13761645,"line_start":230,"line_end":230,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13761650,"byte_end":13761697,"line_start":231,"line_end":231,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13761702,"byte_end":13761705,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ let socket = UnixDatagram::unbound()?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13761710,"byte_end":13761752,"line_start":233,"line_end":233,"column_start":5,"column_end":47}},{"value":"/ socket.send_to(b\"hello world\", \"/tmp/socket\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13761757,"byte_end":13761814,"line_start":234,"line_end":234,"column_start":5,"column_end":62}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13761819,"byte_end":13761824,"line_start":235,"line_end":235,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13761829,"byte_end":13761846,"line_start":236,"line_end":236,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13761851,"byte_end":13761858,"line_start":237,"line_end":237,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6039},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13762533,"byte_end":13762537,"line_start":259,"line_end":259,"column_start":18,"column_end":22},"name":"send","qualname":"<UnixDatagram>::send","value":"pub async fn send<'_, '_>(&'_ Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the socket's peer.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the socket's peer.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13762017,"byte_end":13762067,"line_start":242,"line_end":242,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13762072,"byte_end":13762075,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes written.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13762080,"byte_end":13762132,"line_start":244,"line_end":244,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13762137,"byte_end":13762140,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13762145,"byte_end":13762159,"line_start":246,"line_end":246,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13762164,"byte_end":13762167,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13762172,"byte_end":13762185,"line_start":248,"line_end":248,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13762190,"byte_end":13762264,"line_start":249,"line_end":249,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13762269,"byte_end":13762274,"line_start":250,"line_end":250,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13762279,"byte_end":13762326,"line_start":251,"line_end":251,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13762331,"byte_end":13762334,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ let socket = UnixDatagram::unbound()?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13762339,"byte_end":13762381,"line_start":253,"line_end":253,"column_start":5,"column_end":47}},{"value":"/ socket.connect(\"/tmp/socket\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13762386,"byte_end":13762427,"line_start":254,"line_end":254,"column_start":5,"column_end":46}},{"value":"/ socket.send(b\"hello world\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13762432,"byte_end":13762471,"line_start":255,"line_end":255,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13762476,"byte_end":13762481,"line_start":256,"line_end":256,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13762486,"byte_end":13762503,"line_start":257,"line_end":257,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13762508,"byte_end":13762515,"line_start":258,"line_end":258,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6042},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13763353,"byte_end":13763361,"line_start":283,"line_end":283,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<UnixDatagram>::shutdown","value":"pub fn shutdown(&Self, Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shut down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shut down the read, write, or both halves of this connection.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13762628,"byte_end":13762693,"line_start":263,"line_end":263,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13762698,"byte_end":13762701,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O calls on the specified portions to","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13762706,"byte_end":13762796,"line_start":265,"line_end":265,"column_start":5,"column_end":95}},{"value":"/ immediately return with an appropriate value (see the documentation of [`Shutdown`]).","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13762801,"byte_end":13762890,"line_start":266,"line_end":266,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13762895,"byte_end":13762898,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ [`Shutdown`]: https://doc.rust-lang.org/std/net/enum.Shutdown.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13762903,"byte_end":13762973,"line_start":268,"line_end":268,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13762978,"byte_end":13762981,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13762986,"byte_end":13763001,"line_start":270,"line_end":270,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13763006,"byte_end":13763009,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13763014,"byte_end":13763027,"line_start":272,"line_end":272,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13763032,"byte_end":13763106,"line_start":273,"line_end":273,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13763111,"byte_end":13763116,"line_start":274,"line_end":274,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13763121,"byte_end":13763168,"line_start":275,"line_end":275,"column_start":5,"column_end":52}},{"value":"/ use std::net::Shutdown;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13763173,"byte_end":13763200,"line_start":276,"line_end":276,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13763205,"byte_end":13763208,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ let socket = UnixDatagram::unbound()?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13763213,"byte_end":13763255,"line_start":278,"line_end":278,"column_start":5,"column_end":47}},{"value":"/ socket.shutdown(Shutdown::Both)?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13763260,"byte_end":13763297,"line_start":279,"line_end":279,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13763302,"byte_end":13763307,"line_start":280,"line_end":280,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13763312,"byte_end":13763329,"line_start":281,"line_end":281,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13763334,"byte_end":13763341,"line_start":282,"line_end":282,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6110},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13766285,"byte_end":13766297,"line_start":52,"line_end":52,"column_start":12,"column_end":24},"name":"UnixListener","qualname":"::os::unix::net::listener::UnixListener","value":"UnixListener {  }","parent":null,"children":[{"krate":0,"index":6111}],"decl_id":null,"docs":" A Unix domain socket server, listening for connections.","sig":null,"attributes":[{"value":"/ A Unix domain socket server, listening for connections.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13765193,"byte_end":13765252,"line_start":19,"line_end":19,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13765253,"byte_end":13765256,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ After creating a `UnixListener` by [`bind`]ing it to a socket address, it listens for incoming","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13765257,"byte_end":13765355,"line_start":21,"line_end":21,"column_start":1,"column_end":99}},{"value":"/ connections. These can be accepted by awaiting elements from the async stream of [`incoming`]","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13765356,"byte_end":13765453,"line_start":22,"line_end":22,"column_start":1,"column_end":98}},{"value":"/ connections.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13765454,"byte_end":13765470,"line_start":23,"line_end":23,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13765471,"byte_end":13765474,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ The socket will be closed when the value is dropped.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13765475,"byte_end":13765531,"line_start":25,"line_end":25,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13765532,"byte_end":13765535,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::os::unix::net::UnixListener`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13765536,"byte_end":13765610,"line_start":27,"line_end":27,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13765611,"byte_end":13765614,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ [`std::os::unix::net::UnixListener`]:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13765615,"byte_end":13765656,"line_start":29,"line_end":29,"column_start":1,"column_end":42}},{"value":"/ https://doc.rust-lang.org/std/os/unix/net/struct.UnixListener.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13765657,"byte_end":13765727,"line_start":30,"line_end":30,"column_start":1,"column_end":71}},{"value":"/ [`bind`]: #method.bind","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13765728,"byte_end":13765754,"line_start":31,"line_end":31,"column_start":1,"column_end":27}},{"value":"/ [`incoming`]: #method.incoming","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13765755,"byte_end":13765789,"line_start":32,"line_end":32,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13765790,"byte_end":13765793,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13765794,"byte_end":13765808,"line_start":34,"line_end":34,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13765809,"byte_end":13765812,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13765813,"byte_end":13765826,"line_start":36,"line_end":36,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13765827,"byte_end":13765901,"line_start":37,"line_end":37,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13765902,"byte_end":13765907,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/ use async_std::os::unix::net::UnixListener;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13765908,"byte_end":13765955,"line_start":39,"line_end":39,"column_start":1,"column_end":48}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13765956,"byte_end":13765986,"line_start":40,"line_end":40,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13765987,"byte_end":13765990,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ let listener = UnixListener::bind(\"/tmp/socket\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13765991,"byte_end":13766051,"line_start":42,"line_end":42,"column_start":1,"column_end":61}},{"value":"/ let mut incoming = listener.incoming();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13766052,"byte_end":13766095,"line_start":43,"line_end":43,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13766096,"byte_end":13766099,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ while let Some(stream) = incoming.next().await {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13766100,"byte_end":13766152,"line_start":45,"line_end":45,"column_start":1,"column_end":53}},{"value":"/     let mut stream = stream?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13766153,"byte_end":13766186,"line_start":46,"line_end":46,"column_start":1,"column_end":34}},{"value":"/     stream.write_all(b\"hello world\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13766187,"byte_end":13766235,"line_start":47,"line_end":47,"column_start":1,"column_end":49}},{"value":"/ }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13766236,"byte_end":13766241,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13766242,"byte_end":13766247,"line_start":49,"line_end":49,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13766248,"byte_end":13766265,"line_start":50,"line_end":50,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13766266,"byte_end":13766273,"line_start":51,"line_end":51,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6113},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13766754,"byte_end":13766758,"line_start":70,"line_end":70,"column_start":18,"column_end":22},"name":"bind","qualname":"<UnixListener>::bind","value":"pub async fn bind<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a Unix datagram listener bound to the given path.","sig":null,"attributes":[{"value":"/ Creates a Unix datagram listener bound to the given path.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13766364,"byte_end":13766425,"line_start":57,"line_end":57,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13766430,"byte_end":13766433,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13766438,"byte_end":13766452,"line_start":59,"line_end":59,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13766457,"byte_end":13766460,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13766465,"byte_end":13766478,"line_start":61,"line_end":61,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13766483,"byte_end":13766557,"line_start":62,"line_end":62,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13766562,"byte_end":13766567,"line_start":63,"line_end":63,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixListener;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13766572,"byte_end":13766619,"line_start":64,"line_end":64,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13766624,"byte_end":13766627,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ let listener = UnixListener::bind(\"/tmp/socket\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13766632,"byte_end":13766692,"line_start":66,"line_end":66,"column_start":5,"column_end":65}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13766697,"byte_end":13766702,"line_start":67,"line_end":67,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13766707,"byte_end":13766724,"line_start":68,"line_end":68,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13766729,"byte_end":13766736,"line_start":69,"line_end":69,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6117},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13767524,"byte_end":13767530,"line_start":93,"line_end":93,"column_start":18,"column_end":24},"name":"accept","qualname":"<UnixListener>::accept","value":"pub async fn accept<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection to this listener.","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection to this listener.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13766980,"byte_end":13767035,"line_start":77,"line_end":77,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13767040,"byte_end":13767043,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ When a connection is established, the corresponding stream and address will be returned.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13767048,"byte_end":13767140,"line_start":79,"line_end":79,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13767145,"byte_end":13767148,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13767153,"byte_end":13767167,"line_start":81,"line_end":81,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13767172,"byte_end":13767175,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13767180,"byte_end":13767193,"line_start":83,"line_end":83,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13767198,"byte_end":13767272,"line_start":84,"line_end":84,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13767277,"byte_end":13767282,"line_start":85,"line_end":85,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixListener;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13767287,"byte_end":13767334,"line_start":86,"line_end":86,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13767339,"byte_end":13767342,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ let listener = UnixListener::bind(\"/tmp/socket\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13767347,"byte_end":13767407,"line_start":88,"line_end":88,"column_start":5,"column_end":65}},{"value":"/ let (socket, addr) = listener.accept().await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13767412,"byte_end":13767462,"line_start":89,"line_end":89,"column_start":5,"column_end":55}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13767467,"byte_end":13767472,"line_start":90,"line_end":90,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13767477,"byte_end":13767494,"line_start":91,"line_end":91,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13767499,"byte_end":13767506,"line_start":92,"line_end":92,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6120},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13768722,"byte_end":13768730,"line_start":130,"line_end":130,"column_start":12,"column_end":20},"name":"incoming","qualname":"<UnixListener>::incoming","value":"pub fn incoming(&Self) -> Incoming","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream of incoming connections.","sig":null,"attributes":[{"value":"/ Returns a stream of incoming connections.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13767776,"byte_end":13767821,"line_start":104,"line_end":104,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13767826,"byte_end":13767829,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ Iterating over this stream is equivalent to calling [`accept`] in a loop. The stream of","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13767834,"byte_end":13767925,"line_start":106,"line_end":106,"column_start":5,"column_end":96}},{"value":"/ connections is infinite, i.e awaiting the next connection will never result in [`None`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13767930,"byte_end":13768022,"line_start":107,"line_end":107,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13768027,"byte_end":13768030,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ [`accept`]: #method.accept","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13768035,"byte_end":13768065,"line_start":109,"line_end":109,"column_start":5,"column_end":35}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13768070,"byte_end":13768150,"line_start":110,"line_end":110,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13768155,"byte_end":13768158,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13768163,"byte_end":13768177,"line_start":112,"line_end":112,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13768182,"byte_end":13768185,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13768190,"byte_end":13768203,"line_start":114,"line_end":114,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13768208,"byte_end":13768282,"line_start":115,"line_end":115,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13768287,"byte_end":13768292,"line_start":116,"line_end":116,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixListener;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13768297,"byte_end":13768344,"line_start":117,"line_end":117,"column_start":5,"column_end":52}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13768349,"byte_end":13768379,"line_start":118,"line_end":118,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13768384,"byte_end":13768387,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ let listener = UnixListener::bind(\"/tmp/socket\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13768392,"byte_end":13768452,"line_start":120,"line_end":120,"column_start":5,"column_end":65}},{"value":"/ let mut incoming = listener.incoming();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13768457,"byte_end":13768500,"line_start":121,"line_end":121,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13768505,"byte_end":13768508,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ while let Some(stream) = incoming.next().await {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13768513,"byte_end":13768565,"line_start":123,"line_end":123,"column_start":5,"column_end":57}},{"value":"/     let mut stream = stream?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13768570,"byte_end":13768603,"line_start":124,"line_end":124,"column_start":5,"column_end":38}},{"value":"/     stream.write_all(b\"hello world\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13768608,"byte_end":13768656,"line_start":125,"line_end":125,"column_start":5,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13768661,"byte_end":13768666,"line_start":126,"line_end":126,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13768671,"byte_end":13768676,"line_start":127,"line_end":127,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13768681,"byte_end":13768698,"line_start":128,"line_end":128,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13768703,"byte_end":13768710,"line_start":129,"line_end":129,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6121},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13769273,"byte_end":13769283,"line_start":150,"line_end":150,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixListener>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local socket address of this listener.","sig":null,"attributes":[{"value":"/ Returns the local socket address of this listener.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13768853,"byte_end":13768907,"line_start":136,"line_end":136,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13768912,"byte_end":13768915,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13768920,"byte_end":13768934,"line_start":138,"line_end":138,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13768939,"byte_end":13768942,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13768947,"byte_end":13768960,"line_start":140,"line_end":140,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13768965,"byte_end":13769039,"line_start":141,"line_end":141,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13769044,"byte_end":13769049,"line_start":142,"line_end":142,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixListener;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13769054,"byte_end":13769101,"line_start":143,"line_end":143,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13769106,"byte_end":13769109,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ let listener = UnixListener::bind(\"/tmp/socket\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13769114,"byte_end":13769174,"line_start":145,"line_end":145,"column_start":5,"column_end":65}},{"value":"/ let addr = listener.local_addr()?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13769179,"byte_end":13769217,"line_start":146,"line_end":146,"column_start":5,"column_end":43}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13769222,"byte_end":13769227,"line_start":147,"line_end":147,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13769232,"byte_end":13769249,"line_start":148,"line_end":148,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13769254,"byte_end":13769261,"line_start":149,"line_end":149,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6124},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13770309,"byte_end":13770317,"line_start":179,"line_end":179,"column_start":12,"column_end":20},"name":"Incoming","qualname":"::os::unix::net::listener::Incoming","value":"Incoming {  }","parent":null,"children":[{"krate":0,"index":6126}],"decl_id":null,"docs":" A stream of incoming Unix domain socket connections.","sig":null,"attributes":[{"value":"/ A stream of incoming Unix domain socket connections.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13769711,"byte_end":13769767,"line_start":168,"line_end":168,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13769768,"byte_end":13769771,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ This stream is infinite, i.e awaiting the next connection will never result in [`None`]. It is","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13769772,"byte_end":13769870,"line_start":170,"line_end":170,"column_start":1,"column_end":99}},{"value":"/ created by the [`incoming`] method on [`UnixListener`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13769871,"byte_end":13769930,"line_start":171,"line_end":171,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13769931,"byte_end":13769934,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::os::unix::net::Incoming`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13769935,"byte_end":13770005,"line_start":173,"line_end":173,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13770006,"byte_end":13770009,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ [`std::os::unix::net::Incoming`]: https://doc.rust-lang.org/std/os/unix/net/struct.Incoming.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13770010,"byte_end":13770110,"line_start":175,"line_end":175,"column_start":1,"column_end":101}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13770111,"byte_end":13770191,"line_start":176,"line_end":176,"column_start":1,"column_end":81}},{"value":"/ [`incoming`]: struct.UnixListener.html#method.incoming","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13770192,"byte_end":13770250,"line_start":177,"line_end":177,"column_start":1,"column_end":59}},{"value":"/ [`UnixListener`]: struct.UnixListener.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13770251,"byte_end":13770297,"line_start":178,"line_end":178,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":6238},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13772736,"byte_end":13772746,"line_start":41,"line_end":41,"column_start":12,"column_end":22},"name":"UnixStream","qualname":"::os::unix::net::stream::UnixStream","value":"UnixStream {  }","parent":null,"children":[{"krate":0,"index":6239}],"decl_id":null,"docs":" A Unix stream socket.","sig":null,"attributes":[{"value":"/ A Unix stream socket.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13772067,"byte_end":13772092,"line_start":17,"line_end":17,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13772093,"byte_end":13772096,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::os::unix::net::UnixStream`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13772097,"byte_end":13772169,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13772170,"byte_end":13772173,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [`std::os::unix::net::UnixStream`]:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13772174,"byte_end":13772213,"line_start":21,"line_end":21,"column_start":1,"column_end":40}},{"value":"/ https://doc.rust-lang.org/std/os/unix/net/struct.UnixStream.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13772214,"byte_end":13772282,"line_start":22,"line_end":22,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13772283,"byte_end":13772286,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13772287,"byte_end":13772301,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13772302,"byte_end":13772305,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13772306,"byte_end":13772319,"line_start":26,"line_end":26,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13772320,"byte_end":13772394,"line_start":27,"line_end":27,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13772395,"byte_end":13772400,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ use async_std::os::unix::net::UnixStream;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13772401,"byte_end":13772446,"line_start":29,"line_end":29,"column_start":1,"column_end":46}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13772447,"byte_end":13772477,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13772478,"byte_end":13772481,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let mut stream = UnixStream::connect(\"/tmp/socket\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13772482,"byte_end":13772545,"line_start":32,"line_end":32,"column_start":1,"column_end":64}},{"value":"/ stream.write_all(b\"hello world\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13772546,"byte_end":13772590,"line_start":33,"line_end":33,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13772591,"byte_end":13772594,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let mut response = Vec::new();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13772595,"byte_end":13772629,"line_start":35,"line_end":35,"column_start":1,"column_end":35}},{"value":"/ stream.read_to_end(&mut response).await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13772630,"byte_end":13772675,"line_start":36,"line_end":36,"column_start":1,"column_end":46}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13772676,"byte_end":13772681,"line_start":37,"line_end":37,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13772682,"byte_end":13772699,"line_start":38,"line_end":38,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13772700,"byte_end":13772707,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6198},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13773203,"byte_end":13773210,"line_start":59,"line_end":59,"column_start":18,"column_end":25},"name":"connect","qualname":"<UnixStream>::connect","value":"pub async fn connect<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Connects to the socket to the specified address.","sig":null,"attributes":[{"value":"/ Connects to the socket to the specified address.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13772825,"byte_end":13772877,"line_start":46,"line_end":46,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13772882,"byte_end":13772885,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13772890,"byte_end":13772904,"line_start":48,"line_end":48,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13772909,"byte_end":13772912,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13772917,"byte_end":13772930,"line_start":50,"line_end":50,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13772935,"byte_end":13773009,"line_start":51,"line_end":51,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13773014,"byte_end":13773019,"line_start":52,"line_end":52,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixStream;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13773024,"byte_end":13773069,"line_start":53,"line_end":53,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13773074,"byte_end":13773077,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ let stream = UnixStream::connect(\"/tmp/socket\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13773082,"byte_end":13773141,"line_start":55,"line_end":55,"column_start":5,"column_end":64}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13773146,"byte_end":13773151,"line_start":56,"line_end":56,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13773156,"byte_end":13773173,"line_start":57,"line_end":57,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13773178,"byte_end":13773185,"line_start":58,"line_end":58,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6202},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13773859,"byte_end":13773863,"line_start":81,"line_end":81,"column_start":12,"column_end":16},"name":"pair","qualname":"<UnixStream>::pair","value":"pub fn pair() -> io::Result<(UnixStream, UnixStream)>","parent":null,"children":[],"decl_id":null,"docs":" Creates an unnamed pair of connected sockets.","sig":null,"attributes":[{"value":"/ Creates an unnamed pair of connected sockets.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13773441,"byte_end":13773490,"line_start":66,"line_end":66,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13773495,"byte_end":13773498,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ Returns two streams which are connected to each other.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13773503,"byte_end":13773561,"line_start":68,"line_end":68,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13773566,"byte_end":13773569,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13773574,"byte_end":13773588,"line_start":70,"line_end":70,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13773593,"byte_end":13773596,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13773601,"byte_end":13773614,"line_start":72,"line_end":72,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13773619,"byte_end":13773693,"line_start":73,"line_end":73,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13773698,"byte_end":13773703,"line_start":74,"line_end":74,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixStream;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13773708,"byte_end":13773753,"line_start":75,"line_end":75,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13773758,"byte_end":13773761,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ let stream = UnixStream::pair()?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13773766,"byte_end":13773803,"line_start":77,"line_end":77,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13773808,"byte_end":13773813,"line_start":78,"line_end":78,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13773818,"byte_end":13773835,"line_start":79,"line_end":79,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13773840,"byte_end":13773847,"line_start":80,"line_end":80,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6203},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13774569,"byte_end":13774579,"line_start":106,"line_end":106,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixStream>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the local half of this connection.","sig":null,"attributes":[{"value":"/ Returns the socket address of the local half of this connection.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13774140,"byte_end":13774208,"line_start":92,"line_end":92,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13774213,"byte_end":13774216,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13774221,"byte_end":13774235,"line_start":94,"line_end":94,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13774240,"byte_end":13774243,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13774248,"byte_end":13774261,"line_start":96,"line_end":96,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13774266,"byte_end":13774340,"line_start":97,"line_end":97,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13774345,"byte_end":13774350,"line_start":98,"line_end":98,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixStream;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13774355,"byte_end":13774400,"line_start":99,"line_end":99,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13774405,"byte_end":13774408,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ let stream = UnixStream::connect(\"/tmp/socket\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13774413,"byte_end":13774472,"line_start":101,"line_end":101,"column_start":5,"column_end":64}},{"value":"/ let addr = stream.local_addr()?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13774477,"byte_end":13774513,"line_start":102,"line_end":102,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13774518,"byte_end":13774523,"line_start":103,"line_end":103,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13774528,"byte_end":13774545,"line_start":104,"line_end":104,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13774550,"byte_end":13774557,"line_start":105,"line_end":105,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6204},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13775099,"byte_end":13775108,"line_start":124,"line_end":124,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UnixStream>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the remote half of this connection.","sig":null,"attributes":[{"value":"/ Returns the socket address of the remote half of this connection.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13774670,"byte_end":13774739,"line_start":110,"line_end":110,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13774744,"byte_end":13774747,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13774752,"byte_end":13774766,"line_start":112,"line_end":112,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13774771,"byte_end":13774774,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13774779,"byte_end":13774792,"line_start":114,"line_end":114,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13774797,"byte_end":13774871,"line_start":115,"line_end":115,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13774876,"byte_end":13774881,"line_start":116,"line_end":116,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixStream;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13774886,"byte_end":13774931,"line_start":117,"line_end":117,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13774936,"byte_end":13774939,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ let stream = UnixStream::connect(\"/tmp/socket\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13774944,"byte_end":13775003,"line_start":119,"line_end":119,"column_start":5,"column_end":64}},{"value":"/ let peer = stream.peer_addr()?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13775008,"byte_end":13775043,"line_start":120,"line_end":120,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13775048,"byte_end":13775053,"line_start":121,"line_end":121,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13775058,"byte_end":13775075,"line_start":122,"line_end":122,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13775080,"byte_end":13775087,"line_start":123,"line_end":123,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6205},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13775911,"byte_end":13775919,"line_start":146,"line_end":146,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<UnixStream>::shutdown","value":"pub fn shutdown(&Self, Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13775198,"byte_end":13775264,"line_start":128,"line_end":128,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13775269,"byte_end":13775272,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O calls on the specified portions to","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13775277,"byte_end":13775367,"line_start":130,"line_end":130,"column_start":5,"column_end":95}},{"value":"/ immediately return with an appropriate value (see the documentation of [`Shutdown`]).","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13775372,"byte_end":13775461,"line_start":131,"line_end":131,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13775466,"byte_end":13775469,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ [`Shutdown`]: https://doc.rust-lang.org/std/net/enum.Shutdown.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13775474,"byte_end":13775544,"line_start":133,"line_end":133,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13775549,"byte_end":13775552,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13775557,"byte_end":13775570,"line_start":135,"line_end":135,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13775575,"byte_end":13775649,"line_start":136,"line_end":136,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13775654,"byte_end":13775659,"line_start":137,"line_end":137,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixStream;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13775664,"byte_end":13775709,"line_start":138,"line_end":138,"column_start":5,"column_end":50}},{"value":"/ use std::net::Shutdown;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13775714,"byte_end":13775741,"line_start":139,"line_end":139,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13775746,"byte_end":13775749,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let stream = UnixStream::connect(\"/tmp/socket\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13775754,"byte_end":13775813,"line_start":141,"line_end":141,"column_start":5,"column_end":64}},{"value":"/ stream.shutdown(Shutdown::Both)?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13775818,"byte_end":13775855,"line_start":142,"line_end":142,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13775860,"byte_end":13775865,"line_start":143,"line_end":143,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13775870,"byte_end":13775887,"line_start":144,"line_end":144,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13775892,"byte_end":13775899,"line_start":145,"line_end":145,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":4282},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::prelude","value":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/prelude.rs","parent":null,"children":[{"krate":0,"index":6245},{"krate":0,"index":6248},{"krate":0,"index":6251},{"krate":0,"index":6254},{"krate":0,"index":6257},{"krate":0,"index":6260},{"krate":0,"index":6263},{"krate":0,"index":6266},{"krate":0,"index":6269},{"krate":0,"index":6272},{"krate":0,"index":6275},{"krate":0,"index":6278},{"krate":0,"index":6281},{"krate":0,"index":6284},{"krate":0,"index":6287}],"decl_id":null,"docs":" The async prelude.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/utils.rs","byte_start":16418,"byte_end":16441,"line_start":207,"line_end":207,"column_start":13,"column_end":36}},{"value":"/ The async prelude.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/prelude.rs","byte_start":13619219,"byte_end":13619241,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/prelude.rs","byte_start":13619242,"byte_end":13619245,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The prelude re-exports most commonly used traits and macros from this crate.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/prelude.rs","byte_start":13619246,"byte_end":13619326,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/prelude.rs","byte_start":13619327,"byte_end":13619330,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/prelude.rs","byte_start":13619331,"byte_end":13619345,"line_start":5,"line_end":5,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/prelude.rs","byte_start":13619346,"byte_end":13619349,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Import the prelude with:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/prelude.rs","byte_start":13619350,"byte_end":13619378,"line_start":7,"line_end":7,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/prelude.rs","byte_start":13619379,"byte_end":13619382,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/prelude.rs","byte_start":13619383,"byte_end":13619390,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"/ # #[allow(unused_imports)]","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/prelude.rs","byte_start":13619391,"byte_end":13619421,"line_start":10,"line_end":10,"column_start":1,"column_end":31}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/prelude.rs","byte_start":13619422,"byte_end":13619452,"line_start":11,"line_end":11,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/prelude.rs","byte_start":13619453,"byte_end":13619460,"line_start":12,"line_end":12,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":4283},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","parent":null,"children":[{"krate":0,"index":4284},{"krate":0,"index":4285},{"krate":0,"index":4288},{"krate":0,"index":4291},{"krate":0,"index":4292},{"krate":0,"index":4295},{"krate":0,"index":4298},{"krate":0,"index":4301},{"krate":0,"index":4302},{"krate":0,"index":4305},{"krate":0,"index":4308},{"krate":0,"index":4311},{"krate":0,"index":6290},{"krate":0,"index":6291},{"krate":0,"index":6294},{"krate":0,"index":6297},{"krate":0,"index":6300},{"krate":0,"index":6303},{"krate":0,"index":6390}],"decl_id":null,"docs":" Synchronization primitives.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/utils.rs","byte_start":16418,"byte_end":16441,"line_start":207,"line_end":207,"column_start":13,"column_end":36}},{"value":"/ Synchronization primitives.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13620448,"byte_end":13620479,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13620480,"byte_end":13620483,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is an async version of [`std::sync`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13620484,"byte_end":13620537,"line_start":3,"line_end":3,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13620538,"byte_end":13620541,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ [`std::sync`]: https://doc.rust-lang.org/std/sync/index.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13620542,"byte_end":13620606,"line_start":5,"line_end":5,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13620607,"byte_end":13620610,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ## The need for synchronization","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13620611,"byte_end":13620646,"line_start":7,"line_end":7,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13620647,"byte_end":13620650,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ async-std's sync primitives are scheduler-aware, making it possible to","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13620651,"byte_end":13620725,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"/ `.await` their operations - for example the locking of a [`Mutex`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13620726,"byte_end":13620797,"line_start":10,"line_end":10,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13620798,"byte_end":13620801,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Conceptually, a Rust program is a series of operations which will","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13620802,"byte_end":13620871,"line_start":12,"line_end":12,"column_start":1,"column_end":70}},{"value":"/ be executed on a computer. The timeline of events happening in the","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13620872,"byte_end":13620942,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/ program is consistent with the order of the operations in the code.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13620943,"byte_end":13621014,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13621015,"byte_end":13621018,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Consider the following code, operating on some global static variables:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13621019,"byte_end":13621094,"line_start":16,"line_end":16,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13621095,"byte_end":13621098,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13621099,"byte_end":13621106,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/ static mut A: u32 = 0;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13621107,"byte_end":13621133,"line_start":19,"line_end":19,"column_start":1,"column_end":27}},{"value":"/ static mut B: u32 = 0;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13621134,"byte_end":13621160,"line_start":20,"line_end":20,"column_start":1,"column_end":27}},{"value":"/ static mut C: u32 = 0;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13621161,"byte_end":13621187,"line_start":21,"line_end":21,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13621188,"byte_end":13621191,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13621192,"byte_end":13621207,"line_start":23,"line_end":23,"column_start":1,"column_end":16}},{"value":"/     unsafe {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13621208,"byte_end":13621224,"line_start":24,"line_end":24,"column_start":1,"column_end":17}},{"value":"/         A = 3;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13621225,"byte_end":13621243,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/         B = 4;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13621244,"byte_end":13621262,"line_start":26,"line_end":26,"column_start":1,"column_end":19}},{"value":"/         A = A + B;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13621263,"byte_end":13621285,"line_start":27,"line_end":27,"column_start":1,"column_end":23}},{"value":"/         C = B;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13621286,"byte_end":13621304,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/         println!(\"{} {} {}\", A, B, C);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13621305,"byte_end":13621347,"line_start":29,"line_end":29,"column_start":1,"column_end":43}},{"value":"/         C = A;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13621348,"byte_end":13621366,"line_start":30,"line_end":30,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13621367,"byte_end":13621376,"line_start":31,"line_end":31,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13621377,"byte_end":13621382,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13621383,"byte_end":13621390,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13621391,"byte_end":13621394,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ It appears as if some variables stored in memory are changed, an addition","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13621395,"byte_end":13621472,"line_start":35,"line_end":35,"column_start":1,"column_end":78}},{"value":"/ is performed, result is stored in `A` and the variable `C` is","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13621473,"byte_end":13621538,"line_start":36,"line_end":36,"column_start":1,"column_end":66}},{"value":"/ modified twice.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13621539,"byte_end":13621558,"line_start":37,"line_end":37,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13621559,"byte_end":13621562,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ When only a single thread is involved, the results are as expected:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13621563,"byte_end":13621634,"line_start":39,"line_end":39,"column_start":1,"column_end":72}},{"value":"/ the line `7 4 4` gets printed.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13621635,"byte_end":13621669,"line_start":40,"line_end":40,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13621670,"byte_end":13621673,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ As for what happens behind the scenes, when optimizations are enabled the","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13621674,"byte_end":13621751,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"/ final generated machine code might look very different from the code:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13621752,"byte_end":13621825,"line_start":43,"line_end":43,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13621826,"byte_end":13621829,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ - The first store to `C` might be moved before the store to `A` or `B`,","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13621830,"byte_end":13621905,"line_start":45,"line_end":45,"column_start":1,"column_end":76}},{"value":"/   _as if_ we had written `C = 4; A = 3; B = 4`.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13621906,"byte_end":13621957,"line_start":46,"line_end":46,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13621958,"byte_end":13621961,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ - Assignment of `A + B` to `A` might be removed, since the sum can be stored","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13621962,"byte_end":13622042,"line_start":48,"line_end":48,"column_start":1,"column_end":81}},{"value":"/   in a temporary location until it gets printed, with the global variable","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13622043,"byte_end":13622120,"line_start":49,"line_end":49,"column_start":1,"column_end":78}},{"value":"/   never getting updated.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13622121,"byte_end":13622149,"line_start":50,"line_end":50,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13622150,"byte_end":13622153,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ - The final result could be determined just by looking at the code","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13622154,"byte_end":13622224,"line_start":52,"line_end":52,"column_start":1,"column_end":71}},{"value":"/   at compile time, so [constant folding] might turn the whole","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13622225,"byte_end":13622290,"line_start":53,"line_end":53,"column_start":1,"column_end":66}},{"value":"/   block into a simple `println!(\"7 4 4\")`.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13622291,"byte_end":13622337,"line_start":54,"line_end":54,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13622338,"byte_end":13622341,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ The compiler is allowed to perform any combination of these","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13622342,"byte_end":13622405,"line_start":56,"line_end":56,"column_start":1,"column_end":64}},{"value":"/ optimizations, as long as the final optimized code, when executed,","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13622406,"byte_end":13622476,"line_start":57,"line_end":57,"column_start":1,"column_end":71}},{"value":"/ produces the same results as the one without optimizations.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13622477,"byte_end":13622540,"line_start":58,"line_end":58,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13622541,"byte_end":13622544,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ Due to the [concurrency] involved in modern computers, assumptions","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13622545,"byte_end":13622615,"line_start":60,"line_end":60,"column_start":1,"column_end":71}},{"value":"/ about the program's execution order are often wrong. Access to","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13622616,"byte_end":13622682,"line_start":61,"line_end":61,"column_start":1,"column_end":67}},{"value":"/ global variables can lead to nondeterministic results, **even if**","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13622683,"byte_end":13622753,"line_start":62,"line_end":62,"column_start":1,"column_end":71}},{"value":"/ compiler optimizations are disabled, and it is **still possible**","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13622754,"byte_end":13622823,"line_start":63,"line_end":63,"column_start":1,"column_end":70}},{"value":"/ to introduce synchronization bugs.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13622824,"byte_end":13622862,"line_start":64,"line_end":64,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13622863,"byte_end":13622866,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Note that thanks to Rust's safety guarantees, accessing global (static)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13622867,"byte_end":13622942,"line_start":66,"line_end":66,"column_start":1,"column_end":76}},{"value":"/ variables requires `unsafe` code, assuming we don't use any of the","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13622943,"byte_end":13623013,"line_start":67,"line_end":67,"column_start":1,"column_end":71}},{"value":"/ synchronization primitives in this module.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13623014,"byte_end":13623060,"line_start":68,"line_end":68,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13623061,"byte_end":13623064,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [constant folding]: https://en.wikipedia.org/wiki/Constant_folding","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13623065,"byte_end":13623135,"line_start":70,"line_end":70,"column_start":1,"column_end":71}},{"value":"/ [concurrency]: https://en.wikipedia.org/wiki/Concurrency_(computer_science)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13623136,"byte_end":13623215,"line_start":71,"line_end":71,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13623216,"byte_end":13623219,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ## Out-of-order execution","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13623220,"byte_end":13623249,"line_start":73,"line_end":73,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13623250,"byte_end":13623253,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ Instructions can execute in a different order from the one we define, due to","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13623254,"byte_end":13623334,"line_start":75,"line_end":75,"column_start":1,"column_end":81}},{"value":"/ various reasons:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13623335,"byte_end":13623355,"line_start":76,"line_end":76,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13623356,"byte_end":13623359,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ - The **compiler** reordering instructions: If the compiler can issue an","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13623360,"byte_end":13623436,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"/   instruction at an earlier point, it will try to do so. For example, it","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13623437,"byte_end":13623513,"line_start":79,"line_end":79,"column_start":1,"column_end":77}},{"value":"/   might hoist memory loads at the top of a code block, so that the CPU can","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13623514,"byte_end":13623592,"line_start":80,"line_end":80,"column_start":1,"column_end":79}},{"value":"/   start [prefetching] the values from memory.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13623593,"byte_end":13623642,"line_start":81,"line_end":81,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13623643,"byte_end":13623646,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/   In single-threaded scenarios, this can cause issues when writing","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13623647,"byte_end":13623717,"line_start":83,"line_end":83,"column_start":1,"column_end":71}},{"value":"/   signal handlers or certain kinds of low-level code.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13623718,"byte_end":13623775,"line_start":84,"line_end":84,"column_start":1,"column_end":58}},{"value":"/   Use [compiler fences] to prevent this reordering.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13623776,"byte_end":13623831,"line_start":85,"line_end":85,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13623832,"byte_end":13623835,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ - A **single processor** executing instructions [out-of-order]:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13623836,"byte_end":13623903,"line_start":87,"line_end":87,"column_start":1,"column_end":68}},{"value":"/   Modern CPUs are capable of [superscalar] execution,","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13623904,"byte_end":13623961,"line_start":88,"line_end":88,"column_start":1,"column_end":58}},{"value":"/   i.e., multiple instructions might be executing at the same time,","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13623962,"byte_end":13624032,"line_start":89,"line_end":89,"column_start":1,"column_end":71}},{"value":"/   even though the machine code describes a sequential process.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13624033,"byte_end":13624099,"line_start":90,"line_end":90,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13624100,"byte_end":13624103,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/   This kind of reordering is handled transparently by the CPU.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13624104,"byte_end":13624170,"line_start":92,"line_end":92,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13624171,"byte_end":13624174,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ - A **multiprocessor** system executing multiple hardware threads","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13624175,"byte_end":13624244,"line_start":94,"line_end":94,"column_start":1,"column_end":70}},{"value":"/   at the same time: In multi-threaded scenarios, you can use two","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13624245,"byte_end":13624313,"line_start":95,"line_end":95,"column_start":1,"column_end":69}},{"value":"/   kinds of primitives to deal with synchronization:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13624314,"byte_end":13624369,"line_start":96,"line_end":96,"column_start":1,"column_end":56}},{"value":"/   - [memory fences] to ensure memory accesses are made visible to","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13624370,"byte_end":13624439,"line_start":97,"line_end":97,"column_start":1,"column_end":70}},{"value":"/   other CPUs in the right order.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13624440,"byte_end":13624476,"line_start":98,"line_end":98,"column_start":1,"column_end":37}},{"value":"/   - [atomic operations] to ensure simultaneous access to the same","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13624477,"byte_end":13624546,"line_start":99,"line_end":99,"column_start":1,"column_end":70}},{"value":"/   memory location doesn't lead to undefined behavior.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13624547,"byte_end":13624604,"line_start":100,"line_end":100,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13624605,"byte_end":13624608,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ [prefetching]: https://en.wikipedia.org/wiki/Cache_prefetching","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13624609,"byte_end":13624675,"line_start":102,"line_end":102,"column_start":1,"column_end":67}},{"value":"/ [compiler fences]: https://doc.rust-lang.org/std/sync/atomic/fn.compiler_fence.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13624676,"byte_end":13624763,"line_start":103,"line_end":103,"column_start":1,"column_end":88}},{"value":"/ [out-of-order]: https://en.wikipedia.org/wiki/Out-of-order_execution","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13624764,"byte_end":13624836,"line_start":104,"line_end":104,"column_start":1,"column_end":73}},{"value":"/ [superscalar]: https://en.wikipedia.org/wiki/Superscalar_processor","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13624837,"byte_end":13624907,"line_start":105,"line_end":105,"column_start":1,"column_end":71}},{"value":"/ [memory fences]: https://doc.rust-lang.org/std/sync/atomic/fn.fence.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13624908,"byte_end":13624984,"line_start":106,"line_end":106,"column_start":1,"column_end":77}},{"value":"/ [atomic operations]: https://doc.rust-lang.org/std/sync/atomic/index.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13624985,"byte_end":13625062,"line_start":107,"line_end":107,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13625063,"byte_end":13625066,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ ## Higher-level synchronization objects","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13625067,"byte_end":13625110,"line_start":109,"line_end":109,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13625111,"byte_end":13625114,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ Most of the low-level synchronization primitives are quite error-prone and","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13625115,"byte_end":13625193,"line_start":111,"line_end":111,"column_start":1,"column_end":79}},{"value":"/ inconvenient to use, which is why async-std also exposes some","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13625194,"byte_end":13625259,"line_start":112,"line_end":112,"column_start":1,"column_end":66}},{"value":"/ higher-level synchronization objects.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13625260,"byte_end":13625301,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13625302,"byte_end":13625305,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ These abstractions can be built out of lower-level primitives.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13625306,"byte_end":13625372,"line_start":115,"line_end":115,"column_start":1,"column_end":67}},{"value":"/ For efficiency, the sync objects in async-std are usually","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13625373,"byte_end":13625434,"line_start":116,"line_end":116,"column_start":1,"column_end":62}},{"value":"/ implemented with help from the scheduler, which is","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13625435,"byte_end":13625489,"line_start":117,"line_end":117,"column_start":1,"column_end":55}},{"value":"/ able to reschedule the tasks while they are blocked on acquiring","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13625490,"byte_end":13625558,"line_start":118,"line_end":118,"column_start":1,"column_end":69}},{"value":"/ a lock.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13625559,"byte_end":13625570,"line_start":119,"line_end":119,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13625571,"byte_end":13625574,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ The following is an overview of the available synchronization","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13625575,"byte_end":13625640,"line_start":121,"line_end":121,"column_start":1,"column_end":66}},{"value":"/ objects:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13625641,"byte_end":13625653,"line_start":122,"line_end":122,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13625654,"byte_end":13625657,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ - [`Arc`]: Atomically Reference-Counted pointer, which can be used","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13625658,"byte_end":13625728,"line_start":124,"line_end":124,"column_start":1,"column_end":71}},{"value":"/   in multithreaded environments to prolong the lifetime of some","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13625729,"byte_end":13625796,"line_start":125,"line_end":125,"column_start":1,"column_end":68}},{"value":"/   data until all the threads have finished using it.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13625797,"byte_end":13625853,"line_start":126,"line_end":126,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13625854,"byte_end":13625857,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ - [`Barrier`]: Ensures multiple threads will wait for each other","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13625858,"byte_end":13625926,"line_start":128,"line_end":128,"column_start":1,"column_end":69}},{"value":"/   to reach a point in the program, before continuing execution all","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13625927,"byte_end":13625997,"line_start":129,"line_end":129,"column_start":1,"column_end":71}},{"value":"/   together.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13625998,"byte_end":13626013,"line_start":130,"line_end":130,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13626014,"byte_end":13626017,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ - [`Mutex`]: Mutual exclusion mechanism, which ensures that at","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13626018,"byte_end":13626084,"line_start":132,"line_end":132,"column_start":1,"column_end":67}},{"value":"/   most one task at a time is able to access some data.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13626085,"byte_end":13626143,"line_start":133,"line_end":133,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13626144,"byte_end":13626147,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ - [`RwLock`]: Provides a mutual exclusion mechanism which allows","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13626148,"byte_end":13626216,"line_start":135,"line_end":135,"column_start":1,"column_end":69}},{"value":"/   multiple readers at the same time, while allowing only one","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13626217,"byte_end":13626281,"line_start":136,"line_end":136,"column_start":1,"column_end":65}},{"value":"/   writer at a time. In some cases, this can be more efficient than","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13626282,"byte_end":13626352,"line_start":137,"line_end":137,"column_start":1,"column_end":71}},{"value":"/   a mutex.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13626353,"byte_end":13626367,"line_start":138,"line_end":138,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13626368,"byte_end":13626371,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ If you're looking for channels, check out","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13626372,"byte_end":13626417,"line_start":140,"line_end":140,"column_start":1,"column_end":46}},{"value":"/ [`async_std::channel`][crate::channel].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13626418,"byte_end":13626461,"line_start":141,"line_end":141,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13626462,"byte_end":13626465,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ [`Arc`]: struct.Arc.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13626466,"byte_end":13626494,"line_start":143,"line_end":143,"column_start":1,"column_end":29}},{"value":"/ [`Barrier`]: struct.Barrier.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13626495,"byte_end":13626531,"line_start":144,"line_end":144,"column_start":1,"column_end":37}},{"value":"/ [`channel`]: fn.channel.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13626532,"byte_end":13626564,"line_start":145,"line_end":145,"column_start":1,"column_end":33}},{"value":"/ [`Mutex`]: struct.Mutex.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13626565,"byte_end":13626597,"line_start":146,"line_end":146,"column_start":1,"column_end":33}},{"value":"/ [`RwLock`]: struct.RwLock.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13626598,"byte_end":13626632,"line_start":147,"line_end":147,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13626633,"byte_end":13626636,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13626637,"byte_end":13626651,"line_start":149,"line_end":149,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13626652,"byte_end":13626655,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ Spawn a task that updates an integer protected by a mutex:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13626656,"byte_end":13626718,"line_start":151,"line_end":151,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13626719,"byte_end":13626722,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13626723,"byte_end":13626730,"line_start":153,"line_end":153,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13626731,"byte_end":13626770,"line_start":154,"line_end":154,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13626771,"byte_end":13626776,"line_start":155,"line_end":155,"column_start":1,"column_end":6}},{"value":"/ use async_std::sync::{Arc, Mutex};","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13626777,"byte_end":13626815,"line_start":156,"line_end":156,"column_start":1,"column_end":39}},{"value":"/ use async_std::task;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13626816,"byte_end":13626840,"line_start":157,"line_end":157,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13626841,"byte_end":13626844,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ let m1 = Arc::new(Mutex::new(0));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13626845,"byte_end":13626882,"line_start":159,"line_end":159,"column_start":1,"column_end":38}},{"value":"/ let m2 = m1.clone();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13626883,"byte_end":13626907,"line_start":160,"line_end":160,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13626908,"byte_end":13626911,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ task::spawn(async move {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13626912,"byte_end":13626940,"line_start":162,"line_end":162,"column_start":1,"column_end":29}},{"value":"/     *m2.lock().await = 1;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13626941,"byte_end":13626970,"line_start":163,"line_end":163,"column_start":1,"column_end":30}},{"value":"/ })","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13626971,"byte_end":13626977,"line_start":164,"line_end":164,"column_start":1,"column_end":7}},{"value":"/ .await;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13626978,"byte_end":13626989,"line_start":165,"line_end":165,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13626990,"byte_end":13626993,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(*m1.lock().await, 1);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13626994,"byte_end":13627030,"line_start":167,"line_end":167,"column_start":1,"column_end":37}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13627031,"byte_end":13627036,"line_start":168,"line_end":168,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13627037,"byte_end":13627045,"line_start":169,"line_end":169,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13627046,"byte_end":13627053,"line_start":170,"line_end":170,"column_start":1,"column_end":8}},{"value":"allow(clippy :: needless_doctest_main)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/mod.rs","byte_start":13627055,"byte_end":13627095,"line_start":172,"line_end":172,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":6449},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13778946,"byte_end":13778963,"line_start":11,"line_end":11,"column_start":12,"column_end":29},"name":"WaitTimeoutResult","qualname":"::sync::condvar::WaitTimeoutResult","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6334},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13779177,"byte_end":13779186,"line_start":17,"line_end":17,"column_start":12,"column_end":21},"name":"timed_out","qualname":"<WaitTimeoutResult>::timed_out","value":"pub fn timed_out(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the wait was known to have timed out.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the wait was known to have timed out.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13779106,"byte_end":13779165,"line_start":16,"line_end":16,"column_start":5,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":6335},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13780206,"byte_end":13780213,"line_start":59,"line_end":59,"column_start":12,"column_end":19},"name":"Condvar","qualname":"::sync::condvar::Condvar","value":"Condvar {  }","parent":null,"children":[{"krate":0,"index":6336}],"decl_id":null,"docs":" A Condition Variable","sig":null,"attributes":[{"value":"/ A Condition Variable","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13779227,"byte_end":13779251,"line_start":22,"line_end":22,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13779252,"byte_end":13779255,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::sync::Condvar`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13779256,"byte_end":13779316,"line_start":24,"line_end":24,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13779317,"byte_end":13779320,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ [`std::sync::Condvar`]: https://doc.rust-lang.org/std/sync/struct.Condvar.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13779321,"byte_end":13779403,"line_start":26,"line_end":26,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13779404,"byte_end":13779407,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13779408,"byte_end":13779422,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13779423,"byte_end":13779426,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13779427,"byte_end":13779434,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13779435,"byte_end":13779474,"line_start":31,"line_end":31,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13779475,"byte_end":13779480,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13779481,"byte_end":13779504,"line_start":33,"line_end":33,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13779505,"byte_end":13779508,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ use async_std::sync::{Mutex, Condvar};","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13779509,"byte_end":13779551,"line_start":35,"line_end":35,"column_start":1,"column_end":43}},{"value":"/ use async_std::task;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13779552,"byte_end":13779576,"line_start":36,"line_end":36,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13779577,"byte_end":13779580,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ let pair = Arc::new((Mutex::new(false), Condvar::new()));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13779581,"byte_end":13779642,"line_start":38,"line_end":38,"column_start":1,"column_end":62}},{"value":"/ let pair2 = pair.clone();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13779643,"byte_end":13779672,"line_start":39,"line_end":39,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13779673,"byte_end":13779676,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ // Inside of our lock, spawn a new thread, and then wait for it to start.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13779677,"byte_end":13779754,"line_start":41,"line_end":41,"column_start":1,"column_end":78}},{"value":"/ task::spawn(async move {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13779755,"byte_end":13779783,"line_start":42,"line_end":42,"column_start":1,"column_end":29}},{"value":"/     let (lock, cvar) = &*pair2;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13779784,"byte_end":13779819,"line_start":43,"line_end":43,"column_start":1,"column_end":36}},{"value":"/     let mut started = lock.lock().await;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13779820,"byte_end":13779864,"line_start":44,"line_end":44,"column_start":1,"column_end":45}},{"value":"/     *started = true;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13779865,"byte_end":13779889,"line_start":45,"line_end":45,"column_start":1,"column_end":25}},{"value":"/     // We notify the condvar that the value has changed.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13779890,"byte_end":13779950,"line_start":46,"line_end":46,"column_start":1,"column_end":61}},{"value":"/     cvar.notify_one();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13779951,"byte_end":13779977,"line_start":47,"line_end":47,"column_start":1,"column_end":27}},{"value":"/ });","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13779978,"byte_end":13779985,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13779986,"byte_end":13779989,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ // Wait for the thread to start up.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13779990,"byte_end":13780029,"line_start":50,"line_end":50,"column_start":1,"column_end":40}},{"value":"/ let (lock, cvar) = &*pair;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13780030,"byte_end":13780060,"line_start":51,"line_end":51,"column_start":1,"column_end":31}},{"value":"/ let mut started = lock.lock().await;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13780061,"byte_end":13780101,"line_start":52,"line_end":52,"column_start":1,"column_end":41}},{"value":"/ while !*started {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13780102,"byte_end":13780123,"line_start":53,"line_end":53,"column_start":1,"column_end":22}},{"value":"/     started = cvar.wait(started).await;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13780124,"byte_end":13780167,"line_start":54,"line_end":54,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13780168,"byte_end":13780173,"line_start":55,"line_end":55,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13780174,"byte_end":13780177,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ # })","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13780178,"byte_end":13780186,"line_start":57,"line_end":57,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13780187,"byte_end":13780194,"line_start":58,"line_end":58,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6342},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13780599,"byte_end":13780602,"line_start":82,"line_end":82,"column_start":12,"column_end":15},"name":"new","qualname":"<Condvar>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new condition variable","sig":null,"attributes":[{"value":"/ Creates a new condition variable","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13780411,"byte_end":13780447,"line_start":73,"line_end":73,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13780452,"byte_end":13780455,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13780460,"byte_end":13780474,"line_start":75,"line_end":75,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13780479,"byte_end":13780482,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13780487,"byte_end":13780494,"line_start":77,"line_end":77,"column_start":5,"column_end":12}},{"value":"/ use async_std::sync::Condvar;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13780499,"byte_end":13780532,"line_start":78,"line_end":78,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13780537,"byte_end":13780540,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ let cvar = Condvar::new();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13780545,"byte_end":13780575,"line_start":80,"line_end":80,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13780580,"byte_end":13780587,"line_start":81,"line_end":81,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6343},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13781825,"byte_end":13781829,"line_start":122,"line_end":122,"column_start":18,"column_end":22},"name":"wait","qualname":"<Condvar>::wait","value":"pub async fn wait<'a, T, '_>(&'_ Self, MutexGuard) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Blocks the current task until this condition variable receives a notification.","sig":null,"attributes":[{"value":"/ Blocks the current task until this condition variable receives a notification.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13780691,"byte_end":13780773,"line_start":88,"line_end":88,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13780778,"byte_end":13780781,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ Unlike the std equivalent, this does not check that a single mutex is used at runtime.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13780786,"byte_end":13780876,"line_start":90,"line_end":90,"column_start":5,"column_end":95}},{"value":"/ However, as a best practice avoid using with multiple mutexes.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13780881,"byte_end":13780947,"line_start":91,"line_end":91,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13780952,"byte_end":13780955,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13780960,"byte_end":13780974,"line_start":93,"line_end":93,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13780979,"byte_end":13780982,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13780987,"byte_end":13780994,"line_start":95,"line_end":95,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13780999,"byte_end":13781038,"line_start":96,"line_end":96,"column_start":5,"column_end":44}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13781043,"byte_end":13781066,"line_start":97,"line_end":97,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13781071,"byte_end":13781074,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ use async_std::sync::{Mutex, Condvar};","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13781079,"byte_end":13781121,"line_start":99,"line_end":99,"column_start":5,"column_end":47}},{"value":"/ use async_std::task;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13781126,"byte_end":13781150,"line_start":100,"line_end":100,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13781155,"byte_end":13781158,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ let pair = Arc::new((Mutex::new(false), Condvar::new()));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13781163,"byte_end":13781224,"line_start":102,"line_end":102,"column_start":5,"column_end":66}},{"value":"/ let pair2 = pair.clone();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13781229,"byte_end":13781258,"line_start":103,"line_end":103,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13781263,"byte_end":13781266,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ task::spawn(async move {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13781271,"byte_end":13781299,"line_start":105,"line_end":105,"column_start":5,"column_end":33}},{"value":"/     let (lock, cvar) = &*pair2;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13781304,"byte_end":13781339,"line_start":106,"line_end":106,"column_start":5,"column_end":40}},{"value":"/     let mut started = lock.lock().await;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13781344,"byte_end":13781388,"line_start":107,"line_end":107,"column_start":5,"column_end":49}},{"value":"/     *started = true;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13781393,"byte_end":13781417,"line_start":108,"line_end":108,"column_start":5,"column_end":29}},{"value":"/     // We notify the condvar that the value has changed.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13781422,"byte_end":13781482,"line_start":109,"line_end":109,"column_start":5,"column_end":65}},{"value":"/     cvar.notify_one();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13781487,"byte_end":13781513,"line_start":110,"line_end":110,"column_start":5,"column_end":31}},{"value":"/ });","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13781518,"byte_end":13781525,"line_start":111,"line_end":111,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13781530,"byte_end":13781533,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ // Wait for the thread to start up.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13781538,"byte_end":13781577,"line_start":113,"line_end":113,"column_start":5,"column_end":44}},{"value":"/ let (lock, cvar) = &*pair;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13781582,"byte_end":13781612,"line_start":114,"line_end":114,"column_start":5,"column_end":35}},{"value":"/ let mut started = lock.lock().await;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13781617,"byte_end":13781657,"line_start":115,"line_end":115,"column_start":5,"column_end":45}},{"value":"/ while !*started {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13781662,"byte_end":13781683,"line_start":116,"line_end":116,"column_start":5,"column_end":26}},{"value":"/     started = cvar.wait(started).await;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13781688,"byte_end":13781731,"line_start":117,"line_end":117,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13781736,"byte_end":13781741,"line_start":118,"line_end":118,"column_start":5,"column_end":10}},{"value":"/ # })","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13781746,"byte_end":13781754,"line_start":119,"line_end":119,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13781759,"byte_end":13781766,"line_start":120,"line_end":120,"column_start":5,"column_end":12}},{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13781771,"byte_end":13781807,"line_start":121,"line_end":121,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":6351},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13783390,"byte_end":13783400,"line_start":171,"line_end":171,"column_start":18,"column_end":28},"name":"wait_until","qualname":"<Condvar>::wait_until","value":"pub async fn wait_until<'a, T, F, '_>(&'_ Self, MutexGuard, F)\n-> /*impl Trait*/ where F: FnMut(&mut T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Blocks the current taks until this condition variable receives a notification and the\n required condition is met. Spurious wakeups are ignored and this function will only\n return once the condition has been met.","sig":null,"attributes":[{"value":"/ Blocks the current taks until this condition variable receives a notification and the","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13782227,"byte_end":13782316,"line_start":138,"line_end":138,"column_start":5,"column_end":94}},{"value":"/ required condition is met. Spurious wakeups are ignored and this function will only","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13782321,"byte_end":13782408,"line_start":139,"line_end":139,"column_start":5,"column_end":92}},{"value":"/ return once the condition has been met.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13782413,"byte_end":13782456,"line_start":140,"line_end":140,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13782461,"byte_end":13782464,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13782469,"byte_end":13782483,"line_start":142,"line_end":142,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13782488,"byte_end":13782491,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13782496,"byte_end":13782503,"line_start":144,"line_end":144,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13782508,"byte_end":13782547,"line_start":145,"line_end":145,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13782552,"byte_end":13782557,"line_start":146,"line_end":146,"column_start":5,"column_end":10}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13782562,"byte_end":13782585,"line_start":147,"line_end":147,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13782590,"byte_end":13782593,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ use async_std::sync::{Mutex, Condvar};","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13782598,"byte_end":13782640,"line_start":149,"line_end":149,"column_start":5,"column_end":47}},{"value":"/ use async_std::task;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13782645,"byte_end":13782669,"line_start":150,"line_end":150,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13782674,"byte_end":13782677,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ let pair = Arc::new((Mutex::new(false), Condvar::new()));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13782682,"byte_end":13782743,"line_start":152,"line_end":152,"column_start":5,"column_end":66}},{"value":"/ let pair2 = pair.clone();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13782748,"byte_end":13782777,"line_start":153,"line_end":153,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13782782,"byte_end":13782785,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ task::spawn(async move {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13782790,"byte_end":13782818,"line_start":155,"line_end":155,"column_start":5,"column_end":33}},{"value":"/     let (lock, cvar) = &*pair2;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13782823,"byte_end":13782858,"line_start":156,"line_end":156,"column_start":5,"column_end":40}},{"value":"/     let mut started = lock.lock().await;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13782863,"byte_end":13782907,"line_start":157,"line_end":157,"column_start":5,"column_end":49}},{"value":"/     *started = true;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13782912,"byte_end":13782936,"line_start":158,"line_end":158,"column_start":5,"column_end":29}},{"value":"/     // We notify the condvar that the value has changed.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13782941,"byte_end":13783001,"line_start":159,"line_end":159,"column_start":5,"column_end":65}},{"value":"/     cvar.notify_one();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13783006,"byte_end":13783032,"line_start":160,"line_end":160,"column_start":5,"column_end":31}},{"value":"/ });","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13783037,"byte_end":13783044,"line_start":161,"line_end":161,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13783049,"byte_end":13783052,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ // Wait for the thread to start up.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13783057,"byte_end":13783096,"line_start":163,"line_end":163,"column_start":5,"column_end":44}},{"value":"/ let (lock, cvar) = &*pair;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13783101,"byte_end":13783131,"line_start":164,"line_end":164,"column_start":5,"column_end":35}},{"value":"/ // As long as the value inside the `Mutex<bool>` is `false`, we wait.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13783136,"byte_end":13783209,"line_start":165,"line_end":165,"column_start":5,"column_end":78}},{"value":"/ let _guard = cvar.wait_until(lock.lock().await, |started| { *started }).await;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13783214,"byte_end":13783296,"line_start":166,"line_end":166,"column_start":5,"column_end":87}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13783301,"byte_end":13783306,"line_start":167,"line_end":167,"column_start":5,"column_end":10}},{"value":"/ # })","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13783311,"byte_end":13783319,"line_start":168,"line_end":168,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13783324,"byte_end":13783331,"line_start":169,"line_end":169,"column_start":5,"column_end":12}},{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13783336,"byte_end":13783372,"line_start":170,"line_end":170,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":6357},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13785007,"byte_end":13785019,"line_start":226,"line_end":226,"column_start":18,"column_end":30},"name":"wait_timeout","qualname":"<Condvar>::wait_timeout","value":"pub async fn wait_timeout<'a, T, '_>(&'_ Self, MutexGuard, Duration)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Waits on this condition variable for a notification, timing out after a specified duration.","sig":null,"attributes":[{"value":"/ Waits on this condition variable for a notification, timing out after a specified duration.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13783687,"byte_end":13783782,"line_start":185,"line_end":185,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13783787,"byte_end":13783790,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ For these reasons `Condvar::wait_timeout_until` is recommended in most cases.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13783795,"byte_end":13783876,"line_start":187,"line_end":187,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13783881,"byte_end":13783884,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13783889,"byte_end":13783903,"line_start":189,"line_end":189,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13783908,"byte_end":13783911,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13783916,"byte_end":13783923,"line_start":191,"line_end":191,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13783928,"byte_end":13783967,"line_start":192,"line_end":192,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13783972,"byte_end":13783977,"line_start":193,"line_end":193,"column_start":5,"column_end":10}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13783982,"byte_end":13784005,"line_start":194,"line_end":194,"column_start":5,"column_end":28}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13784010,"byte_end":13784038,"line_start":195,"line_end":195,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13784043,"byte_end":13784046,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ use async_std::sync::{Mutex, Condvar};","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13784051,"byte_end":13784093,"line_start":197,"line_end":197,"column_start":5,"column_end":47}},{"value":"/ use async_std::task;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13784098,"byte_end":13784122,"line_start":198,"line_end":198,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13784127,"byte_end":13784130,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ let pair = Arc::new((Mutex::new(false), Condvar::new()));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13784135,"byte_end":13784196,"line_start":200,"line_end":200,"column_start":5,"column_end":66}},{"value":"/ let pair2 = pair.clone();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13784201,"byte_end":13784230,"line_start":201,"line_end":201,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13784235,"byte_end":13784238,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ task::spawn(async move {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13784243,"byte_end":13784271,"line_start":203,"line_end":203,"column_start":5,"column_end":33}},{"value":"/   let (lock, cvar) = &*pair2;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13784276,"byte_end":13784309,"line_start":204,"line_end":204,"column_start":5,"column_end":38}},{"value":"/   let mut started = lock.lock().await;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13784314,"byte_end":13784356,"line_start":205,"line_end":205,"column_start":5,"column_end":47}},{"value":"/   *started = true;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13784361,"byte_end":13784383,"line_start":206,"line_end":206,"column_start":5,"column_end":27}},{"value":"/   // We notify the condvar that the value has changed.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13784388,"byte_end":13784446,"line_start":207,"line_end":207,"column_start":5,"column_end":63}},{"value":"/   cvar.notify_one();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13784451,"byte_end":13784475,"line_start":208,"line_end":208,"column_start":5,"column_end":29}},{"value":"/ });","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13784480,"byte_end":13784487,"line_start":209,"line_end":209,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13784492,"byte_end":13784495,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ // wait for the thread to start up","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13784500,"byte_end":13784538,"line_start":211,"line_end":211,"column_start":5,"column_end":43}},{"value":"/ let (lock, cvar) = &*pair;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13784543,"byte_end":13784573,"line_start":212,"line_end":212,"column_start":5,"column_end":35}},{"value":"/ let mut started = lock.lock().await;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13784578,"byte_end":13784618,"line_start":213,"line_end":213,"column_start":5,"column_end":45}},{"value":"/ loop {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13784623,"byte_end":13784633,"line_start":214,"line_end":214,"column_start":5,"column_end":15}},{"value":"/   let result = cvar.wait_timeout(started, Duration::from_millis(10)).await;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13784638,"byte_end":13784717,"line_start":215,"line_end":215,"column_start":5,"column_end":84}},{"value":"/   started = result.0;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13784722,"byte_end":13784747,"line_start":216,"line_end":216,"column_start":5,"column_end":30}},{"value":"/   if *started == true {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13784752,"byte_end":13784779,"line_start":217,"line_end":217,"column_start":5,"column_end":32}},{"value":"/       // We received the notification and the value has been updated, we can leave.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13784784,"byte_end":13784871,"line_start":218,"line_end":218,"column_start":5,"column_end":92}},{"value":"/       break","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13784876,"byte_end":13784891,"line_start":219,"line_end":219,"column_start":5,"column_end":20}},{"value":"/   }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13784896,"byte_end":13784903,"line_start":220,"line_end":220,"column_start":5,"column_end":12}},{"value":"/ }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13784908,"byte_end":13784913,"line_start":221,"line_end":221,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13784918,"byte_end":13784923,"line_start":222,"line_end":222,"column_start":5,"column_end":10}},{"value":"/ # })","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13784928,"byte_end":13784936,"line_start":223,"line_end":223,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13784941,"byte_end":13784948,"line_start":224,"line_end":224,"column_start":5,"column_end":12}},{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13784953,"byte_end":13784989,"line_start":225,"line_end":225,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":6362},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13786667,"byte_end":13786685,"line_start":275,"line_end":275,"column_start":18,"column_end":36},"name":"wait_timeout_until","qualname":"<Condvar>::wait_timeout_until","value":"pub async fn wait_timeout_until<'a, T, F,\n                                '_>(&'_ Self, MutexGuard, Duration, F)\n-> /*impl Trait*/ where F: FnMut(&mut T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Waits on this condition variable for a notification, timing out after a specified duration.\n Spurious wakes will not cause this function to return.","sig":null,"attributes":[{"value":"/ Waits on this condition variable for a notification, timing out after a specified duration.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13785401,"byte_end":13785496,"line_start":238,"line_end":238,"column_start":5,"column_end":100}},{"value":"/ Spurious wakes will not cause this function to return.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13785501,"byte_end":13785559,"line_start":239,"line_end":239,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13785564,"byte_end":13785567,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13785572,"byte_end":13785586,"line_start":241,"line_end":241,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13785591,"byte_end":13785598,"line_start":242,"line_end":242,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13785603,"byte_end":13785642,"line_start":243,"line_end":243,"column_start":5,"column_end":44}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13785647,"byte_end":13785670,"line_start":244,"line_end":244,"column_start":5,"column_end":28}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13785675,"byte_end":13785703,"line_start":245,"line_end":245,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13785708,"byte_end":13785711,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ use async_std::sync::{Mutex, Condvar};","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13785716,"byte_end":13785758,"line_start":247,"line_end":247,"column_start":5,"column_end":47}},{"value":"/ use async_std::task;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13785763,"byte_end":13785787,"line_start":248,"line_end":248,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13785792,"byte_end":13785795,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ let pair = Arc::new((Mutex::new(false), Condvar::new()));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13785800,"byte_end":13785861,"line_start":250,"line_end":250,"column_start":5,"column_end":66}},{"value":"/ let pair2 = pair.clone();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13785866,"byte_end":13785895,"line_start":251,"line_end":251,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13785900,"byte_end":13785903,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ task::spawn(async move {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13785908,"byte_end":13785936,"line_start":253,"line_end":253,"column_start":5,"column_end":33}},{"value":"/     let (lock, cvar) = &*pair2;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13785941,"byte_end":13785976,"line_start":254,"line_end":254,"column_start":5,"column_end":40}},{"value":"/     let mut started = lock.lock().await;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13785981,"byte_end":13786025,"line_start":255,"line_end":255,"column_start":5,"column_end":49}},{"value":"/     *started = true;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13786030,"byte_end":13786054,"line_start":256,"line_end":256,"column_start":5,"column_end":29}},{"value":"/     // We notify the condvar that the value has changed.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13786059,"byte_end":13786119,"line_start":257,"line_end":257,"column_start":5,"column_end":65}},{"value":"/     cvar.notify_one();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13786124,"byte_end":13786150,"line_start":258,"line_end":258,"column_start":5,"column_end":31}},{"value":"/ });","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13786155,"byte_end":13786162,"line_start":259,"line_end":259,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13786167,"byte_end":13786170,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ // wait for the thread to start up","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13786175,"byte_end":13786213,"line_start":261,"line_end":261,"column_start":5,"column_end":43}},{"value":"/ let (lock, cvar) = &*pair;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13786218,"byte_end":13786248,"line_start":262,"line_end":262,"column_start":5,"column_end":35}},{"value":"/ let result = cvar.wait_timeout_until(","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13786253,"byte_end":13786294,"line_start":263,"line_end":263,"column_start":5,"column_end":46}},{"value":"/     lock.lock().await,","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13786299,"byte_end":13786325,"line_start":264,"line_end":264,"column_start":5,"column_end":31}},{"value":"/     Duration::from_millis(100),","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13786330,"byte_end":13786365,"line_start":265,"line_end":265,"column_start":5,"column_end":40}},{"value":"/     |&mut started| started,","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13786370,"byte_end":13786401,"line_start":266,"line_end":266,"column_start":5,"column_end":36}},{"value":"/ ).await;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13786406,"byte_end":13786418,"line_start":267,"line_end":267,"column_start":5,"column_end":17}},{"value":"/ if result.1.timed_out() {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13786423,"byte_end":13786452,"line_start":268,"line_end":268,"column_start":5,"column_end":34}},{"value":"/     // timed-out without the condition ever evaluating to true.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13786457,"byte_end":13786524,"line_start":269,"line_end":269,"column_start":5,"column_end":72}},{"value":"/ }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13786529,"byte_end":13786534,"line_start":270,"line_end":270,"column_start":5,"column_end":10}},{"value":"/ // access the locked mutex via result.0","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13786539,"byte_end":13786582,"line_start":271,"line_end":271,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13786587,"byte_end":13786596,"line_start":272,"line_end":272,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13786601,"byte_end":13786608,"line_start":273,"line_end":273,"column_start":5,"column_end":12}},{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13786613,"byte_end":13786649,"line_start":274,"line_end":274,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":6368},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13788048,"byte_end":13788058,"line_start":321,"line_end":321,"column_start":12,"column_end":22},"name":"notify_one","qualname":"<Condvar>::notify_one","value":"pub fn notify_one(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Wakes up one blocked task on this condvar.","sig":null,"attributes":[{"value":"/ Wakes up one blocked task on this condvar.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13787157,"byte_end":13787203,"line_start":291,"line_end":291,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13787208,"byte_end":13787211,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13787216,"byte_end":13787230,"line_start":293,"line_end":293,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13787235,"byte_end":13787238,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13787243,"byte_end":13787250,"line_start":295,"line_end":295,"column_start":5,"column_end":12}},{"value":"/ # fn main() { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13787255,"byte_end":13787306,"line_start":296,"line_end":296,"column_start":5,"column_end":56}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13787311,"byte_end":13787334,"line_start":297,"line_end":297,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13787339,"byte_end":13787342,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ use async_std::sync::{Mutex, Condvar};","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13787347,"byte_end":13787389,"line_start":299,"line_end":299,"column_start":5,"column_end":47}},{"value":"/ use async_std::task;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13787394,"byte_end":13787418,"line_start":300,"line_end":300,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13787423,"byte_end":13787426,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ let pair = Arc::new((Mutex::new(false), Condvar::new()));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13787431,"byte_end":13787492,"line_start":302,"line_end":302,"column_start":5,"column_end":66}},{"value":"/ let pair2 = pair.clone();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13787497,"byte_end":13787526,"line_start":303,"line_end":303,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13787531,"byte_end":13787534,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ task::spawn(async move {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13787539,"byte_end":13787567,"line_start":305,"line_end":305,"column_start":5,"column_end":33}},{"value":"/     let (lock, cvar) = &*pair2;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13787572,"byte_end":13787607,"line_start":306,"line_end":306,"column_start":5,"column_end":40}},{"value":"/     let mut started = lock.lock().await;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13787612,"byte_end":13787656,"line_start":307,"line_end":307,"column_start":5,"column_end":49}},{"value":"/     *started = true;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13787661,"byte_end":13787685,"line_start":308,"line_end":308,"column_start":5,"column_end":29}},{"value":"/     // We notify the condvar that the value has changed.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13787690,"byte_end":13787750,"line_start":309,"line_end":309,"column_start":5,"column_end":65}},{"value":"/     cvar.notify_one();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13787755,"byte_end":13787781,"line_start":310,"line_end":310,"column_start":5,"column_end":31}},{"value":"/ });","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13787786,"byte_end":13787793,"line_start":311,"line_end":311,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13787798,"byte_end":13787801,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ // Wait for the thread to start up.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13787806,"byte_end":13787845,"line_start":313,"line_end":313,"column_start":5,"column_end":44}},{"value":"/ let (lock, cvar) = &*pair;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13787850,"byte_end":13787880,"line_start":314,"line_end":314,"column_start":5,"column_end":35}},{"value":"/ let mut started = lock.lock().await;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13787885,"byte_end":13787925,"line_start":315,"line_end":315,"column_start":5,"column_end":45}},{"value":"/ while !*started {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13787930,"byte_end":13787951,"line_start":316,"line_end":316,"column_start":5,"column_end":26}},{"value":"/     started = cvar.wait(started).await;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13787956,"byte_end":13787999,"line_start":317,"line_end":317,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13788004,"byte_end":13788009,"line_start":318,"line_end":318,"column_start":5,"column_end":10}},{"value":"/ # }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13788014,"byte_end":13788024,"line_start":319,"line_end":319,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13788029,"byte_end":13788036,"line_start":320,"line_end":320,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6369},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13789095,"byte_end":13789105,"line_start":357,"line_end":357,"column_start":12,"column_end":22},"name":"notify_all","qualname":"<Condvar>::notify_all","value":"pub fn notify_all(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Wakes up all blocked tasks on this condvar.","sig":null,"attributes":[{"value":"/ Wakes up all blocked tasks on this condvar.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13788113,"byte_end":13788160,"line_start":325,"line_end":325,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13788165,"byte_end":13788168,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13788173,"byte_end":13788187,"line_start":327,"line_end":327,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13788192,"byte_end":13788199,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ # fn main() { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13788204,"byte_end":13788255,"line_start":329,"line_end":329,"column_start":5,"column_end":56}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13788260,"byte_end":13788265,"line_start":330,"line_end":330,"column_start":5,"column_end":10}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13788270,"byte_end":13788293,"line_start":331,"line_end":331,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13788298,"byte_end":13788301,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ use async_std::sync::{Mutex, Condvar};","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13788306,"byte_end":13788348,"line_start":333,"line_end":333,"column_start":5,"column_end":47}},{"value":"/ use async_std::task;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13788353,"byte_end":13788377,"line_start":334,"line_end":334,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13788382,"byte_end":13788385,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ let pair = Arc::new((Mutex::new(false), Condvar::new()));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13788390,"byte_end":13788451,"line_start":336,"line_end":336,"column_start":5,"column_end":66}},{"value":"/ let pair2 = pair.clone();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13788456,"byte_end":13788485,"line_start":337,"line_end":337,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13788490,"byte_end":13788493,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ task::spawn(async move {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13788498,"byte_end":13788526,"line_start":339,"line_end":339,"column_start":5,"column_end":33}},{"value":"/     let (lock, cvar) = &*pair2;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13788531,"byte_end":13788566,"line_start":340,"line_end":340,"column_start":5,"column_end":40}},{"value":"/     let mut started = lock.lock().await;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13788571,"byte_end":13788615,"line_start":341,"line_end":341,"column_start":5,"column_end":49}},{"value":"/     *started = true;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13788620,"byte_end":13788644,"line_start":342,"line_end":342,"column_start":5,"column_end":29}},{"value":"/     // We notify the condvar that the value has changed.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13788649,"byte_end":13788709,"line_start":343,"line_end":343,"column_start":5,"column_end":65}},{"value":"/     cvar.notify_all();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13788714,"byte_end":13788740,"line_start":344,"line_end":344,"column_start":5,"column_end":31}},{"value":"/ });","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13788745,"byte_end":13788752,"line_start":345,"line_end":345,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13788757,"byte_end":13788760,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ // Wait for the thread to start up.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13788765,"byte_end":13788804,"line_start":347,"line_end":347,"column_start":5,"column_end":44}},{"value":"/ let (lock, cvar) = &*pair;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13788809,"byte_end":13788839,"line_start":348,"line_end":348,"column_start":5,"column_end":35}},{"value":"/ let mut started = lock.lock().await;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13788844,"byte_end":13788884,"line_start":349,"line_end":349,"column_start":5,"column_end":45}},{"value":"/ // As long as the value inside the `Mutex<bool>` is `false`, we wait.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13788889,"byte_end":13788962,"line_start":350,"line_end":350,"column_start":5,"column_end":78}},{"value":"/ while !*started {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13788967,"byte_end":13788988,"line_start":351,"line_end":351,"column_start":5,"column_end":26}},{"value":"/     started = cvar.wait(started).await;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13788993,"byte_end":13789036,"line_start":352,"line_end":352,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13789041,"byte_end":13789046,"line_start":353,"line_end":353,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13789051,"byte_end":13789056,"line_start":354,"line_end":354,"column_start":5,"column_end":10}},{"value":"/ # }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13789061,"byte_end":13789071,"line_start":355,"line_end":355,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13789076,"byte_end":13789083,"line_start":356,"line_end":356,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":4314},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/channel.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"channel","qualname":"::channel","value":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/channel.rs","parent":null,"children":[{"krate":0,"index":4315}],"decl_id":null,"docs":" Channels","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/utils.rs","byte_start":16418,"byte_end":16441,"line_start":207,"line_end":207,"column_start":13,"column_end":36}},{"value":"/ Channels","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/channel.rs","byte_start":13627517,"byte_end":13627529,"line_start":1,"line_end":1,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/channel.rs","byte_start":13627530,"byte_end":13627533,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Multi-producer, multi-consumer queues, used for message-based","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/channel.rs","byte_start":13627534,"byte_end":13627599,"line_start":3,"line_end":3,"column_start":1,"column_end":66}},{"value":"/ communication. Can provide a lightweight inter-task synchronisation","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/channel.rs","byte_start":13627600,"byte_end":13627671,"line_start":4,"line_end":4,"column_start":1,"column_end":72}},{"value":"/ mechanism, at the cost of some extra memory.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/channel.rs","byte_start":13627672,"byte_end":13627720,"line_start":5,"line_end":5,"column_start":1,"column_end":49}}]},{"kind":"Mod","id":{"krate":0,"index":6480},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"fs","qualname":"::fs","value":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","parent":null,"children":[{"krate":0,"index":6481},{"krate":0,"index":6484},{"krate":0,"index":6487},{"krate":0,"index":6490},{"krate":0,"index":6493},{"krate":0,"index":6496},{"krate":0,"index":6499},{"krate":0,"index":6502},{"krate":0,"index":6505},{"krate":0,"index":6508},{"krate":0,"index":6511},{"krate":0,"index":6514},{"krate":0,"index":6517},{"krate":0,"index":6520},{"krate":0,"index":6523},{"krate":0,"index":6526},{"krate":0,"index":6529},{"krate":0,"index":6532},{"krate":0,"index":6535},{"krate":0,"index":6538},{"krate":0,"index":6541},{"krate":0,"index":6544},{"krate":0,"index":6547},{"krate":0,"index":6550},{"krate":0,"index":6553},{"krate":0,"index":6556},{"krate":0,"index":6579},{"krate":0,"index":6599},{"krate":0,"index":6618},{"krate":0,"index":6637},{"krate":0,"index":6658},{"krate":0,"index":6703},{"krate":0,"index":6921},{"krate":0,"index":6922},{"krate":0,"index":6942},{"krate":0,"index":6957},{"krate":0,"index":6988},{"krate":0,"index":6989},{"krate":0,"index":7008},{"krate":0,"index":7056},{"krate":0,"index":7079},{"krate":0,"index":7098},{"krate":0,"index":7117},{"krate":0,"index":7136},{"krate":0,"index":7155},{"krate":0,"index":7175},{"krate":0,"index":7193},{"krate":0,"index":7211}],"decl_id":null,"docs":" Filesystem manipulation operations.","sig":null,"attributes":[{"value":"cfg(feature = \"default\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/utils.rs","byte_start":16827,"byte_end":16854,"line_start":231,"line_end":231,"column_start":13,"column_end":40}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":11084,"byte_end":11118,"line_start":314,"line_end":314,"column_start":5,"column_end":39}},{"value":"/ Filesystem manipulation operations.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":13797797,"byte_end":13797836,"line_start":1,"line_end":1,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":13797837,"byte_end":13797840,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is an async version of [`std::fs`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":13797841,"byte_end":13797892,"line_start":3,"line_end":3,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":13797893,"byte_end":13797896,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ [`os::unix::fs`]: ../os/unix/fs/index.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":13797897,"byte_end":13797943,"line_start":5,"line_end":5,"column_start":1,"column_end":47}},{"value":"/ [`os::windows::fs`]: ../os/windows/fs/index.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":13797944,"byte_end":13797996,"line_start":6,"line_end":6,"column_start":1,"column_end":53}},{"value":"/ [`std::fs`]: https://doc.rust-lang.org/std/fs/index.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":13797997,"byte_end":13798057,"line_start":7,"line_end":7,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":13798058,"byte_end":13798061,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific extensions","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":13798062,"byte_end":13798096,"line_start":9,"line_end":9,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":13798097,"byte_end":13798100,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ * Unix: use the [`os::unix::fs`] module.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":13798101,"byte_end":13798145,"line_start":11,"line_end":11,"column_start":1,"column_end":45}},{"value":"/ * Windows: use the [`os::windows::fs`] module.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":13798146,"byte_end":13798196,"line_start":12,"line_end":12,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":13798197,"byte_end":13798200,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":13798201,"byte_end":13798215,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":13798216,"byte_end":13798219,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Create a new file and write some bytes to it:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":13798220,"byte_end":13798269,"line_start":16,"line_end":16,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":13798270,"byte_end":13798273,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":13798274,"byte_end":13798287,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":13798288,"byte_end":13798362,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":13798363,"byte_end":13798368,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":13798369,"byte_end":13798397,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":13798398,"byte_end":13798428,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":13798429,"byte_end":13798432,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let mut file = File::create(\"a.txt\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":13798433,"byte_end":13798481,"line_start":24,"line_end":24,"column_start":1,"column_end":49}},{"value":"/ file.write_all(b\"Hello, world!\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":13798482,"byte_end":13798526,"line_start":25,"line_end":25,"column_start":1,"column_end":45}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":13798527,"byte_end":13798532,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":13798533,"byte_end":13798550,"line_start":27,"line_end":27,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/mod.rs","byte_start":13798551,"byte_end":13798558,"line_start":28,"line_end":28,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":6573},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/canonicalize.rs","byte_start":13800620,"byte_end":13800632,"line_start":34,"line_end":34,"column_start":14,"column_end":26},"name":"canonicalize","qualname":"::fs::canonicalize::canonicalize","value":"pub async fn canonicalize<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the canonical form of a path.","sig":null,"attributes":[{"value":"/ Returns the canonical form of a path.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/canonicalize.rs","byte_start":13799818,"byte_end":13799859,"line_start":6,"line_end":6,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/canonicalize.rs","byte_start":13799860,"byte_end":13799863,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The returned path is in absolute form with all intermediate components normalized and symbolic","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/canonicalize.rs","byte_start":13799864,"byte_end":13799962,"line_start":8,"line_end":8,"column_start":1,"column_end":99}},{"value":"/ links resolved.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/canonicalize.rs","byte_start":13799963,"byte_end":13799982,"line_start":9,"line_end":9,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/canonicalize.rs","byte_start":13799983,"byte_end":13799986,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::canonicalize`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/canonicalize.rs","byte_start":13799987,"byte_end":13800054,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/canonicalize.rs","byte_start":13800055,"byte_end":13800058,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::canonicalize`]: https://doc.rust-lang.org/std/fs/fn.canonicalize.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/canonicalize.rs","byte_start":13800059,"byte_end":13800143,"line_start":13,"line_end":13,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/canonicalize.rs","byte_start":13800144,"byte_end":13800147,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/canonicalize.rs","byte_start":13800148,"byte_end":13800160,"line_start":15,"line_end":15,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/canonicalize.rs","byte_start":13800161,"byte_end":13800164,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/canonicalize.rs","byte_start":13800165,"byte_end":13800223,"line_start":17,"line_end":17,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/canonicalize.rs","byte_start":13800224,"byte_end":13800227,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing file or directory.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/canonicalize.rs","byte_start":13800228,"byte_end":13800289,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/ * A non-final component in `path` is not a directory.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/canonicalize.rs","byte_start":13800290,"byte_end":13800347,"line_start":20,"line_end":20,"column_start":1,"column_end":58}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/canonicalize.rs","byte_start":13800348,"byte_end":13800384,"line_start":21,"line_end":21,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/canonicalize.rs","byte_start":13800385,"byte_end":13800388,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/canonicalize.rs","byte_start":13800389,"byte_end":13800403,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/canonicalize.rs","byte_start":13800404,"byte_end":13800407,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/canonicalize.rs","byte_start":13800408,"byte_end":13800421,"line_start":25,"line_end":25,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/canonicalize.rs","byte_start":13800422,"byte_end":13800496,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/canonicalize.rs","byte_start":13800497,"byte_end":13800502,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/canonicalize.rs","byte_start":13800503,"byte_end":13800525,"line_start":28,"line_end":28,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/canonicalize.rs","byte_start":13800526,"byte_end":13800529,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ let path = fs::canonicalize(\".\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/canonicalize.rs","byte_start":13800530,"byte_end":13800574,"line_start":30,"line_end":30,"column_start":1,"column_end":45}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/canonicalize.rs","byte_start":13800575,"byte_end":13800580,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/canonicalize.rs","byte_start":13800581,"byte_end":13800598,"line_start":32,"line_end":32,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/canonicalize.rs","byte_start":13800599,"byte_end":13800606,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":6592},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/copy.rs","byte_start":13802222,"byte_end":13802226,"line_start":42,"line_end":42,"column_start":14,"column_end":18},"name":"copy","qualname":"::fs::copy::copy","value":"pub async fn copy<P: AsRef<Path>, Q: AsRef<Path>>(P, Q) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Copies the contents and permissions of a file to a new location.","sig":null,"attributes":[{"value":"/ Copies the contents and permissions of a file to a new location.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/copy.rs","byte_start":13801024,"byte_end":13801092,"line_start":6,"line_end":6,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/copy.rs","byte_start":13801093,"byte_end":13801096,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ On success, the total number of bytes copied is returned and equals the length of the `to` file","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/copy.rs","byte_start":13801097,"byte_end":13801196,"line_start":8,"line_end":8,"column_start":1,"column_end":100}},{"value":"/ after this operation.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/copy.rs","byte_start":13801197,"byte_end":13801222,"line_start":9,"line_end":9,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/copy.rs","byte_start":13801223,"byte_end":13801226,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The old contents of `to` will be overwritten. If `from` and `to` both point to the same file,","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/copy.rs","byte_start":13801227,"byte_end":13801324,"line_start":11,"line_end":11,"column_start":1,"column_end":98}},{"value":"/ then the file will likely get truncated as a result of this operation.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/copy.rs","byte_start":13801325,"byte_end":13801399,"line_start":12,"line_end":12,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/copy.rs","byte_start":13801400,"byte_end":13801403,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ If you're working with open [`File`]s and want to copy contents through those types, use the","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/copy.rs","byte_start":13801404,"byte_end":13801500,"line_start":14,"line_end":14,"column_start":1,"column_end":97}},{"value":"/ [`io::copy`] function.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/copy.rs","byte_start":13801501,"byte_end":13801527,"line_start":15,"line_end":15,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/copy.rs","byte_start":13801528,"byte_end":13801531,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::copy`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/copy.rs","byte_start":13801532,"byte_end":13801591,"line_start":17,"line_end":17,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/copy.rs","byte_start":13801592,"byte_end":13801595,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`File`]: struct.File.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/copy.rs","byte_start":13801596,"byte_end":13801626,"line_start":19,"line_end":19,"column_start":1,"column_end":31}},{"value":"/ [`io::copy`]: ../io/fn.copy.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/copy.rs","byte_start":13801627,"byte_end":13801663,"line_start":20,"line_end":20,"column_start":1,"column_end":37}},{"value":"/ [`std::fs::copy`]: https://doc.rust-lang.org/std/fs/fn.copy.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/copy.rs","byte_start":13801664,"byte_end":13801732,"line_start":21,"line_end":21,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/copy.rs","byte_start":13801733,"byte_end":13801736,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/copy.rs","byte_start":13801737,"byte_end":13801749,"line_start":23,"line_end":23,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/copy.rs","byte_start":13801750,"byte_end":13801753,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/copy.rs","byte_start":13801754,"byte_end":13801812,"line_start":25,"line_end":25,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/copy.rs","byte_start":13801813,"byte_end":13801816,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ * `from` does not point to an existing file.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/copy.rs","byte_start":13801817,"byte_end":13801865,"line_start":27,"line_end":27,"column_start":1,"column_end":49}},{"value":"/ * The current process lacks permissions to read `from` or write `to`.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/copy.rs","byte_start":13801866,"byte_end":13801939,"line_start":28,"line_end":28,"column_start":1,"column_end":74}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/copy.rs","byte_start":13801940,"byte_end":13801976,"line_start":29,"line_end":29,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/copy.rs","byte_start":13801977,"byte_end":13801980,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/copy.rs","byte_start":13801981,"byte_end":13801995,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/copy.rs","byte_start":13801996,"byte_end":13801999,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/copy.rs","byte_start":13802000,"byte_end":13802013,"line_start":33,"line_end":33,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/copy.rs","byte_start":13802014,"byte_end":13802088,"line_start":34,"line_end":34,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/copy.rs","byte_start":13802089,"byte_end":13802094,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/copy.rs","byte_start":13802095,"byte_end":13802117,"line_start":36,"line_end":36,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/copy.rs","byte_start":13802118,"byte_end":13802121,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ let num_bytes = fs::copy(\"a.txt\", \"b.txt\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/copy.rs","byte_start":13802122,"byte_end":13802176,"line_start":38,"line_end":38,"column_start":1,"column_end":55}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/copy.rs","byte_start":13802177,"byte_end":13802182,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/copy.rs","byte_start":13802183,"byte_end":13802200,"line_start":40,"line_end":40,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/copy.rs","byte_start":13802201,"byte_end":13802208,"line_start":41,"line_end":41,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":6612},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir.rs","byte_start":13803621,"byte_end":13803631,"line_start":36,"line_end":36,"column_start":14,"column_end":24},"name":"create_dir","qualname":"::fs::create_dir::create_dir","value":"pub async fn create_dir<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new directory.","sig":null,"attributes":[{"value":"/ Creates a new directory.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir.rs","byte_start":13802656,"byte_end":13802684,"line_start":6,"line_end":6,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir.rs","byte_start":13802685,"byte_end":13802688,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Note that this function will only create the final directory in `path`. If you want to create","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir.rs","byte_start":13802689,"byte_end":13802786,"line_start":8,"line_end":8,"column_start":1,"column_end":98}},{"value":"/ all of its missing parent directories too, use the [`create_dir_all`] function instead.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir.rs","byte_start":13802787,"byte_end":13802878,"line_start":9,"line_end":9,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir.rs","byte_start":13802879,"byte_end":13802882,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::create_dir`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir.rs","byte_start":13802883,"byte_end":13802948,"line_start":11,"line_end":11,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir.rs","byte_start":13802949,"byte_end":13802952,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`create_dir_all`]: fn.create_dir_all.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir.rs","byte_start":13802953,"byte_end":13802999,"line_start":13,"line_end":13,"column_start":1,"column_end":47}},{"value":"/ [`std::fs::create_dir`]: https://doc.rust-lang.org/std/fs/fn.create_dir.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir.rs","byte_start":13803000,"byte_end":13803080,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir.rs","byte_start":13803081,"byte_end":13803084,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir.rs","byte_start":13803085,"byte_end":13803097,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir.rs","byte_start":13803098,"byte_end":13803101,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir.rs","byte_start":13803102,"byte_end":13803160,"line_start":18,"line_end":18,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir.rs","byte_start":13803161,"byte_end":13803164,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ * `path` already points to an existing file or directory.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir.rs","byte_start":13803165,"byte_end":13803226,"line_start":20,"line_end":20,"column_start":1,"column_end":62}},{"value":"/ * A parent directory in `path` does not exist.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir.rs","byte_start":13803227,"byte_end":13803277,"line_start":21,"line_end":21,"column_start":1,"column_end":51}},{"value":"/ * The current process lacks permissions to create the directory.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir.rs","byte_start":13803278,"byte_end":13803346,"line_start":22,"line_end":22,"column_start":1,"column_end":69}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir.rs","byte_start":13803347,"byte_end":13803383,"line_start":23,"line_end":23,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir.rs","byte_start":13803384,"byte_end":13803387,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir.rs","byte_start":13803388,"byte_end":13803402,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir.rs","byte_start":13803403,"byte_end":13803406,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir.rs","byte_start":13803407,"byte_end":13803420,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir.rs","byte_start":13803421,"byte_end":13803495,"line_start":28,"line_end":28,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir.rs","byte_start":13803496,"byte_end":13803501,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir.rs","byte_start":13803502,"byte_end":13803524,"line_start":30,"line_end":30,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir.rs","byte_start":13803525,"byte_end":13803528,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ fs::create_dir(\"./some/directory\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir.rs","byte_start":13803529,"byte_end":13803575,"line_start":32,"line_end":32,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir.rs","byte_start":13803576,"byte_end":13803581,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir.rs","byte_start":13803582,"byte_end":13803599,"line_start":34,"line_end":34,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir.rs","byte_start":13803600,"byte_end":13803607,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":6631},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir_all.rs","byte_start":13804746,"byte_end":13804760,"line_start":31,"line_end":31,"column_start":14,"column_end":28},"name":"create_dir_all","qualname":"::fs::create_dir_all::create_dir_all","value":"pub async fn create_dir_all<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new directory and all of its parents if they are missing.","sig":null,"attributes":[{"value":"/ Creates a new directory and all of its parents if they are missing.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir_all.rs","byte_start":13803991,"byte_end":13804062,"line_start":6,"line_end":6,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir_all.rs","byte_start":13804063,"byte_end":13804066,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::create_dir_all`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir_all.rs","byte_start":13804067,"byte_end":13804136,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir_all.rs","byte_start":13804137,"byte_end":13804140,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::create_dir_all`]: https://doc.rust-lang.org/std/fs/fn.create_dir_all.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir_all.rs","byte_start":13804141,"byte_end":13804229,"line_start":10,"line_end":10,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir_all.rs","byte_start":13804230,"byte_end":13804233,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir_all.rs","byte_start":13804234,"byte_end":13804246,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir_all.rs","byte_start":13804247,"byte_end":13804250,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir_all.rs","byte_start":13804251,"byte_end":13804309,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir_all.rs","byte_start":13804310,"byte_end":13804313,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `path` already points to an existing file or directory.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir_all.rs","byte_start":13804314,"byte_end":13804375,"line_start":16,"line_end":16,"column_start":1,"column_end":62}},{"value":"/ * The current process lacks permissions to create the directory or its missing parents.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir_all.rs","byte_start":13804376,"byte_end":13804467,"line_start":17,"line_end":17,"column_start":1,"column_end":92}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir_all.rs","byte_start":13804468,"byte_end":13804504,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir_all.rs","byte_start":13804505,"byte_end":13804508,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir_all.rs","byte_start":13804509,"byte_end":13804523,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir_all.rs","byte_start":13804524,"byte_end":13804527,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir_all.rs","byte_start":13804528,"byte_end":13804541,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir_all.rs","byte_start":13804542,"byte_end":13804616,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir_all.rs","byte_start":13804617,"byte_end":13804622,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir_all.rs","byte_start":13804623,"byte_end":13804645,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir_all.rs","byte_start":13804646,"byte_end":13804649,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fs::create_dir_all(\"./some/directory\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir_all.rs","byte_start":13804650,"byte_end":13804700,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir_all.rs","byte_start":13804701,"byte_end":13804706,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir_all.rs","byte_start":13804707,"byte_end":13804724,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/create_dir_all.rs","byte_start":13804725,"byte_end":13804732,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8042},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":13805542,"byte_end":13805552,"line_start":16,"line_end":16,"column_start":12,"column_end":22},"name":"DirBuilder","qualname":"::fs::dir_builder::DirBuilder","value":"DirBuilder {  }","parent":null,"children":[{"krate":0,"index":8043},{"krate":0,"index":8044}],"decl_id":null,"docs":" A builder for creating directories with configurable options.","sig":null,"attributes":[{"value":"/ A builder for creating directories with configurable options.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":13805123,"byte_end":13805188,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":13805189,"byte_end":13805192,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ For Unix-specific options, import the [`os::unix::fs::DirBuilderExt`] trait.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":13805193,"byte_end":13805273,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":13805274,"byte_end":13805277,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::fs::DirBuilder`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":13805278,"byte_end":13805339,"line_start":11,"line_end":11,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":13805340,"byte_end":13805343,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`os::unix::fs::DirBuilderExt`]: ../os/unix/fs/trait.DirBuilderExt.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":13805344,"byte_end":13805419,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"/ [`std::fs::DirBuilder`]: https://doc.rust-lang.org/std/fs/struct.DirBuilder.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":13805420,"byte_end":13805504,"line_start":14,"line_end":14,"column_start":1,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":6651},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":13806080,"byte_end":13806083,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<DirBuilder>::new","value":"pub fn new() -> DirBuilder","parent":null,"children":[],"decl_id":null,"docs":" Creates a blank set of options.","sig":null,"attributes":[{"value":"/ Creates a blank set of options.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":13805767,"byte_end":13805802,"line_start":26,"line_end":26,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":13805807,"byte_end":13805810,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ The [`recursive`] option is initially set to `false`.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":13805815,"byte_end":13805872,"line_start":28,"line_end":28,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":13805877,"byte_end":13805880,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ [`recursive`]: #method.recursive","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":13805885,"byte_end":13805921,"line_start":30,"line_end":30,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":13805926,"byte_end":13805929,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":13805934,"byte_end":13805948,"line_start":32,"line_end":32,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":13805953,"byte_end":13805956,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":13805961,"byte_end":13805968,"line_start":34,"line_end":34,"column_start":5,"column_end":12}},{"value":"/ use async_std::fs::DirBuilder;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":13805973,"byte_end":13806007,"line_start":35,"line_end":35,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":13806012,"byte_end":13806015,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ let builder = DirBuilder::new();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":13806020,"byte_end":13806056,"line_start":37,"line_end":37,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":13806061,"byte_end":13806068,"line_start":38,"line_end":38,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6652},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":13806831,"byte_end":13806840,"line_start":67,"line_end":67,"column_start":12,"column_end":21},"name":"recursive","qualname":"<DirBuilder>::recursive","value":"pub fn recursive(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the option for recursive mode.","sig":null,"attributes":[{"value":"/ Sets the option for recursive mode.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":13806333,"byte_end":13806372,"line_start":52,"line_end":52,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":13806377,"byte_end":13806380,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, this option means all parent directories should be created recursively","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":13806385,"byte_end":13806479,"line_start":54,"line_end":54,"column_start":5,"column_end":99}},{"value":"/ if they don't exist. Parents are created with the same permissions as the final directory.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":13806484,"byte_end":13806578,"line_start":55,"line_end":55,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":13806583,"byte_end":13806586,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ This option is initially set to `false`.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":13806591,"byte_end":13806635,"line_start":57,"line_end":57,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":13806640,"byte_end":13806643,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":13806648,"byte_end":13806662,"line_start":59,"line_end":59,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":13806667,"byte_end":13806670,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":13806675,"byte_end":13806682,"line_start":61,"line_end":61,"column_start":5,"column_end":12}},{"value":"/ use async_std::fs::DirBuilder;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":13806687,"byte_end":13806721,"line_start":62,"line_end":62,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":13806726,"byte_end":13806729,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ let mut builder = DirBuilder::new();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":13806734,"byte_end":13806774,"line_start":64,"line_end":64,"column_start":5,"column_end":45}},{"value":"/ builder.recursive(true);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":13806779,"byte_end":13806807,"line_start":65,"line_end":65,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":13806812,"byte_end":13806819,"line_start":66,"line_end":66,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6653},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":13807772,"byte_end":13807778,"line_start":98,"line_end":98,"column_start":12,"column_end":18},"name":"create","qualname":"<DirBuilder>::create","value":"pub fn create<P: AsRef<Path>>(&Self, P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a directory with the configured options.","sig":null,"attributes":[{"value":"/ Creates a directory with the configured options.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":13806944,"byte_end":13806996,"line_start":72,"line_end":72,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":13807001,"byte_end":13807004,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ It is considered an error if the directory already exists unless recursive mode is enabled.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":13807009,"byte_end":13807104,"line_start":74,"line_end":74,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":13807109,"byte_end":13807112,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":13807117,"byte_end":13807129,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":13807134,"byte_end":13807137,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":13807142,"byte_end":13807200,"line_start":78,"line_end":78,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":13807205,"byte_end":13807208,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ * `path` already points to an existing file or directory.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":13807213,"byte_end":13807274,"line_start":80,"line_end":80,"column_start":5,"column_end":66}},{"value":"/ * The current process lacks permissions to create the directory or its missing parents.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":13807279,"byte_end":13807370,"line_start":81,"line_end":81,"column_start":5,"column_end":96}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":13807375,"byte_end":13807411,"line_start":82,"line_end":82,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":13807416,"byte_end":13807419,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":13807424,"byte_end":13807438,"line_start":84,"line_end":84,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":13807443,"byte_end":13807446,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":13807451,"byte_end":13807464,"line_start":86,"line_end":86,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":13807469,"byte_end":13807543,"line_start":87,"line_end":87,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":13807548,"byte_end":13807553,"line_start":88,"line_end":88,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::DirBuilder;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":13807558,"byte_end":13807592,"line_start":89,"line_end":89,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":13807597,"byte_end":13807600,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ DirBuilder::new()","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":13807605,"byte_end":13807626,"line_start":91,"line_end":91,"column_start":5,"column_end":26}},{"value":"/     .recursive(true)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":13807631,"byte_end":13807655,"line_start":92,"line_end":92,"column_start":5,"column_end":29}},{"value":"/     .create(\"./some/directory\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":13807660,"byte_end":13807695,"line_start":93,"line_end":93,"column_start":5,"column_end":40}},{"value":"/     .await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":13807700,"byte_end":13807716,"line_start":94,"line_end":94,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":13807721,"byte_end":13807726,"line_start":95,"line_end":95,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":13807731,"byte_end":13807748,"line_start":96,"line_end":96,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":13807753,"byte_end":13807760,"line_start":97,"line_end":97,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6684},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13808944,"byte_end":13808952,"line_start":18,"line_end":18,"column_start":12,"column_end":20},"name":"DirEntry","qualname":"::fs::dir_entry::DirEntry","value":"","parent":null,"children":[],"decl_id":null,"docs":" An entry in a directory.","sig":null,"attributes":[{"value":"/ An entry in a directory.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13808648,"byte_end":13808676,"line_start":10,"line_end":10,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13808677,"byte_end":13808680,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A stream of entries in a directory is returned by [`read_dir`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13808681,"byte_end":13808748,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13808749,"byte_end":13808752,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::fs::DirEntry`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13808753,"byte_end":13808812,"line_start":14,"line_end":14,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13808813,"byte_end":13808816,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`read_dir`]: fn.read_dir.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13808817,"byte_end":13808851,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"/ [`std::fs::DirEntry`]: https://doc.rust-lang.org/std/fs/struct.DirEntry.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13808852,"byte_end":13808932,"line_start":17,"line_end":17,"column_start":1,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":6689},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13809843,"byte_end":13809847,"line_start":50,"line_end":50,"column_start":12,"column_end":16},"name":"path","qualname":"<DirEntry>::path","value":"pub fn path(&Self) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Returns the full path to this entry.","sig":null,"attributes":[{"value":"/ Returns the full path to this entry.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13809169,"byte_end":13809209,"line_start":26,"line_end":26,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13809214,"byte_end":13809217,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ The full path is created by joining the original path passed to [`read_dir`] with the name","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13809222,"byte_end":13809316,"line_start":28,"line_end":28,"column_start":5,"column_end":99}},{"value":"/ of this entry.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13809321,"byte_end":13809339,"line_start":29,"line_end":29,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13809344,"byte_end":13809347,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ [`read_dir`]: fn.read_dir.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13809352,"byte_end":13809386,"line_start":31,"line_end":31,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13809391,"byte_end":13809394,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13809399,"byte_end":13809413,"line_start":33,"line_end":33,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13809418,"byte_end":13809421,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13809426,"byte_end":13809439,"line_start":35,"line_end":35,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13809444,"byte_end":13809518,"line_start":36,"line_end":36,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13809523,"byte_end":13809528,"line_start":37,"line_end":37,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13809533,"byte_end":13809555,"line_start":38,"line_end":38,"column_start":5,"column_end":27}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13809560,"byte_end":13809590,"line_start":39,"line_end":39,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13809595,"byte_end":13809598,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ let mut dir = fs::read_dir(\".\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13809603,"byte_end":13809646,"line_start":41,"line_end":41,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13809651,"byte_end":13809654,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ while let Some(res) = dir.next().await {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13809659,"byte_end":13809703,"line_start":43,"line_end":43,"column_start":5,"column_end":49}},{"value":"/     let entry = res?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13809708,"byte_end":13809733,"line_start":44,"line_end":44,"column_start":5,"column_end":30}},{"value":"/     println!(\"{:?}\", entry.path());","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13809738,"byte_end":13809777,"line_start":45,"line_end":45,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13809782,"byte_end":13809787,"line_start":46,"line_end":46,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13809792,"byte_end":13809797,"line_start":47,"line_end":47,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13809802,"byte_end":13809819,"line_start":48,"line_end":48,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13809824,"byte_end":13809831,"line_start":49,"line_end":49,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6690},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13810978,"byte_end":13810986,"line_start":88,"line_end":88,"column_start":18,"column_end":26},"name":"metadata","qualname":"<DirEntry>::metadata","value":"pub async fn metadata<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads the metadata for this entry.","sig":null,"attributes":[{"value":"/ Reads the metadata for this entry.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13809908,"byte_end":13809946,"line_start":54,"line_end":54,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13809951,"byte_end":13809954,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ This function will traverse symbolic links to read the metadata.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13809959,"byte_end":13810027,"line_start":56,"line_end":56,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13810032,"byte_end":13810035,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ If you want to read metadata without following symbolic links, use [`symlink_metadata`]","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13810040,"byte_end":13810131,"line_start":58,"line_end":58,"column_start":5,"column_end":96}},{"value":"/ instead.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13810136,"byte_end":13810148,"line_start":59,"line_end":59,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13810153,"byte_end":13810156,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ [`symlink_metadata`]: fn.symlink_metadata.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13810161,"byte_end":13810211,"line_start":61,"line_end":61,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13810216,"byte_end":13810219,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13810224,"byte_end":13810236,"line_start":63,"line_end":63,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13810241,"byte_end":13810244,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13810249,"byte_end":13810307,"line_start":65,"line_end":65,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13810312,"byte_end":13810315,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ * This entry does not point to an existing file or directory anymore.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13810320,"byte_end":13810393,"line_start":67,"line_end":67,"column_start":5,"column_end":78}},{"value":"/ * The current process lacks permissions to read the metadata.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13810398,"byte_end":13810463,"line_start":68,"line_end":68,"column_start":5,"column_end":70}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13810468,"byte_end":13810504,"line_start":69,"line_end":69,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13810509,"byte_end":13810512,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13810517,"byte_end":13810531,"line_start":71,"line_end":71,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13810536,"byte_end":13810539,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13810544,"byte_end":13810557,"line_start":73,"line_end":73,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13810562,"byte_end":13810636,"line_start":74,"line_end":74,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13810641,"byte_end":13810646,"line_start":75,"line_end":75,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13810651,"byte_end":13810673,"line_start":76,"line_end":76,"column_start":5,"column_end":27}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13810678,"byte_end":13810708,"line_start":77,"line_end":77,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13810713,"byte_end":13810716,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let mut dir = fs::read_dir(\".\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13810721,"byte_end":13810764,"line_start":79,"line_end":79,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13810769,"byte_end":13810772,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ while let Some(res) = dir.next().await {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13810777,"byte_end":13810821,"line_start":81,"line_end":81,"column_start":5,"column_end":49}},{"value":"/     let entry = res?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13810826,"byte_end":13810851,"line_start":82,"line_end":82,"column_start":5,"column_end":30}},{"value":"/     println!(\"{:?}\", entry.metadata().await?);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13810856,"byte_end":13810906,"line_start":83,"line_end":83,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13810911,"byte_end":13810916,"line_start":84,"line_end":84,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13810921,"byte_end":13810926,"line_start":85,"line_end":85,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13810931,"byte_end":13810948,"line_start":86,"line_end":86,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13810953,"byte_end":13810960,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6694},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13812179,"byte_end":13812188,"line_start":126,"line_end":126,"column_start":18,"column_end":27},"name":"file_type","qualname":"<DirEntry>::file_type","value":"pub async fn file_type<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads the file type for this entry.","sig":null,"attributes":[{"value":"/ Reads the file type for this entry.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13811122,"byte_end":13811161,"line_start":93,"line_end":93,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13811166,"byte_end":13811169,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ This function will not traverse symbolic links if this entry points at one.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13811174,"byte_end":13811253,"line_start":95,"line_end":95,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13811258,"byte_end":13811261,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ If you want to read metadata with following symbolic links, use [`metadata`] instead.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13811266,"byte_end":13811355,"line_start":97,"line_end":97,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13811360,"byte_end":13811363,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ [`metadata`]: #method.metadata","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13811368,"byte_end":13811402,"line_start":99,"line_end":99,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13811407,"byte_end":13811410,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13811415,"byte_end":13811427,"line_start":101,"line_end":101,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13811432,"byte_end":13811435,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13811440,"byte_end":13811498,"line_start":103,"line_end":103,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13811503,"byte_end":13811506,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ * This entry does not point to an existing file or directory anymore.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13811511,"byte_end":13811584,"line_start":105,"line_end":105,"column_start":5,"column_end":78}},{"value":"/ * The current process lacks permissions to read this entry's metadata.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13811589,"byte_end":13811663,"line_start":106,"line_end":106,"column_start":5,"column_end":79}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13811668,"byte_end":13811704,"line_start":107,"line_end":107,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13811709,"byte_end":13811712,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13811717,"byte_end":13811731,"line_start":109,"line_end":109,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13811736,"byte_end":13811739,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13811744,"byte_end":13811757,"line_start":111,"line_end":111,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13811762,"byte_end":13811836,"line_start":112,"line_end":112,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13811841,"byte_end":13811846,"line_start":113,"line_end":113,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13811851,"byte_end":13811873,"line_start":114,"line_end":114,"column_start":5,"column_end":27}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13811878,"byte_end":13811908,"line_start":115,"line_end":115,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13811913,"byte_end":13811916,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ let mut dir = fs::read_dir(\".\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13811921,"byte_end":13811964,"line_start":117,"line_end":117,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13811969,"byte_end":13811972,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ while let Some(res) = dir.next().await {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13811977,"byte_end":13812021,"line_start":119,"line_end":119,"column_start":5,"column_end":49}},{"value":"/     let entry = res?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13812026,"byte_end":13812051,"line_start":120,"line_end":120,"column_start":5,"column_end":30}},{"value":"/     println!(\"{:?}\", entry.file_type().await?);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13812056,"byte_end":13812107,"line_start":121,"line_end":121,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13812112,"byte_end":13812117,"line_start":122,"line_end":122,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13812122,"byte_end":13812127,"line_start":123,"line_end":123,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13812132,"byte_end":13812149,"line_start":124,"line_end":124,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13812154,"byte_end":13812161,"line_start":125,"line_end":125,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6698},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13812868,"byte_end":13812877,"line_start":150,"line_end":150,"column_start":12,"column_end":21},"name":"file_name","qualname":"<DirEntry>::file_name","value":"pub fn file_name(&Self) -> OsString","parent":null,"children":[],"decl_id":null,"docs":" Returns the bare name of this entry without the leading path.","sig":null,"attributes":[{"value":"/ Returns the bare name of this entry without the leading path.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13812325,"byte_end":13812390,"line_start":131,"line_end":131,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13812395,"byte_end":13812398,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13812403,"byte_end":13812417,"line_start":133,"line_end":133,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13812422,"byte_end":13812425,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13812430,"byte_end":13812443,"line_start":135,"line_end":135,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13812448,"byte_end":13812522,"line_start":136,"line_end":136,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13812527,"byte_end":13812532,"line_start":137,"line_end":137,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13812537,"byte_end":13812559,"line_start":138,"line_end":138,"column_start":5,"column_end":27}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13812564,"byte_end":13812594,"line_start":139,"line_end":139,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13812599,"byte_end":13812602,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let mut dir = fs::read_dir(\".\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13812607,"byte_end":13812650,"line_start":141,"line_end":141,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13812655,"byte_end":13812658,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ while let Some(res) = dir.next().await {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13812663,"byte_end":13812707,"line_start":143,"line_end":143,"column_start":5,"column_end":49}},{"value":"/     let entry = res?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13812712,"byte_end":13812737,"line_start":144,"line_end":144,"column_start":5,"column_end":30}},{"value":"/     println!(\"{}\", entry.file_name().to_string_lossy());","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13812742,"byte_end":13812802,"line_start":145,"line_end":145,"column_start":5,"column_end":65}},{"value":"/ }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13812807,"byte_end":13812812,"line_start":146,"line_end":146,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13812817,"byte_end":13812822,"line_start":147,"line_end":147,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13812827,"byte_end":13812844,"line_start":148,"line_end":148,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13812849,"byte_end":13812856,"line_start":149,"line_end":149,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":8059},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13815137,"byte_end":13815141,"line_start":62,"line_end":62,"column_start":12,"column_end":16},"name":"File","qualname":"::fs::file::File","value":"File {  }","parent":null,"children":[{"krate":0,"index":8060},{"krate":0,"index":8061}],"decl_id":null,"docs":" An open file on the filesystem.","sig":null,"attributes":[{"value":"/ An open file on the filesystem.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13813845,"byte_end":13813880,"line_start":18,"line_end":18,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13813881,"byte_end":13813884,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Depending on what options the file was opened with, this type can be used for reading and/or","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13813885,"byte_end":13813981,"line_start":20,"line_end":20,"column_start":1,"column_end":97}},{"value":"/ writing.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13813982,"byte_end":13813994,"line_start":21,"line_end":21,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13813995,"byte_end":13813998,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Files are automatically closed when they get dropped and any errors detected on closing are","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13813999,"byte_end":13814094,"line_start":23,"line_end":23,"column_start":1,"column_end":96}},{"value":"/ ignored. Use the [`sync_all`] method before dropping a file if such errors need to be handled.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13814095,"byte_end":13814193,"line_start":24,"line_end":24,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13814194,"byte_end":13814197,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::fs::File`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13814198,"byte_end":13814253,"line_start":26,"line_end":26,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13814254,"byte_end":13814257,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ [`sync_all`]: #method.sync_all","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13814258,"byte_end":13814292,"line_start":28,"line_end":28,"column_start":1,"column_end":35}},{"value":"/ [`std::fs::File`]: https://doc.rust-lang.org/std/fs/struct.File.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13814293,"byte_end":13814365,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13814366,"byte_end":13814369,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13814370,"byte_end":13814384,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13814385,"byte_end":13814388,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Create a new file and write some bytes to it:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13814389,"byte_end":13814438,"line_start":33,"line_end":33,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13814439,"byte_end":13814442,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13814443,"byte_end":13814456,"line_start":35,"line_end":35,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13814457,"byte_end":13814531,"line_start":36,"line_end":36,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13814532,"byte_end":13814537,"line_start":37,"line_end":37,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13814538,"byte_end":13814566,"line_start":38,"line_end":38,"column_start":1,"column_end":29}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13814567,"byte_end":13814597,"line_start":39,"line_end":39,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13814598,"byte_end":13814601,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ let mut file = File::create(\"a.txt\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13814602,"byte_end":13814650,"line_start":41,"line_end":41,"column_start":1,"column_end":49}},{"value":"/ file.write_all(b\"Hello, world!\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13814651,"byte_end":13814695,"line_start":42,"line_end":42,"column_start":1,"column_end":45}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13814696,"byte_end":13814701,"line_start":43,"line_end":43,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13814702,"byte_end":13814719,"line_start":44,"line_end":44,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13814720,"byte_end":13814727,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13814728,"byte_end":13814731,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ Read the contents of a file into a vector of bytes:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13814732,"byte_end":13814787,"line_start":47,"line_end":47,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13814788,"byte_end":13814791,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13814792,"byte_end":13814805,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13814806,"byte_end":13814880,"line_start":50,"line_end":50,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13814881,"byte_end":13814886,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13814887,"byte_end":13814915,"line_start":52,"line_end":52,"column_start":1,"column_end":29}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13814916,"byte_end":13814946,"line_start":53,"line_end":53,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13814947,"byte_end":13814950,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ let mut file = File::open(\"a.txt\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13814951,"byte_end":13814997,"line_start":55,"line_end":55,"column_start":1,"column_end":47}},{"value":"/ let mut contents = Vec::new();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13814998,"byte_end":13815032,"line_start":56,"line_end":56,"column_start":1,"column_end":35}},{"value":"/ file.read_to_end(&mut contents).await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13815033,"byte_end":13815076,"line_start":57,"line_end":57,"column_start":1,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13815077,"byte_end":13815082,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13815083,"byte_end":13815100,"line_start":59,"line_end":59,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13815101,"byte_end":13815108,"line_start":60,"line_end":60,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6795},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13816602,"byte_end":13816606,"line_start":115,"line_end":115,"column_start":18,"column_end":22},"name":"open","qualname":"<File>::open","value":"pub async fn open<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Opens a file in read-only mode.","sig":null,"attributes":[{"value":"/ Opens a file in read-only mode.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13815769,"byte_end":13815804,"line_start":88,"line_end":88,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13815809,"byte_end":13815812,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ See the [`OpenOptions::open`] function for more options.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13815817,"byte_end":13815877,"line_start":90,"line_end":90,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13815882,"byte_end":13815885,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13815890,"byte_end":13815902,"line_start":92,"line_end":92,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13815907,"byte_end":13815910,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13815915,"byte_end":13815973,"line_start":94,"line_end":94,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13815978,"byte_end":13815981,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ * `path` does not point to an existing file.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13815986,"byte_end":13816034,"line_start":96,"line_end":96,"column_start":5,"column_end":53}},{"value":"/ * The current process lacks permissions to read the file.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13816039,"byte_end":13816100,"line_start":97,"line_end":97,"column_start":5,"column_end":66}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13816105,"byte_end":13816141,"line_start":98,"line_end":98,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13816146,"byte_end":13816149,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ For more details, see the list of errors documented by [`OpenOptions::open`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13816154,"byte_end":13816235,"line_start":100,"line_end":100,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13816240,"byte_end":13816243,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ [`OpenOptions::open`]: struct.OpenOptions.html#method.open","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13816248,"byte_end":13816310,"line_start":102,"line_end":102,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13816315,"byte_end":13816318,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13816323,"byte_end":13816337,"line_start":104,"line_end":104,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13816342,"byte_end":13816345,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13816350,"byte_end":13816363,"line_start":106,"line_end":106,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13816368,"byte_end":13816442,"line_start":107,"line_end":107,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13816447,"byte_end":13816452,"line_start":108,"line_end":108,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13816457,"byte_end":13816485,"line_start":109,"line_end":109,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13816490,"byte_end":13816493,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ let file = File::open(\"a.txt\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13816498,"byte_end":13816540,"line_start":111,"line_end":111,"column_start":5,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13816545,"byte_end":13816550,"line_start":112,"line_end":112,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13816555,"byte_end":13816572,"line_start":113,"line_end":113,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13816577,"byte_end":13816584,"line_start":114,"line_end":114,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6801},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13817859,"byte_end":13817865,"line_start":153,"line_end":153,"column_start":18,"column_end":24},"name":"create","qualname":"<File>::create","value":"pub async fn create<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Opens a file in write-only mode.","sig":null,"attributes":[{"value":"/ Opens a file in write-only mode.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13816914,"byte_end":13816950,"line_start":124,"line_end":124,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13816955,"byte_end":13816958,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ This function will create a file if it does not exist, and will truncate it if it does.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13816963,"byte_end":13817054,"line_start":126,"line_end":126,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13817059,"byte_end":13817062,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ See the [`OpenOptions::open`] function for more options.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13817067,"byte_end":13817127,"line_start":128,"line_end":128,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13817132,"byte_end":13817135,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13817140,"byte_end":13817152,"line_start":130,"line_end":130,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13817157,"byte_end":13817160,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13817165,"byte_end":13817223,"line_start":132,"line_end":132,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13817228,"byte_end":13817231,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ * The file's parent directory does not exist.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13817236,"byte_end":13817285,"line_start":134,"line_end":134,"column_start":5,"column_end":54}},{"value":"/ * The current process lacks permissions to write to the file.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13817290,"byte_end":13817355,"line_start":135,"line_end":135,"column_start":5,"column_end":70}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13817360,"byte_end":13817396,"line_start":136,"line_end":136,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13817401,"byte_end":13817404,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ For more details, see the list of errors documented by [`OpenOptions::open`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13817409,"byte_end":13817490,"line_start":138,"line_end":138,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13817495,"byte_end":13817498,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ [`OpenOptions::open`]: struct.OpenOptions.html#method.open","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13817503,"byte_end":13817565,"line_start":140,"line_end":140,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13817570,"byte_end":13817573,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13817578,"byte_end":13817592,"line_start":142,"line_end":142,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13817597,"byte_end":13817600,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13817605,"byte_end":13817618,"line_start":144,"line_end":144,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13817623,"byte_end":13817697,"line_start":145,"line_end":145,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13817702,"byte_end":13817707,"line_start":146,"line_end":146,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13817712,"byte_end":13817740,"line_start":147,"line_end":147,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13817745,"byte_end":13817748,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ let file = File::create(\"a.txt\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13817753,"byte_end":13817797,"line_start":149,"line_end":149,"column_start":5,"column_end":49}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13817802,"byte_end":13817807,"line_start":150,"line_end":150,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13817812,"byte_end":13817829,"line_start":151,"line_end":151,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13817834,"byte_end":13817841,"line_start":152,"line_end":152,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6806},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13818888,"byte_end":13818896,"line_start":183,"line_end":183,"column_start":18,"column_end":26},"name":"sync_all","qualname":"<File>::sync_all","value":"pub async fn sync_all<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Synchronizes OS-internal buffered contents and metadata to disk.","sig":null,"attributes":[{"value":"/ Synchronizes OS-internal buffered contents and metadata to disk.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13818116,"byte_end":13818184,"line_start":162,"line_end":162,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13818189,"byte_end":13818192,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ This function will ensure that all in-memory data reaches the filesystem.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13818197,"byte_end":13818274,"line_start":164,"line_end":164,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13818279,"byte_end":13818282,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ This can be used to handle errors that would otherwise only be caught when the file is","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13818287,"byte_end":13818377,"line_start":166,"line_end":166,"column_start":5,"column_end":95}},{"value":"/ closed. When a file is dropped, errors in synchronizing this in-memory data are ignored.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13818382,"byte_end":13818474,"line_start":167,"line_end":167,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13818479,"byte_end":13818482,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13818487,"byte_end":13818501,"line_start":169,"line_end":169,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13818506,"byte_end":13818509,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13818514,"byte_end":13818527,"line_start":171,"line_end":171,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13818532,"byte_end":13818606,"line_start":172,"line_end":172,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13818611,"byte_end":13818616,"line_start":173,"line_end":173,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13818621,"byte_end":13818649,"line_start":174,"line_end":174,"column_start":5,"column_end":33}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13818654,"byte_end":13818684,"line_start":175,"line_end":175,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13818689,"byte_end":13818692,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ let mut file = File::create(\"a.txt\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13818697,"byte_end":13818745,"line_start":177,"line_end":177,"column_start":5,"column_end":53}},{"value":"/ file.write_all(b\"Hello, world!\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13818750,"byte_end":13818794,"line_start":178,"line_end":178,"column_start":5,"column_end":49}},{"value":"/ file.sync_all().await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13818799,"byte_end":13818826,"line_start":179,"line_end":179,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13818831,"byte_end":13818836,"line_start":180,"line_end":180,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13818841,"byte_end":13818858,"line_start":181,"line_end":181,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13818863,"byte_end":13818870,"line_start":182,"line_end":182,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6811},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13820101,"byte_end":13820110,"line_start":219,"line_end":219,"column_start":18,"column_end":27},"name":"sync_data","qualname":"<File>::sync_data","value":"pub async fn sync_data<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Synchronizes OS-internal buffered contents to disk.","sig":null,"attributes":[{"value":"/ Synchronizes OS-internal buffered contents to disk.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13819233,"byte_end":13819288,"line_start":194,"line_end":194,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13819293,"byte_end":13819296,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ This is similar to [`sync_all`], except that file metadata may not be synchronized.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13819301,"byte_end":13819388,"line_start":196,"line_end":196,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13819393,"byte_end":13819396,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ This is intended for use cases that must synchronize the contents of the file, but don't","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13819401,"byte_end":13819493,"line_start":198,"line_end":198,"column_start":5,"column_end":97}},{"value":"/ need the file metadata synchronized to disk.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13819498,"byte_end":13819546,"line_start":199,"line_end":199,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13819551,"byte_end":13819554,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ Note that some platforms may simply implement this in terms of [`sync_all`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13819559,"byte_end":13819639,"line_start":201,"line_end":201,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13819644,"byte_end":13819647,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ [`sync_all`]: #method.sync_all","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13819652,"byte_end":13819686,"line_start":203,"line_end":203,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13819691,"byte_end":13819694,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13819699,"byte_end":13819713,"line_start":205,"line_end":205,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13819718,"byte_end":13819721,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13819726,"byte_end":13819739,"line_start":207,"line_end":207,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13819744,"byte_end":13819818,"line_start":208,"line_end":208,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13819823,"byte_end":13819828,"line_start":209,"line_end":209,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13819833,"byte_end":13819861,"line_start":210,"line_end":210,"column_start":5,"column_end":33}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13819866,"byte_end":13819896,"line_start":211,"line_end":211,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13819901,"byte_end":13819904,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ let mut file = File::create(\"a.txt\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13819909,"byte_end":13819957,"line_start":213,"line_end":213,"column_start":5,"column_end":53}},{"value":"/ file.write_all(b\"Hello, world!\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13819962,"byte_end":13820006,"line_start":214,"line_end":214,"column_start":5,"column_end":49}},{"value":"/ file.sync_data().await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13820011,"byte_end":13820039,"line_start":215,"line_end":215,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13820044,"byte_end":13820049,"line_start":216,"line_end":216,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13820054,"byte_end":13820071,"line_start":217,"line_end":217,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13820076,"byte_end":13820083,"line_start":218,"line_end":218,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6816},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13821207,"byte_end":13821214,"line_start":251,"line_end":251,"column_start":18,"column_end":25},"name":"set_len","qualname":"<File>::set_len","value":"pub async fn set_len<'_>(&'_ Self, u64) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Truncates or extends the file.","sig":null,"attributes":[{"value":"/ Truncates or extends the file.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13820449,"byte_end":13820483,"line_start":230,"line_end":230,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13820488,"byte_end":13820491,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ If `size` is less than the current file size, then the file will be truncated. If it is","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13820496,"byte_end":13820587,"line_start":232,"line_end":232,"column_start":5,"column_end":96}},{"value":"/ greater than the current file size, then the file will be extended to `size` and have all","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13820592,"byte_end":13820685,"line_start":233,"line_end":233,"column_start":5,"column_end":98}},{"value":"/ intermediate data filled with zeros.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13820690,"byte_end":13820730,"line_start":234,"line_end":234,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13820735,"byte_end":13820738,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ The file's cursor stays at the same position, even if the cursor ends up being past the end","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13820743,"byte_end":13820838,"line_start":236,"line_end":236,"column_start":5,"column_end":100}},{"value":"/ of the file after this operation.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13820843,"byte_end":13820880,"line_start":237,"line_end":237,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13820885,"byte_end":13820888,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13820893,"byte_end":13820907,"line_start":239,"line_end":239,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13820912,"byte_end":13820915,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13820920,"byte_end":13820933,"line_start":241,"line_end":241,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13820938,"byte_end":13821012,"line_start":242,"line_end":242,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13821017,"byte_end":13821022,"line_start":243,"line_end":243,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13821027,"byte_end":13821055,"line_start":244,"line_end":244,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13821060,"byte_end":13821063,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ let file = File::create(\"a.txt\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13821068,"byte_end":13821112,"line_start":246,"line_end":246,"column_start":5,"column_end":49}},{"value":"/ file.set_len(10).await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13821117,"byte_end":13821145,"line_start":247,"line_end":247,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13821150,"byte_end":13821155,"line_start":248,"line_end":248,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13821160,"byte_end":13821177,"line_start":249,"line_end":249,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13821182,"byte_end":13821189,"line_start":250,"line_end":250,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6821},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13822033,"byte_end":13822041,"line_start":277,"line_end":277,"column_start":18,"column_end":26},"name":"metadata","qualname":"<File>::metadata","value":"pub async fn metadata<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads the file's metadata.","sig":null,"attributes":[{"value":"/ Reads the file's metadata.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13821664,"byte_end":13821694,"line_start":263,"line_end":263,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13821699,"byte_end":13821702,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13821707,"byte_end":13821721,"line_start":265,"line_end":265,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13821726,"byte_end":13821729,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13821734,"byte_end":13821747,"line_start":267,"line_end":267,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13821752,"byte_end":13821826,"line_start":268,"line_end":268,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13821831,"byte_end":13821836,"line_start":269,"line_end":269,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13821841,"byte_end":13821869,"line_start":270,"line_end":270,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13821874,"byte_end":13821877,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ let file = File::open(\"a.txt\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13821882,"byte_end":13821924,"line_start":272,"line_end":272,"column_start":5,"column_end":47}},{"value":"/ let metadata = file.metadata().await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13821929,"byte_end":13821971,"line_start":273,"line_end":273,"column_start":5,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13821976,"byte_end":13821981,"line_start":274,"line_end":274,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13821986,"byte_end":13822003,"line_start":275,"line_end":275,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13822008,"byte_end":13822015,"line_start":276,"line_end":276,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6825},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13822887,"byte_end":13822902,"line_start":306,"line_end":306,"column_start":18,"column_end":33},"name":"set_permissions","qualname":"<File>::set_permissions","value":"pub async fn set_permissions<'_>(&'_ Self, Permissions) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Changes the permissions on the file.","sig":null,"attributes":[{"value":"/ Changes the permissions on the file.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13822178,"byte_end":13822218,"line_start":282,"line_end":282,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13822223,"byte_end":13822226,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13822231,"byte_end":13822243,"line_start":284,"line_end":284,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13822248,"byte_end":13822251,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13822256,"byte_end":13822314,"line_start":286,"line_end":286,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13822319,"byte_end":13822322,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ * The current process lacks permissions to change attributes on the file.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13822327,"byte_end":13822404,"line_start":288,"line_end":288,"column_start":5,"column_end":82}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13822409,"byte_end":13822445,"line_start":289,"line_end":289,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13822450,"byte_end":13822453,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13822458,"byte_end":13822472,"line_start":291,"line_end":291,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13822477,"byte_end":13822480,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13822485,"byte_end":13822498,"line_start":293,"line_end":293,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13822503,"byte_end":13822577,"line_start":294,"line_end":294,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13822582,"byte_end":13822587,"line_start":295,"line_end":295,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13822592,"byte_end":13822620,"line_start":296,"line_end":296,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13822625,"byte_end":13822628,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ let file = File::create(\"a.txt\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13822633,"byte_end":13822677,"line_start":298,"line_end":298,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13822682,"byte_end":13822685,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ let mut perms = file.metadata().await?.permissions();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13822690,"byte_end":13822747,"line_start":300,"line_end":300,"column_start":5,"column_end":62}},{"value":"/ perms.set_readonly(true);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13822752,"byte_end":13822781,"line_start":301,"line_end":301,"column_start":5,"column_end":34}},{"value":"/ file.set_permissions(perms).await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13822786,"byte_end":13822825,"line_start":302,"line_end":302,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13822830,"byte_end":13822835,"line_start":303,"line_end":303,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13822840,"byte_end":13822857,"line_start":304,"line_end":304,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13822862,"byte_end":13822869,"line_start":305,"line_end":305,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":6935},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/hard_link.rs","byte_start":13846532,"byte_end":13846541,"line_start":33,"line_end":33,"column_start":14,"column_end":23},"name":"hard_link","qualname":"::fs::hard_link::hard_link","value":"pub async fn hard_link<P: AsRef<Path>, Q: AsRef<Path>>(P, Q) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a hard link on the filesystem.","sig":null,"attributes":[{"value":"/ Creates a hard link on the filesystem.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/hard_link.rs","byte_start":13845768,"byte_end":13845810,"line_start":6,"line_end":6,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/hard_link.rs","byte_start":13845811,"byte_end":13845814,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The `dst` path will be a link pointing to the `src` path. Note that operating systems often","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/hard_link.rs","byte_start":13845815,"byte_end":13845910,"line_start":8,"line_end":8,"column_start":1,"column_end":96}},{"value":"/ require these two paths to be located on the same filesystem.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/hard_link.rs","byte_start":13845911,"byte_end":13845976,"line_start":9,"line_end":9,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/hard_link.rs","byte_start":13845977,"byte_end":13845980,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::hard_link`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/hard_link.rs","byte_start":13845981,"byte_end":13846045,"line_start":11,"line_end":11,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/hard_link.rs","byte_start":13846046,"byte_end":13846049,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::hard_link`]: https://doc.rust-lang.org/std/fs/fn.hard_link.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/hard_link.rs","byte_start":13846050,"byte_end":13846128,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/hard_link.rs","byte_start":13846129,"byte_end":13846132,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/hard_link.rs","byte_start":13846133,"byte_end":13846145,"line_start":15,"line_end":15,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/hard_link.rs","byte_start":13846146,"byte_end":13846149,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/hard_link.rs","byte_start":13846150,"byte_end":13846208,"line_start":17,"line_end":17,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/hard_link.rs","byte_start":13846209,"byte_end":13846212,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * `src` does not point to an existing file.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/hard_link.rs","byte_start":13846213,"byte_end":13846260,"line_start":19,"line_end":19,"column_start":1,"column_end":48}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/hard_link.rs","byte_start":13846261,"byte_end":13846297,"line_start":20,"line_end":20,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/hard_link.rs","byte_start":13846298,"byte_end":13846301,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/hard_link.rs","byte_start":13846302,"byte_end":13846316,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/hard_link.rs","byte_start":13846317,"byte_end":13846320,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/hard_link.rs","byte_start":13846321,"byte_end":13846334,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/hard_link.rs","byte_start":13846335,"byte_end":13846409,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/hard_link.rs","byte_start":13846410,"byte_end":13846415,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/hard_link.rs","byte_start":13846416,"byte_end":13846438,"line_start":27,"line_end":27,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/hard_link.rs","byte_start":13846439,"byte_end":13846442,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ fs::hard_link(\"a.txt\", \"b.txt\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/hard_link.rs","byte_start":13846443,"byte_end":13846486,"line_start":29,"line_end":29,"column_start":1,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/hard_link.rs","byte_start":13846487,"byte_end":13846492,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/hard_link.rs","byte_start":13846493,"byte_end":13846510,"line_start":31,"line_end":31,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/hard_link.rs","byte_start":13846511,"byte_end":13846518,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":6952},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/metadata.rs","byte_start":13847980,"byte_end":13847988,"line_start":35,"line_end":35,"column_start":14,"column_end":22},"name":"metadata","qualname":"::fs::metadata::metadata","value":"pub async fn metadata<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads metadata for a path.","sig":null,"attributes":[{"value":"/ Reads metadata for a path.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/metadata.rs","byte_start":13847035,"byte_end":13847065,"line_start":5,"line_end":5,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/metadata.rs","byte_start":13847066,"byte_end":13847069,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This function will traverse symbolic links to read metadata for the target file or directory.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/metadata.rs","byte_start":13847070,"byte_end":13847167,"line_start":7,"line_end":7,"column_start":1,"column_end":98}},{"value":"/ If you want to read metadata without following symbolic links, use [`symlink_metadata`]","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/metadata.rs","byte_start":13847168,"byte_end":13847259,"line_start":8,"line_end":8,"column_start":1,"column_end":92}},{"value":"/ instead.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/metadata.rs","byte_start":13847260,"byte_end":13847272,"line_start":9,"line_end":9,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/metadata.rs","byte_start":13847273,"byte_end":13847276,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::metadata`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/metadata.rs","byte_start":13847277,"byte_end":13847340,"line_start":11,"line_end":11,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/metadata.rs","byte_start":13847341,"byte_end":13847344,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`symlink_metadata`]: fn.symlink_metadata.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/metadata.rs","byte_start":13847345,"byte_end":13847395,"line_start":13,"line_end":13,"column_start":1,"column_end":51}},{"value":"/ [`std::fs::metadata`]: https://doc.rust-lang.org/std/fs/fn.metadata.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/metadata.rs","byte_start":13847396,"byte_end":13847472,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/metadata.rs","byte_start":13847473,"byte_end":13847476,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/metadata.rs","byte_start":13847477,"byte_end":13847489,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/metadata.rs","byte_start":13847490,"byte_end":13847493,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/metadata.rs","byte_start":13847494,"byte_end":13847552,"line_start":18,"line_end":18,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/metadata.rs","byte_start":13847553,"byte_end":13847556,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing file or directory.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/metadata.rs","byte_start":13847557,"byte_end":13847618,"line_start":20,"line_end":20,"column_start":1,"column_end":62}},{"value":"/ * The current process lacks permissions to read metadata for the path.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/metadata.rs","byte_start":13847619,"byte_end":13847693,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/metadata.rs","byte_start":13847694,"byte_end":13847730,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/metadata.rs","byte_start":13847731,"byte_end":13847734,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/metadata.rs","byte_start":13847735,"byte_end":13847749,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/metadata.rs","byte_start":13847750,"byte_end":13847753,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/metadata.rs","byte_start":13847754,"byte_end":13847767,"line_start":26,"line_end":26,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/metadata.rs","byte_start":13847768,"byte_end":13847842,"line_start":27,"line_end":27,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/metadata.rs","byte_start":13847843,"byte_end":13847848,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/metadata.rs","byte_start":13847849,"byte_end":13847871,"line_start":29,"line_end":29,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/metadata.rs","byte_start":13847872,"byte_end":13847875,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let perm = fs::metadata(\"a.txt\").await?.permissions();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/metadata.rs","byte_start":13847876,"byte_end":13847934,"line_start":31,"line_end":31,"column_start":1,"column_end":59}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/metadata.rs","byte_start":13847935,"byte_end":13847940,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/metadata.rs","byte_start":13847941,"byte_end":13847958,"line_start":33,"line_end":33,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/metadata.rs","byte_start":13847959,"byte_end":13847966,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8089},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13855614,"byte_end":13855625,"line_start":62,"line_end":62,"column_start":12,"column_end":23},"name":"OpenOptions","qualname":"::fs::open_options::OpenOptions","value":"","parent":null,"children":[],"decl_id":null,"docs":" A builder for opening files with configurable options.","sig":null,"attributes":[{"value":"/ A builder for opening files with configurable options.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13854069,"byte_end":13854127,"line_start":8,"line_end":8,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13854128,"byte_end":13854131,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Files can be opened in [`read`] and/or [`write`] mode.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13854132,"byte_end":13854190,"line_start":10,"line_end":10,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13854191,"byte_end":13854194,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ The [`append`] option opens files in a special writing mode that moves the file cursor to the","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13854195,"byte_end":13854292,"line_start":12,"line_end":12,"column_start":1,"column_end":98}},{"value":"/ end of file before every write operation.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13854293,"byte_end":13854338,"line_start":13,"line_end":13,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13854339,"byte_end":13854342,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ It is also possible to [`truncate`] the file right after opening, to [`create`] a file if it","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13854343,"byte_end":13854439,"line_start":15,"line_end":15,"column_start":1,"column_end":97}},{"value":"/ doesn't exist yet, or to always create a new file with [`create_new`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13854440,"byte_end":13854514,"line_start":16,"line_end":16,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13854515,"byte_end":13854518,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::fs::OpenOptions`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13854519,"byte_end":13854581,"line_start":18,"line_end":18,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13854582,"byte_end":13854585,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`read`]: #method.read","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13854586,"byte_end":13854612,"line_start":20,"line_end":20,"column_start":1,"column_end":27}},{"value":"/ [`write`]: #method.write","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13854613,"byte_end":13854641,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"/ [`append`]: #method.append","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13854642,"byte_end":13854672,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ [`truncate`]: #method.truncate","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13854673,"byte_end":13854707,"line_start":23,"line_end":23,"column_start":1,"column_end":35}},{"value":"/ [`create`]: #method.create","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13854708,"byte_end":13854738,"line_start":24,"line_end":24,"column_start":1,"column_end":31}},{"value":"/ [`create_new`]: #method.create_new","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13854739,"byte_end":13854777,"line_start":25,"line_end":25,"column_start":1,"column_end":39}},{"value":"/ [`std::fs::OpenOptions`]: https://doc.rust-lang.org/std/fs/struct.OpenOptions.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13854778,"byte_end":13854864,"line_start":26,"line_end":26,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13854865,"byte_end":13854868,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13854869,"byte_end":13854883,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13854884,"byte_end":13854887,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Open a file for reading:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13854888,"byte_end":13854916,"line_start":30,"line_end":30,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13854917,"byte_end":13854920,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13854921,"byte_end":13854934,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13854935,"byte_end":13855009,"line_start":33,"line_end":33,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13855010,"byte_end":13855015,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13855016,"byte_end":13855051,"line_start":35,"line_end":35,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13855052,"byte_end":13855055,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13855056,"byte_end":13855089,"line_start":37,"line_end":37,"column_start":1,"column_end":34}},{"value":"/     .read(true)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13855090,"byte_end":13855109,"line_start":38,"line_end":38,"column_start":1,"column_end":20}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13855110,"byte_end":13855132,"line_start":39,"line_end":39,"column_start":1,"column_end":23}},{"value":"/     .await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13855133,"byte_end":13855149,"line_start":40,"line_end":40,"column_start":1,"column_end":17}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13855150,"byte_end":13855155,"line_start":41,"line_end":41,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13855156,"byte_end":13855173,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13855174,"byte_end":13855181,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13855182,"byte_end":13855185,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ Open a file for both reading and writing, and create it if it doesn't exist yet:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13855186,"byte_end":13855270,"line_start":45,"line_end":45,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13855271,"byte_end":13855274,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13855275,"byte_end":13855288,"line_start":47,"line_end":47,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13855289,"byte_end":13855363,"line_start":48,"line_end":48,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13855364,"byte_end":13855369,"line_start":49,"line_end":49,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13855370,"byte_end":13855405,"line_start":50,"line_end":50,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13855406,"byte_end":13855409,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13855410,"byte_end":13855443,"line_start":52,"line_end":52,"column_start":1,"column_end":34}},{"value":"/     .read(true)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13855444,"byte_end":13855463,"line_start":53,"line_end":53,"column_start":1,"column_end":20}},{"value":"/     .write(true)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13855464,"byte_end":13855484,"line_start":54,"line_end":54,"column_start":1,"column_end":21}},{"value":"/     .create(true)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13855485,"byte_end":13855506,"line_start":55,"line_end":55,"column_start":1,"column_end":22}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13855507,"byte_end":13855529,"line_start":56,"line_end":56,"column_start":1,"column_end":23}},{"value":"/     .await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13855530,"byte_end":13855546,"line_start":57,"line_end":57,"column_start":1,"column_end":17}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13855547,"byte_end":13855552,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13855553,"byte_end":13855570,"line_start":59,"line_end":59,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13855571,"byte_end":13855578,"line_start":60,"line_end":60,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6974},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13856122,"byte_end":13856125,"line_start":83,"line_end":83,"column_start":12,"column_end":15},"name":"new","qualname":"<OpenOptions>::new","value":"pub fn new() -> OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Creates a blank set of options.","sig":null,"attributes":[{"value":"/ Creates a blank set of options.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13855673,"byte_end":13855708,"line_start":65,"line_end":65,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13855713,"byte_end":13855716,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ All options are initially set to `false`.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13855721,"byte_end":13855766,"line_start":67,"line_end":67,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13855771,"byte_end":13855774,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13855779,"byte_end":13855793,"line_start":69,"line_end":69,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13855798,"byte_end":13855801,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13855806,"byte_end":13855819,"line_start":71,"line_end":71,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13855824,"byte_end":13855898,"line_start":72,"line_end":72,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13855903,"byte_end":13855908,"line_start":73,"line_end":73,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13855913,"byte_end":13855948,"line_start":74,"line_end":74,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13855953,"byte_end":13855956,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13855961,"byte_end":13855994,"line_start":76,"line_end":76,"column_start":5,"column_end":38}},{"value":"/     .read(true)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13855999,"byte_end":13856018,"line_start":77,"line_end":77,"column_start":5,"column_end":24}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13856023,"byte_end":13856045,"line_start":78,"line_end":78,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13856050,"byte_end":13856066,"line_start":79,"line_end":79,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13856071,"byte_end":13856076,"line_start":80,"line_end":80,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13856081,"byte_end":13856098,"line_start":81,"line_end":81,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13856103,"byte_end":13856110,"line_start":82,"line_end":82,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6975},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13856696,"byte_end":13856700,"line_start":105,"line_end":105,"column_start":12,"column_end":16},"name":"read","qualname":"<OpenOptions>::read","value":"pub fn read(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Configures the option for read mode.","sig":null,"attributes":[{"value":"/ Configures the option for read mode.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13856205,"byte_end":13856245,"line_start":87,"line_end":87,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13856250,"byte_end":13856253,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, this option means the file will be readable after opening.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13856258,"byte_end":13856340,"line_start":89,"line_end":89,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13856345,"byte_end":13856348,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13856353,"byte_end":13856367,"line_start":91,"line_end":91,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13856372,"byte_end":13856375,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13856380,"byte_end":13856393,"line_start":93,"line_end":93,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13856398,"byte_end":13856472,"line_start":94,"line_end":94,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13856477,"byte_end":13856482,"line_start":95,"line_end":95,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13856487,"byte_end":13856522,"line_start":96,"line_end":96,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13856527,"byte_end":13856530,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13856535,"byte_end":13856568,"line_start":98,"line_end":98,"column_start":5,"column_end":38}},{"value":"/     .read(true)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13856573,"byte_end":13856592,"line_start":99,"line_end":99,"column_start":5,"column_end":24}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13856597,"byte_end":13856619,"line_start":100,"line_end":100,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13856624,"byte_end":13856640,"line_start":101,"line_end":101,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13856645,"byte_end":13856650,"line_start":102,"line_end":102,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13856655,"byte_end":13856672,"line_start":103,"line_end":103,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13856677,"byte_end":13856684,"line_start":104,"line_end":104,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6976},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13857420,"byte_end":13857425,"line_start":131,"line_end":131,"column_start":12,"column_end":17},"name":"write","qualname":"<OpenOptions>::write","value":"pub fn write(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Configures the option for write mode.","sig":null,"attributes":[{"value":"/ Configures the option for write mode.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13856797,"byte_end":13856838,"line_start":110,"line_end":110,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13856843,"byte_end":13856846,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, this option means the file will be writable after opening.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13856851,"byte_end":13856933,"line_start":112,"line_end":112,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13856938,"byte_end":13856941,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ If the file already exists, write calls on it will overwrite the previous contents without","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13856946,"byte_end":13857040,"line_start":114,"line_end":114,"column_start":5,"column_end":99}},{"value":"/ truncating it.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13857045,"byte_end":13857063,"line_start":115,"line_end":115,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13857068,"byte_end":13857071,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13857076,"byte_end":13857090,"line_start":117,"line_end":117,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13857095,"byte_end":13857098,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13857103,"byte_end":13857116,"line_start":119,"line_end":119,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13857121,"byte_end":13857195,"line_start":120,"line_end":120,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13857200,"byte_end":13857205,"line_start":121,"line_end":121,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13857210,"byte_end":13857245,"line_start":122,"line_end":122,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13857250,"byte_end":13857253,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13857258,"byte_end":13857291,"line_start":124,"line_end":124,"column_start":5,"column_end":38}},{"value":"/     .write(true)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13857296,"byte_end":13857316,"line_start":125,"line_end":125,"column_start":5,"column_end":25}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13857321,"byte_end":13857343,"line_start":126,"line_end":126,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13857348,"byte_end":13857364,"line_start":127,"line_end":127,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13857369,"byte_end":13857374,"line_start":128,"line_end":128,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13857379,"byte_end":13857396,"line_start":129,"line_end":129,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13857401,"byte_end":13857408,"line_start":130,"line_end":130,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6977},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13858110,"byte_end":13858116,"line_start":155,"line_end":155,"column_start":12,"column_end":18},"name":"append","qualname":"<OpenOptions>::append","value":"pub fn append(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Configures the option for append mode.","sig":null,"attributes":[{"value":"/ Configures the option for append mode.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13857525,"byte_end":13857567,"line_start":136,"line_end":136,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13857572,"byte_end":13857575,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, this option means the file will be writable after opening and the file","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13857580,"byte_end":13857674,"line_start":138,"line_end":138,"column_start":5,"column_end":99}},{"value":"/ cursor will be moved to the end of file before every write operaiton.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13857679,"byte_end":13857752,"line_start":139,"line_end":139,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13857757,"byte_end":13857760,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13857765,"byte_end":13857779,"line_start":141,"line_end":141,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13857784,"byte_end":13857787,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13857792,"byte_end":13857805,"line_start":143,"line_end":143,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13857810,"byte_end":13857884,"line_start":144,"line_end":144,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13857889,"byte_end":13857894,"line_start":145,"line_end":145,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13857899,"byte_end":13857934,"line_start":146,"line_end":146,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13857939,"byte_end":13857942,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13857947,"byte_end":13857980,"line_start":148,"line_end":148,"column_start":5,"column_end":38}},{"value":"/     .append(true)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13857985,"byte_end":13858006,"line_start":149,"line_end":149,"column_start":5,"column_end":26}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13858011,"byte_end":13858033,"line_start":150,"line_end":150,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13858038,"byte_end":13858054,"line_start":151,"line_end":151,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13858059,"byte_end":13858064,"line_start":152,"line_end":152,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13858069,"byte_end":13858086,"line_start":153,"line_end":153,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13858091,"byte_end":13858098,"line_start":154,"line_end":154,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6978},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13858924,"byte_end":13858932,"line_start":184,"line_end":184,"column_start":12,"column_end":20},"name":"truncate","qualname":"<OpenOptions>::truncate","value":"pub fn truncate(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Configures the option for truncating the previous file.","sig":null,"attributes":[{"value":"/ Configures the option for truncating the previous file.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13858219,"byte_end":13858278,"line_start":160,"line_end":160,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13858283,"byte_end":13858286,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, the file will be truncated to the length of 0 bytes.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13858291,"byte_end":13858367,"line_start":162,"line_end":162,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13858372,"byte_end":13858375,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ The file must be opened in [`write`] or [`append`] mode for truncation to work.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13858380,"byte_end":13858463,"line_start":164,"line_end":164,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13858468,"byte_end":13858471,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ [`write`]: #method.write","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13858476,"byte_end":13858504,"line_start":166,"line_end":166,"column_start":5,"column_end":33}},{"value":"/ [`append`]: #method.append","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13858509,"byte_end":13858539,"line_start":167,"line_end":167,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13858544,"byte_end":13858547,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13858552,"byte_end":13858566,"line_start":169,"line_end":169,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13858571,"byte_end":13858574,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13858579,"byte_end":13858592,"line_start":171,"line_end":171,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13858597,"byte_end":13858671,"line_start":172,"line_end":172,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13858676,"byte_end":13858681,"line_start":173,"line_end":173,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13858686,"byte_end":13858721,"line_start":174,"line_end":174,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13858726,"byte_end":13858729,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13858734,"byte_end":13858767,"line_start":176,"line_end":176,"column_start":5,"column_end":38}},{"value":"/     .write(true)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13858772,"byte_end":13858792,"line_start":177,"line_end":177,"column_start":5,"column_end":25}},{"value":"/     .truncate(true)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13858797,"byte_end":13858820,"line_start":178,"line_end":178,"column_start":5,"column_end":28}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13858825,"byte_end":13858847,"line_start":179,"line_end":179,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13858852,"byte_end":13858868,"line_start":180,"line_end":180,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13858873,"byte_end":13858878,"line_start":181,"line_end":181,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13858883,"byte_end":13858900,"line_start":182,"line_end":182,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13858905,"byte_end":13858912,"line_start":183,"line_end":183,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6979},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13859771,"byte_end":13859777,"line_start":213,"line_end":213,"column_start":12,"column_end":18},"name":"create","qualname":"<OpenOptions>::create","value":"pub fn create(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Configures the option for creating a new file if it doesn't exist.","sig":null,"attributes":[{"value":"/ Configures the option for creating a new file if it doesn't exist.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13859041,"byte_end":13859111,"line_start":189,"line_end":189,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13859116,"byte_end":13859119,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, this option means a new file will be created if it doesn't exist.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13859124,"byte_end":13859213,"line_start":191,"line_end":191,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13859218,"byte_end":13859221,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ The file must be opened in [`write`] or [`append`] mode for file creation to work.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13859226,"byte_end":13859312,"line_start":193,"line_end":193,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13859317,"byte_end":13859320,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ [`write`]: #method.write","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13859325,"byte_end":13859353,"line_start":195,"line_end":195,"column_start":5,"column_end":33}},{"value":"/ [`append`]: #method.append","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13859358,"byte_end":13859388,"line_start":196,"line_end":196,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13859393,"byte_end":13859396,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13859401,"byte_end":13859415,"line_start":198,"line_end":198,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13859420,"byte_end":13859423,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13859428,"byte_end":13859441,"line_start":200,"line_end":200,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13859446,"byte_end":13859520,"line_start":201,"line_end":201,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13859525,"byte_end":13859530,"line_start":202,"line_end":202,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13859535,"byte_end":13859570,"line_start":203,"line_end":203,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13859575,"byte_end":13859578,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13859583,"byte_end":13859616,"line_start":205,"line_end":205,"column_start":5,"column_end":38}},{"value":"/     .write(true)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13859621,"byte_end":13859641,"line_start":206,"line_end":206,"column_start":5,"column_end":25}},{"value":"/     .create(true)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13859646,"byte_end":13859667,"line_start":207,"line_end":207,"column_start":5,"column_end":26}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13859672,"byte_end":13859694,"line_start":208,"line_end":208,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13859699,"byte_end":13859715,"line_start":209,"line_end":209,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13859720,"byte_end":13859725,"line_start":210,"line_end":210,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13859730,"byte_end":13859747,"line_start":211,"line_end":211,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13859752,"byte_end":13859759,"line_start":212,"line_end":212,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6980},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13860674,"byte_end":13860684,"line_start":243,"line_end":243,"column_start":12,"column_end":22},"name":"create_new","qualname":"<OpenOptions>::create_new","value":"pub fn create_new(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Configures the option for creating a new file or failing if it already exists.","sig":null,"attributes":[{"value":"/ Configures the option for creating a new file or failing if it already exists.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13859880,"byte_end":13859962,"line_start":218,"line_end":218,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13859967,"byte_end":13859970,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, this option means a new file will be created, or the open operation","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13859975,"byte_end":13860066,"line_start":220,"line_end":220,"column_start":5,"column_end":96}},{"value":"/ will fail if the file already exists.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13860071,"byte_end":13860112,"line_start":221,"line_end":221,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13860117,"byte_end":13860120,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ The file must be opened in [`write`] or [`append`] mode for file creation to work.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13860125,"byte_end":13860211,"line_start":223,"line_end":223,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13860216,"byte_end":13860219,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ [`write`]: #method.write","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13860224,"byte_end":13860252,"line_start":225,"line_end":225,"column_start":5,"column_end":33}},{"value":"/ [`append`]: #method.append","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13860257,"byte_end":13860287,"line_start":226,"line_end":226,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13860292,"byte_end":13860295,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13860300,"byte_end":13860314,"line_start":228,"line_end":228,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13860319,"byte_end":13860322,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13860327,"byte_end":13860340,"line_start":230,"line_end":230,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13860345,"byte_end":13860419,"line_start":231,"line_end":231,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13860424,"byte_end":13860429,"line_start":232,"line_end":232,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13860434,"byte_end":13860469,"line_start":233,"line_end":233,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13860474,"byte_end":13860477,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13860482,"byte_end":13860515,"line_start":235,"line_end":235,"column_start":5,"column_end":38}},{"value":"/     .write(true)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13860520,"byte_end":13860540,"line_start":236,"line_end":236,"column_start":5,"column_end":25}},{"value":"/     .create_new(true)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13860545,"byte_end":13860570,"line_start":237,"line_end":237,"column_start":5,"column_end":30}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13860575,"byte_end":13860597,"line_start":238,"line_end":238,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13860602,"byte_end":13860618,"line_start":239,"line_end":239,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13860623,"byte_end":13860628,"line_start":240,"line_end":240,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13860633,"byte_end":13860650,"line_start":241,"line_end":241,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13860655,"byte_end":13860662,"line_start":242,"line_end":242,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6981},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13862122,"byte_end":13862126,"line_start":284,"line_end":284,"column_start":12,"column_end":16},"name":"open","qualname":"<OpenOptions>::open","value":"pub fn open<P: AsRef<Path>>(&Self, P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Opens a file with the configured options.","sig":null,"attributes":[{"value":"/ Opens a file with the configured options.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13860799,"byte_end":13860844,"line_start":248,"line_end":248,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13860849,"byte_end":13860852,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13860857,"byte_end":13860869,"line_start":250,"line_end":250,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13860874,"byte_end":13860877,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13860882,"byte_end":13860940,"line_start":252,"line_end":252,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13860945,"byte_end":13860948,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ * The file does not exist and neither [`create`] nor [`create_new`] were set.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13860953,"byte_end":13861034,"line_start":254,"line_end":254,"column_start":5,"column_end":86}},{"value":"/ * The file's parent directory does not exist.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13861039,"byte_end":13861088,"line_start":255,"line_end":255,"column_start":5,"column_end":54}},{"value":"/ * The current process lacks permissions to open the file in the configured mode.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13861093,"byte_end":13861177,"line_start":256,"line_end":256,"column_start":5,"column_end":89}},{"value":"/ * The file already exists and [`create_new`] was set.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13861182,"byte_end":13861239,"line_start":257,"line_end":257,"column_start":5,"column_end":62}},{"value":"/ * Invalid combination of options was used, like [`truncate`] was set but [`write`] wasn't,","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13861244,"byte_end":13861338,"line_start":258,"line_end":258,"column_start":5,"column_end":99}},{"value":"/   or none of [`read`], [`write`], and [`append`] modes was set.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13861343,"byte_end":13861410,"line_start":259,"line_end":259,"column_start":5,"column_end":72}},{"value":"/ * An OS-level occurred, like too many files are open or the file name is too long.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13861415,"byte_end":13861501,"line_start":260,"line_end":260,"column_start":5,"column_end":91}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13861506,"byte_end":13861542,"line_start":261,"line_end":261,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13861547,"byte_end":13861550,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ [`read`]: #method.read","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13861555,"byte_end":13861581,"line_start":263,"line_end":263,"column_start":5,"column_end":31}},{"value":"/ [`write`]: #method.write","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13861586,"byte_end":13861614,"line_start":264,"line_end":264,"column_start":5,"column_end":33}},{"value":"/ [`append`]: #method.append","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13861619,"byte_end":13861649,"line_start":265,"line_end":265,"column_start":5,"column_end":35}},{"value":"/ [`truncate`]: #method.truncate","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13861654,"byte_end":13861688,"line_start":266,"line_end":266,"column_start":5,"column_end":39}},{"value":"/ [`create`]: #method.create","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13861693,"byte_end":13861723,"line_start":267,"line_end":267,"column_start":5,"column_end":35}},{"value":"/ [`create_new`]: #method.create_new","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13861728,"byte_end":13861766,"line_start":268,"line_end":268,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13861771,"byte_end":13861774,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13861779,"byte_end":13861793,"line_start":270,"line_end":270,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13861798,"byte_end":13861801,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13861806,"byte_end":13861819,"line_start":272,"line_end":272,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13861824,"byte_end":13861898,"line_start":273,"line_end":273,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13861903,"byte_end":13861908,"line_start":274,"line_end":274,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13861913,"byte_end":13861948,"line_start":275,"line_end":275,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13861953,"byte_end":13861956,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13861961,"byte_end":13861994,"line_start":277,"line_end":277,"column_start":5,"column_end":38}},{"value":"/     .read(true)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13861999,"byte_end":13862018,"line_start":278,"line_end":278,"column_start":5,"column_end":24}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13862023,"byte_end":13862045,"line_start":279,"line_end":279,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13862050,"byte_end":13862066,"line_start":280,"line_end":280,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13862071,"byte_end":13862076,"line_start":281,"line_end":281,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13862081,"byte_end":13862098,"line_start":282,"line_end":282,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13862103,"byte_end":13862110,"line_start":283,"line_end":283,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":7002},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read.rs","byte_start":13865630,"byte_end":13865634,"line_start":38,"line_end":38,"column_start":14,"column_end":18},"name":"read","qualname":"::fs::read::read","value":"pub async fn read<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads the entire contents of a file as raw bytes.","sig":null,"attributes":[{"value":"/ Reads the entire contents of a file as raw bytes.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read.rs","byte_start":13864625,"byte_end":13864678,"line_start":6,"line_end":6,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read.rs","byte_start":13864679,"byte_end":13864682,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is a convenience function for reading entire files. It pre-allocates a buffer based on the","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read.rs","byte_start":13864683,"byte_end":13864782,"line_start":8,"line_end":8,"column_start":1,"column_end":100}},{"value":"/ file size when available, so it is typically faster than manually opening a file and reading","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read.rs","byte_start":13864783,"byte_end":13864879,"line_start":9,"line_end":9,"column_start":1,"column_end":97}},{"value":"/ from it.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read.rs","byte_start":13864880,"byte_end":13864892,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read.rs","byte_start":13864893,"byte_end":13864896,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ If you want to read the contents as a string, use [`read_to_string`] instead.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read.rs","byte_start":13864897,"byte_end":13864978,"line_start":12,"line_end":12,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read.rs","byte_start":13864979,"byte_end":13864982,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::read`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read.rs","byte_start":13864983,"byte_end":13865042,"line_start":14,"line_end":14,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read.rs","byte_start":13865043,"byte_end":13865046,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`read_to_string`]: fn.read_to_string.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read.rs","byte_start":13865047,"byte_end":13865093,"line_start":16,"line_end":16,"column_start":1,"column_end":47}},{"value":"/ [`std::fs::read`]: https://doc.rust-lang.org/std/fs/fn.read.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read.rs","byte_start":13865094,"byte_end":13865162,"line_start":17,"line_end":17,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read.rs","byte_start":13865163,"byte_end":13865166,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read.rs","byte_start":13865167,"byte_end":13865179,"line_start":19,"line_end":19,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read.rs","byte_start":13865180,"byte_end":13865183,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read.rs","byte_start":13865184,"byte_end":13865242,"line_start":21,"line_end":21,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read.rs","byte_start":13865243,"byte_end":13865246,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing file.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read.rs","byte_start":13865247,"byte_end":13865295,"line_start":23,"line_end":23,"column_start":1,"column_end":49}},{"value":"/ * The current process lacks permissions to read the file.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read.rs","byte_start":13865296,"byte_end":13865357,"line_start":24,"line_end":24,"column_start":1,"column_end":62}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read.rs","byte_start":13865358,"byte_end":13865394,"line_start":25,"line_end":25,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read.rs","byte_start":13865395,"byte_end":13865398,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read.rs","byte_start":13865399,"byte_end":13865413,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read.rs","byte_start":13865414,"byte_end":13865417,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read.rs","byte_start":13865418,"byte_end":13865431,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read.rs","byte_start":13865432,"byte_end":13865506,"line_start":30,"line_end":30,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read.rs","byte_start":13865507,"byte_end":13865512,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read.rs","byte_start":13865513,"byte_end":13865535,"line_start":32,"line_end":32,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read.rs","byte_start":13865536,"byte_end":13865539,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let contents = fs::read(\"a.txt\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read.rs","byte_start":13865540,"byte_end":13865584,"line_start":34,"line_end":34,"column_start":1,"column_end":45}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read.rs","byte_start":13865585,"byte_end":13865590,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read.rs","byte_start":13865591,"byte_end":13865608,"line_start":36,"line_end":36,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read.rs","byte_start":13865609,"byte_end":13865616,"line_start":37,"line_end":37,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":7043},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":13867191,"byte_end":13867199,"line_start":47,"line_end":47,"column_start":14,"column_end":22},"name":"read_dir","qualname":"::fs::read_dir::read_dir","value":"pub async fn read_dir<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream of entries in a directory.","sig":null,"attributes":[{"value":"/ Returns a stream of entries in a directory.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":13866099,"byte_end":13866146,"line_start":11,"line_end":11,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":13866147,"byte_end":13866150,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ The stream yields items of type [`io::Result`]`<`[`DirEntry`]`>`. Note that I/O errors can","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":13866151,"byte_end":13866245,"line_start":13,"line_end":13,"column_start":1,"column_end":95}},{"value":"/ occur while reading from the stream.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":13866246,"byte_end":13866286,"line_start":14,"line_end":14,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":13866287,"byte_end":13866290,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::read_dir`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":13866291,"byte_end":13866354,"line_start":16,"line_end":16,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":13866355,"byte_end":13866358,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`io::Result`]: ../io/type.Result.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":13866359,"byte_end":13866401,"line_start":18,"line_end":18,"column_start":1,"column_end":43}},{"value":"/ [`DirEntry`]: struct.DirEntry.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":13866402,"byte_end":13866440,"line_start":19,"line_end":19,"column_start":1,"column_end":39}},{"value":"/ [`std::fs::read_dir`]: https://doc.rust-lang.org/std/fs/fn.read_dir.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":13866441,"byte_end":13866517,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":13866518,"byte_end":13866521,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":13866522,"byte_end":13866534,"line_start":22,"line_end":22,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":13866535,"byte_end":13866538,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":13866539,"byte_end":13866597,"line_start":24,"line_end":24,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":13866598,"byte_end":13866601,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing directory.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":13866602,"byte_end":13866655,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/ * The current process lacks permissions to read the contents of the directory.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":13866656,"byte_end":13866738,"line_start":27,"line_end":27,"column_start":1,"column_end":83}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":13866739,"byte_end":13866775,"line_start":28,"line_end":28,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":13866776,"byte_end":13866779,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":13866780,"byte_end":13866794,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":13866795,"byte_end":13866798,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":13866799,"byte_end":13866812,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":13866813,"byte_end":13866887,"line_start":33,"line_end":33,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":13866888,"byte_end":13866893,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":13866894,"byte_end":13866916,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":13866917,"byte_end":13866947,"line_start":36,"line_end":36,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":13866948,"byte_end":13866951,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ let mut entries = fs::read_dir(\".\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":13866952,"byte_end":13866999,"line_start":38,"line_end":38,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":13867000,"byte_end":13867003,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ while let Some(res) = entries.next().await {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":13867004,"byte_end":13867052,"line_start":40,"line_end":40,"column_start":1,"column_end":49}},{"value":"/     let entry = res?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":13867053,"byte_end":13867078,"line_start":41,"line_end":41,"column_start":1,"column_end":26}},{"value":"/     println!(\"{}\", entry.file_name().to_string_lossy());","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":13867079,"byte_end":13867139,"line_start":42,"line_end":42,"column_start":1,"column_end":61}},{"value":"/ }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":13867140,"byte_end":13867145,"line_start":43,"line_end":43,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":13867146,"byte_end":13867151,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":13867152,"byte_end":13867169,"line_start":45,"line_end":45,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":13867170,"byte_end":13867177,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8105},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":13868004,"byte_end":13868011,"line_start":70,"line_end":70,"column_start":12,"column_end":19},"name":"ReadDir","qualname":"::fs::read_dir::ReadDir","value":"","parent":null,"children":[],"decl_id":null,"docs":" A stream of entries in a directory.","sig":null,"attributes":[{"value":"/ A stream of entries in a directory.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":13867479,"byte_end":13867518,"line_start":57,"line_end":57,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":13867519,"byte_end":13867522,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ This stream is returned by [`read_dir`] and yields items of type","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":13867523,"byte_end":13867591,"line_start":59,"line_end":59,"column_start":1,"column_end":69}},{"value":"/ [`io::Result`]`<`[`DirEntry`]`>`. Each [`DirEntry`] can then retrieve information like entry's","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":13867592,"byte_end":13867690,"line_start":60,"line_end":60,"column_start":1,"column_end":99}},{"value":"/ path or metadata.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":13867691,"byte_end":13867712,"line_start":61,"line_end":61,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":13867713,"byte_end":13867716,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::fs::ReadDir`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":13867717,"byte_end":13867775,"line_start":63,"line_end":63,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":13867776,"byte_end":13867779,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ [`read_dir`]: fn.read_dir.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":13867780,"byte_end":13867814,"line_start":65,"line_end":65,"column_start":1,"column_end":35}},{"value":"/ [`io::Result`]: ../io/type.Result.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":13867815,"byte_end":13867857,"line_start":66,"line_end":66,"column_start":1,"column_end":43}},{"value":"/ [`DirEntry`]: struct.DirEntry.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":13867858,"byte_end":13867896,"line_start":67,"line_end":67,"column_start":1,"column_end":39}},{"value":"/ [`std::fs::ReadDir`]: https://doc.rust-lang.org/std/fs/struct.ReadDir.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":13867897,"byte_end":13867975,"line_start":68,"line_end":68,"column_start":1,"column_end":79}}]},{"kind":"Function","id":{"krate":0,"index":7073},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_link.rs","byte_start":13870184,"byte_end":13870193,"line_start":30,"line_end":30,"column_start":14,"column_end":23},"name":"read_link","qualname":"::fs::read_link::read_link","value":"pub async fn read_link<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads a symbolic link and returns the path it points to.","sig":null,"attributes":[{"value":"/ Reads a symbolic link and returns the path it points to.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_link.rs","byte_start":13869565,"byte_end":13869625,"line_start":6,"line_end":6,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_link.rs","byte_start":13869626,"byte_end":13869629,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::read_link`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_link.rs","byte_start":13869630,"byte_end":13869694,"line_start":8,"line_end":8,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_link.rs","byte_start":13869695,"byte_end":13869698,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::read_link`]: https://doc.rust-lang.org/std/fs/fn.read_link.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_link.rs","byte_start":13869699,"byte_end":13869777,"line_start":10,"line_end":10,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_link.rs","byte_start":13869778,"byte_end":13869781,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_link.rs","byte_start":13869782,"byte_end":13869794,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_link.rs","byte_start":13869795,"byte_end":13869798,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_link.rs","byte_start":13869799,"byte_end":13869857,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_link.rs","byte_start":13869858,"byte_end":13869861,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing link.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_link.rs","byte_start":13869862,"byte_end":13869910,"line_start":16,"line_end":16,"column_start":1,"column_end":49}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_link.rs","byte_start":13869911,"byte_end":13869947,"line_start":17,"line_end":17,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_link.rs","byte_start":13869948,"byte_end":13869951,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_link.rs","byte_start":13869952,"byte_end":13869966,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_link.rs","byte_start":13869967,"byte_end":13869970,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_link.rs","byte_start":13869971,"byte_end":13869984,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_link.rs","byte_start":13869985,"byte_end":13870059,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_link.rs","byte_start":13870060,"byte_end":13870065,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_link.rs","byte_start":13870066,"byte_end":13870088,"line_start":24,"line_end":24,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_link.rs","byte_start":13870089,"byte_end":13870092,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let path = fs::read_link(\"a.txt\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_link.rs","byte_start":13870093,"byte_end":13870138,"line_start":26,"line_end":26,"column_start":1,"column_end":46}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_link.rs","byte_start":13870139,"byte_end":13870144,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_link.rs","byte_start":13870145,"byte_end":13870162,"line_start":28,"line_end":28,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_link.rs","byte_start":13870163,"byte_end":13870170,"line_start":29,"line_end":29,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":7092},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_to_string.rs","byte_start":13871659,"byte_end":13871673,"line_start":39,"line_end":39,"column_start":14,"column_end":28},"name":"read_to_string","qualname":"::fs::read_to_string::read_to_string","value":"pub async fn read_to_string<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads the entire contents of a file as a string.","sig":null,"attributes":[{"value":"/ Reads the entire contents of a file as a string.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_to_string.rs","byte_start":13870579,"byte_end":13870631,"line_start":6,"line_end":6,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_to_string.rs","byte_start":13870632,"byte_end":13870635,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is a convenience function for reading entire files. It pre-allocates a string based on the","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_to_string.rs","byte_start":13870636,"byte_end":13870735,"line_start":8,"line_end":8,"column_start":1,"column_end":100}},{"value":"/ file size when available, so it is typically faster than manually opening a file and reading","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_to_string.rs","byte_start":13870736,"byte_end":13870832,"line_start":9,"line_end":9,"column_start":1,"column_end":97}},{"value":"/ from it.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_to_string.rs","byte_start":13870833,"byte_end":13870845,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_to_string.rs","byte_start":13870846,"byte_end":13870849,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ If you want to read the contents as raw bytes, use [`read`] instead.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_to_string.rs","byte_start":13870850,"byte_end":13870922,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_to_string.rs","byte_start":13870923,"byte_end":13870926,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::read_to_string`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_to_string.rs","byte_start":13870927,"byte_end":13870996,"line_start":14,"line_end":14,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_to_string.rs","byte_start":13870997,"byte_end":13871000,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`read`]: fn.read.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_to_string.rs","byte_start":13871001,"byte_end":13871027,"line_start":16,"line_end":16,"column_start":1,"column_end":27}},{"value":"/ [`std::fs::read_to_string`]: https://doc.rust-lang.org/std/fs/fn.read_to_string.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_to_string.rs","byte_start":13871028,"byte_end":13871116,"line_start":17,"line_end":17,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_to_string.rs","byte_start":13871117,"byte_end":13871120,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_to_string.rs","byte_start":13871121,"byte_end":13871133,"line_start":19,"line_end":19,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_to_string.rs","byte_start":13871134,"byte_end":13871137,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_to_string.rs","byte_start":13871138,"byte_end":13871196,"line_start":21,"line_end":21,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_to_string.rs","byte_start":13871197,"byte_end":13871200,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing file.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_to_string.rs","byte_start":13871201,"byte_end":13871249,"line_start":23,"line_end":23,"column_start":1,"column_end":49}},{"value":"/ * The current process lacks permissions to read the file.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_to_string.rs","byte_start":13871250,"byte_end":13871311,"line_start":24,"line_end":24,"column_start":1,"column_end":62}},{"value":"/ * The contents of the file cannot be read as a UTF-8 string.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_to_string.rs","byte_start":13871312,"byte_end":13871376,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_to_string.rs","byte_start":13871377,"byte_end":13871413,"line_start":26,"line_end":26,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_to_string.rs","byte_start":13871414,"byte_end":13871417,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_to_string.rs","byte_start":13871418,"byte_end":13871432,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_to_string.rs","byte_start":13871433,"byte_end":13871436,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_to_string.rs","byte_start":13871437,"byte_end":13871450,"line_start":30,"line_end":30,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_to_string.rs","byte_start":13871451,"byte_end":13871525,"line_start":31,"line_end":31,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_to_string.rs","byte_start":13871526,"byte_end":13871531,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_to_string.rs","byte_start":13871532,"byte_end":13871554,"line_start":33,"line_end":33,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_to_string.rs","byte_start":13871555,"byte_end":13871558,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let contents = fs::read_to_string(\"a.txt\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_to_string.rs","byte_start":13871559,"byte_end":13871613,"line_start":35,"line_end":35,"column_start":1,"column_end":55}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_to_string.rs","byte_start":13871614,"byte_end":13871619,"line_start":36,"line_end":36,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_to_string.rs","byte_start":13871620,"byte_end":13871637,"line_start":37,"line_end":37,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_to_string.rs","byte_start":13871638,"byte_end":13871645,"line_start":38,"line_end":38,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":7111},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir.rs","byte_start":13872701,"byte_end":13872711,"line_start":31,"line_end":31,"column_start":14,"column_end":24},"name":"remove_dir","qualname":"::fs::remove_dir::remove_dir","value":"pub async fn remove_dir<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Removes an empty directory.","sig":null,"attributes":[{"value":"/ Removes an empty directory.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir.rs","byte_start":13872034,"byte_end":13872065,"line_start":6,"line_end":6,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir.rs","byte_start":13872066,"byte_end":13872069,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::remove_dir`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir.rs","byte_start":13872070,"byte_end":13872135,"line_start":8,"line_end":8,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir.rs","byte_start":13872136,"byte_end":13872139,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::remove_dir`]: https://doc.rust-lang.org/std/fs/fn.remove_dir.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir.rs","byte_start":13872140,"byte_end":13872220,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir.rs","byte_start":13872221,"byte_end":13872224,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir.rs","byte_start":13872225,"byte_end":13872237,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir.rs","byte_start":13872238,"byte_end":13872241,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir.rs","byte_start":13872242,"byte_end":13872300,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir.rs","byte_start":13872301,"byte_end":13872304,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `path` is not an existing and empty directory.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir.rs","byte_start":13872305,"byte_end":13872357,"line_start":16,"line_end":16,"column_start":1,"column_end":53}},{"value":"/ * The current process lacks permissions to remove the directory.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir.rs","byte_start":13872358,"byte_end":13872426,"line_start":17,"line_end":17,"column_start":1,"column_end":69}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir.rs","byte_start":13872427,"byte_end":13872463,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir.rs","byte_start":13872464,"byte_end":13872467,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir.rs","byte_start":13872468,"byte_end":13872482,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir.rs","byte_start":13872483,"byte_end":13872486,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir.rs","byte_start":13872487,"byte_end":13872500,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir.rs","byte_start":13872501,"byte_end":13872575,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir.rs","byte_start":13872576,"byte_end":13872581,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir.rs","byte_start":13872582,"byte_end":13872604,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir.rs","byte_start":13872605,"byte_end":13872608,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fs::remove_dir(\"./some/directory\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir.rs","byte_start":13872609,"byte_end":13872655,"line_start":27,"line_end":27,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir.rs","byte_start":13872656,"byte_end":13872661,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir.rs","byte_start":13872662,"byte_end":13872679,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir.rs","byte_start":13872680,"byte_end":13872687,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":7130},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir_all.rs","byte_start":13873771,"byte_end":13873785,"line_start":31,"line_end":31,"column_start":14,"column_end":28},"name":"remove_dir_all","qualname":"::fs::remove_dir_all::remove_dir_all","value":"pub async fn remove_dir_all<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Removes a directory and all of its contents.","sig":null,"attributes":[{"value":"/ Removes a directory and all of its contents.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir_all.rs","byte_start":13873071,"byte_end":13873119,"line_start":6,"line_end":6,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir_all.rs","byte_start":13873120,"byte_end":13873123,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::remove_dir_all`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir_all.rs","byte_start":13873124,"byte_end":13873193,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir_all.rs","byte_start":13873194,"byte_end":13873197,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::remove_dir_all`]: https://doc.rust-lang.org/std/fs/fn.remove_dir_all.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir_all.rs","byte_start":13873198,"byte_end":13873286,"line_start":10,"line_end":10,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir_all.rs","byte_start":13873287,"byte_end":13873290,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir_all.rs","byte_start":13873291,"byte_end":13873303,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir_all.rs","byte_start":13873304,"byte_end":13873307,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir_all.rs","byte_start":13873308,"byte_end":13873366,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir_all.rs","byte_start":13873367,"byte_end":13873370,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `path` is not an existing and empty directory.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir_all.rs","byte_start":13873371,"byte_end":13873423,"line_start":16,"line_end":16,"column_start":1,"column_end":53}},{"value":"/ * The current process lacks permissions to remove the directory.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir_all.rs","byte_start":13873424,"byte_end":13873492,"line_start":17,"line_end":17,"column_start":1,"column_end":69}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir_all.rs","byte_start":13873493,"byte_end":13873529,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir_all.rs","byte_start":13873530,"byte_end":13873533,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir_all.rs","byte_start":13873534,"byte_end":13873548,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir_all.rs","byte_start":13873549,"byte_end":13873552,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir_all.rs","byte_start":13873553,"byte_end":13873566,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir_all.rs","byte_start":13873567,"byte_end":13873641,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir_all.rs","byte_start":13873642,"byte_end":13873647,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir_all.rs","byte_start":13873648,"byte_end":13873670,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir_all.rs","byte_start":13873671,"byte_end":13873674,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fs::remove_dir_all(\"./some/directory\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir_all.rs","byte_start":13873675,"byte_end":13873725,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir_all.rs","byte_start":13873726,"byte_end":13873731,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir_all.rs","byte_start":13873732,"byte_end":13873749,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_dir_all.rs","byte_start":13873750,"byte_end":13873757,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":7149},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_file.rs","byte_start":13874788,"byte_end":13874799,"line_start":31,"line_end":31,"column_start":14,"column_end":25},"name":"remove_file","qualname":"::fs::remove_file::remove_file","value":"pub async fn remove_file<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Removes a file.","sig":null,"attributes":[{"value":"/ Removes a file.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_file.rs","byte_start":13874149,"byte_end":13874168,"line_start":6,"line_end":6,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_file.rs","byte_start":13874169,"byte_end":13874172,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::remove_file`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_file.rs","byte_start":13874173,"byte_end":13874239,"line_start":8,"line_end":8,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_file.rs","byte_start":13874240,"byte_end":13874243,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::remove_file`]: https://doc.rust-lang.org/std/fs/fn.remove_file.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_file.rs","byte_start":13874244,"byte_end":13874326,"line_start":10,"line_end":10,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_file.rs","byte_start":13874327,"byte_end":13874330,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_file.rs","byte_start":13874331,"byte_end":13874343,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_file.rs","byte_start":13874344,"byte_end":13874347,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_file.rs","byte_start":13874348,"byte_end":13874406,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_file.rs","byte_start":13874407,"byte_end":13874410,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing file.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_file.rs","byte_start":13874411,"byte_end":13874459,"line_start":16,"line_end":16,"column_start":1,"column_end":49}},{"value":"/ * The current process lacks permissions to remove the file.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_file.rs","byte_start":13874460,"byte_end":13874523,"line_start":17,"line_end":17,"column_start":1,"column_end":64}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_file.rs","byte_start":13874524,"byte_end":13874560,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_file.rs","byte_start":13874561,"byte_end":13874564,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_file.rs","byte_start":13874565,"byte_end":13874579,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_file.rs","byte_start":13874580,"byte_end":13874583,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_file.rs","byte_start":13874584,"byte_end":13874597,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_file.rs","byte_start":13874598,"byte_end":13874672,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_file.rs","byte_start":13874673,"byte_end":13874678,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_file.rs","byte_start":13874679,"byte_end":13874701,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_file.rs","byte_start":13874702,"byte_end":13874705,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fs::remove_file(\"a.txt\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_file.rs","byte_start":13874706,"byte_end":13874742,"line_start":27,"line_end":27,"column_start":1,"column_end":37}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_file.rs","byte_start":13874743,"byte_end":13874748,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_file.rs","byte_start":13874749,"byte_end":13874766,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/remove_file.rs","byte_start":13874767,"byte_end":13874774,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":7168},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/rename.rs","byte_start":13876003,"byte_end":13876009,"line_start":35,"line_end":35,"column_start":14,"column_end":20},"name":"rename","qualname":"::fs::rename::rename","value":"pub async fn rename<P: AsRef<Path>, Q: AsRef<Path>>(P, Q) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Renames a file or directory to a new location.","sig":null,"attributes":[{"value":"/ Renames a file or directory to a new location.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/rename.rs","byte_start":13875155,"byte_end":13875205,"line_start":6,"line_end":6,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/rename.rs","byte_start":13875206,"byte_end":13875209,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ If a file or directory already exists at the target location, it will be overwritten by this","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/rename.rs","byte_start":13875210,"byte_end":13875306,"line_start":8,"line_end":8,"column_start":1,"column_end":97}},{"value":"/ operation.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/rename.rs","byte_start":13875307,"byte_end":13875321,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/rename.rs","byte_start":13875322,"byte_end":13875325,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::rename`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/rename.rs","byte_start":13875326,"byte_end":13875387,"line_start":11,"line_end":11,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/rename.rs","byte_start":13875388,"byte_end":13875391,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::rename`]: https://doc.rust-lang.org/std/fs/fn.rename.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/rename.rs","byte_start":13875392,"byte_end":13875464,"line_start":13,"line_end":13,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/rename.rs","byte_start":13875465,"byte_end":13875468,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/rename.rs","byte_start":13875469,"byte_end":13875481,"line_start":15,"line_end":15,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/rename.rs","byte_start":13875482,"byte_end":13875485,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/rename.rs","byte_start":13875486,"byte_end":13875544,"line_start":17,"line_end":17,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/rename.rs","byte_start":13875545,"byte_end":13875548,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * `from` does not point to an existing file or directory.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/rename.rs","byte_start":13875549,"byte_end":13875610,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/ * `from` and `to` are on different filesystems.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/rename.rs","byte_start":13875611,"byte_end":13875662,"line_start":20,"line_end":20,"column_start":1,"column_end":52}},{"value":"/ * The current process lacks permissions to do the rename operation.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/rename.rs","byte_start":13875663,"byte_end":13875734,"line_start":21,"line_end":21,"column_start":1,"column_end":72}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/rename.rs","byte_start":13875735,"byte_end":13875771,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/rename.rs","byte_start":13875772,"byte_end":13875775,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/rename.rs","byte_start":13875776,"byte_end":13875790,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/rename.rs","byte_start":13875791,"byte_end":13875794,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/rename.rs","byte_start":13875795,"byte_end":13875808,"line_start":26,"line_end":26,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/rename.rs","byte_start":13875809,"byte_end":13875883,"line_start":27,"line_end":27,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/rename.rs","byte_start":13875884,"byte_end":13875889,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/rename.rs","byte_start":13875890,"byte_end":13875912,"line_start":29,"line_end":29,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/rename.rs","byte_start":13875913,"byte_end":13875916,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ fs::rename(\"a.txt\", \"b.txt\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/rename.rs","byte_start":13875917,"byte_end":13875957,"line_start":31,"line_end":31,"column_start":1,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/rename.rs","byte_start":13875958,"byte_end":13875963,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/rename.rs","byte_start":13875964,"byte_end":13875981,"line_start":33,"line_end":33,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/rename.rs","byte_start":13875982,"byte_end":13875989,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":7188},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/set_permissions.rs","byte_start":13877336,"byte_end":13877351,"line_start":33,"line_end":33,"column_start":14,"column_end":29},"name":"set_permissions","qualname":"::fs::set_permissions::set_permissions","value":"pub async fn set_permissions<P: AsRef<Path>>(P, Permissions) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Changes the permissions of a file or directory.","sig":null,"attributes":[{"value":"/ Changes the permissions of a file or directory.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/set_permissions.rs","byte_start":13876511,"byte_end":13876562,"line_start":6,"line_end":6,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/set_permissions.rs","byte_start":13876563,"byte_end":13876566,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::set_permissions`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/set_permissions.rs","byte_start":13876567,"byte_end":13876637,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/set_permissions.rs","byte_start":13876638,"byte_end":13876641,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::set_permissions`]: https://doc.rust-lang.org/std/fs/fn.set_permissions.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/set_permissions.rs","byte_start":13876642,"byte_end":13876732,"line_start":10,"line_end":10,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/set_permissions.rs","byte_start":13876733,"byte_end":13876736,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/set_permissions.rs","byte_start":13876737,"byte_end":13876749,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/set_permissions.rs","byte_start":13876750,"byte_end":13876753,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/set_permissions.rs","byte_start":13876754,"byte_end":13876812,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/set_permissions.rs","byte_start":13876813,"byte_end":13876816,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing file or directory.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/set_permissions.rs","byte_start":13876817,"byte_end":13876878,"line_start":16,"line_end":16,"column_start":1,"column_end":62}},{"value":"/ * The current process lacks permissions to change attributes on the file or directory.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/set_permissions.rs","byte_start":13876879,"byte_end":13876969,"line_start":17,"line_end":17,"column_start":1,"column_end":91}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/set_permissions.rs","byte_start":13876970,"byte_end":13877006,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/set_permissions.rs","byte_start":13877007,"byte_end":13877010,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/set_permissions.rs","byte_start":13877011,"byte_end":13877025,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/set_permissions.rs","byte_start":13877026,"byte_end":13877029,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/set_permissions.rs","byte_start":13877030,"byte_end":13877043,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/set_permissions.rs","byte_start":13877044,"byte_end":13877118,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/set_permissions.rs","byte_start":13877119,"byte_end":13877124,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/set_permissions.rs","byte_start":13877125,"byte_end":13877147,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/set_permissions.rs","byte_start":13877148,"byte_end":13877151,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let mut perm = fs::metadata(\"a.txt\").await?.permissions();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/set_permissions.rs","byte_start":13877152,"byte_end":13877214,"line_start":27,"line_end":27,"column_start":1,"column_end":63}},{"value":"/ perm.set_readonly(true);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/set_permissions.rs","byte_start":13877215,"byte_end":13877243,"line_start":28,"line_end":28,"column_start":1,"column_end":29}},{"value":"/ fs::set_permissions(\"a.txt\", perm).await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/set_permissions.rs","byte_start":13877244,"byte_end":13877290,"line_start":29,"line_end":29,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/set_permissions.rs","byte_start":13877291,"byte_end":13877296,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/set_permissions.rs","byte_start":13877297,"byte_end":13877314,"line_start":31,"line_end":31,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/set_permissions.rs","byte_start":13877315,"byte_end":13877322,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":7206},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/symlink_metadata.rs","byte_start":13878547,"byte_end":13878563,"line_start":35,"line_end":35,"column_start":14,"column_end":30},"name":"symlink_metadata","qualname":"::fs::symlink_metadata::symlink_metadata","value":"pub async fn symlink_metadata<P: AsRef<Path>>(P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads metadata for a path without following symbolic links.","sig":null,"attributes":[{"value":"/ Reads metadata for a path without following symbolic links.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/symlink_metadata.rs","byte_start":13877628,"byte_end":13877691,"line_start":6,"line_end":6,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/symlink_metadata.rs","byte_start":13877692,"byte_end":13877695,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ If you want to follow symbolic links before reading metadata of the target file or directory,","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/symlink_metadata.rs","byte_start":13877696,"byte_end":13877793,"line_start":8,"line_end":8,"column_start":1,"column_end":98}},{"value":"/ use [`metadata`] instead.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/symlink_metadata.rs","byte_start":13877794,"byte_end":13877823,"line_start":9,"line_end":9,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/symlink_metadata.rs","byte_start":13877824,"byte_end":13877827,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::symlink_metadata`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/symlink_metadata.rs","byte_start":13877828,"byte_end":13877899,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/symlink_metadata.rs","byte_start":13877900,"byte_end":13877903,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`metadata`]: fn.metadata.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/symlink_metadata.rs","byte_start":13877904,"byte_end":13877938,"line_start":13,"line_end":13,"column_start":1,"column_end":35}},{"value":"/ [`std::fs::symlink_metadata`]: https://doc.rust-lang.org/std/fs/fn.symlink_metadata.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/symlink_metadata.rs","byte_start":13877939,"byte_end":13878031,"line_start":14,"line_end":14,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/symlink_metadata.rs","byte_start":13878032,"byte_end":13878035,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/symlink_metadata.rs","byte_start":13878036,"byte_end":13878048,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/symlink_metadata.rs","byte_start":13878049,"byte_end":13878052,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/symlink_metadata.rs","byte_start":13878053,"byte_end":13878111,"line_start":18,"line_end":18,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/symlink_metadata.rs","byte_start":13878112,"byte_end":13878115,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing file or directory.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/symlink_metadata.rs","byte_start":13878116,"byte_end":13878177,"line_start":20,"line_end":20,"column_start":1,"column_end":62}},{"value":"/ * The current process lacks permissions to read metadata for the path.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/symlink_metadata.rs","byte_start":13878178,"byte_end":13878252,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/symlink_metadata.rs","byte_start":13878253,"byte_end":13878289,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/symlink_metadata.rs","byte_start":13878290,"byte_end":13878293,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/symlink_metadata.rs","byte_start":13878294,"byte_end":13878308,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/symlink_metadata.rs","byte_start":13878309,"byte_end":13878312,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/symlink_metadata.rs","byte_start":13878313,"byte_end":13878326,"line_start":26,"line_end":26,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/symlink_metadata.rs","byte_start":13878327,"byte_end":13878401,"line_start":27,"line_end":27,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/symlink_metadata.rs","byte_start":13878402,"byte_end":13878407,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/symlink_metadata.rs","byte_start":13878408,"byte_end":13878430,"line_start":29,"line_end":29,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/symlink_metadata.rs","byte_start":13878431,"byte_end":13878434,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let perm = fs::symlink_metadata(\"a.txt\").await?.permissions();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/symlink_metadata.rs","byte_start":13878435,"byte_end":13878501,"line_start":31,"line_end":31,"column_start":1,"column_end":67}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/symlink_metadata.rs","byte_start":13878502,"byte_end":13878507,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/symlink_metadata.rs","byte_start":13878508,"byte_end":13878525,"line_start":33,"line_end":33,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/symlink_metadata.rs","byte_start":13878526,"byte_end":13878533,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":7224},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/write.rs","byte_start":13879621,"byte_end":13879626,"line_start":34,"line_end":34,"column_start":14,"column_end":19},"name":"write","qualname":"::fs::write::write","value":"pub async fn write<P: AsRef<Path>, C: AsRef<[u8]>>(P, C) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Writes a slice of bytes as the new contents of a file.","sig":null,"attributes":[{"value":"/ Writes a slice of bytes as the new contents of a file.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/write.rs","byte_start":13878829,"byte_end":13878887,"line_start":6,"line_end":6,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/write.rs","byte_start":13878888,"byte_end":13878891,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function will create a file if it does not exist, and will entirely replace its contents","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/write.rs","byte_start":13878892,"byte_end":13878989,"line_start":8,"line_end":8,"column_start":1,"column_end":98}},{"value":"/ if it does.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/write.rs","byte_start":13878990,"byte_end":13879005,"line_start":9,"line_end":9,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/write.rs","byte_start":13879006,"byte_end":13879009,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::write`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/write.rs","byte_start":13879010,"byte_end":13879070,"line_start":11,"line_end":11,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/write.rs","byte_start":13879071,"byte_end":13879074,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::write`]: https://doc.rust-lang.org/std/fs/fn.write.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/write.rs","byte_start":13879075,"byte_end":13879145,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/write.rs","byte_start":13879146,"byte_end":13879149,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/write.rs","byte_start":13879150,"byte_end":13879162,"line_start":15,"line_end":15,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/write.rs","byte_start":13879163,"byte_end":13879166,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/write.rs","byte_start":13879167,"byte_end":13879225,"line_start":17,"line_end":17,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/write.rs","byte_start":13879226,"byte_end":13879229,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * The file's parent directory does not exist.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/write.rs","byte_start":13879230,"byte_end":13879279,"line_start":19,"line_end":19,"column_start":1,"column_end":50}},{"value":"/ * The current process lacks permissions to write to the file.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/write.rs","byte_start":13879280,"byte_end":13879345,"line_start":20,"line_end":20,"column_start":1,"column_end":66}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/write.rs","byte_start":13879346,"byte_end":13879382,"line_start":21,"line_end":21,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/write.rs","byte_start":13879383,"byte_end":13879386,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/write.rs","byte_start":13879387,"byte_end":13879401,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/write.rs","byte_start":13879402,"byte_end":13879405,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/write.rs","byte_start":13879406,"byte_end":13879419,"line_start":25,"line_end":25,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/write.rs","byte_start":13879420,"byte_end":13879494,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/write.rs","byte_start":13879495,"byte_end":13879500,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/write.rs","byte_start":13879501,"byte_end":13879523,"line_start":28,"line_end":28,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/write.rs","byte_start":13879524,"byte_end":13879527,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ fs::write(\"a.txt\", b\"Hello world!\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/write.rs","byte_start":13879528,"byte_end":13879575,"line_start":30,"line_end":30,"column_start":1,"column_end":48}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/write.rs","byte_start":13879576,"byte_end":13879581,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/write.rs","byte_start":13879582,"byte_end":13879599,"line_start":32,"line_end":32,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/write.rs","byte_start":13879600,"byte_end":13879607,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":7231},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"path","qualname":"::path","value":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","parent":null,"children":[{"krate":0,"index":7232},{"krate":0,"index":7244},{"krate":0,"index":7275},{"krate":0,"index":7318},{"krate":0,"index":7478},{"krate":0,"index":7607},{"krate":0,"index":7608},{"krate":0,"index":7611},{"krate":0,"index":7614},{"krate":0,"index":7617},{"krate":0,"index":7620},{"krate":0,"index":7623},{"krate":0,"index":7626},{"krate":0,"index":7629},{"krate":0,"index":7632},{"krate":0,"index":7635},{"krate":0,"index":7638},{"krate":0,"index":7641}],"decl_id":null,"docs":" Cross-platform path manipulation.","sig":null,"attributes":[{"value":"cfg(feature = \"default\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/utils.rs","byte_start":16827,"byte_end":16854,"line_start":231,"line_end":231,"column_start":13,"column_end":40}},{"value":"/ Cross-platform path manipulation.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13879962,"byte_end":13879999,"line_start":1,"line_end":1,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13880000,"byte_end":13880003,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is an async version of [`std::path`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13880004,"byte_end":13880057,"line_start":3,"line_end":3,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13880058,"byte_end":13880061,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module provides two types, [`PathBuf`] and [`Path`][`Path`] (akin to [`String`]","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13880062,"byte_end":13880150,"line_start":5,"line_end":5,"column_start":1,"column_end":89}},{"value":"/ and [`str`]), for working with paths abstractly. These types are thin wrappers","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13880151,"byte_end":13880233,"line_start":6,"line_end":6,"column_start":1,"column_end":83}},{"value":"/ around [`OsString`] and [`OsStr`] respectively, meaning that they work directly","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13880234,"byte_end":13880317,"line_start":7,"line_end":7,"column_start":1,"column_end":84}},{"value":"/ on strings according to the local platform's path syntax.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13880318,"byte_end":13880379,"line_start":8,"line_end":8,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13880380,"byte_end":13880383,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Paths can be parsed into [`Component`]s by iterating over the structure","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13880384,"byte_end":13880459,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ returned by the [`components`] method on [`Path`]. [`Component`]s roughly","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13880460,"byte_end":13880537,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ correspond to the substrings between path separators (`/` or `\\`). You can","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13880538,"byte_end":13880616,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ reconstruct an equivalent path from components with the [`push`] method on","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13880617,"byte_end":13880695,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ [`PathBuf`]; note that the paths may differ syntactically by the","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13880696,"byte_end":13880764,"line_start":14,"line_end":14,"column_start":1,"column_end":69}},{"value":"/ normalization described in the documentation for the [`components`] method.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13880765,"byte_end":13880844,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13880845,"byte_end":13880848,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`std::path`]: https://doc.rust-lang.org/std/path/index.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13880849,"byte_end":13880913,"line_start":17,"line_end":17,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13880914,"byte_end":13880917,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ## Simple usage","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13880918,"byte_end":13880937,"line_start":19,"line_end":19,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13880938,"byte_end":13880941,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Path manipulation includes both parsing components from slices and building","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13880942,"byte_end":13881021,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ new owned paths.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13881022,"byte_end":13881042,"line_start":22,"line_end":22,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13881043,"byte_end":13881046,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ To parse a path, you can create a [`Path`] slice from a [`str`]","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13881047,"byte_end":13881114,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ slice and start asking questions:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13881115,"byte_end":13881152,"line_start":25,"line_end":25,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13881153,"byte_end":13881156,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13881157,"byte_end":13881164,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13881165,"byte_end":13881195,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/ use std::ffi::OsStr;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13881196,"byte_end":13881220,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13881221,"byte_end":13881224,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let path = Path::new(\"/tmp/foo/bar.txt\");","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13881225,"byte_end":13881270,"line_start":31,"line_end":31,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13881271,"byte_end":13881274,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let parent = path.parent();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13881275,"byte_end":13881306,"line_start":33,"line_end":33,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(parent, Some(Path::new(\"/tmp/foo\")));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13881307,"byte_end":13881359,"line_start":34,"line_end":34,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13881360,"byte_end":13881363,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let file_stem = path.file_stem();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13881364,"byte_end":13881401,"line_start":36,"line_end":36,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(file_stem, Some(OsStr::new(\"bar\")));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13881402,"byte_end":13881453,"line_start":37,"line_end":37,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13881454,"byte_end":13881457,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ let extension = path.extension();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13881458,"byte_end":13881495,"line_start":39,"line_end":39,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(extension, Some(OsStr::new(\"txt\")));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13881496,"byte_end":13881547,"line_start":40,"line_end":40,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13881548,"byte_end":13881555,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13881556,"byte_end":13881559,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ To build or modify paths, use [`PathBuf`]:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13881560,"byte_end":13881606,"line_start":43,"line_end":43,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13881607,"byte_end":13881610,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13881611,"byte_end":13881618,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/ use async_std::path::PathBuf;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13881619,"byte_end":13881652,"line_start":46,"line_end":46,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13881653,"byte_end":13881656,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ // This way works...","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13881657,"byte_end":13881681,"line_start":48,"line_end":48,"column_start":1,"column_end":25}},{"value":"/ let mut path = PathBuf::from(\"c:\\\\\");","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13881682,"byte_end":13881723,"line_start":49,"line_end":49,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13881724,"byte_end":13881727,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ path.push(\"windows\");","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13881728,"byte_end":13881753,"line_start":51,"line_end":51,"column_start":1,"column_end":26}},{"value":"/ path.push(\"system32\");","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13881754,"byte_end":13881780,"line_start":52,"line_end":52,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13881781,"byte_end":13881784,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ path.set_extension(\"dll\");","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13881785,"byte_end":13881815,"line_start":54,"line_end":54,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13881816,"byte_end":13881819,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ // ... but push is best used if you don't know everything up","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13881820,"byte_end":13881884,"line_start":56,"line_end":56,"column_start":1,"column_end":65}},{"value":"/ // front. If you do, this way is better:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13881885,"byte_end":13881929,"line_start":57,"line_end":57,"column_start":1,"column_end":45}},{"value":"/ let path: PathBuf = [\"c:\\\\\", \"windows\", \"system32.dll\"].iter().collect();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13881930,"byte_end":13882007,"line_start":58,"line_end":58,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13882008,"byte_end":13882015,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13882016,"byte_end":13882019,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ [`Component`]: enum.Component.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13882020,"byte_end":13882058,"line_start":61,"line_end":61,"column_start":1,"column_end":39}},{"value":"/ [`components`]: struct.Path.html#method.components","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13882059,"byte_end":13882113,"line_start":62,"line_end":62,"column_start":1,"column_end":55}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13882114,"byte_end":13882150,"line_start":63,"line_end":63,"column_start":1,"column_end":37}},{"value":"/ [`Path`]: struct.Path.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13882151,"byte_end":13882181,"line_start":64,"line_end":64,"column_start":1,"column_end":31}},{"value":"/ [`push`]: struct.PathBuf.html#method.push","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13882182,"byte_end":13882227,"line_start":65,"line_end":65,"column_start":1,"column_end":46}},{"value":"/ [`String`]: https://doc.rust-lang.org/std/string/struct.String.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13882228,"byte_end":13882299,"line_start":66,"line_end":66,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13882300,"byte_end":13882303,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ [`str`]: https://doc.rust-lang.org/std/primitive.str.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13882304,"byte_end":13882365,"line_start":68,"line_end":68,"column_start":1,"column_end":62}},{"value":"/ [`OsString`]: https://doc.rust-lang.org/std/ffi/struct.OsString.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13882366,"byte_end":13882438,"line_start":69,"line_end":69,"column_start":1,"column_end":73}},{"value":"/ [`OsStr`]: https://doc.rust-lang.org/std/ffi/struct.OsStr.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/mod.rs","byte_start":13882439,"byte_end":13882505,"line_start":70,"line_end":70,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":8119},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/ancestors.rs","byte_start":13883386,"byte_end":13883395,"line_start":25,"line_end":25,"column_start":12,"column_end":21},"name":"Ancestors","qualname":"::path::ancestors::Ancestors","value":"Ancestors {  }","parent":null,"children":[{"krate":0,"index":8121}],"decl_id":null,"docs":" An iterator over [`Path`] and its ancestors.","sig":null,"attributes":[{"value":"/ An iterator over [`Path`] and its ancestors.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/ancestors.rs","byte_start":13882893,"byte_end":13882941,"line_start":5,"line_end":5,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/ancestors.rs","byte_start":13882942,"byte_end":13882945,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`ancestors`] method on [`Path`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/ancestors.rs","byte_start":13882946,"byte_end":13883015,"line_start":7,"line_end":7,"column_start":1,"column_end":70}},{"value":"/ See its documentation for more.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/ancestors.rs","byte_start":13883016,"byte_end":13883051,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/ancestors.rs","byte_start":13883052,"byte_end":13883055,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/ancestors.rs","byte_start":13883056,"byte_end":13883070,"line_start":10,"line_end":10,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/ancestors.rs","byte_start":13883071,"byte_end":13883074,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/ancestors.rs","byte_start":13883075,"byte_end":13883082,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/ancestors.rs","byte_start":13883083,"byte_end":13883113,"line_start":13,"line_end":13,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/ancestors.rs","byte_start":13883114,"byte_end":13883117,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ let path = Path::new(\"/foo/bar\");","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/ancestors.rs","byte_start":13883118,"byte_end":13883155,"line_start":15,"line_end":15,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/ancestors.rs","byte_start":13883156,"byte_end":13883159,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ for ancestor in path.ancestors() {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/ancestors.rs","byte_start":13883160,"byte_end":13883198,"line_start":17,"line_end":17,"column_start":1,"column_end":39}},{"value":"/     println!(\"{}\", ancestor.display());","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/ancestors.rs","byte_start":13883199,"byte_end":13883242,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/ancestors.rs","byte_start":13883243,"byte_end":13883248,"line_start":19,"line_end":19,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/ancestors.rs","byte_start":13883249,"byte_end":13883256,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/ancestors.rs","byte_start":13883257,"byte_end":13883260,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ [`ancestors`]: struct.Path.html#method.ancestors","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/ancestors.rs","byte_start":13883261,"byte_end":13883313,"line_start":22,"line_end":22,"column_start":1,"column_end":53}},{"value":"/ [`Path`]: struct.Path.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/ancestors.rs","byte_start":13883314,"byte_end":13883344,"line_start":23,"line_end":23,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":8130},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":13884357,"byte_end":13884367,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"name":"Components","qualname":"::path::components::Components","value":"Components {  }","parent":null,"children":[{"krate":0,"index":8132}],"decl_id":null,"docs":" An iterator over the [`Component`]s of a [`Path`].","sig":null,"attributes":[{"value":"/ An iterator over the [`Component`]s of a [`Path`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":13883787,"byte_end":13883841,"line_start":6,"line_end":6,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":13883842,"byte_end":13883845,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`components`] method on [`Path`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":13883846,"byte_end":13883916,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/ See its documentation for more.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":13883917,"byte_end":13883952,"line_start":9,"line_end":9,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":13883953,"byte_end":13883956,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":13883957,"byte_end":13883971,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":13883972,"byte_end":13883975,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":13883976,"byte_end":13883983,"line_start":13,"line_end":13,"column_start":1,"column_end":8}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":13883984,"byte_end":13884014,"line_start":14,"line_end":14,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":13884015,"byte_end":13884018,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ let path = Path::new(\"/tmp/foo/bar.txt\");","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":13884019,"byte_end":13884064,"line_start":16,"line_end":16,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":13884065,"byte_end":13884068,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ for component in path.components() {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":13884069,"byte_end":13884109,"line_start":18,"line_end":18,"column_start":1,"column_end":41}},{"value":"/     println!(\"{:?}\", component);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":13884110,"byte_end":13884146,"line_start":19,"line_end":19,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":13884147,"byte_end":13884152,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":13884153,"byte_end":13884160,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":13884161,"byte_end":13884164,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ [`Component`]: enum.Component.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":13884165,"byte_end":13884203,"line_start":23,"line_end":23,"column_start":1,"column_end":39}},{"value":"/ [`components`]: struct.Path.html#method.components","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":13884204,"byte_end":13884258,"line_start":24,"line_end":24,"column_start":1,"column_end":55}},{"value":"/ [`Path`]: struct.Path.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":13884259,"byte_end":13884289,"line_start":25,"line_end":25,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":7260},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":13884859,"byte_end":13884866,"line_start":45,"line_end":45,"column_start":12,"column_end":19},"name":"as_path","qualname":"<Components>::as_path","value":"pub fn as_path(&Self) -> &'a Path","parent":null,"children":[],"decl_id":null,"docs":" Extracts a slice corresponding to the portion of the path remaining for iteration.","sig":null,"attributes":[{"value":"/ Extracts a slice corresponding to the portion of the path remaining for iteration.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":13884456,"byte_end":13884542,"line_start":32,"line_end":32,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":13884547,"byte_end":13884550,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":13884555,"byte_end":13884569,"line_start":34,"line_end":34,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":13884574,"byte_end":13884577,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":13884582,"byte_end":13884589,"line_start":36,"line_end":36,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":13884594,"byte_end":13884624,"line_start":37,"line_end":37,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":13884629,"byte_end":13884632,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ let mut components = Path::new(\"/tmp/foo/bar.txt\").components();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":13884637,"byte_end":13884705,"line_start":39,"line_end":39,"column_start":5,"column_end":73}},{"value":"/ components.next();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":13884710,"byte_end":13884732,"line_start":40,"line_end":40,"column_start":5,"column_end":27}},{"value":"/ components.next();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":13884737,"byte_end":13884759,"line_start":41,"line_end":41,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":13884764,"byte_end":13884767,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Path::new(\"foo/bar.txt\"), components.as_path());","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":13884772,"byte_end":13884835,"line_start":43,"line_end":43,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":13884840,"byte_end":13884847,"line_start":44,"line_end":44,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":8156},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":13886094,"byte_end":13886098,"line_start":17,"line_end":17,"column_start":12,"column_end":16},"name":"Iter","qualname":"::path::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":8158}],"decl_id":null,"docs":" An iterator over the [`Component`]s of a [`Path`], as [`OsStr`] slices.","sig":null,"attributes":[{"value":"/ An iterator over the [`Component`]s of a [`Path`], as [`OsStr`] slices.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":13885721,"byte_end":13885796,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":13885797,"byte_end":13885800,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`iter`] method on [`Path`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":13885801,"byte_end":13885865,"line_start":9,"line_end":9,"column_start":1,"column_end":65}},{"value":"/ See its documentation for more.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":13885866,"byte_end":13885901,"line_start":10,"line_end":10,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":13885902,"byte_end":13885905,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Component`]: enum.Component.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":13885906,"byte_end":13885944,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/ [`iter`]: struct.Path.html#method.iter","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":13885945,"byte_end":13885987,"line_start":13,"line_end":13,"column_start":1,"column_end":43}},{"value":"/ [`OsStr`]: ../../std/ffi/struct.OsStr.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":13885988,"byte_end":13886034,"line_start":14,"line_end":14,"column_start":1,"column_end":47}},{"value":"/ [`Path`]: struct.Path.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":13886035,"byte_end":13886065,"line_start":15,"line_end":15,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":7297},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":13886543,"byte_end":13886550,"line_start":35,"line_end":35,"column_start":12,"column_end":19},"name":"as_path","qualname":"<Iter>::as_path","value":"pub fn as_path(&Self) -> &'a Path","parent":null,"children":[],"decl_id":null,"docs":" Extracts a slice corresponding to the portion of the path remaining for iteration.","sig":null,"attributes":[{"value":"/ Extracts a slice corresponding to the portion of the path remaining for iteration.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":13886170,"byte_end":13886256,"line_start":22,"line_end":22,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":13886261,"byte_end":13886264,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":13886269,"byte_end":13886283,"line_start":24,"line_end":24,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":13886288,"byte_end":13886291,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":13886296,"byte_end":13886303,"line_start":26,"line_end":26,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":13886308,"byte_end":13886338,"line_start":27,"line_end":27,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":13886343,"byte_end":13886346,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ let mut iter = Path::new(\"/tmp/foo/bar.txt\").iter();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":13886351,"byte_end":13886407,"line_start":29,"line_end":29,"column_start":5,"column_end":61}},{"value":"/ iter.next();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":13886412,"byte_end":13886428,"line_start":30,"line_end":30,"column_start":5,"column_end":21}},{"value":"/ iter.next();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":13886433,"byte_end":13886449,"line_start":31,"line_end":31,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":13886454,"byte_end":13886457,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Path::new(\"foo/bar.txt\"), iter.as_path());","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":13886462,"byte_end":13886519,"line_start":33,"line_end":33,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":13886524,"byte_end":13886531,"line_start":34,"line_end":34,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":8162},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13889181,"byte_end":13889185,"line_start":49,"line_end":49,"column_start":12,"column_end":16},"name":"Path","qualname":"::path::path::Path","value":"Path {  }","parent":null,"children":[{"krate":0,"index":8163}],"decl_id":null,"docs":" A slice of a path.","sig":null,"attributes":[{"value":"/ A slice of a path.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13887902,"byte_end":13887924,"line_start":11,"line_end":11,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13887925,"byte_end":13887928,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This struct is an async version of [`std::path::Path`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13887929,"byte_end":13887988,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13887989,"byte_end":13887992,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This type supports a number of operations for inspecting a path, including","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13887993,"byte_end":13888071,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ breaking the path into its components (separated by `/` on Unix and by either","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13888072,"byte_end":13888153,"line_start":16,"line_end":16,"column_start":1,"column_end":82}},{"value":"/ `/` or `\\` on Windows), extracting the file name, determining whether the path","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13888154,"byte_end":13888236,"line_start":17,"line_end":17,"column_start":1,"column_end":83}},{"value":"/ is absolute, and so on.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13888237,"byte_end":13888264,"line_start":18,"line_end":18,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13888265,"byte_end":13888268,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This is an *unsized* type, meaning that it must always be used behind a","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13888269,"byte_end":13888344,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"/ pointer like `&` or `Box`. For an owned version of this type,","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13888345,"byte_end":13888410,"line_start":21,"line_end":21,"column_start":1,"column_end":66}},{"value":"/ see [`PathBuf`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13888411,"byte_end":13888431,"line_start":22,"line_end":22,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13888432,"byte_end":13888435,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13888436,"byte_end":13888472,"line_start":24,"line_end":24,"column_start":1,"column_end":37}},{"value":"/ [`std::path::Path`]: https://doc.rust-lang.org/std/path/struct.Path.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13888473,"byte_end":13888549,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13888550,"byte_end":13888553,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ More details about the overall approach can be found in","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13888554,"byte_end":13888613,"line_start":27,"line_end":27,"column_start":1,"column_end":60}},{"value":"/ the [module documentation](index.html).","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13888614,"byte_end":13888657,"line_start":28,"line_end":28,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13888658,"byte_end":13888661,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13888662,"byte_end":13888676,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13888677,"byte_end":13888680,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13888681,"byte_end":13888688,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ use std::path::Path;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13888689,"byte_end":13888713,"line_start":33,"line_end":33,"column_start":1,"column_end":25}},{"value":"/ use std::ffi::OsStr;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13888714,"byte_end":13888738,"line_start":34,"line_end":34,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13888739,"byte_end":13888742,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ // Note: this example does work on Windows","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13888743,"byte_end":13888789,"line_start":36,"line_end":36,"column_start":1,"column_end":47}},{"value":"/ let path = Path::new(\"./foo/bar.txt\");","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13888790,"byte_end":13888832,"line_start":37,"line_end":37,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13888833,"byte_end":13888836,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ let parent = path.parent();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13888837,"byte_end":13888868,"line_start":39,"line_end":39,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(parent, Some(Path::new(\"./foo\")));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13888869,"byte_end":13888918,"line_start":40,"line_end":40,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13888919,"byte_end":13888922,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ let file_stem = path.file_stem();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13888923,"byte_end":13888960,"line_start":42,"line_end":42,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(file_stem, Some(OsStr::new(\"bar\")));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13888961,"byte_end":13889012,"line_start":43,"line_end":43,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13889013,"byte_end":13889016,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ let extension = path.extension();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13889017,"byte_end":13889054,"line_start":45,"line_end":45,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(extension, Some(OsStr::new(\"txt\")));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13889055,"byte_end":13889106,"line_start":46,"line_end":46,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13889107,"byte_end":13889114,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":7369},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13889817,"byte_end":13889820,"line_start":76,"line_end":76,"column_start":12,"column_end":15},"name":"new","qualname":"<Path>::new","value":"pub fn new<S: AsRef<OsStr> + ?Sized>(&S) -> &Path","parent":null,"children":[],"decl_id":null,"docs":" Directly wraps a string slice as a `Path` slice.","sig":null,"attributes":[{"value":"/ Directly wraps a string slice as a `Path` slice.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13889235,"byte_end":13889287,"line_start":54,"line_end":54,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13889292,"byte_end":13889295,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ This is a cost-free conversion.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13889300,"byte_end":13889335,"line_start":56,"line_end":56,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13889340,"byte_end":13889343,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13889348,"byte_end":13889362,"line_start":58,"line_end":58,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13889367,"byte_end":13889370,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13889375,"byte_end":13889382,"line_start":60,"line_end":60,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13889387,"byte_end":13889417,"line_start":61,"line_end":61,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13889422,"byte_end":13889425,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ Path::new(\"foo.txt\");","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13889430,"byte_end":13889455,"line_start":63,"line_end":63,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13889460,"byte_end":13889467,"line_start":64,"line_end":64,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13889472,"byte_end":13889475,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ You can create `Path`s from `String`s, or even other `Path`s:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13889480,"byte_end":13889545,"line_start":66,"line_end":66,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13889550,"byte_end":13889553,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13889558,"byte_end":13889565,"line_start":68,"line_end":68,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13889570,"byte_end":13889600,"line_start":69,"line_end":69,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13889605,"byte_end":13889608,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ let string = String::from(\"foo.txt\");","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13889613,"byte_end":13889654,"line_start":71,"line_end":71,"column_start":5,"column_end":46}},{"value":"/ let from_string = Path::new(&string);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13889659,"byte_end":13889700,"line_start":72,"line_end":72,"column_start":5,"column_end":46}},{"value":"/ let from_path = Path::new(&from_string);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13889705,"byte_end":13889749,"line_start":73,"line_end":73,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(from_string, from_path);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13889754,"byte_end":13889793,"line_start":74,"line_end":74,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13889798,"byte_end":13889805,"line_start":75,"line_end":75,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7371},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13890343,"byte_end":13890352,"line_start":94,"line_end":94,"column_start":12,"column_end":21},"name":"as_os_str","qualname":"<Path>::as_os_str","value":"pub fn as_os_str(&Self) -> &OsStr","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying [`OsStr`] slice.","sig":null,"attributes":[{"value":"/ Returns the underlying [`OsStr`] slice.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13889964,"byte_end":13890007,"line_start":80,"line_end":80,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13890012,"byte_end":13890015,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [`OsStr`]: https://doc.rust-lang.org/std/ffi/struct.OsStr.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13890020,"byte_end":13890086,"line_start":82,"line_end":82,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13890091,"byte_end":13890094,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13890099,"byte_end":13890113,"line_start":84,"line_end":84,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13890118,"byte_end":13890121,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13890126,"byte_end":13890133,"line_start":86,"line_end":86,"column_start":5,"column_end":12}},{"value":"/ use std::ffi::OsStr;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13890138,"byte_end":13890162,"line_start":87,"line_end":87,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13890167,"byte_end":13890170,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13890175,"byte_end":13890205,"line_start":89,"line_end":89,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13890210,"byte_end":13890213,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ let os_str = Path::new(\"foo.txt\").as_os_str();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13890218,"byte_end":13890268,"line_start":91,"line_end":91,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(os_str, OsStr::new(\"foo.txt\"));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13890273,"byte_end":13890319,"line_start":92,"line_end":92,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13890324,"byte_end":13890331,"line_start":93,"line_end":93,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7372},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13890942,"byte_end":13890948,"line_start":114,"line_end":114,"column_start":12,"column_end":18},"name":"to_str","qualname":"<Path>::to_str","value":"pub fn to_str(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Returns a [`&str`] slice if the `Path` is valid unicode.","sig":null,"attributes":[{"value":"/ Returns a [`&str`] slice if the `Path` is valid unicode.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13890414,"byte_end":13890474,"line_start":98,"line_end":98,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13890479,"byte_end":13890482,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ This conversion may entail doing a check for UTF-8 validity.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13890487,"byte_end":13890551,"line_start":100,"line_end":100,"column_start":5,"column_end":69}},{"value":"/ Note that validation is performed because non-UTF-8 strings are","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13890556,"byte_end":13890623,"line_start":101,"line_end":101,"column_start":5,"column_end":72}},{"value":"/ perfectly valid for some OS.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13890628,"byte_end":13890660,"line_start":102,"line_end":102,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13890665,"byte_end":13890668,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ [`&str`]: https://doc.rust-lang.org/std/primitive.str.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13890673,"byte_end":13890735,"line_start":104,"line_end":104,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13890740,"byte_end":13890743,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13890748,"byte_end":13890762,"line_start":106,"line_end":106,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13890767,"byte_end":13890770,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13890775,"byte_end":13890782,"line_start":108,"line_end":108,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13890787,"byte_end":13890817,"line_start":109,"line_end":109,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13890822,"byte_end":13890825,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"foo.txt\");","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13890830,"byte_end":13890866,"line_start":111,"line_end":111,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(path.to_str(), Some(\"foo.txt\"));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13890871,"byte_end":13890918,"line_start":112,"line_end":112,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13890923,"byte_end":13890930,"line_start":113,"line_end":113,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7373},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13891741,"byte_end":13891756,"line_start":139,"line_end":139,"column_start":12,"column_end":27},"name":"to_string_lossy","qualname":"<Path>::to_string_lossy","value":"pub fn to_string_lossy(&Self) -> Cow<, str>","parent":null,"children":[],"decl_id":null,"docs":" Converts a `Path` to a [`Cow<str>`].","sig":null,"attributes":[{"value":"/ Converts a `Path` to a [`Cow<str>`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13891013,"byte_end":13891053,"line_start":118,"line_end":118,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13891058,"byte_end":13891061,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ Any non-Unicode sequences are replaced with","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13891066,"byte_end":13891113,"line_start":120,"line_end":120,"column_start":5,"column_end":52}},{"value":"/ [`U+FFFD REPLACEMENT CHARACTER`][U+FFFD].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13891118,"byte_end":13891163,"line_start":121,"line_end":121,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13891168,"byte_end":13891171,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ [`Cow<str>`]: https://doc.rust-lang.org/std/borrow/enum.Cow.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13891176,"byte_end":13891244,"line_start":123,"line_end":123,"column_start":5,"column_end":73}},{"value":"/ [U+FFFD]: https://doc.rust-lang.org/std/char/constant.REPLACEMENT_CHARACTER.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13891249,"byte_end":13891333,"line_start":124,"line_end":124,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13891338,"byte_end":13891341,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13891346,"byte_end":13891360,"line_start":126,"line_end":126,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13891365,"byte_end":13891368,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ Calling `to_string_lossy` on a `Path` with valid unicode:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13891373,"byte_end":13891434,"line_start":128,"line_end":128,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13891439,"byte_end":13891442,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13891447,"byte_end":13891454,"line_start":130,"line_end":130,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13891459,"byte_end":13891489,"line_start":131,"line_end":131,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13891494,"byte_end":13891497,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"foo.txt\");","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13891502,"byte_end":13891538,"line_start":133,"line_end":133,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(path.to_string_lossy(), \"foo.txt\");","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13891543,"byte_end":13891593,"line_start":134,"line_end":134,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13891598,"byte_end":13891605,"line_start":135,"line_end":135,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13891610,"byte_end":13891613,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ Had `path` contained invalid unicode, the `to_string_lossy` call might","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13891618,"byte_end":13891692,"line_start":137,"line_end":137,"column_start":5,"column_end":79}},{"value":"/ have returned `\"fo�.txt\"`.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13891697,"byte_end":13891729,"line_start":138,"line_end":138,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":7374},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13892165,"byte_end":13892176,"line_start":155,"line_end":155,"column_start":12,"column_end":23},"name":"to_path_buf","qualname":"<Path>::to_path_buf","value":"pub fn to_path_buf(&Self) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Converts a `Path` to an owned [`PathBuf`].","sig":null,"attributes":[{"value":"/ Converts a `Path` to an owned [`PathBuf`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13891830,"byte_end":13891876,"line_start":143,"line_end":143,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13891881,"byte_end":13891884,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13891889,"byte_end":13891925,"line_start":145,"line_end":145,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13891930,"byte_end":13891933,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13891938,"byte_end":13891952,"line_start":147,"line_end":147,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13891957,"byte_end":13891960,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13891965,"byte_end":13891972,"line_start":149,"line_end":149,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13891977,"byte_end":13892018,"line_start":150,"line_end":150,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13892023,"byte_end":13892026,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ let path_buf = Path::new(\"foo.txt\").to_path_buf();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13892031,"byte_end":13892085,"line_start":152,"line_end":152,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(path_buf, PathBuf::from(\"foo.txt\"));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13892090,"byte_end":13892141,"line_start":153,"line_end":153,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13892146,"byte_end":13892153,"line_start":154,"line_end":154,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7375},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13892876,"byte_end":13892887,"line_start":177,"line_end":177,"column_start":12,"column_end":23},"name":"is_absolute","qualname":"<Path>::is_absolute","value":"pub fn is_absolute(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `Path` is absolute, i.e. if it is independent of\n the current directory.","sig":null,"attributes":[{"value":"/ Returns `true` if the `Path` is absolute, i.e. if it is independent of","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13892256,"byte_end":13892330,"line_start":159,"line_end":159,"column_start":5,"column_end":79}},{"value":"/ the current directory.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13892335,"byte_end":13892361,"line_start":160,"line_end":160,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13892366,"byte_end":13892369,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ * On Unix, a path is absolute if it starts with the root, so","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13892374,"byte_end":13892438,"line_start":162,"line_end":162,"column_start":5,"column_end":69}},{"value":"/   `is_absolute` and [`has_root`] are equivalent.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13892443,"byte_end":13892495,"line_start":163,"line_end":163,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13892500,"byte_end":13892503,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ * On Windows, a path is absolute if it has a prefix and starts with the","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13892508,"byte_end":13892583,"line_start":165,"line_end":165,"column_start":5,"column_end":80}},{"value":"/   root: `c:\\windows` is absolute, while `c:temp` and `\\temp` are not.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13892588,"byte_end":13892661,"line_start":166,"line_end":166,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13892666,"byte_end":13892669,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ [`has_root`]: #method.has_root","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13892674,"byte_end":13892708,"line_start":168,"line_end":168,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13892713,"byte_end":13892716,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13892721,"byte_end":13892735,"line_start":170,"line_end":170,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13892740,"byte_end":13892743,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13892748,"byte_end":13892755,"line_start":172,"line_end":172,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13892760,"byte_end":13892790,"line_start":173,"line_end":173,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13892795,"byte_end":13892798,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ assert!(!Path::new(\"foo.txt\").is_absolute());","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13892803,"byte_end":13892852,"line_start":175,"line_end":175,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13892857,"byte_end":13892864,"line_start":176,"line_end":176,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7376},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13893303,"byte_end":13893314,"line_start":194,"line_end":194,"column_start":12,"column_end":23},"name":"is_relative","qualname":"<Path>::is_relative","value":"pub fn is_relative(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `Path` is relative, i.e. not absolute.","sig":null,"attributes":[{"value":"/ Returns `true` if the `Path` is relative, i.e. not absolute.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13892949,"byte_end":13893013,"line_start":181,"line_end":181,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13893018,"byte_end":13893021,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ See [`is_absolute`]'s documentation for more details.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13893026,"byte_end":13893083,"line_start":183,"line_end":183,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13893088,"byte_end":13893091,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ [`is_absolute`]: #method.is_absolute","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13893096,"byte_end":13893136,"line_start":185,"line_end":185,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13893141,"byte_end":13893144,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13893149,"byte_end":13893163,"line_start":187,"line_end":187,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13893168,"byte_end":13893171,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13893176,"byte_end":13893183,"line_start":189,"line_end":189,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13893188,"byte_end":13893218,"line_start":190,"line_end":190,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13893223,"byte_end":13893226,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ assert!(Path::new(\"foo.txt\").is_relative());","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13893231,"byte_end":13893279,"line_start":192,"line_end":192,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13893284,"byte_end":13893291,"line_start":193,"line_end":193,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7377},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13893935,"byte_end":13893943,"line_start":214,"line_end":214,"column_start":12,"column_end":20},"name":"has_root","qualname":"<Path>::has_root","value":"pub fn has_root(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `Path` has a root.","sig":null,"attributes":[{"value":"/ Returns `true` if the `Path` has a root.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13893376,"byte_end":13893420,"line_start":198,"line_end":198,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13893425,"byte_end":13893428,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ * On Unix, a path has a root if it begins with `/`.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13893433,"byte_end":13893488,"line_start":200,"line_end":200,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13893493,"byte_end":13893496,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ * On Windows, a path has a root if it:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13893501,"byte_end":13893543,"line_start":202,"line_end":202,"column_start":5,"column_end":47}},{"value":"/     * has no prefix and begins with a separator, e.g. `\\windows`","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13893548,"byte_end":13893616,"line_start":203,"line_end":203,"column_start":5,"column_end":73}},{"value":"/     * has a prefix followed by a separator, e.g. `c:\\windows` but not `c:windows`","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13893621,"byte_end":13893706,"line_start":204,"line_end":204,"column_start":5,"column_end":90}},{"value":"/     * has any non-disk prefix, e.g. `\\\\server\\share`","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13893711,"byte_end":13893767,"line_start":205,"line_end":205,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13893772,"byte_end":13893775,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13893780,"byte_end":13893794,"line_start":207,"line_end":207,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13893799,"byte_end":13893802,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13893807,"byte_end":13893814,"line_start":209,"line_end":209,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13893819,"byte_end":13893849,"line_start":210,"line_end":210,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13893854,"byte_end":13893857,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ assert!(Path::new(\"/etc/passwd\").has_root());","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13893862,"byte_end":13893911,"line_start":212,"line_end":212,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13893916,"byte_end":13893923,"line_start":213,"line_end":213,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7378},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13894648,"byte_end":13894654,"line_start":237,"line_end":237,"column_start":12,"column_end":18},"name":"parent","qualname":"<Path>::parent","value":"pub fn parent(&Self) -> Option<&Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Path` without its final component, if there is one.","sig":null,"attributes":[{"value":"/ Returns the `Path` without its final component, if there is one.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13894002,"byte_end":13894070,"line_start":218,"line_end":218,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13894075,"byte_end":13894078,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if the path terminates in a root or prefix.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13894083,"byte_end":13894147,"line_start":220,"line_end":220,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13894152,"byte_end":13894155,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13894160,"byte_end":13894240,"line_start":222,"line_end":222,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13894245,"byte_end":13894248,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13894253,"byte_end":13894267,"line_start":224,"line_end":224,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13894272,"byte_end":13894275,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13894280,"byte_end":13894287,"line_start":226,"line_end":226,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13894292,"byte_end":13894322,"line_start":227,"line_end":227,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13894327,"byte_end":13894330,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/foo/bar\");","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13894335,"byte_end":13894372,"line_start":229,"line_end":229,"column_start":5,"column_end":42}},{"value":"/ let parent = path.parent().unwrap();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13894377,"byte_end":13894417,"line_start":230,"line_end":230,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(parent, Path::new(\"/foo\"));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13894422,"byte_end":13894464,"line_start":231,"line_end":231,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13894469,"byte_end":13894472,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ let grand_parent = parent.parent().unwrap();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13894477,"byte_end":13894525,"line_start":233,"line_end":233,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(grand_parent, Path::new(\"/\"));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13894530,"byte_end":13894575,"line_start":234,"line_end":234,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(grand_parent.parent(), None);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13894580,"byte_end":13894624,"line_start":235,"line_end":235,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13894629,"byte_end":13894636,"line_start":236,"line_end":236,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7380},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13895777,"byte_end":13895786,"line_start":263,"line_end":263,"column_start":12,"column_end":21},"name":"ancestors","qualname":"<Path>::ancestors","value":"pub fn ancestors(&Self) -> Ancestors","parent":null,"children":[],"decl_id":null,"docs":" Produces an iterator over `Path` and its ancestors.","sig":null,"attributes":[{"value":"/ Produces an iterator over `Path` and its ancestors.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13894738,"byte_end":13894793,"line_start":241,"line_end":241,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13894798,"byte_end":13894801,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ The iterator will yield the `Path` that is returned if the [`parent`] method is used zero","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13894806,"byte_end":13894899,"line_start":243,"line_end":243,"column_start":5,"column_end":98}},{"value":"/ or more times. That means, the iterator will yield `&self`, `&self.parent().unwrap()`,","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13894904,"byte_end":13894994,"line_start":244,"line_end":244,"column_start":5,"column_end":95}},{"value":"/ `&self.parent().unwrap().parent().unwrap()` and so on. If the [`parent`] method returns","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13894999,"byte_end":13895090,"line_start":245,"line_end":245,"column_start":5,"column_end":96}},{"value":"/ [`None`], the iterator will do likewise. The iterator will always yield at least one value,","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13895095,"byte_end":13895190,"line_start":246,"line_end":246,"column_start":5,"column_end":100}},{"value":"/ namely `&self`.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13895195,"byte_end":13895214,"line_start":247,"line_end":247,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13895219,"byte_end":13895222,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13895227,"byte_end":13895294,"line_start":249,"line_end":249,"column_start":5,"column_end":72}},{"value":"/ [`parent`]: struct.Path.html#method.parent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13895299,"byte_end":13895345,"line_start":250,"line_end":250,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13895350,"byte_end":13895353,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13895358,"byte_end":13895372,"line_start":252,"line_end":252,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13895377,"byte_end":13895380,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13895385,"byte_end":13895392,"line_start":254,"line_end":254,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13895397,"byte_end":13895427,"line_start":255,"line_end":255,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13895432,"byte_end":13895435,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ let mut ancestors = Path::new(\"/foo/bar\").ancestors();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13895440,"byte_end":13895498,"line_start":257,"line_end":257,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(ancestors.next(), Some(Path::new(\"/foo/bar\").into()));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13895503,"byte_end":13895572,"line_start":258,"line_end":258,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(ancestors.next(), Some(Path::new(\"/foo\").into()));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13895577,"byte_end":13895642,"line_start":259,"line_end":259,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(ancestors.next(), Some(Path::new(\"/\").into()));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13895647,"byte_end":13895709,"line_start":260,"line_end":260,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(ancestors.next(), None);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13895714,"byte_end":13895753,"line_start":261,"line_end":261,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13895758,"byte_end":13895765,"line_start":262,"line_end":262,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7381},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13896831,"byte_end":13896840,"line_start":290,"line_end":290,"column_start":12,"column_end":21},"name":"file_name","qualname":"<Path>::file_name","value":"pub fn file_name(&Self) -> Option<&OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the final component of the `Path`, if there is one.","sig":null,"attributes":[{"value":"/ Returns the final component of the `Path`, if there is one.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13895864,"byte_end":13895927,"line_start":267,"line_end":267,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13895932,"byte_end":13895935,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ If the path is a normal file, this is the file name. If it's the path of a directory, this","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13895940,"byte_end":13896034,"line_start":269,"line_end":269,"column_start":5,"column_end":99}},{"value":"/ is the directory name.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13896039,"byte_end":13896065,"line_start":270,"line_end":270,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13896070,"byte_end":13896073,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if the path terminates in `..`.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13896078,"byte_end":13896130,"line_start":272,"line_end":272,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13896135,"byte_end":13896138,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13896143,"byte_end":13896223,"line_start":274,"line_end":274,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13896228,"byte_end":13896231,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13896236,"byte_end":13896250,"line_start":276,"line_end":276,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13896255,"byte_end":13896258,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13896263,"byte_end":13896270,"line_start":278,"line_end":278,"column_start":5,"column_end":12}},{"value":"/ use std::ffi::OsStr;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13896275,"byte_end":13896299,"line_start":279,"line_end":279,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13896304,"byte_end":13896307,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13896312,"byte_end":13896342,"line_start":281,"line_end":281,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13896347,"byte_end":13896350,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(OsStr::new(\"bin\")), Path::new(\"/usr/bin/\").file_name());","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13896355,"byte_end":13896431,"line_start":283,"line_end":283,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(Some(OsStr::new(\"foo.txt\")), Path::new(\"tmp/foo.txt\").file_name());","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13896436,"byte_end":13896518,"line_start":284,"line_end":284,"column_start":5,"column_end":87}},{"value":"/ assert_eq!(Some(OsStr::new(\"foo.txt\")), Path::new(\"foo.txt/.\").file_name());","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13896523,"byte_end":13896603,"line_start":285,"line_end":285,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(Some(OsStr::new(\"foo.txt\")), Path::new(\"foo.txt/.//\").file_name());","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13896608,"byte_end":13896690,"line_start":286,"line_end":286,"column_start":5,"column_end":87}},{"value":"/ assert_eq!(None, Path::new(\"foo.txt/..\").file_name());","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13896695,"byte_end":13896753,"line_start":287,"line_end":287,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(None, Path::new(\"/\").file_name());","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13896758,"byte_end":13896807,"line_start":288,"line_end":288,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13896812,"byte_end":13896819,"line_start":289,"line_end":289,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7382},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13898094,"byte_end":13898106,"line_start":322,"line_end":322,"column_start":12,"column_end":24},"name":"strip_prefix","qualname":"<Path>::strip_prefix","value":"pub fn strip_prefix<P>(&Self, P) -> Result<&Path, StripPrefixError> where\nP: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns a path that becomes `self` when joined onto `base`.","sig":null,"attributes":[{"value":"/ Returns a path that becomes `self` when joined onto `base`.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13896910,"byte_end":13896973,"line_start":294,"line_end":294,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13896978,"byte_end":13896981,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13896986,"byte_end":13896998,"line_start":296,"line_end":296,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13897003,"byte_end":13897006,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ If `base` is not a prefix of `self` (i.e., [`starts_with`]","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13897011,"byte_end":13897073,"line_start":298,"line_end":298,"column_start":5,"column_end":67}},{"value":"/ returns `false`), returns [`Err`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13897078,"byte_end":13897116,"line_start":299,"line_end":299,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13897121,"byte_end":13897124,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ [`starts_with`]: #method.starts_with","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13897129,"byte_end":13897169,"line_start":301,"line_end":301,"column_start":5,"column_end":45}},{"value":"/ [`Err`]: https://doc.rust-lang.org/std/result/enum.Result.html#variant.Err","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13897174,"byte_end":13897252,"line_start":302,"line_end":302,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13897257,"byte_end":13897260,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13897265,"byte_end":13897279,"line_start":304,"line_end":304,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13897284,"byte_end":13897287,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13897292,"byte_end":13897299,"line_start":306,"line_end":306,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13897304,"byte_end":13897345,"line_start":307,"line_end":307,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13897350,"byte_end":13897353,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/test/haha/foo.txt\");","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13897358,"byte_end":13897405,"line_start":309,"line_end":309,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13897410,"byte_end":13897413,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(path.strip_prefix(\"/\"), Ok(Path::new(\"test/haha/foo.txt\")));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13897418,"byte_end":13897493,"line_start":311,"line_end":311,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(path.strip_prefix(\"/test\"), Ok(Path::new(\"haha/foo.txt\")));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13897498,"byte_end":13897572,"line_start":312,"line_end":312,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(path.strip_prefix(\"/test/\"), Ok(Path::new(\"haha/foo.txt\")));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13897577,"byte_end":13897652,"line_start":313,"line_end":313,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(path.strip_prefix(\"/test/haha/foo.txt\"), Ok(Path::new(\"\")));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13897657,"byte_end":13897732,"line_start":314,"line_end":314,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(path.strip_prefix(\"/test/haha/foo.txt/\"), Ok(Path::new(\"\")));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13897737,"byte_end":13897813,"line_start":315,"line_end":315,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(path.strip_prefix(\"test\").is_ok(), false);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13897818,"byte_end":13897875,"line_start":316,"line_end":316,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(path.strip_prefix(\"/haha\").is_ok(), false);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13897880,"byte_end":13897938,"line_start":317,"line_end":317,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13897943,"byte_end":13897946,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ let prefix = PathBuf::from(\"/test/\");","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13897951,"byte_end":13897992,"line_start":319,"line_end":319,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(path.strip_prefix(prefix), Ok(Path::new(\"haha/foo.txt\")));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13897997,"byte_end":13898070,"line_start":320,"line_end":320,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13898075,"byte_end":13898082,"line_start":321,"line_end":321,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7384},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13898791,"byte_end":13898802,"line_start":347,"line_end":347,"column_start":12,"column_end":23},"name":"starts_with","qualname":"<Path>::starts_with","value":"pub fn starts_with<P: AsRef<Path>>(&Self, P) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determines whether `base` is a prefix of `self`.","sig":null,"attributes":[{"value":"/ Determines whether `base` is a prefix of `self`.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13898271,"byte_end":13898323,"line_start":329,"line_end":329,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13898328,"byte_end":13898331,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ Only considers whole path components to match.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13898336,"byte_end":13898386,"line_start":331,"line_end":331,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13898391,"byte_end":13898394,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13898399,"byte_end":13898413,"line_start":333,"line_end":333,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13898418,"byte_end":13898421,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13898426,"byte_end":13898433,"line_start":335,"line_end":335,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13898438,"byte_end":13898468,"line_start":336,"line_end":336,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13898473,"byte_end":13898476,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/etc/passwd\");","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13898481,"byte_end":13898521,"line_start":338,"line_end":338,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13898526,"byte_end":13898529,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ assert!(path.starts_with(\"/etc\"));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13898534,"byte_end":13898572,"line_start":340,"line_end":340,"column_start":5,"column_end":43}},{"value":"/ assert!(path.starts_with(\"/etc/\"));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13898577,"byte_end":13898616,"line_start":341,"line_end":341,"column_start":5,"column_end":44}},{"value":"/ assert!(path.starts_with(\"/etc/passwd\"));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13898621,"byte_end":13898666,"line_start":342,"line_end":342,"column_start":5,"column_end":50}},{"value":"/ assert!(path.starts_with(\"/etc/passwd/\"));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13898671,"byte_end":13898717,"line_start":343,"line_end":343,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13898722,"byte_end":13898725,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ assert!(!path.starts_with(\"/e\"));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13898730,"byte_end":13898767,"line_start":345,"line_end":345,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13898772,"byte_end":13898779,"line_start":346,"line_end":346,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7386},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13899228,"byte_end":13899237,"line_start":364,"line_end":364,"column_start":12,"column_end":21},"name":"ends_with","qualname":"<Path>::ends_with","value":"pub fn ends_with<P: AsRef<Path>>(&Self, P) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determines whether `child` is a suffix of `self`.","sig":null,"attributes":[{"value":"/ Determines whether `child` is a suffix of `self`.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13898902,"byte_end":13898955,"line_start":351,"line_end":351,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13898960,"byte_end":13898963,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Only considers whole path components to match.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13898968,"byte_end":13899018,"line_start":353,"line_end":353,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13899023,"byte_end":13899026,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13899031,"byte_end":13899045,"line_start":355,"line_end":355,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13899050,"byte_end":13899053,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13899058,"byte_end":13899065,"line_start":357,"line_end":357,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13899070,"byte_end":13899100,"line_start":358,"line_end":358,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13899105,"byte_end":13899108,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/etc/passwd\");","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13899113,"byte_end":13899153,"line_start":360,"line_end":360,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13899158,"byte_end":13899161,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ assert!(path.ends_with(\"passwd\"));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13899166,"byte_end":13899204,"line_start":362,"line_end":362,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13899209,"byte_end":13899216,"line_start":363,"line_end":363,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7388},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13900079,"byte_end":13900088,"line_start":390,"line_end":390,"column_start":12,"column_end":21},"name":"file_stem","qualname":"<Path>::file_stem","value":"pub fn file_stem(&Self) -> Option<&OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the stem (non-extension) portion of [`file_name`].","sig":null,"attributes":[{"value":"/ Extracts the stem (non-extension) portion of [`file_name`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13899337,"byte_end":13899400,"line_start":368,"line_end":368,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13899405,"byte_end":13899408,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ [`file_name`]: struct.Path.html#method.file_name","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13899413,"byte_end":13899465,"line_start":370,"line_end":370,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13899470,"byte_end":13899473,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ The stem is:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13899478,"byte_end":13899494,"line_start":372,"line_end":372,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13899499,"byte_end":13899502,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ * [`None`], if there is no file name","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13899507,"byte_end":13899547,"line_start":374,"line_end":374,"column_start":5,"column_end":45}},{"value":"/ * The entire file name if there is no embedded `.`","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13899552,"byte_end":13899606,"line_start":375,"line_end":375,"column_start":5,"column_end":59}},{"value":"/ * The entire file name if the file name begins with `.` and has no other `.`s within","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13899611,"byte_end":13899699,"line_start":376,"line_end":376,"column_start":5,"column_end":93}},{"value":"/ * Otherwise, the portion of the file name before the final `.`","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13899704,"byte_end":13899770,"line_start":377,"line_end":377,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13899775,"byte_end":13899778,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13899783,"byte_end":13899863,"line_start":379,"line_end":379,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13899868,"byte_end":13899871,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13899876,"byte_end":13899890,"line_start":381,"line_end":381,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13899895,"byte_end":13899898,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13899903,"byte_end":13899910,"line_start":383,"line_end":383,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13899915,"byte_end":13899945,"line_start":384,"line_end":384,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13899950,"byte_end":13899953,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"foo.rs\");","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13899958,"byte_end":13899993,"line_start":386,"line_end":386,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13899998,"byte_end":13900001,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(\"foo\", path.file_stem().unwrap());","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13900006,"byte_end":13900055,"line_start":388,"line_end":388,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13900060,"byte_end":13900067,"line_start":389,"line_end":389,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7389},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13900867,"byte_end":13900876,"line_start":415,"line_end":415,"column_start":12,"column_end":21},"name":"extension","qualname":"<Path>::extension","value":"pub fn extension(&Self) -> Option<&OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the extension of [`file_name`], if possible.","sig":null,"attributes":[{"value":"/ Extracts the extension of [`file_name`], if possible.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13900158,"byte_end":13900215,"line_start":394,"line_end":394,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13900220,"byte_end":13900223,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ The extension is:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13900228,"byte_end":13900249,"line_start":396,"line_end":396,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13900254,"byte_end":13900257,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ * [`None`], if there is no file name","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13900262,"byte_end":13900302,"line_start":398,"line_end":398,"column_start":5,"column_end":45}},{"value":"/ * [`None`], if there is no embedded `.`","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13900307,"byte_end":13900350,"line_start":399,"line_end":399,"column_start":5,"column_end":48}},{"value":"/ * [`None`], if the file name begins with `.` and has no other `.`s within","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13900355,"byte_end":13900432,"line_start":400,"line_end":400,"column_start":5,"column_end":82}},{"value":"/ * Otherwise, the portion of the file name after the final `.`","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13900437,"byte_end":13900502,"line_start":401,"line_end":401,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13900507,"byte_end":13900510,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ [`file_name`]: struct.Path.html#method.file_name","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13900515,"byte_end":13900567,"line_start":403,"line_end":403,"column_start":5,"column_end":57}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13900572,"byte_end":13900652,"line_start":404,"line_end":404,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13900657,"byte_end":13900660,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13900665,"byte_end":13900679,"line_start":406,"line_end":406,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13900684,"byte_end":13900687,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13900692,"byte_end":13900699,"line_start":408,"line_end":408,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13900704,"byte_end":13900734,"line_start":409,"line_end":409,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13900739,"byte_end":13900742,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"foo.rs\");","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13900747,"byte_end":13900782,"line_start":411,"line_end":411,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13900787,"byte_end":13900790,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(\"rs\", path.extension().unwrap());","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13900795,"byte_end":13900843,"line_start":413,"line_end":413,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13900848,"byte_end":13900855,"line_start":414,"line_end":414,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7390},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13901417,"byte_end":13901421,"line_start":433,"line_end":433,"column_start":12,"column_end":16},"name":"join","qualname":"<Path>::join","value":"pub fn join<P: AsRef<Path>>(&Self, P) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Creates an owned [`PathBuf`] with `path` adjoined to `self`.","sig":null,"attributes":[{"value":"/ Creates an owned [`PathBuf`] with `path` adjoined to `self`.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13900946,"byte_end":13901010,"line_start":419,"line_end":419,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13901015,"byte_end":13901018,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ See [`PathBuf::push`] for more details on what it means to adjoin a path.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13901023,"byte_end":13901100,"line_start":421,"line_end":421,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13901105,"byte_end":13901108,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13901113,"byte_end":13901149,"line_start":423,"line_end":423,"column_start":5,"column_end":41}},{"value":"/ [`PathBuf::push`]: struct.PathBuf.html#method.push","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13901154,"byte_end":13901208,"line_start":424,"line_end":424,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13901213,"byte_end":13901216,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13901221,"byte_end":13901235,"line_start":426,"line_end":426,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13901240,"byte_end":13901243,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13901248,"byte_end":13901255,"line_start":428,"line_end":428,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13901260,"byte_end":13901301,"line_start":429,"line_end":429,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13901306,"byte_end":13901309,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Path::new(\"/etc\").join(\"passwd\"), PathBuf::from(\"/etc/passwd\"));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13901314,"byte_end":13901393,"line_start":431,"line_end":431,"column_start":5,"column_end":84}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13901398,"byte_end":13901405,"line_start":432,"line_end":432,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7392},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13902160,"byte_end":13902174,"line_start":455,"line_end":455,"column_start":12,"column_end":26},"name":"with_file_name","qualname":"<Path>::with_file_name","value":"pub fn with_file_name<S: AsRef<OsStr>>(&Self, S) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Creates an owned [`PathBuf`] like `self` but with the given file name.","sig":null,"attributes":[{"value":"/ Creates an owned [`PathBuf`] like `self` but with the given file name.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13901524,"byte_end":13901598,"line_start":437,"line_end":437,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13901603,"byte_end":13901606,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ See [`PathBuf::set_file_name`] for more details.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13901611,"byte_end":13901663,"line_start":439,"line_end":439,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13901668,"byte_end":13901671,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13901676,"byte_end":13901712,"line_start":441,"line_end":441,"column_start":5,"column_end":41}},{"value":"/ [`PathBuf::set_file_name`]: struct.PathBuf.html#method.set_file_name","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13901717,"byte_end":13901789,"line_start":442,"line_end":442,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13901794,"byte_end":13901797,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13901802,"byte_end":13901816,"line_start":444,"line_end":444,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13901821,"byte_end":13901824,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13901829,"byte_end":13901836,"line_start":446,"line_end":446,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13901841,"byte_end":13901882,"line_start":447,"line_end":447,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13901887,"byte_end":13901890,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/tmp/foo.txt\");","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13901895,"byte_end":13901936,"line_start":449,"line_end":449,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(path.with_file_name(\"bar.txt\"), PathBuf::from(\"/tmp/bar.txt\"));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13901941,"byte_end":13902019,"line_start":450,"line_end":450,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13902024,"byte_end":13902027,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/tmp\");","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13902032,"byte_end":13902065,"line_start":452,"line_end":452,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(path.with_file_name(\"var\"), PathBuf::from(\"/var\"));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13902070,"byte_end":13902136,"line_start":453,"line_end":453,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13902141,"byte_end":13902148,"line_start":454,"line_end":454,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7394},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13902793,"byte_end":13902807,"line_start":474,"line_end":474,"column_start":12,"column_end":26},"name":"with_extension","qualname":"<Path>::with_extension","value":"pub fn with_extension<S: AsRef<OsStr>>(&Self, S) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Creates an owned [`PathBuf`] like `self` but with the given extension.","sig":null,"attributes":[{"value":"/ Creates an owned [`PathBuf`] like `self` but with the given extension.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13902289,"byte_end":13902363,"line_start":459,"line_end":459,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13902368,"byte_end":13902371,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ See [`PathBuf::set_extension`] for more details.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13902376,"byte_end":13902428,"line_start":461,"line_end":461,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13902433,"byte_end":13902436,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13902441,"byte_end":13902477,"line_start":463,"line_end":463,"column_start":5,"column_end":41}},{"value":"/ [`PathBuf::set_extension`]: struct.PathBuf.html#method.set_extension","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13902482,"byte_end":13902554,"line_start":464,"line_end":464,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13902559,"byte_end":13902562,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13902567,"byte_end":13902581,"line_start":466,"line_end":466,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13902586,"byte_end":13902589,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13902594,"byte_end":13902601,"line_start":468,"line_end":468,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13902606,"byte_end":13902647,"line_start":469,"line_end":469,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13902652,"byte_end":13902655,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"foo.rs\");","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13902660,"byte_end":13902695,"line_start":471,"line_end":471,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(path.with_extension(\"txt\"), PathBuf::from(\"foo.txt\"));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13902700,"byte_end":13902769,"line_start":472,"line_end":472,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13902774,"byte_end":13902781,"line_start":473,"line_end":473,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7396},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13904394,"byte_end":13904404,"line_start":513,"line_end":513,"column_start":12,"column_end":22},"name":"components","qualname":"<Path>::components","value":"pub fn components(&Self) -> Components","parent":null,"children":[],"decl_id":null,"docs":" Produces an iterator over the [`Component`]s of the path.","sig":null,"attributes":[{"value":"/ Produces an iterator over the [`Component`]s of the path.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13902922,"byte_end":13902983,"line_start":478,"line_end":478,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13902988,"byte_end":13902991,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ When parsing the path, there is a small amount of normalization:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13902996,"byte_end":13903064,"line_start":480,"line_end":480,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13903069,"byte_end":13903072,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ * Repeated separators are ignored, so `a/b` and `a//b` both have","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13903077,"byte_end":13903145,"line_start":482,"line_end":482,"column_start":5,"column_end":73}},{"value":"/   `a` and `b` as components.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13903150,"byte_end":13903182,"line_start":483,"line_end":483,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13903187,"byte_end":13903190,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ * Occurrences of `.` are normalized away, except if they are at the","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13903195,"byte_end":13903266,"line_start":485,"line_end":485,"column_start":5,"column_end":76}},{"value":"/   beginning of the path. For example, `a/./b`, `a/b/`, `a/b/.` and","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13903271,"byte_end":13903341,"line_start":486,"line_end":486,"column_start":5,"column_end":75}},{"value":"/   `a/b` all have `a` and `b` as components, but `./a/b` starts with","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13903346,"byte_end":13903417,"line_start":487,"line_end":487,"column_start":5,"column_end":76}},{"value":"/   an additional [`CurDir`] component.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13903422,"byte_end":13903463,"line_start":488,"line_end":488,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13903468,"byte_end":13903471,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ * A trailing slash is normalized away, `/a/b` and `/a/b/` are equivalent.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13903476,"byte_end":13903553,"line_start":490,"line_end":490,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13903558,"byte_end":13903561,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ Note that no other normalization takes place; in particular, `a/c`","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13903566,"byte_end":13903636,"line_start":492,"line_end":492,"column_start":5,"column_end":75}},{"value":"/ and `a/b/../c` are distinct, to account for the possibility that `b`","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13903641,"byte_end":13903713,"line_start":493,"line_end":493,"column_start":5,"column_end":77}},{"value":"/ is a symbolic link (so its parent isn't `a`).","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13903718,"byte_end":13903767,"line_start":494,"line_end":494,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13903772,"byte_end":13903775,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ [`Component`]: enum.Component.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13903780,"byte_end":13903818,"line_start":496,"line_end":496,"column_start":5,"column_end":43}},{"value":"/ [`CurDir`]: enum.Component.html#variant.CurDir","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13903823,"byte_end":13903873,"line_start":497,"line_end":497,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13903878,"byte_end":13903881,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13903886,"byte_end":13903900,"line_start":499,"line_end":499,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13903905,"byte_end":13903908,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13903913,"byte_end":13903920,"line_start":501,"line_end":501,"column_start":5,"column_end":12}},{"value":"/ use std::ffi::OsStr;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13903925,"byte_end":13903949,"line_start":502,"line_end":502,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13903954,"byte_end":13903957,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ use async_std::path::{Path, Component};","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13903962,"byte_end":13904005,"line_start":504,"line_end":504,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13904010,"byte_end":13904013,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ let mut components = Path::new(\"/tmp/foo.txt\").components();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13904018,"byte_end":13904082,"line_start":506,"line_end":506,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13904087,"byte_end":13904090,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(components.next(), Some(Component::RootDir));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13904095,"byte_end":13904155,"line_start":508,"line_end":508,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(components.next(), Some(Component::Normal(OsStr::new(\"tmp\"))));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13904160,"byte_end":13904238,"line_start":509,"line_end":509,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(components.next(), Some(Component::Normal(OsStr::new(\"foo.txt\"))));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13904243,"byte_end":13904325,"line_start":510,"line_end":510,"column_start":5,"column_end":87}},{"value":"/ assert_eq!(components.next(), None);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13904330,"byte_end":13904370,"line_start":511,"line_end":511,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13904375,"byte_end":13904382,"line_start":512,"line_end":512,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7397},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13905310,"byte_end":13905314,"line_start":541,"line_end":541,"column_start":12,"column_end":16},"name":"iter","qualname":"<Path>::iter","value":"pub fn iter(&Self) -> Iter","parent":null,"children":[],"decl_id":null,"docs":" Produces an iterator over the path's components viewed as [`OsStr`]\n slices.","sig":null,"attributes":[{"value":"/ Produces an iterator over the path's components viewed as [`OsStr`]","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13904518,"byte_end":13904589,"line_start":519,"line_end":519,"column_start":5,"column_end":76}},{"value":"/ slices.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13904594,"byte_end":13904605,"line_start":520,"line_end":520,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13904610,"byte_end":13904613,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ For more information about the particulars of how the path is separated","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13904618,"byte_end":13904693,"line_start":522,"line_end":522,"column_start":5,"column_end":80}},{"value":"/ into components, see [`components`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13904698,"byte_end":13904738,"line_start":523,"line_end":523,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13904743,"byte_end":13904746,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ [`components`]: #method.components","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13904751,"byte_end":13904789,"line_start":525,"line_end":525,"column_start":5,"column_end":43}},{"value":"/ [`OsStr`]: https://doc.rust-lang.org/std/ffi/struct.OsStr.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13904794,"byte_end":13904860,"line_start":526,"line_end":526,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13904865,"byte_end":13904868,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13904873,"byte_end":13904887,"line_start":528,"line_end":528,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13904892,"byte_end":13904895,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13904900,"byte_end":13904907,"line_start":530,"line_end":530,"column_start":5,"column_end":12}},{"value":"/ use std::ffi::OsStr;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13904912,"byte_end":13904936,"line_start":531,"line_end":531,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13904941,"byte_end":13904944,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ use async_std::path::{self, Path};","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13904949,"byte_end":13904987,"line_start":533,"line_end":533,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13904992,"byte_end":13904995,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ let mut it = Path::new(\"/tmp/foo.txt\").iter();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13905000,"byte_end":13905050,"line_start":535,"line_end":535,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(it.next(), Some(OsStr::new(&path::MAIN_SEPARATOR.to_string())));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13905055,"byte_end":13905134,"line_start":536,"line_end":536,"column_start":5,"column_end":84}},{"value":"/ assert_eq!(it.next(), Some(OsStr::new(\"tmp\")));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13905139,"byte_end":13905190,"line_start":537,"line_end":537,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(it.next(), Some(OsStr::new(\"foo.txt\")));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13905195,"byte_end":13905250,"line_start":538,"line_end":538,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(it.next(), None)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13905255,"byte_end":13905286,"line_start":539,"line_end":539,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13905291,"byte_end":13905298,"line_start":540,"line_end":540,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7398},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13905817,"byte_end":13905824,"line_start":561,"line_end":561,"column_start":12,"column_end":19},"name":"display","qualname":"<Path>::display","value":"pub fn display(&Self) -> Display","parent":null,"children":[],"decl_id":null,"docs":" Returns an object that implements [`Display`] for safely printing paths\n that may contain non-Unicode data.","sig":null,"attributes":[{"value":"/ Returns an object that implements [`Display`] for safely printing paths","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13905410,"byte_end":13905485,"line_start":547,"line_end":547,"column_start":5,"column_end":80}},{"value":"/ that may contain non-Unicode data.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13905490,"byte_end":13905528,"line_start":548,"line_end":548,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13905533,"byte_end":13905536,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ [`Display`]: https://doc.rust-lang.org/std/fmt/trait.Display.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13905541,"byte_end":13905610,"line_start":550,"line_end":550,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13905615,"byte_end":13905618,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13905623,"byte_end":13905637,"line_start":552,"line_end":552,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13905642,"byte_end":13905645,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13905650,"byte_end":13905657,"line_start":554,"line_end":554,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13905662,"byte_end":13905692,"line_start":555,"line_end":555,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13905697,"byte_end":13905700,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/tmp/foo.rs\");","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13905705,"byte_end":13905745,"line_start":557,"line_end":557,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13905750,"byte_end":13905753,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ println!(\"{}\", path.display());","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13905758,"byte_end":13905793,"line_start":559,"line_end":559,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13905798,"byte_end":13905805,"line_start":560,"line_end":560,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7399},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13906590,"byte_end":13906598,"line_start":588,"line_end":588,"column_start":18,"column_end":26},"name":"metadata","qualname":"<Path>::metadata","value":"pub async fn metadata<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads the metadata of a file or directory.","sig":null,"attributes":[{"value":"/ Reads the metadata of a file or directory.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13905889,"byte_end":13905935,"line_start":565,"line_end":565,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13905940,"byte_end":13905943,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ This function will traverse symbolic links to query information about the","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13905948,"byte_end":13906025,"line_start":567,"line_end":567,"column_start":5,"column_end":82}},{"value":"/ destination file.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13906030,"byte_end":13906051,"line_start":568,"line_end":568,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13906056,"byte_end":13906059,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ This is an alias to [`fs::metadata`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13906064,"byte_end":13906105,"line_start":570,"line_end":570,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13906110,"byte_end":13906113,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ [`fs::metadata`]: ../fs/fn.metadata.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13906118,"byte_end":13906162,"line_start":572,"line_end":572,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13906167,"byte_end":13906170,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13906175,"byte_end":13906189,"line_start":574,"line_end":574,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13906194,"byte_end":13906197,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13906202,"byte_end":13906215,"line_start":576,"line_end":576,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13906220,"byte_end":13906294,"line_start":577,"line_end":577,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13906299,"byte_end":13906304,"line_start":578,"line_end":578,"column_start":5,"column_end":10}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13906309,"byte_end":13906339,"line_start":579,"line_end":579,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13906344,"byte_end":13906347,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/Minas/tirith\");","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13906352,"byte_end":13906394,"line_start":581,"line_end":581,"column_start":5,"column_end":47}},{"value":"/ let metadata = path.metadata().await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13906399,"byte_end":13906441,"line_start":582,"line_end":582,"column_start":5,"column_end":47}},{"value":"/ println!(\"{:?}\", metadata.file_type());","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13906446,"byte_end":13906489,"line_start":583,"line_end":583,"column_start":5,"column_end":48}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13906494,"byte_end":13906499,"line_start":584,"line_end":584,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13906504,"byte_end":13906521,"line_start":585,"line_end":585,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13906526,"byte_end":13906533,"line_start":586,"line_end":586,"column_start":5,"column_end":12}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13906538,"byte_end":13906572,"line_start":587,"line_end":587,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":7402},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13907330,"byte_end":13907346,"line_start":612,"line_end":612,"column_start":18,"column_end":34},"name":"symlink_metadata","qualname":"<Path>::symlink_metadata","value":"pub async fn symlink_metadata<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads the metadata of a file or directory without following symbolic links.","sig":null,"attributes":[{"value":"/ Reads the metadata of a file or directory without following symbolic links.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13906680,"byte_end":13906759,"line_start":592,"line_end":592,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13906764,"byte_end":13906767,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ This is an alias to [`fs::symlink_metadata`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13906772,"byte_end":13906821,"line_start":594,"line_end":594,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13906826,"byte_end":13906829,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ [`fs::symlink_metadata`]: ../fs/fn.symlink_metadata.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13906834,"byte_end":13906894,"line_start":596,"line_end":596,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13906899,"byte_end":13906902,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13906907,"byte_end":13906921,"line_start":598,"line_end":598,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13906926,"byte_end":13906929,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13906934,"byte_end":13906947,"line_start":600,"line_end":600,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13906952,"byte_end":13907026,"line_start":601,"line_end":601,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13907031,"byte_end":13907036,"line_start":602,"line_end":602,"column_start":5,"column_end":10}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13907041,"byte_end":13907071,"line_start":603,"line_end":603,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13907076,"byte_end":13907079,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/Minas/tirith\");","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13907084,"byte_end":13907126,"line_start":605,"line_end":605,"column_start":5,"column_end":47}},{"value":"/ let metadata = path.symlink_metadata().await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13907131,"byte_end":13907181,"line_start":606,"line_end":606,"column_start":5,"column_end":55}},{"value":"/ println!(\"{:?}\", metadata.file_type());","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13907186,"byte_end":13907229,"line_start":607,"line_end":607,"column_start":5,"column_end":48}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13907234,"byte_end":13907239,"line_start":608,"line_end":608,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13907244,"byte_end":13907261,"line_start":609,"line_end":609,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13907266,"byte_end":13907273,"line_start":610,"line_end":610,"column_start":5,"column_end":12}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13907278,"byte_end":13907312,"line_start":611,"line_end":611,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":7405},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13908173,"byte_end":13908185,"line_start":638,"line_end":638,"column_start":18,"column_end":30},"name":"canonicalize","qualname":"<Path>::canonicalize","value":"pub async fn canonicalize<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the canonical form of a path.","sig":null,"attributes":[{"value":"/ Returns the canonical form of a path.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13907436,"byte_end":13907477,"line_start":616,"line_end":616,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13907482,"byte_end":13907485,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ The returned path is in absolute form with all intermediate components normalized and","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13907490,"byte_end":13907579,"line_start":618,"line_end":618,"column_start":5,"column_end":94}},{"value":"/ symbolic links resolved.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13907584,"byte_end":13907612,"line_start":619,"line_end":619,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13907617,"byte_end":13907620,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ This is an alias to [`fs::canonicalize`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13907625,"byte_end":13907670,"line_start":621,"line_end":621,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13907675,"byte_end":13907678,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ [`fs::canonicalize`]: ../fs/fn.canonicalize.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13907683,"byte_end":13907735,"line_start":623,"line_end":623,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13907740,"byte_end":13907743,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13907748,"byte_end":13907762,"line_start":625,"line_end":625,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13907767,"byte_end":13907770,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13907775,"byte_end":13907788,"line_start":627,"line_end":627,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13907793,"byte_end":13907867,"line_start":628,"line_end":628,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13907872,"byte_end":13907877,"line_start":629,"line_end":629,"column_start":5,"column_end":10}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13907882,"byte_end":13907923,"line_start":630,"line_end":630,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13907928,"byte_end":13907931,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/foo/test/../test/bar.rs\");","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13907936,"byte_end":13907989,"line_start":632,"line_end":632,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(path.canonicalize().await?, PathBuf::from(\"/foo/test/bar.rs\"));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13907994,"byte_end":13908072,"line_start":633,"line_end":633,"column_start":5,"column_end":83}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13908077,"byte_end":13908082,"line_start":634,"line_end":634,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13908087,"byte_end":13908104,"line_start":635,"line_end":635,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13908109,"byte_end":13908116,"line_start":636,"line_end":636,"column_start":5,"column_end":12}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13908121,"byte_end":13908155,"line_start":637,"line_end":637,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":7408},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13908840,"byte_end":13908849,"line_start":661,"line_end":661,"column_start":18,"column_end":27},"name":"read_link","qualname":"<Path>::read_link","value":"pub async fn read_link<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads a symbolic link, returning the file that the link points to.","sig":null,"attributes":[{"value":"/ Reads a symbolic link, returning the file that the link points to.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13908266,"byte_end":13908336,"line_start":642,"line_end":642,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13908341,"byte_end":13908344,"line_start":643,"line_end":643,"column_start":5,"column_end":8}},{"value":"/ This is an alias to [`fs::read_link`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13908349,"byte_end":13908391,"line_start":644,"line_end":644,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13908396,"byte_end":13908399,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ [`fs::read_link`]: ../fs/fn.read_link.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13908404,"byte_end":13908450,"line_start":646,"line_end":646,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13908455,"byte_end":13908458,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13908463,"byte_end":13908477,"line_start":648,"line_end":648,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13908482,"byte_end":13908485,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13908490,"byte_end":13908503,"line_start":650,"line_end":650,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13908508,"byte_end":13908582,"line_start":651,"line_end":651,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13908587,"byte_end":13908592,"line_start":652,"line_end":652,"column_start":5,"column_end":10}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13908597,"byte_end":13908627,"line_start":653,"line_end":653,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13908632,"byte_end":13908635,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/laputa/sky_castle.rs\");","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13908640,"byte_end":13908690,"line_start":655,"line_end":655,"column_start":5,"column_end":55}},{"value":"/ let path_link = path.read_link().await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13908695,"byte_end":13908739,"line_start":656,"line_end":656,"column_start":5,"column_end":49}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13908744,"byte_end":13908749,"line_start":657,"line_end":657,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13908754,"byte_end":13908771,"line_start":658,"line_end":658,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13908776,"byte_end":13908783,"line_start":659,"line_end":659,"column_start":5,"column_end":12}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13908788,"byte_end":13908822,"line_start":660,"line_end":660,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":7411},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13909959,"byte_end":13909967,"line_start":696,"line_end":696,"column_start":18,"column_end":26},"name":"read_dir","qualname":"<Path>::read_dir","value":"pub async fn read_dir<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream over the entries within a directory.","sig":null,"attributes":[{"value":"/ Returns a stream over the entries within a directory.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13908927,"byte_end":13908984,"line_start":665,"line_end":665,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13908989,"byte_end":13908992,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ The stream will yield instances of [`io::Result`]`<`[`DirEntry`]`>`. New","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13908997,"byte_end":13909073,"line_start":667,"line_end":667,"column_start":5,"column_end":81}},{"value":"/ errors may be encountered after an iterator is initially constructed.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13909078,"byte_end":13909151,"line_start":668,"line_end":668,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13909156,"byte_end":13909159,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ This is an alias to [`fs::read_dir`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13909164,"byte_end":13909205,"line_start":670,"line_end":670,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13909210,"byte_end":13909213,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ [`io::Result`]: ../io/type.Result.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13909218,"byte_end":13909260,"line_start":672,"line_end":672,"column_start":5,"column_end":47}},{"value":"/ [`DirEntry`]: ../fs/struct.DirEntry.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13909265,"byte_end":13909309,"line_start":673,"line_end":673,"column_start":5,"column_end":49}},{"value":"/ [`fs::read_dir`]: ../fs/fn.read_dir.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13909314,"byte_end":13909358,"line_start":674,"line_end":674,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13909363,"byte_end":13909366,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13909371,"byte_end":13909385,"line_start":676,"line_end":676,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13909390,"byte_end":13909393,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13909398,"byte_end":13909411,"line_start":678,"line_end":678,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13909416,"byte_end":13909490,"line_start":679,"line_end":679,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13909495,"byte_end":13909500,"line_start":680,"line_end":680,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13909505,"byte_end":13909527,"line_start":681,"line_end":681,"column_start":5,"column_end":27}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13909532,"byte_end":13909562,"line_start":682,"line_end":682,"column_start":5,"column_end":35}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13909567,"byte_end":13909597,"line_start":683,"line_end":683,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13909602,"byte_end":13909605,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/laputa\");","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13909610,"byte_end":13909646,"line_start":685,"line_end":685,"column_start":5,"column_end":41}},{"value":"/ let mut dir = fs::read_dir(&path).await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13909651,"byte_end":13909696,"line_start":686,"line_end":686,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13909701,"byte_end":13909704,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ while let Some(res) = dir.next().await {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13909709,"byte_end":13909753,"line_start":688,"line_end":688,"column_start":5,"column_end":49}},{"value":"/     let entry = res?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13909758,"byte_end":13909783,"line_start":689,"line_end":689,"column_start":5,"column_end":30}},{"value":"/     println!(\"{}\", entry.file_name().to_string_lossy());","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13909788,"byte_end":13909848,"line_start":690,"line_end":690,"column_start":5,"column_end":65}},{"value":"/ }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13909853,"byte_end":13909858,"line_start":691,"line_end":691,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13909863,"byte_end":13909868,"line_start":692,"line_end":692,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13909873,"byte_end":13909890,"line_start":693,"line_end":693,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13909895,"byte_end":13909902,"line_start":694,"line_end":694,"column_start":5,"column_end":12}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13909907,"byte_end":13909941,"line_start":695,"line_end":695,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":7414},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13910996,"byte_end":13911002,"line_start":726,"line_end":726,"column_start":18,"column_end":24},"name":"exists","qualname":"<Path>::exists","value":"pub async fn exists<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the path points at an existing entity.","sig":null,"attributes":[{"value":"/ Returns `true` if the path points at an existing entity.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13910048,"byte_end":13910108,"line_start":700,"line_end":700,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13910113,"byte_end":13910116,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ This function will traverse symbolic links to query information about the","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13910121,"byte_end":13910198,"line_start":702,"line_end":702,"column_start":5,"column_end":82}},{"value":"/ destination file. In case of broken symbolic links this will return `false`.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13910203,"byte_end":13910283,"line_start":703,"line_end":703,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13910288,"byte_end":13910291,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ If you cannot access the directory containing the file, e.g., because of a","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13910296,"byte_end":13910374,"line_start":705,"line_end":705,"column_start":5,"column_end":83}},{"value":"/ permission error, this will return `false`.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13910379,"byte_end":13910426,"line_start":706,"line_end":706,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13910431,"byte_end":13910434,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13910439,"byte_end":13910453,"line_start":708,"line_end":708,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13910458,"byte_end":13910461,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13910466,"byte_end":13910479,"line_start":710,"line_end":710,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13910484,"byte_end":13910558,"line_start":711,"line_end":711,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13910563,"byte_end":13910568,"line_start":712,"line_end":712,"column_start":5,"column_end":10}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13910573,"byte_end":13910603,"line_start":713,"line_end":713,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(Path::new(\"does_not_exist.txt\").exists().await, false);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13910608,"byte_end":13910678,"line_start":714,"line_end":714,"column_start":5,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13910683,"byte_end":13910688,"line_start":715,"line_end":715,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13910693,"byte_end":13910710,"line_start":716,"line_end":716,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13910715,"byte_end":13910722,"line_start":717,"line_end":717,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13910727,"byte_end":13910730,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ # See Also","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13910735,"byte_end":13910749,"line_start":719,"line_end":719,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13910754,"byte_end":13910757,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ This is a convenience function that coerces errors to false. If you want to","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13910762,"byte_end":13910841,"line_start":721,"line_end":721,"column_start":5,"column_end":84}},{"value":"/ check errors, call [fs::metadata].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13910846,"byte_end":13910884,"line_start":722,"line_end":722,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13910889,"byte_end":13910892,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ [fs::metadata]: ../fs/fn.metadata.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13910897,"byte_end":13910939,"line_start":724,"line_end":724,"column_start":5,"column_end":47}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13910944,"byte_end":13910978,"line_start":725,"line_end":725,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":7417},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13912260,"byte_end":13912267,"line_start":759,"line_end":759,"column_start":18,"column_end":25},"name":"is_file","qualname":"<Path>::is_file","value":"pub async fn is_file<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the path exists on disk and is pointing at a regular file.","sig":null,"attributes":[{"value":"/ Returns `true` if the path exists on disk and is pointing at a regular file.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13911072,"byte_end":13911152,"line_start":730,"line_end":730,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13911157,"byte_end":13911160,"line_start":731,"line_end":731,"column_start":5,"column_end":8}},{"value":"/ This function will traverse symbolic links to query information about the","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13911165,"byte_end":13911242,"line_start":732,"line_end":732,"column_start":5,"column_end":82}},{"value":"/ destination file. In case of broken symbolic links this will return `false`.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13911247,"byte_end":13911327,"line_start":733,"line_end":733,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13911332,"byte_end":13911335,"line_start":734,"line_end":734,"column_start":5,"column_end":8}},{"value":"/ If you cannot access the directory containing the file, e.g., because of a","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13911340,"byte_end":13911418,"line_start":735,"line_end":735,"column_start":5,"column_end":83}},{"value":"/ permission error, this will return `false`.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13911423,"byte_end":13911470,"line_start":736,"line_end":736,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13911475,"byte_end":13911478,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13911483,"byte_end":13911497,"line_start":738,"line_end":738,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13911502,"byte_end":13911505,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13911510,"byte_end":13911523,"line_start":740,"line_end":740,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13911528,"byte_end":13911602,"line_start":741,"line_end":741,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13911607,"byte_end":13911612,"line_start":742,"line_end":742,"column_start":5,"column_end":10}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13911617,"byte_end":13911647,"line_start":743,"line_end":743,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(Path::new(\"./is_a_directory/\").is_file().await, false);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13911652,"byte_end":13911722,"line_start":744,"line_end":744,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(Path::new(\"a_file.txt\").is_file().await, true);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13911727,"byte_end":13911789,"line_start":745,"line_end":745,"column_start":5,"column_end":67}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13911794,"byte_end":13911799,"line_start":746,"line_end":746,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13911804,"byte_end":13911821,"line_start":747,"line_end":747,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13911826,"byte_end":13911833,"line_start":748,"line_end":748,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13911838,"byte_end":13911841,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ # See Also","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13911846,"byte_end":13911860,"line_start":750,"line_end":750,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13911865,"byte_end":13911868,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ This is a convenience function that coerces errors to false. If you want to","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13911873,"byte_end":13911952,"line_start":752,"line_end":752,"column_start":5,"column_end":84}},{"value":"/ check errors, call [fs::metadata] and handle its Result. Then call","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13911957,"byte_end":13912027,"line_start":753,"line_end":753,"column_start":5,"column_end":75}},{"value":"/ [fs::Metadata::is_file] if it was Ok.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13912032,"byte_end":13912073,"line_start":754,"line_end":754,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13912078,"byte_end":13912081,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ [fs::metadata]: ../fs/fn.metadata.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13912086,"byte_end":13912128,"line_start":756,"line_end":756,"column_start":5,"column_end":47}},{"value":"/ [fs::Metadata::is_file]: ../fs/struct.Metadata.html#method.is_file","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13912133,"byte_end":13912203,"line_start":757,"line_end":757,"column_start":5,"column_end":75}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13912208,"byte_end":13912242,"line_start":758,"line_end":758,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":7421},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13913594,"byte_end":13913600,"line_start":796,"line_end":796,"column_start":18,"column_end":24},"name":"is_dir","qualname":"<Path>::is_dir","value":"pub async fn is_dir<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the path exists on disk and is pointing at a directory.","sig":null,"attributes":[{"value":"/ Returns `true` if the path exists on disk and is pointing at a directory.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13912406,"byte_end":13912483,"line_start":766,"line_end":766,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13912488,"byte_end":13912491,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ This function will traverse symbolic links to query information about the","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13912496,"byte_end":13912573,"line_start":768,"line_end":768,"column_start":5,"column_end":82}},{"value":"/ destination file. In case of broken symbolic links this will return `false`.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13912578,"byte_end":13912658,"line_start":769,"line_end":769,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13912663,"byte_end":13912666,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/ If you cannot access the directory containing the file, e.g., because of a","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13912671,"byte_end":13912749,"line_start":771,"line_end":771,"column_start":5,"column_end":83}},{"value":"/ permission error, this will return `false`.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13912754,"byte_end":13912801,"line_start":772,"line_end":772,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13912806,"byte_end":13912809,"line_start":773,"line_end":773,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13912814,"byte_end":13912828,"line_start":774,"line_end":774,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13912833,"byte_end":13912836,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13912841,"byte_end":13912854,"line_start":776,"line_end":776,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13912859,"byte_end":13912933,"line_start":777,"line_end":777,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13912938,"byte_end":13912943,"line_start":778,"line_end":778,"column_start":5,"column_end":10}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13912948,"byte_end":13912978,"line_start":779,"line_end":779,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13912983,"byte_end":13912986,"line_start":780,"line_end":780,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Path::new(\"./is_a_directory/\").is_dir().await, true);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13912991,"byte_end":13913059,"line_start":781,"line_end":781,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(Path::new(\"a_file.txt\").is_dir().await, false);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13913064,"byte_end":13913126,"line_start":782,"line_end":782,"column_start":5,"column_end":67}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13913131,"byte_end":13913136,"line_start":783,"line_end":783,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13913141,"byte_end":13913158,"line_start":784,"line_end":784,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13913163,"byte_end":13913170,"line_start":785,"line_end":785,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13913175,"byte_end":13913178,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/ # See Also","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13913183,"byte_end":13913197,"line_start":787,"line_end":787,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13913202,"byte_end":13913205,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ This is a convenience function that coerces errors to false. If you want to","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13913210,"byte_end":13913289,"line_start":789,"line_end":789,"column_start":5,"column_end":84}},{"value":"/ check errors, call [fs::metadata] and handle its Result. Then call","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13913294,"byte_end":13913364,"line_start":790,"line_end":790,"column_start":5,"column_end":75}},{"value":"/ [fs::Metadata::is_dir] if it was Ok.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13913369,"byte_end":13913409,"line_start":791,"line_end":791,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13913414,"byte_end":13913417,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ [fs::metadata]: ../fs/fn.metadata.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13913422,"byte_end":13913464,"line_start":793,"line_end":793,"column_start":5,"column_end":47}},{"value":"/ [fs::Metadata::is_dir]: ../fs/struct.Metadata.html#method.is_dir","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13913469,"byte_end":13913537,"line_start":794,"line_end":794,"column_start":5,"column_end":73}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13913542,"byte_end":13913576,"line_start":795,"line_end":795,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":7425},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13914167,"byte_end":13914180,"line_start":817,"line_end":817,"column_start":12,"column_end":25},"name":"into_path_buf","qualname":"<Path>::into_path_buf","value":"pub fn into_path_buf(Box<Path>) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Converts a [`Box<Path>`][`Box`] into a [`PathBuf`] without copying or\n allocating.","sig":null,"attributes":[{"value":"/ Converts a [`Box<Path>`][`Box`] into a [`PathBuf`] without copying or","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13913738,"byte_end":13913811,"line_start":803,"line_end":803,"column_start":5,"column_end":78}},{"value":"/ allocating.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13913816,"byte_end":13913831,"line_start":804,"line_end":804,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13913836,"byte_end":13913839,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ [`Box`]: https://doc.rust-lang.org/std/boxed/struct.Box.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13913844,"byte_end":13913908,"line_start":806,"line_end":806,"column_start":5,"column_end":69}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13913913,"byte_end":13913949,"line_start":807,"line_end":807,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13913954,"byte_end":13913957,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13913962,"byte_end":13913976,"line_start":809,"line_end":809,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13913981,"byte_end":13913984,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13913989,"byte_end":13913996,"line_start":811,"line_end":811,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13914001,"byte_end":13914031,"line_start":812,"line_end":812,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13914036,"byte_end":13914039,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ let path: Box<Path> = Path::new(\"foo.txt\").into();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13914044,"byte_end":13914098,"line_start":814,"line_end":814,"column_start":5,"column_end":59}},{"value":"/ let path_buf = path.into_path_buf();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13914103,"byte_end":13914143,"line_start":815,"line_end":815,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13914148,"byte_end":13914155,"line_start":816,"line_end":816,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":8436},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13920150,"byte_end":13920157,"line_start":21,"line_end":21,"column_start":12,"column_end":19},"name":"PathBuf","qualname":"::path::pathbuf::PathBuf","value":"PathBuf {  }","parent":null,"children":[{"krate":0,"index":8437}],"decl_id":null,"docs":" This struct is an async version of [`std::path::PathBuf`].","sig":null,"attributes":[{"value":"/ This struct is an async version of [`std::path::PathBuf`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13919921,"byte_end":13919983,"line_start":17,"line_end":17,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13919984,"byte_end":13919987,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`std::path::Path`]: https://doc.rust-lang.org/std/path/struct.PathBuf.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13919988,"byte_end":13920067,"line_start":19,"line_end":19,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":7530},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13920398,"byte_end":13920401,"line_start":35,"line_end":35,"column_start":12,"column_end":15},"name":"new","qualname":"<PathBuf>::new","value":"pub fn new() -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Allocates an empty `PathBuf`.","sig":null,"attributes":[{"value":"/ Allocates an empty `PathBuf`.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13920213,"byte_end":13920246,"line_start":26,"line_end":26,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13920251,"byte_end":13920254,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13920259,"byte_end":13920273,"line_start":28,"line_end":28,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13920278,"byte_end":13920281,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13920286,"byte_end":13920293,"line_start":30,"line_end":30,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::PathBuf;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13920298,"byte_end":13920331,"line_start":31,"line_end":31,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13920336,"byte_end":13920339,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ let path = PathBuf::new();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13920344,"byte_end":13920374,"line_start":33,"line_end":33,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13920379,"byte_end":13920386,"line_start":34,"line_end":34,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7531},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13920762,"byte_end":13920769,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"as_path","qualname":"<PathBuf>::as_path","value":"pub fn as_path(&Self) -> &Path","parent":null,"children":[],"decl_id":null,"docs":" Coerces to a [`Path`] slice.","sig":null,"attributes":[{"value":"/ Coerces to a [`Path`] slice.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13920469,"byte_end":13920501,"line_start":39,"line_end":39,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13920506,"byte_end":13920509,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ [`Path`]: struct.Path.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13920514,"byte_end":13920544,"line_start":41,"line_end":41,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13920549,"byte_end":13920552,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13920557,"byte_end":13920571,"line_start":43,"line_end":43,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13920576,"byte_end":13920579,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13920584,"byte_end":13920591,"line_start":45,"line_end":45,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13920596,"byte_end":13920637,"line_start":46,"line_end":46,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13920642,"byte_end":13920645,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ let p = PathBuf::from(\"/test\");","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13920650,"byte_end":13920685,"line_start":48,"line_end":48,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(Path::new(\"/test\"), p.as_path());","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13920690,"byte_end":13920738,"line_start":49,"line_end":49,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13920743,"byte_end":13920750,"line_start":50,"line_end":50,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7532},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13921763,"byte_end":13921767,"line_start":86,"line_end":86,"column_start":12,"column_end":16},"name":"push","qualname":"<PathBuf>::push","value":"pub fn push<P: AsRef<Path>>(&mut Self, P)","parent":null,"children":[],"decl_id":null,"docs":" Extends `self` with `path`.","sig":null,"attributes":[{"value":"/ Extends `self` with `path`.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13920835,"byte_end":13920866,"line_start":55,"line_end":55,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13920871,"byte_end":13920874,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ If `path` is absolute, it replaces the current path.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13920879,"byte_end":13920935,"line_start":57,"line_end":57,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13920940,"byte_end":13920943,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ On Windows:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13920948,"byte_end":13920963,"line_start":59,"line_end":59,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13920968,"byte_end":13920971,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ * if `path` has a root but no prefix (e.g., `\\windows`), it","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13920976,"byte_end":13921039,"line_start":61,"line_end":61,"column_start":5,"column_end":68}},{"value":"/   replaces everything except for the prefix (if any) of `self`.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13921044,"byte_end":13921111,"line_start":62,"line_end":62,"column_start":5,"column_end":72}},{"value":"/ * if `path` has a prefix but no root, it replaces `self`.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13921116,"byte_end":13921177,"line_start":63,"line_end":63,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13921182,"byte_end":13921185,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13921190,"byte_end":13921204,"line_start":65,"line_end":65,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13921209,"byte_end":13921212,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ Pushing a relative path extends the existing path:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13921217,"byte_end":13921271,"line_start":67,"line_end":67,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13921276,"byte_end":13921279,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13921284,"byte_end":13921291,"line_start":69,"line_end":69,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::PathBuf;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13921296,"byte_end":13921329,"line_start":70,"line_end":70,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13921334,"byte_end":13921337,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ let mut path = PathBuf::from(\"/tmp\");","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13921342,"byte_end":13921383,"line_start":72,"line_end":72,"column_start":5,"column_end":46}},{"value":"/ path.push(\"file.bk\");","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13921388,"byte_end":13921413,"line_start":73,"line_end":73,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(path, PathBuf::from(\"/tmp/file.bk\"));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13921418,"byte_end":13921470,"line_start":74,"line_end":74,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13921475,"byte_end":13921482,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13921487,"byte_end":13921490,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ Pushing an absolute path replaces the existing path:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13921495,"byte_end":13921551,"line_start":77,"line_end":77,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13921556,"byte_end":13921559,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13921564,"byte_end":13921571,"line_start":79,"line_end":79,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::PathBuf;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13921576,"byte_end":13921609,"line_start":80,"line_end":80,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13921614,"byte_end":13921617,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ let mut path = PathBuf::from(\"/tmp\");","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13921622,"byte_end":13921663,"line_start":82,"line_end":82,"column_start":5,"column_end":46}},{"value":"/ path.push(\"/etc\");","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13921668,"byte_end":13921690,"line_start":83,"line_end":83,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(path, PathBuf::from(\"/etc\"));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13921695,"byte_end":13921739,"line_start":84,"line_end":84,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13921744,"byte_end":13921751,"line_start":85,"line_end":85,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7534},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13922465,"byte_end":13922468,"line_start":110,"line_end":110,"column_start":12,"column_end":15},"name":"pop","qualname":"<PathBuf>::pop","value":"pub fn pop(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Truncates `self` to [`self.parent`].","sig":null,"attributes":[{"value":"/ Truncates `self` to [`self.parent`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13921856,"byte_end":13921896,"line_start":90,"line_end":90,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13921901,"byte_end":13921904,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Returns `false` and does nothing if [`self.parent`] is [`None`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13921909,"byte_end":13921977,"line_start":92,"line_end":92,"column_start":5,"column_end":73}},{"value":"/ Otherwise, returns `true`.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13921982,"byte_end":13922012,"line_start":93,"line_end":93,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13922017,"byte_end":13922020,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13922025,"byte_end":13922105,"line_start":95,"line_end":95,"column_start":5,"column_end":85}},{"value":"/ [`self.parent`]: struct.PathBuf.html#method.parent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13922110,"byte_end":13922164,"line_start":96,"line_end":96,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13922169,"byte_end":13922172,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13922177,"byte_end":13922191,"line_start":98,"line_end":98,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13922196,"byte_end":13922199,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13922204,"byte_end":13922211,"line_start":100,"line_end":100,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13922216,"byte_end":13922257,"line_start":101,"line_end":101,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13922262,"byte_end":13922265,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ let mut p = PathBuf::from(\"/test/test.rs\");","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13922270,"byte_end":13922317,"line_start":103,"line_end":103,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13922322,"byte_end":13922325,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ p.pop();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13922330,"byte_end":13922342,"line_start":105,"line_end":105,"column_start":5,"column_end":17}},{"value":"/ assert_eq!(Path::new(\"/test\"), p);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13922347,"byte_end":13922385,"line_start":106,"line_end":106,"column_start":5,"column_end":43}},{"value":"/ p.pop();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13922390,"byte_end":13922402,"line_start":107,"line_end":107,"column_start":5,"column_end":17}},{"value":"/ assert_eq!(Path::new(\"/\"), p);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13922407,"byte_end":13922441,"line_start":108,"line_end":108,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13922446,"byte_end":13922453,"line_start":109,"line_end":109,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7535},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13923498,"byte_end":13923511,"line_start":140,"line_end":140,"column_start":12,"column_end":25},"name":"set_file_name","qualname":"<PathBuf>::set_file_name","value":"pub fn set_file_name<S: AsRef<OsStr>>(&mut Self, S)","parent":null,"children":[],"decl_id":null,"docs":" Updates [`self.file_name`] to `file_name`.","sig":null,"attributes":[{"value":"/ Updates [`self.file_name`] to `file_name`.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13922526,"byte_end":13922572,"line_start":114,"line_end":114,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13922577,"byte_end":13922580,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ If [`self.file_name`] was [`None`], this is equivalent to pushing","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13922585,"byte_end":13922654,"line_start":116,"line_end":116,"column_start":5,"column_end":74}},{"value":"/ `file_name`.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13922659,"byte_end":13922675,"line_start":117,"line_end":117,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13922680,"byte_end":13922683,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ Otherwise it is equivalent to calling [`pop`] and then pushing","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13922688,"byte_end":13922754,"line_start":119,"line_end":119,"column_start":5,"column_end":71}},{"value":"/ `file_name`. The new path will be a sibling of the original path.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13922759,"byte_end":13922828,"line_start":120,"line_end":120,"column_start":5,"column_end":74}},{"value":"/ (That is, it will have the same parent.)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13922833,"byte_end":13922877,"line_start":121,"line_end":121,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13922882,"byte_end":13922885,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ [`self.file_name`]: struct.PathBuf.html#method.file_name","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13922890,"byte_end":13922950,"line_start":123,"line_end":123,"column_start":5,"column_end":65}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13922955,"byte_end":13923035,"line_start":124,"line_end":124,"column_start":5,"column_end":85}},{"value":"/ [`pop`]: struct.PathBuf.html#method.pop","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13923040,"byte_end":13923083,"line_start":125,"line_end":125,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13923088,"byte_end":13923091,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13923096,"byte_end":13923110,"line_start":127,"line_end":127,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13923115,"byte_end":13923118,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13923123,"byte_end":13923130,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::PathBuf;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13923135,"byte_end":13923168,"line_start":130,"line_end":130,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13923173,"byte_end":13923176,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ let mut buf = PathBuf::from(\"/\");","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13923181,"byte_end":13923218,"line_start":132,"line_end":132,"column_start":5,"column_end":42}},{"value":"/ assert!(buf.file_name() == None);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13923223,"byte_end":13923260,"line_start":133,"line_end":133,"column_start":5,"column_end":42}},{"value":"/ buf.set_file_name(\"bar\");","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13923265,"byte_end":13923294,"line_start":134,"line_end":134,"column_start":5,"column_end":34}},{"value":"/ assert!(buf == PathBuf::from(\"/bar\"));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13923299,"byte_end":13923341,"line_start":135,"line_end":135,"column_start":5,"column_end":47}},{"value":"/ assert!(buf.file_name().is_some());","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13923346,"byte_end":13923385,"line_start":136,"line_end":136,"column_start":5,"column_end":44}},{"value":"/ buf.set_file_name(\"baz.txt\");","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13923390,"byte_end":13923423,"line_start":137,"line_end":137,"column_start":5,"column_end":38}},{"value":"/ assert!(buf == PathBuf::from(\"/baz.txt\"));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13923428,"byte_end":13923474,"line_start":138,"line_end":138,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13923479,"byte_end":13923486,"line_start":139,"line_end":139,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7537},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13924524,"byte_end":13924537,"line_start":169,"line_end":169,"column_start":12,"column_end":25},"name":"set_extension","qualname":"<PathBuf>::set_extension","value":"pub fn set_extension<S: AsRef<OsStr>>(&mut Self, S) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Updates [`self.extension`] to `extension`.","sig":null,"attributes":[{"value":"/ Updates [`self.extension`] to `extension`.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13923611,"byte_end":13923657,"line_start":144,"line_end":144,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13923662,"byte_end":13923665,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ Returns `false` and does nothing if [`self.file_name`] is [`None`],","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13923670,"byte_end":13923741,"line_start":146,"line_end":146,"column_start":5,"column_end":76}},{"value":"/ returns `true` and updates the extension otherwise.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13923746,"byte_end":13923801,"line_start":147,"line_end":147,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13923806,"byte_end":13923809,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ If [`self.extension`] is [`None`], the extension is added; otherwise","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13923814,"byte_end":13923886,"line_start":149,"line_end":149,"column_start":5,"column_end":77}},{"value":"/ it is replaced.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13923891,"byte_end":13923910,"line_start":150,"line_end":150,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13923915,"byte_end":13923918,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ [`self.file_name`]: struct.PathBuf.html#method.file_name","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13923923,"byte_end":13923983,"line_start":152,"line_end":152,"column_start":5,"column_end":65}},{"value":"/ [`self.extension`]: struct.PathBuf.html#method.extension","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13923988,"byte_end":13924048,"line_start":153,"line_end":153,"column_start":5,"column_end":65}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13924053,"byte_end":13924133,"line_start":154,"line_end":154,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13924138,"byte_end":13924141,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13924146,"byte_end":13924160,"line_start":156,"line_end":156,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13924165,"byte_end":13924168,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13924173,"byte_end":13924180,"line_start":158,"line_end":158,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13924185,"byte_end":13924226,"line_start":159,"line_end":159,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13924231,"byte_end":13924234,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ let mut p = PathBuf::from(\"/feel/the\");","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13924239,"byte_end":13924282,"line_start":161,"line_end":161,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13924287,"byte_end":13924290,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ p.set_extension(\"force\");","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13924295,"byte_end":13924324,"line_start":163,"line_end":163,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(Path::new(\"/feel/the.force\"), p.as_path());","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13924329,"byte_end":13924387,"line_start":164,"line_end":164,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13924392,"byte_end":13924395,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ p.set_extension(\"dark_side\");","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13924400,"byte_end":13924433,"line_start":166,"line_end":166,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(Path::new(\"/feel/the.dark_side\"), p.as_path());","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13924438,"byte_end":13924500,"line_start":167,"line_end":167,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13924505,"byte_end":13924512,"line_start":168,"line_end":168,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7539},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13925004,"byte_end":13925018,"line_start":185,"line_end":185,"column_start":12,"column_end":26},"name":"into_os_string","qualname":"<PathBuf>::into_os_string","value":"pub fn into_os_string(Self) -> OsString","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `PathBuf`, returning its internal [`OsString`] storage.","sig":null,"attributes":[{"value":"/ Consumes the `PathBuf`, returning its internal [`OsString`] storage.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13924645,"byte_end":13924717,"line_start":173,"line_end":173,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13924722,"byte_end":13924725,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ [`OsString`]: https://doc.rust-lang.org/std/ffi/struct.OsString.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13924730,"byte_end":13924802,"line_start":175,"line_end":175,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13924807,"byte_end":13924810,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13924815,"byte_end":13924829,"line_start":177,"line_end":177,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13924834,"byte_end":13924837,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13924842,"byte_end":13924849,"line_start":179,"line_end":179,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::PathBuf;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13924854,"byte_end":13924887,"line_start":180,"line_end":180,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13924892,"byte_end":13924895,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ let p = PathBuf::from(\"/the/head\");","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13924900,"byte_end":13924939,"line_start":182,"line_end":182,"column_start":5,"column_end":44}},{"value":"/ let os_str = p.into_os_string();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13924944,"byte_end":13924980,"line_start":183,"line_end":183,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13924985,"byte_end":13924992,"line_start":184,"line_end":184,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7540},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13925269,"byte_end":13925284,"line_start":193,"line_end":193,"column_start":12,"column_end":27},"name":"into_boxed_path","qualname":"<PathBuf>::into_boxed_path","value":"pub fn into_boxed_path(Self) -> Box<Path>","parent":null,"children":[],"decl_id":null,"docs":" Converts this `PathBuf` into a [boxed][`Box`] [`Path`].","sig":null,"attributes":[{"value":"/ Converts this `PathBuf` into a [boxed][`Box`] [`Path`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13925086,"byte_end":13925145,"line_start":189,"line_end":189,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13925150,"byte_end":13925153,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ [`Box`]: https://doc.rust-lang.org/std/boxed/struct.Box.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13925158,"byte_end":13925222,"line_start":191,"line_end":191,"column_start":5,"column_end":69}},{"value":"/ [`Path`]: struct.Path.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13925227,"byte_end":13925257,"line_start":192,"line_end":192,"column_start":5,"column_end":35}}]},{"kind":"Mod","id":{"krate":0,"index":7644},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"net","qualname":"::net","value":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","parent":null,"children":[{"krate":0,"index":7645},{"krate":0,"index":7648},{"krate":0,"index":7651},{"krate":0,"index":7652},{"krate":0,"index":7655},{"krate":0,"index":7658},{"krate":0,"index":7661},{"krate":0,"index":7662},{"krate":0,"index":7665},{"krate":0,"index":7668},{"krate":0,"index":7671},{"krate":0,"index":7674},{"krate":0,"index":7675},{"krate":0,"index":7678},{"krate":0,"index":7681},{"krate":0,"index":7684},{"krate":0,"index":7687},{"krate":0,"index":7800},{"krate":0,"index":7955}],"decl_id":null,"docs":" Networking primitives for TCP/UDP communication.","sig":null,"attributes":[{"value":"cfg(feature = \"default\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/utils.rs","byte_start":16827,"byte_end":16854,"line_start":231,"line_end":231,"column_start":13,"column_end":40}},{"value":"/ Networking primitives for TCP/UDP communication.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":13929413,"byte_end":13929465,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":13929466,"byte_end":13929469,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module provides networking functionality for the Transmission Control and User","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":13929470,"byte_end":13929557,"line_start":3,"line_end":3,"column_start":1,"column_end":88}},{"value":"/ Datagram Protocols, as well as types for IP and socket addresses.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":13929558,"byte_end":13929627,"line_start":4,"line_end":4,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":13929628,"byte_end":13929631,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This module is an async version of [`std::net`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":13929632,"byte_end":13929684,"line_start":6,"line_end":6,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":13929685,"byte_end":13929688,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # Organization","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":13929689,"byte_end":13929707,"line_start":8,"line_end":8,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":13929708,"byte_end":13929711,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ * [`TcpListener`] and [`TcpStream`] provide functionality for communication over TCP","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":13929712,"byte_end":13929800,"line_start":10,"line_end":10,"column_start":1,"column_end":89}},{"value":"/ * [`UdpSocket`] provides functionality for communication over UDP","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":13929801,"byte_end":13929870,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"/ * [`IpAddr`] represents IP addresses of either IPv4 or IPv6; [`Ipv4Addr`] and","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":13929871,"byte_end":13929952,"line_start":12,"line_end":12,"column_start":1,"column_end":82}},{"value":"/   [`Ipv6Addr`] are respectively IPv4 and IPv6 addresses","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":13929953,"byte_end":13930012,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/ * [`SocketAddr`] represents socket addresses of either IPv4 or IPv6; [`SocketAddrV4`]","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":13930013,"byte_end":13930102,"line_start":14,"line_end":14,"column_start":1,"column_end":90}},{"value":"/   and [`SocketAddrV6`] are respectively IPv4 and IPv6 socket addresses","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":13930103,"byte_end":13930177,"line_start":15,"line_end":15,"column_start":1,"column_end":75}},{"value":"/ * [`ToSocketAddrs`] is a trait that used for generic address resolution when interacting","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":13930178,"byte_end":13930270,"line_start":16,"line_end":16,"column_start":1,"column_end":93}},{"value":"/   with networking objects like [`TcpListener`], [`TcpStream`] or [`UdpSocket`]","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":13930271,"byte_end":13930353,"line_start":17,"line_end":17,"column_start":1,"column_end":83}},{"value":"/ * Other types are return or parameter types for various methods in this module","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":13930354,"byte_end":13930436,"line_start":18,"line_end":18,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":13930437,"byte_end":13930440,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`IpAddr`]: enum.IpAddr.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":13930441,"byte_end":13930473,"line_start":20,"line_end":20,"column_start":1,"column_end":33}},{"value":"/ [`Ipv4Addr`]: struct.Ipv4Addr.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":13930474,"byte_end":13930512,"line_start":21,"line_end":21,"column_start":1,"column_end":39}},{"value":"/ [`Ipv6Addr`]: struct.Ipv6Addr.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":13930513,"byte_end":13930551,"line_start":22,"line_end":22,"column_start":1,"column_end":39}},{"value":"/ [`SocketAddr`]: enum.SocketAddr.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":13930552,"byte_end":13930592,"line_start":23,"line_end":23,"column_start":1,"column_end":41}},{"value":"/ [`SocketAddrV4`]: struct.SocketAddrV4.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":13930593,"byte_end":13930639,"line_start":24,"line_end":24,"column_start":1,"column_end":47}},{"value":"/ [`SocketAddrV6`]: struct.SocketAddrV6.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":13930640,"byte_end":13930686,"line_start":25,"line_end":25,"column_start":1,"column_end":47}},{"value":"/ [`TcpListener`]: struct.TcpListener.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":13930687,"byte_end":13930731,"line_start":26,"line_end":26,"column_start":1,"column_end":45}},{"value":"/ [`TcpStream`]: struct.TcpStream.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":13930732,"byte_end":13930772,"line_start":27,"line_end":27,"column_start":1,"column_end":41}},{"value":"/ [`ToSocketAddrs`]: trait.ToSocketAddrs.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":13930773,"byte_end":13930820,"line_start":28,"line_end":28,"column_start":1,"column_end":48}},{"value":"/ [`UdpSocket`]: struct.UdpSocket.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":13930821,"byte_end":13930861,"line_start":29,"line_end":29,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":13930862,"byte_end":13930865,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific extensions","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":13930866,"byte_end":13930900,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":13930901,"byte_end":13930904,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ APIs such as Unix domain sockets are available on certain platforms only. You can find","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":13930905,"byte_end":13930995,"line_start":33,"line_end":33,"column_start":1,"column_end":91}},{"value":"/ platform-specific extensions in the [`async_std::os`] module.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":13930996,"byte_end":13931061,"line_start":34,"line_end":34,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":13931062,"byte_end":13931065,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ [`async_std::os`]: ../os/index.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":13931066,"byte_end":13931105,"line_start":36,"line_end":36,"column_start":1,"column_end":40}},{"value":"/ [`std::net`]: https://doc.rust-lang.org/std/net/index.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":13931106,"byte_end":13931168,"line_start":37,"line_end":37,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":13931169,"byte_end":13931172,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":13931173,"byte_end":13931187,"line_start":39,"line_end":39,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":13931188,"byte_end":13931191,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ A simple UDP echo server:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":13931192,"byte_end":13931221,"line_start":41,"line_end":41,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":13931222,"byte_end":13931225,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":13931226,"byte_end":13931239,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":13931240,"byte_end":13931314,"line_start":44,"line_end":44,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":13931315,"byte_end":13931320,"line_start":45,"line_end":45,"column_start":1,"column_end":6}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":13931321,"byte_end":13931355,"line_start":46,"line_end":46,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":13931356,"byte_end":13931359,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":13931360,"byte_end":13931418,"line_start":48,"line_end":48,"column_start":1,"column_end":59}},{"value":"/ let mut buf = vec![0u8; 1024];","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":13931419,"byte_end":13931453,"line_start":49,"line_end":49,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":13931454,"byte_end":13931457,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ loop {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":13931458,"byte_end":13931468,"line_start":51,"line_end":51,"column_start":1,"column_end":11}},{"value":"/     let (n, peer) = socket.recv_from(&mut buf).await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":13931469,"byte_end":13931527,"line_start":52,"line_end":52,"column_start":1,"column_end":59}},{"value":"/     socket.send_to(&buf[..n], &peer).await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":13931528,"byte_end":13931576,"line_start":53,"line_end":53,"column_start":1,"column_end":49}},{"value":"/ }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":13931577,"byte_end":13931582,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":13931583,"byte_end":13931588,"line_start":55,"line_end":55,"column_start":1,"column_end":6}},{"value":"/ # }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":13931589,"byte_end":13931599,"line_start":56,"line_end":56,"column_start":1,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/mod.rs","byte_start":13931600,"byte_end":13931607,"line_start":57,"line_end":57,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":7736},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":13933283,"byte_end":13933296,"line_start":45,"line_end":45,"column_start":11,"column_end":24},"name":"ToSocketAddrs","qualname":"::net::addr::ToSocketAddrs","value":"ToSocketAddrs","parent":null,"children":[{"krate":0,"index":7737},{"krate":0,"index":7738}],"decl_id":null,"docs":" Converts or resolves addresses to [`SocketAddr`] values.","sig":null,"attributes":[{"value":"/ Converts or resolves addresses to [`SocketAddr`] values.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":13932705,"byte_end":13932765,"line_start":26,"line_end":26,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":13932766,"byte_end":13932769,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This trait is an async version of [`std::net::ToSocketAddrs`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":13932770,"byte_end":13932836,"line_start":28,"line_end":28,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":13932837,"byte_end":13932840,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ [`std::net::ToSocketAddrs`]: https://doc.rust-lang.org/std/net/trait.ToSocketAddrs.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":13932841,"byte_end":13932932,"line_start":30,"line_end":30,"column_start":1,"column_end":92}},{"value":"/ [`SocketAddr`]: enum.SocketAddr.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":13932933,"byte_end":13932973,"line_start":31,"line_end":31,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":13932974,"byte_end":13932977,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":13932978,"byte_end":13932992,"line_start":33,"line_end":33,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":13932993,"byte_end":13932996,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":13932997,"byte_end":13933004,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":13933005,"byte_end":13933079,"line_start":36,"line_end":36,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":13933080,"byte_end":13933085,"line_start":37,"line_end":37,"column_start":1,"column_end":6}},{"value":"/ use async_std::net::ToSocketAddrs;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":13933086,"byte_end":13933124,"line_start":38,"line_end":38,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":13933125,"byte_end":13933128,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ let addr = \"localhost:8080\".to_socket_addrs().await?.next().unwrap();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":13933129,"byte_end":13933202,"line_start":40,"line_end":40,"column_start":1,"column_end":74}},{"value":"/ println!(\"resolved: {:?}\", addr);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":13933203,"byte_end":13933240,"line_start":41,"line_end":41,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":13933241,"byte_end":13933246,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":13933247,"byte_end":13933264,"line_start":43,"line_end":43,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":13933265,"byte_end":13933272,"line_start":44,"line_end":44,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":7737},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":13933391,"byte_end":13933395,"line_start":47,"line_end":47,"column_start":10,"column_end":14},"name":"Iter","qualname":"::net::addr::ToSocketAddrs::Iter","value":"type Iter: Iterator<Item = SocketAddr>;","parent":{"krate":0,"index":7736},"children":[],"decl_id":null,"docs":" Returned iterator over socket addresses which this type may correspond to.\n","sig":null,"attributes":[{"value":"/ Returned iterator over socket addresses which this type may correspond to.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":13933303,"byte_end":13933381,"line_start":46,"line_end":46,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":7738},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":13933737,"byte_end":13933752,"line_start":55,"line_end":55,"column_start":8,"column_end":23},"name":"to_socket_addrs","qualname":"::net::addr::ToSocketAddrs::to_socket_addrs","value":"pub fn to_socket_addrs(&Self) -> ToSocketAddrsFuture<Self::Iter>","parent":{"krate":0,"index":7736},"children":[],"decl_id":null,"docs":" Converts this object to an iterator of resolved `SocketAddr`s.","sig":null,"attributes":[{"value":"/ Converts this object to an iterator of resolved `SocketAddr`s.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":13933431,"byte_end":13933497,"line_start":49,"line_end":49,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":13933502,"byte_end":13933505,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ The returned iterator may not actually yield any values depending on the outcome of any","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":13933510,"byte_end":13933601,"line_start":51,"line_end":51,"column_start":5,"column_end":96}},{"value":"/ resolution performed.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":13933606,"byte_end":13933631,"line_start":52,"line_end":52,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":13933636,"byte_end":13933639,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Note that this function may block a backend thread while resolution is performed.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":13933644,"byte_end":13933729,"line_start":54,"line_end":54,"column_start":5,"column_end":90}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7741},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":13933969,"byte_end":13933978,"line_start":66,"line_end":66,"column_start":5,"column_end":14},"name":"Resolving","qualname":"::net::addr::ToSocketAddrsFuture::Resolving","value":"ToSocketAddrsFuture::Resolving(JoinHandle<io::Result<I>>)","parent":{"krate":0,"index":7739},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7744},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":13934011,"byte_end":13934016,"line_start":67,"line_end":67,"column_start":5,"column_end":10},"name":"Ready","qualname":"::net::addr::ToSocketAddrsFuture::Ready","value":"ToSocketAddrsFuture::Ready(io::Result<I>)","parent":{"krate":0,"index":7739},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7747},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":13934037,"byte_end":13934041,"line_start":68,"line_end":68,"column_start":5,"column_end":9},"name":"Done","qualname":"::net::addr::ToSocketAddrsFuture::Done","value":"ToSocketAddrsFuture::Done","parent":{"krate":0,"index":7739},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7739},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":13933940,"byte_end":13933959,"line_start":65,"line_end":65,"column_start":10,"column_end":29},"name":"ToSocketAddrsFuture","qualname":"::net::addr::ToSocketAddrsFuture","value":"pub enum ToSocketAddrsFuture<I> {\n    Resolving(JoinHandle<io::Result<I>>),\n    Ready(io::Result<I>),\n    Done,\n}","parent":null,"children":[{"krate":0,"index":7741},{"krate":0,"index":7744},{"krate":0,"index":7747}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":13933891,"byte_end":13933930,"line_start":64,"line_end":64,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":8459},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13941645,"byte_end":13941656,"line_start":52,"line_end":52,"column_start":12,"column_end":23},"name":"TcpListener","qualname":"::net::tcp::listener::TcpListener","value":"TcpListener {  }","parent":null,"children":[{"krate":0,"index":8460}],"decl_id":null,"docs":" A TCP socket server, listening for connections.","sig":null,"attributes":[{"value":"/ A TCP socket server, listening for connections.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13940389,"byte_end":13940440,"line_start":14,"line_end":14,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13940441,"byte_end":13940444,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ After creating a `TcpListener` by [`bind`]ing it to a socket address, it listens for incoming","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13940445,"byte_end":13940542,"line_start":16,"line_end":16,"column_start":1,"column_end":98}},{"value":"/ TCP connections. These can be accepted by awaiting elements from the async stream of","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13940543,"byte_end":13940631,"line_start":17,"line_end":17,"column_start":1,"column_end":89}},{"value":"/ [`incoming`] connections.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13940632,"byte_end":13940661,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13940662,"byte_end":13940665,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The socket will be closed when the value is dropped.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13940666,"byte_end":13940722,"line_start":20,"line_end":20,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13940723,"byte_end":13940726,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ The Transmission Control Protocol is specified in [IETF RFC 793].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13940727,"byte_end":13940796,"line_start":22,"line_end":22,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13940797,"byte_end":13940800,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::net::TcpListener`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13940801,"byte_end":13940864,"line_start":24,"line_end":24,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13940865,"byte_end":13940868,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ [`bind`]: #method.bind","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13940869,"byte_end":13940895,"line_start":26,"line_end":26,"column_start":1,"column_end":27}},{"value":"/ [`incoming`]: #method.incoming","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13940896,"byte_end":13940930,"line_start":27,"line_end":27,"column_start":1,"column_end":35}},{"value":"/ [IETF RFC 793]: https://tools.ietf.org/html/rfc793","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13940931,"byte_end":13940985,"line_start":28,"line_end":28,"column_start":1,"column_end":55}},{"value":"/ [`std::net::TcpListener`]: https://doc.rust-lang.org/std/net/struct.TcpListener.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13940986,"byte_end":13941074,"line_start":29,"line_end":29,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13941075,"byte_end":13941078,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13941079,"byte_end":13941093,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13941094,"byte_end":13941097,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13941098,"byte_end":13941111,"line_start":33,"line_end":33,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13941112,"byte_end":13941186,"line_start":34,"line_end":34,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13941187,"byte_end":13941192,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13941193,"byte_end":13941215,"line_start":36,"line_end":36,"column_start":1,"column_end":23}},{"value":"/ use async_std::net::TcpListener;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13941216,"byte_end":13941252,"line_start":37,"line_end":37,"column_start":1,"column_end":37}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13941253,"byte_end":13941283,"line_start":38,"line_end":38,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13941284,"byte_end":13941287,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13941288,"byte_end":13941350,"line_start":40,"line_end":40,"column_start":1,"column_end":63}},{"value":"/ let mut incoming = listener.incoming();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13941351,"byte_end":13941394,"line_start":41,"line_end":41,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13941395,"byte_end":13941398,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ while let Some(stream) = incoming.next().await {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13941399,"byte_end":13941451,"line_start":43,"line_end":43,"column_start":1,"column_end":53}},{"value":"/     let stream = stream?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13941452,"byte_end":13941481,"line_start":44,"line_end":44,"column_start":1,"column_end":30}},{"value":"/     let (reader, writer) = &mut (&stream, &stream);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13941482,"byte_end":13941537,"line_start":45,"line_end":45,"column_start":1,"column_end":56}},{"value":"/     io::copy(reader, writer).await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13941538,"byte_end":13941578,"line_start":46,"line_end":46,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13941579,"byte_end":13941584,"line_start":47,"line_end":47,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13941585,"byte_end":13941590,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13941591,"byte_end":13941608,"line_start":49,"line_end":49,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13941609,"byte_end":13941616,"line_start":50,"line_end":50,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":7854},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13942478,"byte_end":13942482,"line_start":78,"line_end":78,"column_start":18,"column_end":22},"name":"bind","qualname":"<TcpListener>::bind","value":"pub async fn bind<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `TcpListener` which will be bound to the specified address.","sig":null,"attributes":[{"value":"/ Creates a new `TcpListener` which will be bound to the specified address.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13941728,"byte_end":13941805,"line_start":57,"line_end":57,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13941810,"byte_end":13941813,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ The returned listener is ready for accepting connections.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13941818,"byte_end":13941879,"line_start":59,"line_end":59,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13941884,"byte_end":13941887,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Binding with a port number of 0 will request that the OS assigns a port to this listener.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13941892,"byte_end":13941985,"line_start":61,"line_end":61,"column_start":5,"column_end":98}},{"value":"/ The port allocated can be queried via the [`local_addr`] method.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13941990,"byte_end":13942058,"line_start":62,"line_end":62,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13942063,"byte_end":13942066,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13942071,"byte_end":13942085,"line_start":64,"line_end":64,"column_start":5,"column_end":19}},{"value":"/ Create a TCP listener bound to 127.0.0.1:0:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13942090,"byte_end":13942137,"line_start":65,"line_end":65,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13942142,"byte_end":13942145,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13942150,"byte_end":13942163,"line_start":67,"line_end":67,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13942168,"byte_end":13942242,"line_start":68,"line_end":68,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13942247,"byte_end":13942252,"line_start":69,"line_end":69,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpListener;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13942257,"byte_end":13942293,"line_start":70,"line_end":70,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13942298,"byte_end":13942301,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13942306,"byte_end":13942365,"line_start":72,"line_end":72,"column_start":5,"column_end":64}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13942370,"byte_end":13942375,"line_start":73,"line_end":73,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13942380,"byte_end":13942397,"line_start":74,"line_end":74,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13942402,"byte_end":13942409,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13942414,"byte_end":13942417,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ [`local_addr`]: #method.local_addr","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13942422,"byte_end":13942460,"line_start":77,"line_end":77,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":7859},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13943648,"byte_end":13943654,"line_start":115,"line_end":115,"column_start":18,"column_end":24},"name":"accept","qualname":"<TcpListener>::accept","value":"pub async fn accept<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection to this listener.","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection to this listener.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13943115,"byte_end":13943170,"line_start":99,"line_end":99,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13943175,"byte_end":13943178,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ When a connection is established, the corresponding stream and address will be returned.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13943183,"byte_end":13943275,"line_start":101,"line_end":101,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13943280,"byte_end":13943283,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13943288,"byte_end":13943303,"line_start":103,"line_end":103,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13943308,"byte_end":13943311,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13943316,"byte_end":13943329,"line_start":105,"line_end":105,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13943334,"byte_end":13943408,"line_start":106,"line_end":106,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13943413,"byte_end":13943418,"line_start":107,"line_end":107,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpListener;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13943423,"byte_end":13943459,"line_start":108,"line_end":108,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13943464,"byte_end":13943467,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13943472,"byte_end":13943531,"line_start":110,"line_end":110,"column_start":5,"column_end":64}},{"value":"/ let (stream, addr) = listener.accept().await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13943536,"byte_end":13943586,"line_start":111,"line_end":111,"column_start":5,"column_end":55}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13943591,"byte_end":13943596,"line_start":112,"line_end":112,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13943601,"byte_end":13943618,"line_start":113,"line_end":113,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13943623,"byte_end":13943630,"line_start":114,"line_end":114,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7862},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13944818,"byte_end":13944826,"line_start":149,"line_end":149,"column_start":12,"column_end":20},"name":"incoming","qualname":"<TcpListener>::incoming","value":"pub fn incoming(&Self) -> Incoming","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream of incoming connections.","sig":null,"attributes":[{"value":"/ Returns a stream of incoming connections.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13943883,"byte_end":13943928,"line_start":123,"line_end":123,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13943933,"byte_end":13943936,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ Iterating over this stream is equivalent to calling [`accept`] in a loop. The stream of","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13943941,"byte_end":13944032,"line_start":125,"line_end":125,"column_start":5,"column_end":96}},{"value":"/ connections is infinite, i.e awaiting the next connection will never result in [`None`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13944037,"byte_end":13944129,"line_start":126,"line_end":126,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13944134,"byte_end":13944137,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ [`accept`]: #method.accept","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13944142,"byte_end":13944172,"line_start":128,"line_end":128,"column_start":5,"column_end":35}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13944177,"byte_end":13944257,"line_start":129,"line_end":129,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13944262,"byte_end":13944265,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13944270,"byte_end":13944285,"line_start":131,"line_end":131,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13944290,"byte_end":13944293,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13944298,"byte_end":13944311,"line_start":133,"line_end":133,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13944316,"byte_end":13944390,"line_start":134,"line_end":134,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13944395,"byte_end":13944400,"line_start":135,"line_end":135,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpListener;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13944405,"byte_end":13944441,"line_start":136,"line_end":136,"column_start":5,"column_end":41}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13944446,"byte_end":13944476,"line_start":137,"line_end":137,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13944481,"byte_end":13944484,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13944489,"byte_end":13944548,"line_start":139,"line_end":139,"column_start":5,"column_end":64}},{"value":"/ let mut incoming = listener.incoming();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13944553,"byte_end":13944596,"line_start":140,"line_end":140,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13944601,"byte_end":13944604,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ while let Some(stream) = incoming.next().await {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13944609,"byte_end":13944661,"line_start":142,"line_end":142,"column_start":5,"column_end":57}},{"value":"/     let mut stream = stream?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13944666,"byte_end":13944699,"line_start":143,"line_end":143,"column_start":5,"column_end":38}},{"value":"/     stream.write_all(b\"hello world\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13944704,"byte_end":13944752,"line_start":144,"line_end":144,"column_start":5,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13944757,"byte_end":13944762,"line_start":145,"line_end":145,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13944767,"byte_end":13944772,"line_start":146,"line_end":146,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13944777,"byte_end":13944794,"line_start":147,"line_end":147,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13944799,"byte_end":13944806,"line_start":148,"line_end":148,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7863},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13946102,"byte_end":13946115,"line_start":187,"line_end":187,"column_start":12,"column_end":25},"name":"into_incoming","qualname":"<TcpListener>::into_incoming","value":"pub fn into_incoming(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Turn this into a stream over the connections being received on this\n listener.","sig":null,"attributes":[{"value":"/ Turn this into a stream over the connections being received on this","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13944953,"byte_end":13945024,"line_start":155,"line_end":155,"column_start":5,"column_end":76}},{"value":"/ listener.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13945029,"byte_end":13945042,"line_start":156,"line_end":156,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13945047,"byte_end":13945050,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ The returned stream is infinite and will also not yield","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13945055,"byte_end":13945114,"line_start":158,"line_end":158,"column_start":5,"column_end":64}},{"value":"/ the peer's [`SocketAddr`] structure. Iterating over it is equivalent to","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13945119,"byte_end":13945194,"line_start":159,"line_end":159,"column_start":5,"column_end":80}},{"value":"/ calling [`TcpListener::accept`] in a loop.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13945199,"byte_end":13945245,"line_start":160,"line_end":160,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13945250,"byte_end":13945253,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13945258,"byte_end":13945273,"line_start":162,"line_end":162,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13945278,"byte_end":13945281,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ Merge the incoming connections of multiple sockets into one [`Stream`]:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13945286,"byte_end":13945361,"line_start":164,"line_end":164,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13945366,"byte_end":13945369,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13945374,"byte_end":13945387,"line_start":166,"line_end":166,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13945392,"byte_end":13945466,"line_start":167,"line_end":167,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13945471,"byte_end":13945476,"line_start":168,"line_end":168,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpListener;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13945481,"byte_end":13945517,"line_start":169,"line_end":169,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13945522,"byte_end":13945525,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ // Our server listens on multiple ports for some reason","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13945530,"byte_end":13945589,"line_start":171,"line_end":171,"column_start":5,"column_end":64}},{"value":"/ let listeners = vec![","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13945594,"byte_end":13945619,"line_start":172,"line_end":172,"column_start":5,"column_end":30}},{"value":"/     TcpListener::bind(\"[::0]:8080\").await?,","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13945624,"byte_end":13945671,"line_start":173,"line_end":173,"column_start":5,"column_end":52}},{"value":"/     TcpListener::bind(\"[::0]:12345\").await?,","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13945676,"byte_end":13945724,"line_start":174,"line_end":174,"column_start":5,"column_end":53}},{"value":"/     TcpListener::bind(\"[::0]:5678\").await?,","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13945729,"byte_end":13945776,"line_start":175,"line_end":175,"column_start":5,"column_end":52}},{"value":"/ ];","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13945781,"byte_end":13945787,"line_start":176,"line_end":176,"column_start":5,"column_end":11}},{"value":"/ // Iterate over all incoming connections","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13945792,"byte_end":13945836,"line_start":177,"line_end":177,"column_start":5,"column_end":49}},{"value":"/ let incoming = futures::stream::select_all(","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13945841,"byte_end":13945888,"line_start":178,"line_end":178,"column_start":5,"column_end":52}},{"value":"/     listeners.into_iter()","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13945893,"byte_end":13945922,"line_start":179,"line_end":179,"column_start":5,"column_end":34}},{"value":"/         .map(TcpListener::into_incoming)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13945927,"byte_end":13945971,"line_start":180,"line_end":180,"column_start":5,"column_end":49}},{"value":"/         .map(Box::pin)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13945976,"byte_end":13946002,"line_start":181,"line_end":181,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13946007,"byte_end":13946013,"line_start":182,"line_end":182,"column_start":5,"column_end":11}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13946018,"byte_end":13946023,"line_start":183,"line_end":183,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13946028,"byte_end":13946045,"line_start":184,"line_end":184,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13946050,"byte_end":13946057,"line_start":185,"line_end":185,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13946062,"byte_end":13946090,"line_start":186,"line_end":186,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":7868},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13946917,"byte_end":13946927,"line_start":211,"line_end":211,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpListener>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this listener is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this listener is bound to.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13946372,"byte_end":13946433,"line_start":194,"line_end":194,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13946438,"byte_end":13946441,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ This can be useful, for example, to identify when binding to port 0 which port was assigned","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13946446,"byte_end":13946541,"line_start":196,"line_end":196,"column_start":5,"column_end":100}},{"value":"/ by the OS.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13946546,"byte_end":13946560,"line_start":197,"line_end":197,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13946565,"byte_end":13946568,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13946573,"byte_end":13946587,"line_start":199,"line_end":199,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13946592,"byte_end":13946595,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13946600,"byte_end":13946613,"line_start":201,"line_end":201,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13946618,"byte_end":13946692,"line_start":202,"line_end":202,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13946697,"byte_end":13946702,"line_start":203,"line_end":203,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpListener;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13946707,"byte_end":13946743,"line_start":204,"line_end":204,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13946748,"byte_end":13946751,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13946756,"byte_end":13946818,"line_start":206,"line_end":206,"column_start":5,"column_end":67}},{"value":"/ let addr = listener.local_addr()?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13946823,"byte_end":13946861,"line_start":207,"line_end":207,"column_start":5,"column_end":43}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13946866,"byte_end":13946871,"line_start":208,"line_end":208,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13946876,"byte_end":13946893,"line_start":209,"line_end":209,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13946898,"byte_end":13946905,"line_start":210,"line_end":210,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":7869},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13947567,"byte_end":13947575,"line_start":227,"line_end":227,"column_start":12,"column_end":20},"name":"Incoming","qualname":"::net::tcp::listener::Incoming","value":"Incoming {  }","parent":null,"children":[{"krate":0,"index":7871}],"decl_id":null,"docs":" A stream of incoming TCP connections.","sig":null,"attributes":[{"value":"/ A stream of incoming TCP connections.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13947016,"byte_end":13947057,"line_start":216,"line_end":216,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13947058,"byte_end":13947061,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ This stream is infinite, i.e awaiting the next connection will never result in [`None`]. It is","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13947062,"byte_end":13947160,"line_start":218,"line_end":218,"column_start":1,"column_end":99}},{"value":"/ created by the [`incoming`] method on [`TcpListener`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13947161,"byte_end":13947219,"line_start":219,"line_end":219,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13947220,"byte_end":13947223,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::net::Incoming`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13947224,"byte_end":13947284,"line_start":221,"line_end":221,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13947285,"byte_end":13947288,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13947289,"byte_end":13947369,"line_start":223,"line_end":223,"column_start":1,"column_end":81}},{"value":"/ [`incoming`]: struct.TcpListener.html#method.incoming","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13947370,"byte_end":13947427,"line_start":224,"line_end":224,"column_start":1,"column_end":58}},{"value":"/ [`TcpListener`]: struct.TcpListener.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13947428,"byte_end":13947472,"line_start":225,"line_end":225,"column_start":1,"column_end":45}},{"value":"/ [`std::net::Incoming`]: https://doc.rust-lang.org/std/net/struct.Incoming.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13947473,"byte_end":13947555,"line_start":226,"line_end":226,"column_start":1,"column_end":83}}]},{"kind":"Struct","id":{"krate":0,"index":8482},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13951445,"byte_end":13951454,"line_start":49,"line_end":49,"column_start":12,"column_end":21},"name":"TcpStream","qualname":"::net::tcp::stream::TcpStream","value":"TcpStream {  }","parent":null,"children":[{"krate":0,"index":8483}],"decl_id":null,"docs":" A TCP stream between a local and a remote socket.","sig":null,"attributes":[{"value":"/ A TCP stream between a local and a remote socket.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13949887,"byte_end":13949940,"line_start":12,"line_end":12,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13949941,"byte_end":13949944,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ A `TcpStream` can either be created by connecting to an endpoint, via the [`connect`] method,","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13949945,"byte_end":13950042,"line_start":14,"line_end":14,"column_start":1,"column_end":98}},{"value":"/ or by [accepting] a connection from a [listener].  It can be read or written to using the","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13950043,"byte_end":13950136,"line_start":15,"line_end":15,"column_start":1,"column_end":94}},{"value":"/ [`AsyncRead`], [`AsyncWrite`], and related extension traits in [`futures::io`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13950137,"byte_end":13950220,"line_start":16,"line_end":16,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13950221,"byte_end":13950224,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The connection will be closed when the value is dropped. The reading and writing portions of","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13950225,"byte_end":13950321,"line_start":18,"line_end":18,"column_start":1,"column_end":97}},{"value":"/ the connection can also be shut down individually with the [`shutdown`] method.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13950322,"byte_end":13950405,"line_start":19,"line_end":19,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13950406,"byte_end":13950409,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::net::TcpStream`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13950410,"byte_end":13950471,"line_start":21,"line_end":21,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13950472,"byte_end":13950475,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ [`connect`]: struct.TcpStream.html#method.connect","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13950476,"byte_end":13950529,"line_start":23,"line_end":23,"column_start":1,"column_end":54}},{"value":"/ [accepting]: struct.TcpListener.html#method.accept","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13950530,"byte_end":13950584,"line_start":24,"line_end":24,"column_start":1,"column_end":55}},{"value":"/ [listener]: struct.TcpListener.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13950585,"byte_end":13950624,"line_start":25,"line_end":25,"column_start":1,"column_end":40}},{"value":"/ [`AsyncRead`]: https://docs.rs/futures/0.3/futures/io/trait.AsyncRead.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13950625,"byte_end":13950703,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ [`AsyncWrite`]: https://docs.rs/futures/0.3/futures/io/trait.AsyncWrite.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13950704,"byte_end":13950784,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/ [`futures::io`]: https://docs.rs/futures/0.3/futures/io/index.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13950785,"byte_end":13950855,"line_start":28,"line_end":28,"column_start":1,"column_end":71}},{"value":"/ [`shutdown`]: struct.TcpStream.html#method.shutdown","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13950856,"byte_end":13950911,"line_start":29,"line_end":29,"column_start":1,"column_end":56}},{"value":"/ [`std::net::TcpStream`]: https://doc.rust-lang.org/std/net/struct.TcpStream.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13950912,"byte_end":13950996,"line_start":30,"line_end":30,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13950997,"byte_end":13951000,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13951001,"byte_end":13951016,"line_start":32,"line_end":32,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13951017,"byte_end":13951020,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13951021,"byte_end":13951034,"line_start":34,"line_end":34,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13951035,"byte_end":13951109,"line_start":35,"line_end":35,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13951110,"byte_end":13951115,"line_start":36,"line_end":36,"column_start":1,"column_end":6}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13951116,"byte_end":13951150,"line_start":37,"line_end":37,"column_start":1,"column_end":35}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13951151,"byte_end":13951181,"line_start":38,"line_end":38,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13951182,"byte_end":13951185,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13951186,"byte_end":13951251,"line_start":40,"line_end":40,"column_start":1,"column_end":66}},{"value":"/ stream.write_all(b\"hello world\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13951252,"byte_end":13951296,"line_start":41,"line_end":41,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13951297,"byte_end":13951300,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let mut buf = vec![0u8; 1024];","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13951301,"byte_end":13951335,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"/ let n = stream.read(&mut buf).await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13951336,"byte_end":13951377,"line_start":44,"line_end":44,"column_start":1,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13951378,"byte_end":13951383,"line_start":45,"line_end":45,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13951384,"byte_end":13951401,"line_start":46,"line_end":46,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13951402,"byte_end":13951409,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":7922},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13952219,"byte_end":13952226,"line_start":73,"line_end":73,"column_start":18,"column_end":25},"name":"connect","qualname":"<TcpStream>::connect","value":"pub async fn connect<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new TCP stream connected to the specified address.","sig":null,"attributes":[{"value":"/ Creates a new TCP stream connected to the specified address.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13951538,"byte_end":13951602,"line_start":54,"line_end":54,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13951607,"byte_end":13951610,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ This method will create a new TCP socket and attempt to connect it to the `addr`","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13951615,"byte_end":13951699,"line_start":56,"line_end":56,"column_start":5,"column_end":89}},{"value":"/ provided. The [returned future] will be resolved once the stream has successfully","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13951704,"byte_end":13951789,"line_start":57,"line_end":57,"column_start":5,"column_end":90}},{"value":"/ connected, or it will return an error if one occurs.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13951794,"byte_end":13951850,"line_start":58,"line_end":58,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13951855,"byte_end":13951858,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [returned future]: struct.Connect.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13951863,"byte_end":13951905,"line_start":60,"line_end":60,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13951910,"byte_end":13951913,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13951918,"byte_end":13951932,"line_start":62,"line_end":62,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13951937,"byte_end":13951940,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13951945,"byte_end":13951958,"line_start":64,"line_end":64,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13951963,"byte_end":13952037,"line_start":65,"line_end":65,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13952042,"byte_end":13952047,"line_start":66,"line_end":66,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13952052,"byte_end":13952086,"line_start":67,"line_end":67,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13952091,"byte_end":13952094,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13952099,"byte_end":13952157,"line_start":69,"line_end":69,"column_start":5,"column_end":63}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13952162,"byte_end":13952167,"line_start":70,"line_end":70,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13952172,"byte_end":13952189,"line_start":71,"line_end":71,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13952194,"byte_end":13952201,"line_start":72,"line_end":72,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7927},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13953395,"byte_end":13953405,"line_start":113,"line_end":113,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpStream>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this stream is connected to.","sig":null,"attributes":[{"value":"/ Returns the local address that this stream is connected to.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13952979,"byte_end":13953042,"line_start":99,"line_end":99,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13953047,"byte_end":13953050,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13953055,"byte_end":13953070,"line_start":101,"line_end":101,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13953075,"byte_end":13953078,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13953083,"byte_end":13953096,"line_start":103,"line_end":103,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13953101,"byte_end":13953175,"line_start":104,"line_end":104,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13953180,"byte_end":13953185,"line_start":105,"line_end":105,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13953190,"byte_end":13953224,"line_start":106,"line_end":106,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13953229,"byte_end":13953232,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13953237,"byte_end":13953298,"line_start":108,"line_end":108,"column_start":5,"column_end":66}},{"value":"/ let addr = stream.local_addr()?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13953303,"byte_end":13953339,"line_start":109,"line_end":109,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13953344,"byte_end":13953349,"line_start":110,"line_end":110,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13953354,"byte_end":13953371,"line_start":111,"line_end":111,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13953376,"byte_end":13953383,"line_start":112,"line_end":112,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7928},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13953912,"byte_end":13953921,"line_start":131,"line_end":131,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<TcpStream>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the remote address that this stream is connected to.","sig":null,"attributes":[{"value":"/ Returns the remote address that this stream is connected to.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13953496,"byte_end":13953560,"line_start":117,"line_end":117,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13953565,"byte_end":13953568,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13953573,"byte_end":13953588,"line_start":119,"line_end":119,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13953593,"byte_end":13953596,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13953601,"byte_end":13953614,"line_start":121,"line_end":121,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13953619,"byte_end":13953693,"line_start":122,"line_end":122,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13953698,"byte_end":13953703,"line_start":123,"line_end":123,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13953708,"byte_end":13953742,"line_start":124,"line_end":124,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13953747,"byte_end":13953750,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13953755,"byte_end":13953816,"line_start":126,"line_end":126,"column_start":5,"column_end":66}},{"value":"/ let peer = stream.peer_addr()?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13953821,"byte_end":13953856,"line_start":127,"line_end":127,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13953861,"byte_end":13953866,"line_start":128,"line_end":128,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13953871,"byte_end":13953888,"line_start":129,"line_end":129,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13953893,"byte_end":13953900,"line_start":130,"line_end":130,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7929},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13954576,"byte_end":13954579,"line_start":155,"line_end":155,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpStream>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13954011,"byte_end":13954069,"line_start":135,"line_end":135,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13954074,"byte_end":13954077,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13954082,"byte_end":13954142,"line_start":137,"line_end":137,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13954147,"byte_end":13954150,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: #method.set_ttl","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13954155,"byte_end":13954187,"line_start":139,"line_end":139,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13954192,"byte_end":13954195,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13954200,"byte_end":13954214,"line_start":141,"line_end":141,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13954219,"byte_end":13954222,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13954227,"byte_end":13954240,"line_start":143,"line_end":143,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13954245,"byte_end":13954319,"line_start":144,"line_end":144,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13954324,"byte_end":13954329,"line_start":145,"line_end":145,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13954334,"byte_end":13954368,"line_start":146,"line_end":146,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13954373,"byte_end":13954376,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13954381,"byte_end":13954442,"line_start":148,"line_end":148,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13954447,"byte_end":13954450,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ stream.set_ttl(100)?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13954455,"byte_end":13954480,"line_start":150,"line_end":150,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(stream.ttl()?, 100);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13954485,"byte_end":13954520,"line_start":151,"line_end":151,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13954525,"byte_end":13954530,"line_start":152,"line_end":152,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13954535,"byte_end":13954552,"line_start":153,"line_end":153,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13954557,"byte_end":13954564,"line_start":154,"line_end":154,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7930},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13955218,"byte_end":13955225,"line_start":178,"line_end":178,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpStream>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13954656,"byte_end":13954714,"line_start":159,"line_end":159,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13954719,"byte_end":13954722,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13954727,"byte_end":13954803,"line_start":161,"line_end":161,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13954808,"byte_end":13954829,"line_start":162,"line_end":162,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13954834,"byte_end":13954837,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13954842,"byte_end":13954856,"line_start":164,"line_end":164,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13954861,"byte_end":13954864,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13954869,"byte_end":13954882,"line_start":166,"line_end":166,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13954887,"byte_end":13954961,"line_start":167,"line_end":167,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13954966,"byte_end":13954971,"line_start":168,"line_end":168,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13954976,"byte_end":13955010,"line_start":169,"line_end":169,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13955015,"byte_end":13955018,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13955023,"byte_end":13955084,"line_start":171,"line_end":171,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13955089,"byte_end":13955092,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ stream.set_ttl(100)?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13955097,"byte_end":13955122,"line_start":173,"line_end":173,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(stream.ttl()?, 100);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13955127,"byte_end":13955162,"line_start":174,"line_end":174,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13955167,"byte_end":13955172,"line_start":175,"line_end":175,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13955177,"byte_end":13955194,"line_start":176,"line_end":176,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13955199,"byte_end":13955206,"line_start":177,"line_end":177,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7931},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13956076,"byte_end":13956080,"line_start":204,"line_end":204,"column_start":18,"column_end":22},"name":"peek","qualname":"<TcpStream>::peek","value":"pub async fn peek<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is connected, without\n removing that data from the queue.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is connected, without","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13955318,"byte_end":13955407,"line_start":182,"line_end":182,"column_start":5,"column_end":94}},{"value":"/ removing that data from the queue.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13955412,"byte_end":13955450,"line_start":183,"line_end":183,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13955455,"byte_end":13955458,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes peeked.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13955463,"byte_end":13955514,"line_start":185,"line_end":185,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13955519,"byte_end":13955522,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ Successive calls return the same data. This is accomplished by passing `MSG_PEEK` as a flag","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13955527,"byte_end":13955622,"line_start":187,"line_end":187,"column_start":5,"column_end":100}},{"value":"/ to the underlying `recv` system call.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13955627,"byte_end":13955668,"line_start":188,"line_end":188,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13955673,"byte_end":13955676,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13955681,"byte_end":13955695,"line_start":190,"line_end":190,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13955700,"byte_end":13955703,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13955708,"byte_end":13955721,"line_start":192,"line_end":192,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13955726,"byte_end":13955800,"line_start":193,"line_end":193,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13955805,"byte_end":13955810,"line_start":194,"line_end":194,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13955815,"byte_end":13955849,"line_start":195,"line_end":195,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13955854,"byte_end":13955857,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13955862,"byte_end":13955923,"line_start":197,"line_end":197,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13955928,"byte_end":13955931,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0; 1024];","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13955936,"byte_end":13955968,"line_start":199,"line_end":199,"column_start":5,"column_end":37}},{"value":"/ let n = stream.peek(&mut buf).await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13955973,"byte_end":13956014,"line_start":200,"line_end":200,"column_start":5,"column_end":46}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13956019,"byte_end":13956024,"line_start":201,"line_end":201,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13956029,"byte_end":13956046,"line_start":202,"line_end":202,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13956051,"byte_end":13956058,"line_start":203,"line_end":203,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7934},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13956766,"byte_end":13956773,"line_start":228,"line_end":228,"column_start":12,"column_end":19},"name":"nodelay","qualname":"<TcpStream>::nodelay","value":"pub fn nodelay(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13956175,"byte_end":13956237,"line_start":208,"line_end":208,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13956242,"byte_end":13956245,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_nodelay`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13956250,"byte_end":13956314,"line_start":210,"line_end":210,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13956319,"byte_end":13956322,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ [`set_nodelay`]: #method.set_nodelay","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13956327,"byte_end":13956367,"line_start":212,"line_end":212,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13956372,"byte_end":13956375,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13956380,"byte_end":13956394,"line_start":214,"line_end":214,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13956399,"byte_end":13956402,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13956407,"byte_end":13956420,"line_start":216,"line_end":216,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13956425,"byte_end":13956499,"line_start":217,"line_end":217,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13956504,"byte_end":13956509,"line_start":218,"line_end":218,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13956514,"byte_end":13956548,"line_start":219,"line_end":219,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13956553,"byte_end":13956556,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13956561,"byte_end":13956622,"line_start":221,"line_end":221,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13956627,"byte_end":13956630,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ stream.set_nodelay(true)?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13956635,"byte_end":13956665,"line_start":223,"line_end":223,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(stream.nodelay()?, true);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13956670,"byte_end":13956710,"line_start":224,"line_end":224,"column_start":5,"column_end":45}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13956715,"byte_end":13956720,"line_start":225,"line_end":225,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13956725,"byte_end":13956742,"line_start":226,"line_end":226,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13956747,"byte_end":13956754,"line_start":227,"line_end":227,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7935},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13957657,"byte_end":13957668,"line_start":254,"line_end":254,"column_start":12,"column_end":23},"name":"set_nodelay","qualname":"<TcpStream>::set_nodelay","value":"pub fn set_nodelay(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13956855,"byte_end":13956917,"line_start":232,"line_end":232,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13956922,"byte_end":13956925,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ If set, this option disables the Nagle algorithm. This means that","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13956930,"byte_end":13956999,"line_start":234,"line_end":234,"column_start":5,"column_end":74}},{"value":"/ segments are always sent as soon as possible, even if there is only a","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13957004,"byte_end":13957077,"line_start":235,"line_end":235,"column_start":5,"column_end":78}},{"value":"/ small amount of data. When not set, data is buffered until there is a","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13957082,"byte_end":13957155,"line_start":236,"line_end":236,"column_start":5,"column_end":78}},{"value":"/ sufficient amount to send out, thereby avoiding the frequent sending of","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13957160,"byte_end":13957235,"line_start":237,"line_end":237,"column_start":5,"column_end":80}},{"value":"/ small packets.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13957240,"byte_end":13957258,"line_start":238,"line_end":238,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13957263,"byte_end":13957266,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13957271,"byte_end":13957285,"line_start":240,"line_end":240,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13957290,"byte_end":13957293,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13957298,"byte_end":13957311,"line_start":242,"line_end":242,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13957316,"byte_end":13957390,"line_start":243,"line_end":243,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13957395,"byte_end":13957400,"line_start":244,"line_end":244,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13957405,"byte_end":13957439,"line_start":245,"line_end":245,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13957444,"byte_end":13957447,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13957452,"byte_end":13957513,"line_start":247,"line_end":247,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13957518,"byte_end":13957521,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ stream.set_nodelay(true)?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13957526,"byte_end":13957556,"line_start":249,"line_end":249,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(stream.nodelay()?, true);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13957561,"byte_end":13957601,"line_start":250,"line_end":250,"column_start":5,"column_end":45}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13957606,"byte_end":13957611,"line_start":251,"line_end":251,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13957616,"byte_end":13957633,"line_start":252,"line_end":252,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13957638,"byte_end":13957645,"line_start":253,"line_end":253,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7936},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13958505,"byte_end":13958513,"line_start":279,"line_end":279,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<TcpStream>::shutdown","value":"pub fn shutdown(&Self, std::net::Shutdown) -> std::io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13957774,"byte_end":13957840,"line_start":258,"line_end":258,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13957845,"byte_end":13957848,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ This method will cause all pending and future I/O on the specified portions to return","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13957853,"byte_end":13957942,"line_start":260,"line_end":260,"column_start":5,"column_end":94}},{"value":"/ immediately with an appropriate value (see the documentation of [`Shutdown`]).","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13957947,"byte_end":13958029,"line_start":261,"line_end":261,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13958034,"byte_end":13958037,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ [`Shutdown`]: https://doc.rust-lang.org/std/net/enum.Shutdown.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13958042,"byte_end":13958112,"line_start":263,"line_end":263,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13958117,"byte_end":13958120,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13958125,"byte_end":13958139,"line_start":265,"line_end":265,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13958144,"byte_end":13958147,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13958152,"byte_end":13958165,"line_start":267,"line_end":267,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13958170,"byte_end":13958244,"line_start":268,"line_end":268,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13958249,"byte_end":13958254,"line_start":269,"line_end":269,"column_start":5,"column_end":10}},{"value":"/ use std::net::Shutdown;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13958259,"byte_end":13958286,"line_start":270,"line_end":270,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13958291,"byte_end":13958294,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13958299,"byte_end":13958333,"line_start":272,"line_end":272,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13958338,"byte_end":13958341,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13958346,"byte_end":13958407,"line_start":274,"line_end":274,"column_start":5,"column_end":66}},{"value":"/ stream.shutdown(Shutdown::Both)?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13958412,"byte_end":13958449,"line_start":275,"line_end":275,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13958454,"byte_end":13958459,"line_start":276,"line_end":276,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13958464,"byte_end":13958481,"line_start":277,"line_end":277,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13958486,"byte_end":13958493,"line_start":278,"line_end":278,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":8507},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13964379,"byte_end":13964388,"line_start":47,"line_end":47,"column_start":12,"column_end":21},"name":"UdpSocket","qualname":"::net::udp::UdpSocket","value":"UdpSocket {  }","parent":null,"children":[{"krate":0,"index":8508}],"decl_id":null,"docs":" A UDP socket.","sig":null,"attributes":[{"value":"/ A UDP socket.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13963125,"byte_end":13963142,"line_start":10,"line_end":10,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13963143,"byte_end":13963146,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ After creating a `UdpSocket` by [`bind`]ing it to a socket address, data can be [sent to] and","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13963147,"byte_end":13963244,"line_start":12,"line_end":12,"column_start":1,"column_end":98}},{"value":"/ [received from] any other socket address.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13963245,"byte_end":13963290,"line_start":13,"line_end":13,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13963291,"byte_end":13963294,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ As stated in the User Datagram Protocol's specification in [IETF RFC 768], UDP is an unordered,","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13963295,"byte_end":13963394,"line_start":15,"line_end":15,"column_start":1,"column_end":100}},{"value":"/ unreliable protocol. Refer to [`TcpListener`] and [`TcpStream`] for async TCP primitives.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13963395,"byte_end":13963488,"line_start":16,"line_end":16,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13963489,"byte_end":13963492,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::net::UdpSocket`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13963493,"byte_end":13963554,"line_start":18,"line_end":18,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13963555,"byte_end":13963558,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`bind`]: #method.bind","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13963559,"byte_end":13963585,"line_start":20,"line_end":20,"column_start":1,"column_end":27}},{"value":"/ [received from]: #method.recv_from","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13963586,"byte_end":13963624,"line_start":21,"line_end":21,"column_start":1,"column_end":39}},{"value":"/ [sent to]: #method.send_to","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13963625,"byte_end":13963655,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ [`TcpListener`]: struct.TcpListener.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13963656,"byte_end":13963700,"line_start":23,"line_end":23,"column_start":1,"column_end":45}},{"value":"/ [`TcpStream`]: struct.TcpStream.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13963701,"byte_end":13963741,"line_start":24,"line_end":24,"column_start":1,"column_end":41}},{"value":"/ [`std::net`]: https://doc.rust-lang.org/std/net/index.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13963742,"byte_end":13963804,"line_start":25,"line_end":25,"column_start":1,"column_end":63}},{"value":"/ [IETF RFC 768]: https://tools.ietf.org/html/rfc768","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13963805,"byte_end":13963859,"line_start":26,"line_end":26,"column_start":1,"column_end":55}},{"value":"/ [`std::net::UdpSocket`]: https://doc.rust-lang.org/std/net/struct.UdpSocket.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13963860,"byte_end":13963944,"line_start":27,"line_end":27,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13963945,"byte_end":13963948,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13963949,"byte_end":13963964,"line_start":29,"line_end":29,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13963965,"byte_end":13963968,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13963969,"byte_end":13963982,"line_start":31,"line_end":31,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13963983,"byte_end":13964057,"line_start":32,"line_end":32,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13964058,"byte_end":13964063,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13964064,"byte_end":13964098,"line_start":34,"line_end":34,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13964099,"byte_end":13964102,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13964103,"byte_end":13964161,"line_start":36,"line_end":36,"column_start":1,"column_end":59}},{"value":"/ let mut buf = vec![0u8; 1024];","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13964162,"byte_end":13964196,"line_start":37,"line_end":37,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13964197,"byte_end":13964200,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ loop {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13964201,"byte_end":13964211,"line_start":39,"line_end":39,"column_start":1,"column_end":11}},{"value":"/     let (n, peer) = socket.recv_from(&mut buf).await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13964212,"byte_end":13964270,"line_start":40,"line_end":40,"column_start":1,"column_end":59}},{"value":"/     socket.send_to(&buf[..n], &peer).await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13964271,"byte_end":13964319,"line_start":41,"line_end":41,"column_start":1,"column_end":49}},{"value":"/ }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13964320,"byte_end":13964325,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13964326,"byte_end":13964331,"line_start":43,"line_end":43,"column_start":1,"column_end":6}},{"value":"/ # }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13964332,"byte_end":13964342,"line_start":44,"line_end":44,"column_start":1,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13964343,"byte_end":13964350,"line_start":45,"line_end":45,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":7979},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13965043,"byte_end":13965047,"line_start":70,"line_end":70,"column_start":18,"column_end":22},"name":"bind","qualname":"<UdpSocket>::bind","value":"pub async fn bind<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a UDP socket from the given address.","sig":null,"attributes":[{"value":"/ Creates a UDP socket from the given address.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13964456,"byte_end":13964504,"line_start":52,"line_end":52,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13964509,"byte_end":13964512,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Binding with a port number of 0 will request that the OS assigns a port to this socket. The","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13964517,"byte_end":13964612,"line_start":54,"line_end":54,"column_start":5,"column_end":100}},{"value":"/ port allocated can be queried via the [`local_addr`] method.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13964617,"byte_end":13964681,"line_start":55,"line_end":55,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13964686,"byte_end":13964689,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ [`local_addr`]: #method.local_addr","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13964694,"byte_end":13964732,"line_start":57,"line_end":57,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13964737,"byte_end":13964740,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13964745,"byte_end":13964759,"line_start":59,"line_end":59,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13964764,"byte_end":13964767,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13964772,"byte_end":13964785,"line_start":61,"line_end":61,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13964790,"byte_end":13964864,"line_start":62,"line_end":62,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13964869,"byte_end":13964874,"line_start":63,"line_end":63,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13964879,"byte_end":13964913,"line_start":64,"line_end":64,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13964918,"byte_end":13964921,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13964926,"byte_end":13964981,"line_start":66,"line_end":66,"column_start":5,"column_end":60}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13964986,"byte_end":13964991,"line_start":67,"line_end":67,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13964996,"byte_end":13965013,"line_start":68,"line_end":68,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13965018,"byte_end":13965025,"line_start":69,"line_end":69,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7984},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13966326,"byte_end":13966335,"line_start":110,"line_end":110,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UdpSocket>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the peer address that this listener is connected to.","sig":null,"attributes":[{"value":"/ Returns the peer address that this listener is connected to.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13965670,"byte_end":13965734,"line_start":91,"line_end":91,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13965739,"byte_end":13965742,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ This can be useful, for example, when connect to port 0 to figure out which port was","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13965747,"byte_end":13965835,"line_start":93,"line_end":93,"column_start":5,"column_end":93}},{"value":"/ actually connected.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13965840,"byte_end":13965863,"line_start":94,"line_end":94,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13965868,"byte_end":13965871,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13965876,"byte_end":13965890,"line_start":96,"line_end":96,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13965895,"byte_end":13965898,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13965903,"byte_end":13965916,"line_start":98,"line_end":98,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13965921,"byte_end":13965995,"line_start":99,"line_end":99,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13966000,"byte_end":13966005,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13966010,"byte_end":13966044,"line_start":101,"line_end":101,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13966049,"byte_end":13966052,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ let socket1 = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13966057,"byte_end":13966113,"line_start":103,"line_end":103,"column_start":5,"column_end":61}},{"value":"/ let socket2 = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13966118,"byte_end":13966174,"line_start":104,"line_end":104,"column_start":5,"column_end":61}},{"value":"/ socket1.connect(socket2.local_addr()?).await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13966179,"byte_end":13966229,"line_start":105,"line_end":105,"column_start":5,"column_end":55}},{"value":"/ let addr = socket1.peer_addr()?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13966234,"byte_end":13966270,"line_start":106,"line_end":106,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13966275,"byte_end":13966280,"line_start":107,"line_end":107,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13966285,"byte_end":13966302,"line_start":108,"line_end":108,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13966307,"byte_end":13966314,"line_start":109,"line_end":109,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7986},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13967051,"byte_end":13967061,"line_start":134,"line_end":134,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UdpSocket>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this listener is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this listener is bound to.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13966519,"byte_end":13966580,"line_start":117,"line_end":117,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13966585,"byte_end":13966588,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ This can be useful, for example, when binding to port 0 to figure out which port was","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13966593,"byte_end":13966681,"line_start":119,"line_end":119,"column_start":5,"column_end":93}},{"value":"/ actually bound.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13966686,"byte_end":13966705,"line_start":120,"line_end":120,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13966710,"byte_end":13966713,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13966718,"byte_end":13966732,"line_start":122,"line_end":122,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13966737,"byte_end":13966740,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13966745,"byte_end":13966758,"line_start":124,"line_end":124,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13966763,"byte_end":13966837,"line_start":125,"line_end":125,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13966842,"byte_end":13966847,"line_start":126,"line_end":126,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13966852,"byte_end":13966886,"line_start":127,"line_end":127,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13966891,"byte_end":13966894,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13966899,"byte_end":13966954,"line_start":129,"line_end":129,"column_start":5,"column_end":60}},{"value":"/ let addr = socket.local_addr()?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13966959,"byte_end":13966995,"line_start":130,"line_end":130,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13967000,"byte_end":13967005,"line_start":131,"line_end":131,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13967010,"byte_end":13967027,"line_start":132,"line_end":132,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13967032,"byte_end":13967039,"line_start":133,"line_end":133,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7988},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13968105,"byte_end":13968112,"line_start":167,"line_end":167,"column_start":18,"column_end":25},"name":"send_to","qualname":"<UdpSocket>::send_to","value":"pub async fn send_to<A: ToSocketAddrs, '_, '_>(&'_ Self, &'_ [u8], A)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the given address.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the given address.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13967247,"byte_end":13967297,"line_start":141,"line_end":141,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13967302,"byte_end":13967305,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes written.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13967310,"byte_end":13967362,"line_start":143,"line_end":143,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13967367,"byte_end":13967370,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13967375,"byte_end":13967389,"line_start":145,"line_end":145,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13967394,"byte_end":13967397,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13967402,"byte_end":13967415,"line_start":147,"line_end":147,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13967420,"byte_end":13967494,"line_start":148,"line_end":148,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13967499,"byte_end":13967504,"line_start":149,"line_end":149,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13967509,"byte_end":13967543,"line_start":150,"line_end":150,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13967548,"byte_end":13967551,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ const THE_MERCHANT_OF_VENICE: &[u8] = b\"","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13967556,"byte_end":13967600,"line_start":152,"line_end":152,"column_start":5,"column_end":49}},{"value":"/     If you prick us, do we not bleed?","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13967605,"byte_end":13967646,"line_start":153,"line_end":153,"column_start":5,"column_end":46}},{"value":"/     If you tickle us, do we not laugh?","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13967651,"byte_end":13967693,"line_start":154,"line_end":154,"column_start":5,"column_end":47}},{"value":"/     If you poison us, do we not die?","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13967698,"byte_end":13967738,"line_start":155,"line_end":155,"column_start":5,"column_end":45}},{"value":"/     And if you wrong us, shall we not revenge?","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13967743,"byte_end":13967793,"line_start":156,"line_end":156,"column_start":5,"column_end":55}},{"value":"/ \";","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13967798,"byte_end":13967804,"line_start":157,"line_end":157,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13967809,"byte_end":13967812,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13967817,"byte_end":13967872,"line_start":159,"line_end":159,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13967877,"byte_end":13967880,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ let addr = \"127.0.0.1:7878\";","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13967885,"byte_end":13967917,"line_start":161,"line_end":161,"column_start":5,"column_end":37}},{"value":"/ let sent = socket.send_to(THE_MERCHANT_OF_VENICE, &addr).await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13967922,"byte_end":13967990,"line_start":162,"line_end":162,"column_start":5,"column_end":73}},{"value":"/ println!(\"Sent {} bytes to {}\", sent, addr);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13967995,"byte_end":13968043,"line_start":163,"line_end":163,"column_start":5,"column_end":53}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13968048,"byte_end":13968053,"line_start":164,"line_end":164,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13968058,"byte_end":13968075,"line_start":165,"line_end":165,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13968080,"byte_end":13968087,"line_start":166,"line_end":166,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7993},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13969227,"byte_end":13969236,"line_start":203,"line_end":203,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<UdpSocket>::recv_from","value":"pub async fn recv_from<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13968645,"byte_end":13968679,"line_start":184,"line_end":184,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13968684,"byte_end":13968687,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes read and the origin.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13968692,"byte_end":13968756,"line_start":186,"line_end":186,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13968761,"byte_end":13968764,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13968769,"byte_end":13968783,"line_start":188,"line_end":188,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13968788,"byte_end":13968791,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13968796,"byte_end":13968809,"line_start":190,"line_end":190,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13968814,"byte_end":13968888,"line_start":191,"line_end":191,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13968893,"byte_end":13968898,"line_start":192,"line_end":192,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13968903,"byte_end":13968937,"line_start":193,"line_end":193,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13968942,"byte_end":13968945,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13968950,"byte_end":13969005,"line_start":195,"line_end":195,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13969010,"byte_end":13969013,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0; 1024];","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13969018,"byte_end":13969050,"line_start":197,"line_end":197,"column_start":5,"column_end":37}},{"value":"/ let (n, peer) = socket.recv_from(&mut buf).await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13969055,"byte_end":13969109,"line_start":198,"line_end":198,"column_start":5,"column_end":59}},{"value":"/ println!(\"Received {} bytes from {}\", n, peer);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13969114,"byte_end":13969165,"line_start":199,"line_end":199,"column_start":5,"column_end":56}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13969170,"byte_end":13969175,"line_start":200,"line_end":200,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13969180,"byte_end":13969197,"line_start":201,"line_end":201,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13969202,"byte_end":13969209,"line_start":202,"line_end":202,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7996},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13969964,"byte_end":13969973,"line_start":226,"line_end":226,"column_start":18,"column_end":27},"name":"peek_from","qualname":"<UdpSocket>::peek_from","value":"pub async fn peek_from<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from socket without removing it from the queue.","sig":null,"attributes":[{"value":"/ Receives data from socket without removing it from the queue.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13969350,"byte_end":13969415,"line_start":207,"line_end":207,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13969420,"byte_end":13969423,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes peeked and the origin.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13969428,"byte_end":13969494,"line_start":209,"line_end":209,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13969499,"byte_end":13969502,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13969507,"byte_end":13969521,"line_start":211,"line_end":211,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13969526,"byte_end":13969529,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13969534,"byte_end":13969547,"line_start":213,"line_end":213,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13969552,"byte_end":13969626,"line_start":214,"line_end":214,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13969631,"byte_end":13969636,"line_start":215,"line_end":215,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13969641,"byte_end":13969675,"line_start":216,"line_end":216,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13969680,"byte_end":13969683,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13969688,"byte_end":13969743,"line_start":218,"line_end":218,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13969748,"byte_end":13969751,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0; 1024];","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13969756,"byte_end":13969788,"line_start":220,"line_end":220,"column_start":5,"column_end":37}},{"value":"/ let (n, peer) = socket.peek_from(&mut buf).await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13969793,"byte_end":13969847,"line_start":221,"line_end":221,"column_start":5,"column_end":59}},{"value":"/ println!(\"Peeked {} bytes from {}\", n, peer);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13969852,"byte_end":13969901,"line_start":222,"line_end":222,"column_start":5,"column_end":54}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13969906,"byte_end":13969911,"line_start":223,"line_end":223,"column_start":5,"column_end":10}},{"value":"/ # Ok (()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13969916,"byte_end":13969934,"line_start":224,"line_end":224,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13969939,"byte_end":13969946,"line_start":225,"line_end":225,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7999},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13970865,"byte_end":13970872,"line_start":252,"line_end":252,"column_start":18,"column_end":25},"name":"connect","qualname":"<UdpSocket>::connect","value":"pub async fn connect<A: ToSocketAddrs, '_>(&'_ Self, A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Connects the UDP socket to a remote address.","sig":null,"attributes":[{"value":"/ Connects the UDP socket to a remote address.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13970087,"byte_end":13970135,"line_start":230,"line_end":230,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13970140,"byte_end":13970143,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ When connected, methods [`send`] and [`recv`] will use the specified address for sending","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13970148,"byte_end":13970240,"line_start":232,"line_end":232,"column_start":5,"column_end":97}},{"value":"/ and receiving messages. Additionally, a filter will be applied to [`recv_from`] so that it","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13970245,"byte_end":13970339,"line_start":233,"line_end":233,"column_start":5,"column_end":99}},{"value":"/ only receives messages from that same address.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13970344,"byte_end":13970394,"line_start":234,"line_end":234,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13970399,"byte_end":13970402,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ [`send`]: #method.send","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13970407,"byte_end":13970433,"line_start":236,"line_end":236,"column_start":5,"column_end":31}},{"value":"/ [`recv`]: #method.recv","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13970438,"byte_end":13970464,"line_start":237,"line_end":237,"column_start":5,"column_end":31}},{"value":"/ [`recv_from`]: #method.recv_from","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13970469,"byte_end":13970505,"line_start":238,"line_end":238,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13970510,"byte_end":13970513,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13970518,"byte_end":13970532,"line_start":240,"line_end":240,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13970537,"byte_end":13970540,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13970545,"byte_end":13970558,"line_start":242,"line_end":242,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13970563,"byte_end":13970637,"line_start":243,"line_end":243,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13970642,"byte_end":13970647,"line_start":244,"line_end":244,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13970652,"byte_end":13970686,"line_start":245,"line_end":245,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13970691,"byte_end":13970694,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13970699,"byte_end":13970754,"line_start":247,"line_end":247,"column_start":5,"column_end":60}},{"value":"/ socket.connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13970759,"byte_end":13970803,"line_start":248,"line_end":248,"column_start":5,"column_end":49}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13970808,"byte_end":13970813,"line_start":249,"line_end":249,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13970818,"byte_end":13970835,"line_start":250,"line_end":250,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13970840,"byte_end":13970847,"line_start":251,"line_end":251,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8005},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13972311,"byte_end":13972315,"line_start":297,"line_end":297,"column_start":18,"column_end":22},"name":"send","qualname":"<UdpSocket>::send","value":"pub async fn send<'_, '_>(&'_ Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the remote address to which it is connected.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the remote address to which it is connected.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13971575,"byte_end":13971651,"line_start":275,"line_end":275,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13971656,"byte_end":13971659,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13971664,"byte_end":13971736,"line_start":277,"line_end":277,"column_start":5,"column_end":77}},{"value":"/ This method will fail if the socket is not connected.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13971741,"byte_end":13971798,"line_start":278,"line_end":278,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13971803,"byte_end":13971806,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: #method.connect","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13971811,"byte_end":13971843,"line_start":280,"line_end":280,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13971848,"byte_end":13971851,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13971856,"byte_end":13971870,"line_start":282,"line_end":282,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13971875,"byte_end":13971878,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13971883,"byte_end":13971896,"line_start":284,"line_end":284,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13971901,"byte_end":13971975,"line_start":285,"line_end":285,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13971980,"byte_end":13971985,"line_start":286,"line_end":286,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13971990,"byte_end":13972024,"line_start":287,"line_end":287,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13972029,"byte_end":13972032,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:34254\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13972037,"byte_end":13972096,"line_start":289,"line_end":289,"column_start":5,"column_end":64}},{"value":"/ socket.connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13972101,"byte_end":13972145,"line_start":290,"line_end":290,"column_start":5,"column_end":49}},{"value":"/ let bytes = socket.send(b\"Hi there!\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13972150,"byte_end":13972199,"line_start":291,"line_end":291,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13972204,"byte_end":13972207,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ println!(\"Sent {} bytes\", bytes);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13972212,"byte_end":13972249,"line_start":293,"line_end":293,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13972254,"byte_end":13972259,"line_start":294,"line_end":294,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13972264,"byte_end":13972281,"line_start":295,"line_end":295,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13972286,"byte_end":13972293,"line_start":296,"line_end":296,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8008},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13972995,"byte_end":13972999,"line_start":321,"line_end":321,"column_start":18,"column_end":22},"name":"recv","qualname":"<UdpSocket>::recv","value":"pub async fn recv<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13972406,"byte_end":13972440,"line_start":301,"line_end":301,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13972445,"byte_end":13972448,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes read.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13972453,"byte_end":13972502,"line_start":303,"line_end":303,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13972507,"byte_end":13972510,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13972515,"byte_end":13972529,"line_start":305,"line_end":305,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13972534,"byte_end":13972537,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13972542,"byte_end":13972555,"line_start":307,"line_end":307,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13972560,"byte_end":13972634,"line_start":308,"line_end":308,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13972639,"byte_end":13972644,"line_start":309,"line_end":309,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13972649,"byte_end":13972683,"line_start":310,"line_end":310,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13972688,"byte_end":13972691,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13972696,"byte_end":13972751,"line_start":312,"line_end":312,"column_start":5,"column_end":60}},{"value":"/ socket.connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13972756,"byte_end":13972800,"line_start":313,"line_end":313,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13972805,"byte_end":13972808,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0; 1024];","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13972813,"byte_end":13972845,"line_start":315,"line_end":315,"column_start":5,"column_end":37}},{"value":"/ let n = socket.recv(&mut buf).await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13972850,"byte_end":13972891,"line_start":316,"line_end":316,"column_start":5,"column_end":46}},{"value":"/ println!(\"Received {} bytes\", n);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13972896,"byte_end":13972933,"line_start":317,"line_end":317,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13972938,"byte_end":13972943,"line_start":318,"line_end":318,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13972948,"byte_end":13972965,"line_start":319,"line_end":319,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13972970,"byte_end":13972977,"line_start":320,"line_end":320,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8011},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13973718,"byte_end":13973722,"line_start":345,"line_end":345,"column_start":18,"column_end":22},"name":"peek","qualname":"<UdpSocket>::peek","value":"pub async fn peek<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket without removing it from the queue.","sig":null,"attributes":[{"value":"/ Receives data from the socket without removing it from the queue.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13973094,"byte_end":13973163,"line_start":325,"line_end":325,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13973168,"byte_end":13973171,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes peeked.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13973176,"byte_end":13973227,"line_start":327,"line_end":327,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13973232,"byte_end":13973235,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13973240,"byte_end":13973254,"line_start":329,"line_end":329,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13973259,"byte_end":13973262,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13973267,"byte_end":13973280,"line_start":331,"line_end":331,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13973285,"byte_end":13973359,"line_start":332,"line_end":332,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13973364,"byte_end":13973369,"line_start":333,"line_end":333,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13973374,"byte_end":13973408,"line_start":334,"line_end":334,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13973413,"byte_end":13973416,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13973421,"byte_end":13973476,"line_start":336,"line_end":336,"column_start":5,"column_end":60}},{"value":"/ socket.connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13973481,"byte_end":13973525,"line_start":337,"line_end":337,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13973530,"byte_end":13973533,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0; 1024];","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13973538,"byte_end":13973570,"line_start":339,"line_end":339,"column_start":5,"column_end":37}},{"value":"/ let n = socket.peek(&mut buf).await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13973575,"byte_end":13973616,"line_start":340,"line_end":340,"column_start":5,"column_end":46}},{"value":"/ println!(\"Peeked {} bytes\", n);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13973621,"byte_end":13973656,"line_start":341,"line_end":341,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13973661,"byte_end":13973666,"line_start":342,"line_end":342,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13973671,"byte_end":13973688,"line_start":343,"line_end":343,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13973693,"byte_end":13973700,"line_start":344,"line_end":344,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8014},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13974029,"byte_end":13974038,"line_start":354,"line_end":354,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<UdpSocket>::broadcast","value":"pub fn broadcast(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13973817,"byte_end":13973881,"line_start":349,"line_end":349,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13973886,"byte_end":13973889,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_broadcast`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13973894,"byte_end":13973960,"line_start":351,"line_end":351,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13973965,"byte_end":13973968,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ [`set_broadcast`]: #method.set_broadcast","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13973973,"byte_end":13974017,"line_start":353,"line_end":353,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":8015},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13974291,"byte_end":13974304,"line_start":361,"line_end":361,"column_start":12,"column_end":25},"name":"set_broadcast","qualname":"<UdpSocket>::set_broadcast","value":"pub fn set_broadcast(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13974122,"byte_end":13974186,"line_start":358,"line_end":358,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13974191,"byte_end":13974194,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ When enabled, this socket is allowed to send packets to a broadcast address.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13974199,"byte_end":13974279,"line_start":360,"line_end":360,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":8016},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13974643,"byte_end":13974660,"line_start":370,"line_end":370,"column_start":12,"column_end":29},"name":"multicast_loop_v4","qualname":"<UdpSocket>::multicast_loop_v4","value":"pub fn multicast_loop_v4(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13974402,"byte_end":13974471,"line_start":365,"line_end":365,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13974476,"byte_end":13974479,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v4`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13974484,"byte_end":13974558,"line_start":367,"line_end":367,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13974563,"byte_end":13974566,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v4`]: #method.set_multicast_loop_v4","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13974571,"byte_end":13974631,"line_start":369,"line_end":369,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":8017},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13975005,"byte_end":13975026,"line_start":381,"line_end":381,"column_start":12,"column_end":33},"name":"set_multicast_loop_v4","qualname":"<UdpSocket>::set_multicast_loop_v4","value":"pub fn set_multicast_loop_v4(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13974752,"byte_end":13974821,"line_start":374,"line_end":374,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13974826,"byte_end":13974829,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ If enabled, multicast packets will be looped back to the local socket.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13974834,"byte_end":13974908,"line_start":376,"line_end":376,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13974913,"byte_end":13974916,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13974921,"byte_end":13974931,"line_start":378,"line_end":378,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13974936,"byte_end":13974939,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv6 sockets.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13974944,"byte_end":13974993,"line_start":380,"line_end":380,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":8018},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13975369,"byte_end":13975385,"line_start":390,"line_end":390,"column_start":12,"column_end":28},"name":"multicast_ttl_v4","qualname":"<UdpSocket>::multicast_ttl_v4","value":"pub fn multicast_ttl_v4(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13975132,"byte_end":13975200,"line_start":385,"line_end":385,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13975205,"byte_end":13975208,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_ttl_v4`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13975213,"byte_end":13975286,"line_start":387,"line_end":387,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13975291,"byte_end":13975294,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_ttl_v4`]: #method.set_multicast_ttl_v4","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13975299,"byte_end":13975357,"line_start":389,"line_end":389,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":8019},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13975869,"byte_end":13975889,"line_start":403,"line_end":403,"column_start":12,"column_end":32},"name":"set_multicast_ttl_v4","qualname":"<UdpSocket>::set_multicast_ttl_v4","value":"pub fn set_multicast_ttl_v4(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13975475,"byte_end":13975543,"line_start":394,"line_end":394,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13975548,"byte_end":13975551,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ Indicates the time-to-live value of outgoing multicast packets for this socket. The default","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13975556,"byte_end":13975651,"line_start":396,"line_end":396,"column_start":5,"column_end":100}},{"value":"/ value is 1 which means that multicast packets don't leave the local network unless","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13975656,"byte_end":13975742,"line_start":397,"line_end":397,"column_start":5,"column_end":91}},{"value":"/ explicitly requested.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13975747,"byte_end":13975772,"line_start":398,"line_end":398,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13975777,"byte_end":13975780,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13975785,"byte_end":13975795,"line_start":400,"line_end":400,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13975800,"byte_end":13975803,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv6 sockets.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13975808,"byte_end":13975857,"line_start":402,"line_end":402,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":8020},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13976238,"byte_end":13976255,"line_start":412,"line_end":412,"column_start":12,"column_end":29},"name":"multicast_loop_v6","qualname":"<UdpSocket>::multicast_loop_v6","value":"pub fn multicast_loop_v6(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13975995,"byte_end":13976066,"line_start":407,"line_end":407,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13976071,"byte_end":13976074,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v6`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13976079,"byte_end":13976153,"line_start":409,"line_end":409,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13976158,"byte_end":13976161,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v6`]: #method.set_multicast_loop_v6","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13976166,"byte_end":13976226,"line_start":411,"line_end":411,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":8021},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13976604,"byte_end":13976625,"line_start":423,"line_end":423,"column_start":12,"column_end":33},"name":"set_multicast_loop_v6","qualname":"<UdpSocket>::set_multicast_loop_v6","value":"pub fn set_multicast_loop_v6(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13976347,"byte_end":13976418,"line_start":416,"line_end":416,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13976423,"byte_end":13976426,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ Controls whether this socket sees the multicast packets it sends itself.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13976431,"byte_end":13976507,"line_start":418,"line_end":418,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13976512,"byte_end":13976515,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13976520,"byte_end":13976530,"line_start":420,"line_end":420,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13976535,"byte_end":13976538,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv4 sockets.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13976543,"byte_end":13976592,"line_start":422,"line_end":422,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":8022},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13976919,"byte_end":13976922,"line_start":432,"line_end":432,"column_start":12,"column_end":15},"name":"ttl","qualname":"<UdpSocket>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13976731,"byte_end":13976789,"line_start":427,"line_end":427,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13976794,"byte_end":13976797,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13976802,"byte_end":13976862,"line_start":429,"line_end":429,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13976867,"byte_end":13976870,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: #method.set_ttl","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13976875,"byte_end":13976907,"line_start":431,"line_end":431,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":8023},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13977184,"byte_end":13977191,"line_start":440,"line_end":440,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<UdpSocket>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13976999,"byte_end":13977057,"line_start":436,"line_end":436,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13977062,"byte_end":13977065,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13977070,"byte_end":13977146,"line_start":438,"line_end":438,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13977151,"byte_end":13977172,"line_start":439,"line_end":439,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":8024},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13978208,"byte_end":13978225,"line_start":468,"line_end":468,"column_start":12,"column_end":29},"name":"join_multicast_v4","qualname":"<UdpSocket>::join_multicast_v4","value":"pub fn join_multicast_v4(&Self, Ipv4Addr, Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_ADD_MEMBERSHIP` type.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13977284,"byte_end":13977342,"line_start":444,"line_end":444,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13977347,"byte_end":13977350,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ This method specifies a new multicast group for this socket to join. The address must be","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13977355,"byte_end":13977447,"line_start":446,"line_end":446,"column_start":5,"column_end":97}},{"value":"/ a valid multicast address, and `interface` is the address of the local interface with which","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13977452,"byte_end":13977547,"line_start":447,"line_end":447,"column_start":5,"column_end":100}},{"value":"/ the system should join the multicast group. If it's equal to `INADDR_ANY` then an","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13977552,"byte_end":13977637,"line_start":448,"line_end":448,"column_start":5,"column_end":90}},{"value":"/ appropriate interface is chosen by the system.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13977642,"byte_end":13977692,"line_start":449,"line_end":449,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13977697,"byte_end":13977700,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13977705,"byte_end":13977719,"line_start":451,"line_end":451,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13977724,"byte_end":13977727,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13977732,"byte_end":13977745,"line_start":453,"line_end":453,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13977750,"byte_end":13977824,"line_start":454,"line_end":454,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13977829,"byte_end":13977834,"line_start":455,"line_end":455,"column_start":5,"column_end":10}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13977839,"byte_end":13977866,"line_start":456,"line_end":456,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13977871,"byte_end":13977874,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13977879,"byte_end":13977913,"line_start":458,"line_end":458,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13977918,"byte_end":13977921,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ let interface = Ipv4Addr::new(0, 0, 0, 0);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13977926,"byte_end":13977972,"line_start":460,"line_end":460,"column_start":5,"column_end":51}},{"value":"/ let mdns_addr = Ipv4Addr::new(224, 0, 0, 123);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13977977,"byte_end":13978027,"line_start":461,"line_end":461,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13978032,"byte_end":13978035,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13978040,"byte_end":13978095,"line_start":463,"line_end":463,"column_start":5,"column_end":60}},{"value":"/ socket.join_multicast_v4(mdns_addr, interface)?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13978100,"byte_end":13978152,"line_start":464,"line_end":464,"column_start":5,"column_end":57}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13978157,"byte_end":13978162,"line_start":465,"line_end":465,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13978167,"byte_end":13978184,"line_start":466,"line_end":466,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13978189,"byte_end":13978196,"line_start":467,"line_end":467,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8025},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13979288,"byte_end":13979305,"line_start":497,"line_end":497,"column_start":12,"column_end":29},"name":"join_multicast_v6","qualname":"<UdpSocket>::join_multicast_v6","value":"pub fn join_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13978405,"byte_end":13978465,"line_start":474,"line_end":474,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13978470,"byte_end":13978473,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ This method specifies a new multicast group for this socket to join. The address must be","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13978478,"byte_end":13978570,"line_start":476,"line_end":476,"column_start":5,"column_end":97}},{"value":"/ a valid multicast address, and `interface` is the index of the interface to join/leave (or","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13978575,"byte_end":13978669,"line_start":477,"line_end":477,"column_start":5,"column_end":99}},{"value":"/ 0 to indicate any interface).","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13978674,"byte_end":13978707,"line_start":478,"line_end":478,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13978712,"byte_end":13978715,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13978720,"byte_end":13978734,"line_start":480,"line_end":480,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13978739,"byte_end":13978742,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13978747,"byte_end":13978760,"line_start":482,"line_end":482,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13978765,"byte_end":13978839,"line_start":483,"line_end":483,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13978844,"byte_end":13978849,"line_start":484,"line_end":484,"column_start":5,"column_end":10}},{"value":"/ use std::net::{Ipv6Addr, SocketAddr};","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13978854,"byte_end":13978895,"line_start":485,"line_end":485,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13978900,"byte_end":13978903,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13978908,"byte_end":13978942,"line_start":487,"line_end":487,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13978947,"byte_end":13978950,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ let socket_addr = SocketAddr::new(Ipv6Addr::new(0, 0, 0, 0, 0, 0, 0, 0).into(), 0);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13978955,"byte_end":13979042,"line_start":489,"line_end":489,"column_start":5,"column_end":92}},{"value":"/ let mdns_addr = Ipv6Addr::new(0xFF02, 0, 0, 0, 0, 0, 0, 0x0123);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13979047,"byte_end":13979115,"line_start":490,"line_end":490,"column_start":5,"column_end":73}},{"value":"/ let socket = UdpSocket::bind(&socket_addr).await?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13979120,"byte_end":13979174,"line_start":491,"line_end":491,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13979179,"byte_end":13979182,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ socket.join_multicast_v6(&mdns_addr, 0)?;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13979187,"byte_end":13979232,"line_start":493,"line_end":493,"column_start":5,"column_end":50}},{"value":"/ #","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13979237,"byte_end":13979242,"line_start":494,"line_end":494,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13979247,"byte_end":13979264,"line_start":495,"line_end":495,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13979269,"byte_end":13979276,"line_start":496,"line_end":496,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8026},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13979698,"byte_end":13979716,"line_start":508,"line_end":508,"column_start":12,"column_end":30},"name":"leave_multicast_v4","qualname":"<UdpSocket>::leave_multicast_v4","value":"pub fn leave_multicast_v4(&Self, Ipv4Addr, Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_DROP_MEMBERSHIP` type.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13979479,"byte_end":13979538,"line_start":503,"line_end":503,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13979543,"byte_end":13979546,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v4`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13979551,"byte_end":13979621,"line_start":505,"line_end":505,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13979626,"byte_end":13979629,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v4`]: #method.join_multicast_v4","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13979634,"byte_end":13979686,"line_start":507,"line_end":507,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":8027},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13980118,"byte_end":13980136,"line_start":519,"line_end":519,"column_start":12,"column_end":30},"name":"leave_multicast_v6","qualname":"<UdpSocket>::leave_multicast_v6","value":"pub fn leave_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13979897,"byte_end":13979958,"line_start":514,"line_end":514,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13979963,"byte_end":13979966,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v6`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13979971,"byte_end":13980041,"line_start":516,"line_end":516,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13980046,"byte_end":13980049,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v6`]: #method.join_multicast_v6","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13980054,"byte_end":13980106,"line_start":518,"line_end":518,"column_start":5,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":8530},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/pin/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"pin","qualname":"::pin","value":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/pin/mod.rs","parent":null,"children":[{"krate":0,"index":8531}],"decl_id":null,"docs":" Types that pin data to its location in memory.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/utils.rs","byte_start":14825,"byte_end":14853,"line_start":132,"line_end":132,"column_start":13,"column_end":41}},{"value":"/ Types that pin data to its location in memory.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/pin/mod.rs","byte_start":13985944,"byte_end":13985994,"line_start":1,"line_end":1,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/pin/mod.rs","byte_start":13985995,"byte_end":13985998,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ For more documentation see [`std::pin`](https://doc.rust-lang.org/std/pin/index.html).","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/pin/mod.rs","byte_start":13985999,"byte_end":13986089,"line_start":3,"line_end":3,"column_start":1,"column_end":91}}]},{"kind":"Mod","id":{"krate":0,"index":8534},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/process.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"process","qualname":"::process","value":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/process.rs","parent":null,"children":[{"krate":0,"index":8535},{"krate":0,"index":8538},{"krate":0,"index":8541},{"krate":0,"index":8544},{"krate":0,"index":8547},{"krate":0,"index":8550},{"krate":0,"index":8553},{"krate":0,"index":8556},{"krate":0,"index":8559},{"krate":0,"index":8560},{"krate":0,"index":8563},{"krate":0,"index":8566}],"decl_id":null,"docs":" A module for working with processes.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/utils.rs","byte_start":14825,"byte_end":14853,"line_start":132,"line_end":132,"column_start":13,"column_end":41}},{"value":"cfg(all(not(target_os = \"unknown\"), feature = \"std\"))","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":11272,"byte_end":11328,"line_start":324,"line_end":324,"column_start":5,"column_end":61}},{"value":"/ A module for working with processes.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/process.rs","byte_start":13986130,"byte_end":13986170,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/process.rs","byte_start":13986171,"byte_end":13986174,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is mostly concerned with spawning and interacting with child processes, but it also","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/process.rs","byte_start":13986175,"byte_end":13986274,"line_start":3,"line_end":3,"column_start":1,"column_end":100}},{"value":"/ provides abort and exit for terminating the current process.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/process.rs","byte_start":13986275,"byte_end":13986339,"line_start":4,"line_end":4,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/process.rs","byte_start":13986340,"byte_end":13986343,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::process`].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/process.rs","byte_start":13986344,"byte_end":13986393,"line_start":6,"line_end":6,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/process.rs","byte_start":13986394,"byte_end":13986397,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [`std::process`]: https://doc.rust-lang.org/std/process/index.html","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/process.rs","byte_start":13986398,"byte_end":13986468,"line_start":8,"line_end":8,"column_start":1,"column_end":71}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/utils.rs","byte_start":11808,"byte_end":11812,"line_start":11,"line_end":11,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":14}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/yield_now.rs","byte_start":13355643,"byte_end":13355651,"line_start":36,"line_end":36,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1995},{"krate":0,"index":1996}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/builder.rs","byte_start":13357550,"byte_end":13357557,"line_start":17,"line_end":17,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2082},{"krate":0,"index":2083},{"krate":0,"index":2084},{"krate":0,"index":2087},{"krate":0,"index":2090},{"krate":0,"index":2093}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/builder.rs","byte_start":13362914,"byte_end":13362931,"line_start":192,"line_end":192,"column_start":28,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2103},{"krate":0,"index":2104}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/join_handle.rs","byte_start":13365177,"byte_end":13365187,"line_start":25,"line_end":25,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2138},{"krate":0,"index":2139},{"krate":0,"index":2140}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/join_handle.rs","byte_start":13366260,"byte_end":13366270,"line_start":70,"line_end":70,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2145}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/join_handle.rs","byte_start":13366419,"byte_end":13366429,"line_start":78,"line_end":78,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2148},{"krate":0,"index":2149}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task.rs","byte_start":13369631,"byte_end":13369635,"line_start":16,"line_end":16,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2199},{"krate":0,"index":2200},{"krate":0,"index":2201}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task.rs","byte_start":13370245,"byte_end":13370249,"line_start":42,"line_end":42,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2204}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_id.rs","byte_start":13370803,"byte_end":13370809,"line_start":18,"line_end":18,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2217}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_id.rs","byte_start":13371220,"byte_end":13371226,"line_start":32,"line_end":32,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2220}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13371816,"byte_end":13371824,"line_start":21,"line_end":21,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2243},{"krate":0,"index":2246},{"krate":0,"index":2251}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13375704,"byte_end":13375715,"line_start":148,"line_end":148,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2255}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13375859,"byte_end":13375870,"line_start":154,"line_end":154,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2257}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13376035,"byte_end":13376046,"line_start":160,"line_end":160,"column_start":16,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13376414,"byte_end":13376423,"line_start":177,"line_end":177,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2265},{"krate":0,"index":2266},{"krate":0,"index":2269}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_locals_wrapper.rs","byte_start":13378275,"byte_end":13378292,"line_start":21,"line_end":21,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2294},{"krate":0,"index":2295},{"krate":0,"index":2296},{"krate":0,"index":2297},{"krate":0,"index":2298},{"krate":0,"index":2302}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_locals_wrapper.rs","byte_start":13379705,"byte_end":13379722,"line_start":77,"line_end":77,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2307}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/delay.rs","byte_start":13515808,"byte_end":13515819,"line_start":21,"line_end":21,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2459}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/delay.rs","byte_start":13515999,"byte_end":13516010,"line_start":29,"line_end":29,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2462},{"krate":0,"index":2463}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/flatten.rs","byte_start":13517039,"byte_end":13517052,"line_start":33,"line_end":33,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2490}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/flatten.rs","byte_start":13517239,"byte_end":13517252,"line_start":41,"line_end":41,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2493},{"krate":0,"index":2494}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/race.rs","byte_start":13518517,"byte_end":13518521,"line_start":22,"line_end":22,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2518}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/race.rs","byte_start":13518775,"byte_end":13518779,"line_start":35,"line_end":35,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2522},{"krate":0,"index":2523}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/try_race.rs","byte_start":13519772,"byte_end":13519779,"line_start":22,"line_end":22,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2547}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/try_race.rs","byte_start":13520039,"byte_end":13520046,"line_start":35,"line_end":35,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2553},{"krate":0,"index":2554}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/join.rs","byte_start":13521518,"byte_end":13521522,"line_start":22,"line_end":22,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2578}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/join.rs","byte_start":13521756,"byte_end":13521760,"line_start":35,"line_end":35,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2582},{"krate":0,"index":2583}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/try_join.rs","byte_start":13522938,"byte_end":13522945,"line_start":22,"line_end":22,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2607}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/try_join.rs","byte_start":13523188,"byte_end":13523195,"line_start":35,"line_end":35,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2614},{"krate":0,"index":2615}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":13515422,"byte_end":13515423,"line_start":287,"line_end":287,"column_start":40,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/pending.rs","byte_start":13525125,"byte_end":13525132,"line_start":38,"line_end":38,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2678},{"krate":0,"index":2679}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/poll_fn.rs","byte_start":13526025,"byte_end":13526031,"line_start":38,"line_end":38,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/poll_fn.rs","byte_start":13526061,"byte_end":13526067,"line_start":40,"line_end":40,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2707},{"krate":0,"index":2708}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/timeout.rs","byte_start":13220074,"byte_end":13220087,"line_start":49,"line_end":49,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/timeout.rs","byte_start":13220314,"byte_end":13220327,"line_start":59,"line_end":59,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":102},{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/timeout.rs","byte_start":13220963,"byte_end":13220975,"line_start":80,"line_end":80,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/timeout.rs","byte_start":13221002,"byte_end":13221014,"line_start":82,"line_end":82,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":13527718,"byte_end":13527719,"line_start":46,"line_end":46,"column_start":32,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2744},{"krate":0,"index":2745},{"krate":0,"index":2746}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/maybe_done.rs","byte_start":13528532,"byte_end":13528541,"line_start":27,"line_end":27,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2769},{"krate":0,"index":2770},{"krate":0,"index":2771}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/maybe_done.rs","byte_start":13529794,"byte_end":13529803,"line_start":65,"line_end":65,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2774},{"krate":0,"index":2775}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/all.rs","byte_start":13291382,"byte_end":13291391,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":185}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/all.rs","byte_start":13291598,"byte_end":13291607,"line_start":26,"line_end":26,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/all.rs","byte_start":13291647,"byte_end":13291656,"line_start":28,"line_end":28,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":193},{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/any.rs","byte_start":13292737,"byte_end":13292746,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/any.rs","byte_start":13292953,"byte_end":13292962,"line_start":26,"line_end":26,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/any.rs","byte_start":13293002,"byte_end":13293011,"line_start":28,"line_end":28,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":236},{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/chain.rs","byte_start":13294381,"byte_end":13294386,"line_start":27,"line_end":27,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/chain.rs","byte_start":13294604,"byte_end":13294609,"line_start":36,"line_end":36,"column_start":55,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":268},{"krate":0,"index":269}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/cloned.rs","byte_start":13295647,"byte_end":13295653,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":289}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/cloned.rs","byte_start":13295765,"byte_end":13295771,"line_start":21,"line_end":21,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":294},{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/cmp.rs","byte_start":13296722,"byte_end":13296731,"line_start":27,"line_end":27,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/cmp.rs","byte_start":13296960,"byte_end":13296969,"line_start":38,"line_end":38,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":332},{"krate":0,"index":333}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/copied.rs","byte_start":13299268,"byte_end":13299274,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/copied.rs","byte_start":13299386,"byte_end":13299392,"line_start":21,"line_end":21,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":358},{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/cycle.rs","byte_start":13300049,"byte_end":13300054,"line_start":19,"line_end":19,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":382}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/cycle.rs","byte_start":13300239,"byte_end":13300244,"line_start":31,"line_end":31,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":385},{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/enumerate.rs","byte_start":13300937,"byte_end":13300946,"line_start":17,"line_end":17,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/enumerate.rs","byte_start":13301053,"byte_end":13301062,"line_start":23,"line_end":23,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":409},{"krate":0,"index":410}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/eq.rs","byte_start":13302078,"byte_end":13302086,"line_start":24,"line_end":24,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/eq.rs","byte_start":13302300,"byte_end":13302308,"line_start":36,"line_end":36,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":444},{"krate":0,"index":445}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/filter.rs","byte_start":13303577,"byte_end":13303583,"line_start":24,"line_end":24,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":466}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/filter.rs","byte_start":13303748,"byte_end":13303754,"line_start":33,"line_end":33,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":470},{"krate":0,"index":471}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/filter_map.rs","byte_start":13304551,"byte_end":13304560,"line_start":17,"line_end":17,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":492}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/filter_map.rs","byte_start":13304679,"byte_end":13304688,"line_start":23,"line_end":23,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":497},{"krate":0,"index":498}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/find.rs","byte_start":13305527,"byte_end":13305537,"line_start":14,"line_end":14,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":526}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/find.rs","byte_start":13305671,"byte_end":13305681,"line_start":20,"line_end":20,"column_start":29,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/find.rs","byte_start":13305722,"byte_end":13305732,"line_start":22,"line_end":22,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":534},{"krate":0,"index":535}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/find_map.rs","byte_start":13306526,"byte_end":13306539,"line_start":14,"line_end":14,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":563}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/find_map.rs","byte_start":13306673,"byte_end":13306686,"line_start":20,"line_end":20,"column_start":29,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/find_map.rs","byte_start":13306730,"byte_end":13306743,"line_start":22,"line_end":22,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":572},{"krate":0,"index":573}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/fold.rs","byte_start":13307656,"byte_end":13307666,"line_start":19,"line_end":19,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":598}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/fold.rs","byte_start":13307859,"byte_end":13307869,"line_start":29,"line_end":29,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":603},{"krate":0,"index":604}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/for_each.rs","byte_start":13308829,"byte_end":13308842,"line_start":19,"line_end":19,"column_start":12,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":628}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/for_each.rs","byte_start":13308991,"byte_end":13309004,"line_start":28,"line_end":28,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":632},{"krate":0,"index":633}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/fuse.rs","byte_start":13310035,"byte_end":13310039,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":653}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/fuse.rs","byte_start":13310194,"byte_end":13310198,"line_start":33,"line_end":33,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":656},{"krate":0,"index":657}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/ge.rs","byte_start":13311221,"byte_end":13311229,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":690}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/ge.rs","byte_start":13311437,"byte_end":13311445,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":694},{"krate":0,"index":695}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/gt.rs","byte_start":13312454,"byte_end":13312462,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":728}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/gt.rs","byte_start":13312670,"byte_end":13312678,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":732},{"krate":0,"index":733}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/inspect.rs","byte_start":13313646,"byte_end":13313653,"line_start":24,"line_end":24,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":754}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/inspect.rs","byte_start":13313802,"byte_end":13313809,"line_start":33,"line_end":33,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":758},{"krate":0,"index":759}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/last.rs","byte_start":13314529,"byte_end":13314539,"line_start":19,"line_end":19,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":784}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/last.rs","byte_start":13314655,"byte_end":13314665,"line_start":25,"line_end":25,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":787},{"krate":0,"index":788}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/le.rs","byte_start":13315783,"byte_end":13315791,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":821}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/le.rs","byte_start":13315999,"byte_end":13316007,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":825},{"krate":0,"index":826}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/lt.rs","byte_start":13317026,"byte_end":13317034,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":859}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/lt.rs","byte_start":13317242,"byte_end":13317250,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":863},{"krate":0,"index":864}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/map.rs","byte_start":13317983,"byte_end":13317986,"line_start":18,"line_end":18,"column_start":12,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":885}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/map.rs","byte_start":13318138,"byte_end":13318141,"line_start":27,"line_end":27,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":890},{"krate":0,"index":891}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/max.rs","byte_start":13318826,"byte_end":13318835,"line_start":20,"line_end":20,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":922}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/max.rs","byte_start":13318950,"byte_end":13318959,"line_start":26,"line_end":26,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":925},{"krate":0,"index":926}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/max_by.rs","byte_start":13320131,"byte_end":13320142,"line_start":21,"line_end":21,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":954}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/max_by.rs","byte_start":13320329,"byte_end":13320340,"line_start":31,"line_end":31,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":958},{"krate":0,"index":959}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/max_by_key.rs","byte_start":13321562,"byte_end":13321576,"line_start":21,"line_end":21,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":987}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/max_by_key.rs","byte_start":13321761,"byte_end":13321775,"line_start":31,"line_end":31,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":991},{"krate":0,"index":992}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/min.rs","byte_start":13323181,"byte_end":13323190,"line_start":20,"line_end":20,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1030}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/min.rs","byte_start":13323305,"byte_end":13323314,"line_start":26,"line_end":26,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1033},{"krate":0,"index":1034}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/min_by.rs","byte_start":13324483,"byte_end":13324494,"line_start":21,"line_end":21,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1062}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/min_by.rs","byte_start":13324681,"byte_end":13324692,"line_start":31,"line_end":31,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1066},{"krate":0,"index":1067}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/min_by_key.rs","byte_start":13325940,"byte_end":13325954,"line_start":21,"line_end":21,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1095}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/min_by_key.rs","byte_start":13326139,"byte_end":13326153,"line_start":31,"line_end":31,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1099},{"krate":0,"index":1100}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/ne.rs","byte_start":13327722,"byte_end":13327730,"line_start":24,"line_end":24,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1137}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/ne.rs","byte_start":13327944,"byte_end":13327952,"line_start":36,"line_end":36,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1141},{"krate":0,"index":1142}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/next.rs","byte_start":13329008,"byte_end":13329018,"line_start":13,"line_end":13,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1166},{"krate":0,"index":1167}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/nth.rs","byte_start":13329465,"byte_end":13329474,"line_start":14,"line_end":14,"column_start":26,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/nth.rs","byte_start":13329498,"byte_end":13329507,"line_start":16,"line_end":16,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1195}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/nth.rs","byte_start":13329637,"byte_end":13329646,"line_start":22,"line_end":22,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1199},{"krate":0,"index":1200}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/partial_cmp.rs","byte_start":13330859,"byte_end":13330875,"line_start":27,"line_end":27,"column_start":28,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1233}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/partial_cmp.rs","byte_start":13331104,"byte_end":13331120,"line_start":38,"line_end":38,"column_start":39,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1237},{"krate":0,"index":1238}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/position.rs","byte_start":13333503,"byte_end":13333517,"line_start":15,"line_end":15,"column_start":26,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/position.rs","byte_start":13333547,"byte_end":13333561,"line_start":17,"line_end":17,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1271}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/position.rs","byte_start":13333764,"byte_end":13333778,"line_start":27,"line_end":27,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1276},{"krate":0,"index":1277}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/scan.rs","byte_start":13334976,"byte_end":13334980,"line_start":24,"line_end":24,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1299}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/scan.rs","byte_start":13335185,"byte_end":13335189,"line_start":33,"line_end":33,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1305},{"krate":0,"index":1306}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/skip.rs","byte_start":13336174,"byte_end":13336178,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1328}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/skip.rs","byte_start":13336292,"byte_end":13336296,"line_start":30,"line_end":30,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1331},{"krate":0,"index":1332}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/skip_while.rs","byte_start":13337416,"byte_end":13337425,"line_start":24,"line_end":24,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1353}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/skip_while.rs","byte_start":13337607,"byte_end":13337616,"line_start":33,"line_end":33,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1357},{"krate":0,"index":1358}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/step_by.rs","byte_start":13338959,"byte_end":13338965,"line_start":25,"line_end":25,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1378}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/step_by.rs","byte_start":13339166,"byte_end":13339172,"line_start":35,"line_end":35,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1381},{"krate":0,"index":1382}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/take.rs","byte_start":13340375,"byte_end":13340379,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1402}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/take.rs","byte_start":13340550,"byte_end":13340554,"line_start":33,"line_end":33,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1405},{"krate":0,"index":1406}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/take_while.rs","byte_start":13341599,"byte_end":13341608,"line_start":24,"line_end":24,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1427}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/take_while.rs","byte_start":13341773,"byte_end":13341782,"line_start":33,"line_end":33,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1431},{"krate":0,"index":1432}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/try_fold.rs","byte_start":13342636,"byte_end":13342649,"line_start":15,"line_end":15,"column_start":29,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/try_fold.rs","byte_start":13342685,"byte_end":13342698,"line_start":17,"line_end":17,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1468}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/try_fold.rs","byte_start":13342910,"byte_end":13342923,"line_start":27,"line_end":27,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1475},{"krate":0,"index":1476}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/try_for_each.rs","byte_start":13343953,"byte_end":13343969,"line_start":14,"line_end":14,"column_start":26,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/try_for_each.rs","byte_start":13343999,"byte_end":13344015,"line_start":16,"line_end":16,"column_start":16,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1508}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/try_for_each.rs","byte_start":13344150,"byte_end":13344166,"line_start":22,"line_end":22,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1514},{"krate":0,"index":1515}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/zip.rs","byte_start":13345428,"byte_end":13345431,"line_start":26,"line_end":26,"column_start":60,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1539}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/zip.rs","byte_start":13345671,"byte_end":13345674,"line_start":35,"line_end":35,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1543}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/zip.rs","byte_start":13345876,"byte_end":13345879,"line_start":45,"line_end":45,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1547},{"krate":0,"index":1548}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/count.rs","byte_start":13560267,"byte_end":13560278,"line_start":21,"line_end":21,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2867}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/count.rs","byte_start":13560389,"byte_end":13560400,"line_start":27,"line_end":27,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2870},{"krate":0,"index":2871}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/merge.rs","byte_start":13561617,"byte_end":13561622,"line_start":30,"line_end":30,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2901}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/merge.rs","byte_start":13561805,"byte_end":13561810,"line_start":39,"line_end":39,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2906},{"krate":0,"index":2907}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/flatten.rs","byte_start":13563439,"byte_end":13563446,"line_start":30,"line_end":30,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2938}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/flatten.rs","byte_start":13563649,"byte_end":13563656,"line_start":43,"line_end":43,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2942},{"krate":0,"index":2943}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/flatten.rs","byte_start":13564501,"byte_end":13564508,"line_start":69,"line_end":69,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2947}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/flat_map.rs","byte_start":13565508,"byte_end":13565515,"line_start":27,"line_end":27,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2979}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/flat_map.rs","byte_start":13565770,"byte_end":13565777,"line_start":41,"line_end":41,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2984},{"krate":0,"index":2985}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/partition.rs","byte_start":13567019,"byte_end":13567034,"line_start":21,"line_end":21,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3013}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/partition.rs","byte_start":13567242,"byte_end":13567257,"line_start":31,"line_end":31,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3018},{"krate":0,"index":3019}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/timeout.rs","byte_start":13568503,"byte_end":13568510,"line_start":25,"line_end":25,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3058}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/timeout.rs","byte_start":13568695,"byte_end":13568702,"line_start":33,"line_end":33,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3061},{"krate":0,"index":3062}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/timeout.rs","byte_start":13569624,"byte_end":13569636,"line_start":62,"line_end":62,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/timeout.rs","byte_start":13569663,"byte_end":13569675,"line_start":64,"line_end":64,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3065}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/throttle.rs","byte_start":13570559,"byte_end":13570567,"line_start":32,"line_end":32,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3098}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/throttle.rs","byte_start":13570820,"byte_end":13570828,"line_start":43,"line_end":43,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3101},{"krate":0,"index":3102}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/delay.rs","byte_start":13572020,"byte_end":13572025,"line_start":23,"line_end":23,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3135}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/delay.rs","byte_start":13572231,"byte_end":13572236,"line_start":33,"line_end":33,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3138},{"krate":0,"index":3139}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/unzip.rs","byte_start":13573024,"byte_end":13573035,"line_start":20,"line_end":20,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3164}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/unzip.rs","byte_start":13573305,"byte_end":13573316,"line_start":33,"line_end":33,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3171},{"krate":0,"index":3172}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13291028,"byte_end":13291029,"line_start":2309,"line_end":2309,"column_start":40,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/empty.rs","byte_start":13347417,"byte_end":13347422,"line_start":44,"line_end":44,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1826},{"krate":0,"index":1827}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":13347923,"byte_end":13347929,"line_start":17,"line_end":17,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":13348858,"byte_end":13348864,"line_start":58,"line_end":58,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1850},{"krate":0,"index":1851}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_iter.rs","byte_start":13350218,"byte_end":13350226,"line_start":49,"line_end":49,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1876},{"krate":0,"index":1877}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_iter.rs","byte_start":13350481,"byte_end":13350489,"line_start":58,"line_end":58,"column_start":52,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1880}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/once.rs","byte_start":13351533,"byte_end":13351537,"line_start":45,"line_end":45,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1905},{"krate":0,"index":1906}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/once.rs","byte_start":13351762,"byte_end":13351766,"line_start":54,"line_end":54,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1909}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat.rs","byte_start":13352706,"byte_end":13352712,"line_start":41,"line_end":41,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1928},{"krate":0,"index":1929}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":13353281,"byte_end":13353291,"line_start":17,"line_end":17,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":13354483,"byte_end":13354493,"line_start":74,"line_end":74,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1952},{"krate":0,"index":1953}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/next_back.rs","byte_start":13581340,"byte_end":13581354,"line_start":13,"line_end":13,"column_start":56,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":3257},{"krate":0,"index":3258}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/nth_back.rs","byte_start":13581808,"byte_end":13581821,"line_start":14,"line_end":14,"column_start":13,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3284}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/nth_back.rs","byte_start":13581960,"byte_end":13581973,"line_start":20,"line_end":20,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3288},{"krate":0,"index":3289}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/rfind.rs","byte_start":13582830,"byte_end":13582841,"line_start":14,"line_end":14,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3317}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/rfind.rs","byte_start":13582982,"byte_end":13582993,"line_start":20,"line_end":20,"column_start":29,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/rfind.rs","byte_start":13583034,"byte_end":13583045,"line_start":22,"line_end":22,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3325},{"krate":0,"index":3326}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/rfold.rs","byte_start":13583970,"byte_end":13583981,"line_start":20,"line_end":20,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3351}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/rfold.rs","byte_start":13584181,"byte_end":13584192,"line_start":30,"line_end":30,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3356},{"krate":0,"index":3357}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/try_rfold.rs","byte_start":13585211,"byte_end":13585225,"line_start":20,"line_end":20,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3382}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/try_rfold.rs","byte_start":13585431,"byte_end":13585445,"line_start":30,"line_end":30,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3388},{"krate":0,"index":3389}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":13598912,"byte_end":13598920,"line_start":67,"line_end":67,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3500},{"krate":0,"index":3501}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/into_stream.rs","byte_start":13600140,"byte_end":13600141,"line_start":29,"line_end":29,"column_start":32,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3512},{"krate":0,"index":3513},{"krate":0,"index":3514}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":13601301,"byte_end":13601308,"line_start":48,"line_end":48,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3546},{"krate":0,"index":3547}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":13601476,"byte_end":13601483,"line_start":56,"line_end":56,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3550}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":13601630,"byte_end":13601637,"line_start":62,"line_end":62,"column_start":25,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":13601673,"byte_end":13601680,"line_start":64,"line_end":64,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3555}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/successors.rs","byte_start":13605832,"byte_end":13605842,"line_start":58,"line_end":58,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3608},{"krate":0,"index":3609}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_read/lines.rs","byte_start":13636747,"byte_end":13636752,"line_start":32,"line_end":32,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4448},{"krate":0,"index":4449}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_read/read_line.rs","byte_start":13638674,"byte_end":13638688,"line_start":19,"line_end":19,"column_start":46,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4492},{"krate":0,"index":4493}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_read/read_until.rs","byte_start":13640147,"byte_end":13640162,"line_start":17,"line_end":17,"column_start":46,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":4528},{"krate":0,"index":4529}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_read/split.rs","byte_start":13641362,"byte_end":13641367,"line_start":31,"line_end":31,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4562},{"krate":0,"index":4563}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_read/mod.rs","byte_start":13635116,"byte_end":13635117,"line_start":240,"line_end":240,"column_start":42,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/bytes.rs","byte_start":13654144,"byte_end":13654149,"line_start":18,"line_end":18,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4630},{"krate":0,"index":4631}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":13655964,"byte_end":13655969,"line_start":25,"line_end":25,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4665},{"krate":0,"index":4666},{"krate":0,"index":4667}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":13658128,"byte_end":13658133,"line_start":97,"line_end":97,"column_start":51,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":4671}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":13658375,"byte_end":13658380,"line_start":106,"line_end":106,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4675},{"krate":0,"index":4676}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":13659525,"byte_end":13659530,"line_start":142,"line_end":142,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":4680},{"krate":0,"index":4681}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/read.rs","byte_start":13661231,"byte_end":13661241,"line_start":14,"line_end":14,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4710},{"krate":0,"index":4711}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/read_exact.rs","byte_start":13661816,"byte_end":13661831,"line_start":15,"line_end":15,"column_start":43,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":4743},{"krate":0,"index":4744}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/read_to_end.rs","byte_start":13662753,"byte_end":13662768,"line_start":15,"line_end":15,"column_start":43,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":4774},{"krate":0,"index":4775}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/read_to_end.rs","byte_start":13663918,"byte_end":13663923,"line_start":48,"line_end":48,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4783}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/read_to_string.rs","byte_start":13665240,"byte_end":13665258,"line_start":19,"line_end":19,"column_start":43,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":4823},{"krate":0,"index":4824}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/read_vectored.rs","byte_start":13666612,"byte_end":13666630,"line_start":14,"line_end":14,"column_start":43,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":4857},{"krate":0,"index":4858}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13667450,"byte_end":13667454,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4888},{"krate":0,"index":4889},{"krate":0,"index":4890},{"krate":0,"index":4891},{"krate":0,"index":4892}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13671126,"byte_end":13671130,"line_start":160,"line_end":160,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4895}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13672048,"byte_end":13672052,"line_start":194,"line_end":194,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4900},{"krate":0,"index":4901}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/mod.rs","byte_start":13652534,"byte_end":13652535,"line_start":376,"line_end":376,"column_start":36,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/seek/seek.rs","byte_start":13674941,"byte_end":13674951,"line_start":14,"line_end":14,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4991},{"krate":0,"index":4992}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/seek/mod.rs","byte_start":13674605,"byte_end":13674606,"line_start":50,"line_end":50,"column_start":36,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/write/flush.rs","byte_start":13680742,"byte_end":13680753,"line_start":13,"line_end":13,"column_start":44,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":5034},{"krate":0,"index":5035}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/write/write.rs","byte_start":13681265,"byte_end":13681276,"line_start":14,"line_end":14,"column_start":44,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":5064},{"krate":0,"index":5065}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/write/write_all.rs","byte_start":13681841,"byte_end":13681855,"line_start":15,"line_end":15,"column_start":44,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":5097},{"krate":0,"index":5098}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/write/write_fmt.rs","byte_start":13682826,"byte_end":13682840,"line_start":17,"line_end":17,"column_start":44,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":5129},{"krate":0,"index":5130}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/write/write_vectored.rs","byte_start":13684325,"byte_end":13684344,"line_start":14,"line_end":14,"column_start":44,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":5162},{"krate":0,"index":5163}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/write/mod.rs","byte_start":13680443,"byte_end":13680444,"line_start":187,"line_end":187,"column_start":38,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/utils.rs","byte_start":13684811,"byte_end":13684817,"line_start":8,"line_end":8,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5219}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/utils.rs","byte_start":13685070,"byte_end":13685082,"line_start":20,"line_end":20,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":5223}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/utils.rs","byte_start":13685369,"byte_end":13685381,"line_start":32,"line_end":32,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5226}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/utils.rs","byte_start":13685512,"byte_end":13685524,"line_start":38,"line_end":38,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5228}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13687505,"byte_end":13687514,"line_start":55,"line_end":55,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5278},{"krate":0,"index":5279}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13688742,"byte_end":13688751,"line_start":100,"line_end":100,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":5282},{"krate":0,"index":5283},{"krate":0,"index":5284},{"krate":0,"index":5285},{"krate":0,"index":5286},{"krate":0,"index":5287}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13691491,"byte_end":13691500,"line_start":201,"line_end":201,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5290},{"krate":0,"index":5291}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13692954,"byte_end":13692963,"line_start":240,"line_end":240,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5295},{"krate":0,"index":5297}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13693885,"byte_end":13693894,"line_start":265,"line_end":265,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":5300}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13694232,"byte_end":13694241,"line_start":277,"line_end":277,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5303}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13701071,"byte_end":13701080,"line_start":119,"line_end":119,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5345},{"krate":0,"index":5346},{"krate":0,"index":5347},{"krate":0,"index":5348},{"krate":0,"index":5349},{"krate":0,"index":5350},{"krate":0,"index":5353},{"krate":0,"index":5354}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13706912,"byte_end":13706921,"line_start":303,"line_end":303,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5357},{"krate":0,"index":5358},{"krate":0,"index":5359}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13707819,"byte_end":13707828,"line_start":330,"line_end":330,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5362}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13708074,"byte_end":13708083,"line_start":339,"line_end":339,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5365}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":13712879,"byte_end":13712889,"line_start":150,"line_end":150,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5410},{"krate":0,"index":5411}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13714952,"byte_end":13714958,"line_start":29,"line_end":29,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5451},{"krate":0,"index":5452},{"krate":0,"index":5453},{"krate":0,"index":5454},{"krate":0,"index":5455},{"krate":0,"index":5456}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13718259,"byte_end":13718265,"line_start":154,"line_end":154,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5459}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13718531,"byte_end":13718537,"line_start":167,"line_end":167,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5462},{"krate":0,"index":5463}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13719053,"byte_end":13719059,"line_start":188,"line_end":188,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5466},{"krate":0,"index":5467}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13719409,"byte_end":13719415,"line_start":201,"line_end":201,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5469},{"krate":0,"index":5470},{"krate":0,"index":5471},{"krate":0,"index":5472}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13720174,"byte_end":13720180,"line_start":227,"line_end":227,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5474},{"krate":0,"index":5475},{"krate":0,"index":5476}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13720704,"byte_end":13720710,"line_start":245,"line_end":245,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5478},{"krate":0,"index":5479},{"krate":0,"index":5480}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/empty.rs","byte_start":13721988,"byte_end":13721993,"line_start":39,"line_end":39,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5509}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/empty.rs","byte_start":13722112,"byte_end":13722117,"line_start":45,"line_end":45,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":5511}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/empty.rs","byte_start":13722321,"byte_end":13722326,"line_start":56,"line_end":56,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5513},{"krate":0,"index":5515}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/repeat.rs","byte_start":13723511,"byte_end":13723517,"line_start":40,"line_end":40,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5541}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/repeat.rs","byte_start":13723636,"byte_end":13723642,"line_start":46,"line_end":46,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":5543}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/sink.rs","byte_start":13724627,"byte_end":13724631,"line_start":36,"line_end":36,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5569}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/sink.rs","byte_start":13724750,"byte_end":13724754,"line_start":42,"line_end":42,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":5571},{"krate":0,"index":5572},{"krate":0,"index":5573}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/timeout.rs","byte_start":13726502,"byte_end":13726509,"line_start":60,"line_end":60,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5674},{"krate":0,"index":5675}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":13729500,"byte_end":13729506,"line_start":90,"line_end":90,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5708},{"krate":0,"index":5710},{"krate":0,"index":5712}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":13732987,"byte_end":13732993,"line_start":178,"line_end":178,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5852}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":13735845,"byte_end":13735850,"line_start":96,"line_end":96,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5751}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":13737866,"byte_end":13737871,"line_start":150,"line_end":150,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":5758}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":13740009,"byte_end":13740014,"line_start":204,"line_end":204,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5891}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":13743345,"byte_end":13743351,"line_start":90,"line_end":90,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5810},{"krate":0,"index":5812},{"krate":0,"index":5814}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":13746832,"byte_end":13746838,"line_start":178,"line_end":178,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5929}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13756114,"byte_end":13756126,"line_start":46,"line_end":46,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":6016},{"krate":0,"index":6017},{"krate":0,"index":6021},{"krate":0,"index":6022},{"krate":0,"index":6023},{"krate":0,"index":6027},{"krate":0,"index":6028},{"krate":0,"index":6029},{"krate":0,"index":6032},{"krate":0,"index":6035},{"krate":0,"index":6039},{"krate":0,"index":6042}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13763478,"byte_end":13763490,"line_start":288,"line_end":288,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6044}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13763926,"byte_end":13763938,"line_start":305,"line_end":305,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":6046}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13764231,"byte_end":13764243,"line_start":314,"line_end":314,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6048}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13764342,"byte_end":13764354,"line_start":320,"line_end":320,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6050}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13764628,"byte_end":13764640,"line_start":328,"line_end":328,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6052}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13766345,"byte_end":13766357,"line_start":56,"line_end":56,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":6113},{"krate":0,"index":6117},{"krate":0,"index":6120},{"krate":0,"index":6121}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13769392,"byte_end":13769404,"line_start":155,"line_end":155,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6123}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13770439,"byte_end":13770447,"line_start":183,"line_end":183,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6128},{"krate":0,"index":6129}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13770784,"byte_end":13770792,"line_start":192,"line_end":192,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6133}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13770959,"byte_end":13770971,"line_start":199,"line_end":199,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":6135}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13771264,"byte_end":13771276,"line_start":208,"line_end":208,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6137}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13771375,"byte_end":13771387,"line_start":214,"line_end":214,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6139}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13771571,"byte_end":13771583,"line_start":221,"line_end":221,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6141}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13772808,"byte_end":13772818,"line_start":45,"line_end":45,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":6198},{"krate":0,"index":6202},{"krate":0,"index":6203},{"krate":0,"index":6204},{"krate":0,"index":6205}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13776030,"byte_end":13776040,"line_start":151,"line_end":151,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6207}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13776484,"byte_end":13776494,"line_start":171,"line_end":171,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6211},{"krate":0,"index":6212},{"krate":0,"index":6213}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13777516,"byte_end":13777526,"line_start":207,"line_end":207,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6219}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13777958,"byte_end":13777968,"line_start":224,"line_end":224,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":6221}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13778286,"byte_end":13778296,"line_start":234,"line_end":234,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6223}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13778395,"byte_end":13778405,"line_start":240,"line_end":240,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6225}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13778581,"byte_end":13778591,"line_start":247,"line_end":247,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6227}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13779082,"byte_end":13779099,"line_start":15,"line_end":15,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6334}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13780262,"byte_end":13780269,"line_start":63,"line_end":63,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13780294,"byte_end":13780301,"line_start":64,"line_end":64,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13780323,"byte_end":13780330,"line_start":66,"line_end":66,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6340}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13780397,"byte_end":13780404,"line_start":72,"line_end":72,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":6342},{"krate":0,"index":6343},{"krate":0,"index":6348},{"krate":0,"index":6351},{"krate":0,"index":6357},{"krate":0,"index":6362},{"krate":0,"index":6368},{"krate":0,"index":6369}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13789178,"byte_end":13789185,"line_start":362,"line_end":362,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6371}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13789977,"byte_end":13789988,"line_start":384,"line_end":384,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":6383},{"krate":0,"index":6384}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13790896,"byte_end":13790907,"line_start":411,"line_end":411,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6389}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/waker_set.rs","byte_start":13792549,"byte_end":13792557,"line_start":49,"line_end":49,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6431},{"krate":0,"index":6432},{"krate":0,"index":6433},{"krate":0,"index":6434},{"krate":0,"index":6435},{"krate":0,"index":6436},{"krate":0,"index":6437},{"krate":0,"index":6438}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/waker_set.rs","byte_start":13796715,"byte_end":13796719,"line_start":190,"line_end":190,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6443}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/waker_set.rs","byte_start":13797285,"byte_end":13797289,"line_start":210,"line_end":210,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":6445},{"krate":0,"index":6446}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/waker_set.rs","byte_start":13797443,"byte_end":13797447,"line_start":219,"line_end":219,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6448}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":13805750,"byte_end":13805760,"line_start":25,"line_end":25,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":6651},{"krate":0,"index":6652},{"krate":0,"index":6653}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":13808339,"byte_end":13808349,"line_start":117,"line_end":117,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":8053}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13808984,"byte_end":13808992,"line_start":20,"line_end":20,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6688},{"krate":0,"index":6689},{"krate":0,"index":6690},{"krate":0,"index":6694},{"krate":0,"index":6698}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13812955,"byte_end":13812963,"line_start":155,"line_end":155,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6700}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13813116,"byte_end":13813124,"line_start":161,"line_end":161,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6702}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13813279,"byte_end":13813287,"line_start":170,"line_end":170,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":8058}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13815303,"byte_end":13815307,"line_start":70,"line_end":70,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":6794},{"krate":0,"index":6795},{"krate":0,"index":6801},{"krate":0,"index":6806},{"krate":0,"index":6811},{"krate":0,"index":6816},{"krate":0,"index":6821},{"krate":0,"index":6825}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13823075,"byte_end":13823079,"line_start":312,"line_end":312,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6830}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13823574,"byte_end":13823578,"line_start":322,"line_end":322,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6832}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13823692,"byte_end":13823696,"line_start":328,"line_end":328,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6834}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13824177,"byte_end":13824181,"line_start":349,"line_end":349,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":6838},{"krate":0,"index":6839},{"krate":0,"index":6840}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13825345,"byte_end":13825349,"line_start":388,"line_end":388,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6847}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13825838,"byte_end":13825842,"line_start":409,"line_end":409,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6851}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13826031,"byte_end":13826035,"line_start":418,"line_end":418,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":8078}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13826151,"byte_end":13826155,"line_start":424,"line_end":424,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":8080}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13826299,"byte_end":13826303,"line_start":430,"line_end":430,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":8082}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13827423,"byte_end":13827427,"line_start":470,"line_end":470,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13827464,"byte_end":13827468,"line_start":471,"line_end":471,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13827494,"byte_end":13827498,"line_start":473,"line_end":473,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6862}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13827850,"byte_end":13827854,"line_start":492,"line_end":492,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":6870},{"krate":0,"index":6871}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13829089,"byte_end":13829098,"line_start":529,"line_end":529,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13829135,"byte_end":13829144,"line_start":530,"line_end":530,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13829160,"byte_end":13829169,"line_start":532,"line_end":532,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":6883}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13829560,"byte_end":13829569,"line_start":545,"line_end":545,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6887}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13829877,"byte_end":13829886,"line_start":557,"line_end":557,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6890},{"krate":0,"index":6891}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13830012,"byte_end":13830021,"line_start":565,"line_end":565,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6894}],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13831582,"byte_end":13831591,"line_start":618,"line_end":618,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6911},{"krate":0,"index":6912},{"krate":0,"index":6914},{"krate":0,"index":6915},{"krate":0,"index":6916},{"krate":0,"index":6918},{"krate":0,"index":6920}],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13855655,"byte_end":13855666,"line_start":64,"line_end":64,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6974},{"krate":0,"index":6975},{"krate":0,"index":6976},{"krate":0,"index":6977},{"krate":0,"index":6978},{"krate":0,"index":6979},{"krate":0,"index":6980},{"krate":0,"index":6981}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13862455,"byte_end":13862466,"line_start":294,"line_end":294,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6987}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13862611,"byte_end":13862622,"line_start":303,"line_end":303,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":8100},{"krate":0,"index":8101}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":13868307,"byte_end":13868314,"line_start":81,"line_end":81,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":7050}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":13868513,"byte_end":13868520,"line_start":88,"line_end":88,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7052},{"krate":0,"index":7053}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/ancestors.rs","byte_start":13883466,"byte_end":13883475,"line_start":29,"line_end":29,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7241},{"krate":0,"index":7242}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/ancestors.rs","byte_start":13883680,"byte_end":13883689,"line_start":39,"line_end":39,"column_start":24,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":13884435,"byte_end":13884445,"line_start":31,"line_end":31,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":7260}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":13884954,"byte_end":13884964,"line_start":50,"line_end":50,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7262}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":13885057,"byte_end":13885067,"line_start":56,"line_end":56,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":7264}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":13885173,"byte_end":13885183,"line_start":62,"line_end":62,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":7267},{"krate":0,"index":7268}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":13885340,"byte_end":13885350,"line_start":70,"line_end":70,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":7271}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":13885475,"byte_end":13885485,"line_start":76,"line_end":76,"column_start":24,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":13885515,"byte_end":13885524,"line_start":78,"line_end":78,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":7274}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":13886155,"byte_end":13886159,"line_start":21,"line_end":21,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7297}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":13886632,"byte_end":13886636,"line_start":40,"line_end":40,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7300},{"krate":0,"index":7301}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":13886798,"byte_end":13886802,"line_start":48,"line_end":48,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7303}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":13886943,"byte_end":13886954,"line_start":52,"line_end":52,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":7309}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":13887251,"byte_end":13887255,"line_start":64,"line_end":64,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7311}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":13887348,"byte_end":13887352,"line_start":70,"line_end":70,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7313}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":13887469,"byte_end":13887473,"line_start":76,"line_end":76,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":7316}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":13887620,"byte_end":13887624,"line_start":82,"line_end":82,"column_start":24,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13889224,"byte_end":13889228,"line_start":53,"line_end":53,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":7369},{"krate":0,"index":7371},{"krate":0,"index":7372},{"krate":0,"index":7373},{"krate":0,"index":7374},{"krate":0,"index":7375},{"krate":0,"index":7376},{"krate":0,"index":7377},{"krate":0,"index":7378},{"krate":0,"index":7380},{"krate":0,"index":7381},{"krate":0,"index":7382},{"krate":0,"index":7384},{"krate":0,"index":7386},{"krate":0,"index":7388},{"krate":0,"index":7389},{"krate":0,"index":7390},{"krate":0,"index":7392},{"krate":0,"index":7394},{"krate":0,"index":7396},{"krate":0,"index":7397},{"krate":0,"index":7398},{"krate":0,"index":7399},{"krate":0,"index":7402},{"krate":0,"index":7405},{"krate":0,"index":7408},{"krate":0,"index":7411},{"krate":0,"index":7414},{"krate":0,"index":7417},{"krate":0,"index":7421},{"krate":0,"index":7425}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13914390,"byte_end":13914393,"line_start":824,"line_end":824,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7427}],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13914622,"byte_end":13914625,"line_start":832,"line_end":832,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7429}],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13914920,"byte_end":13914922,"line_start":841,"line_end":841,"column_start":22,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7431}],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13915125,"byte_end":13915129,"line_start":849,"line_end":849,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":7433},{"krate":0,"index":7434}],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13915253,"byte_end":13915257,"line_start":857,"line_end":857,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7436}],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13915351,"byte_end":13915355,"line_start":863,"line_end":863,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7438}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13915433,"byte_end":13915438,"line_start":869,"line_end":869,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7440}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13915534,"byte_end":13915537,"line_start":875,"line_end":875,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7443}],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13915663,"byte_end":13915666,"line_start":882,"line_end":882,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7445}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13915766,"byte_end":13915774,"line_start":888,"line_end":888,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7447}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13915955,"byte_end":13915961,"line_start":900,"line_end":900,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":7451}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13916050,"byte_end":13916057,"line_start":906,"line_end":906,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":7453}],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13919205,"byte_end":13919209,"line_start":1024,"line_end":1024,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":7473}],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13919316,"byte_end":13919320,"line_start":1030,"line_end":1030,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":7475}],"docs":"","sig":null,"attributes":[]},{"id":454,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13919416,"byte_end":13919423,"line_start":1036,"line_end":1036,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":7477}],"docs":"","sig":null,"attributes":[]},{"id":455,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13920199,"byte_end":13920206,"line_start":25,"line_end":25,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":7530},{"krate":0,"index":7531},{"krate":0,"index":7532},{"krate":0,"index":7534},{"krate":0,"index":7535},{"krate":0,"index":7537},{"krate":0,"index":7539},{"krate":0,"index":7540}],"docs":"","sig":null,"attributes":[]},{"id":456,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13925452,"byte_end":13925459,"line_start":199,"line_end":199,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":7542}],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13925567,"byte_end":13925570,"line_start":205,"line_end":205,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7544}],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13925670,"byte_end":13925673,"line_start":211,"line_end":211,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":7546}],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13925824,"byte_end":13925831,"line_start":218,"line_end":218,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":7549}],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13925948,"byte_end":13925955,"line_start":224,"line_end":224,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7551}],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13926064,"byte_end":13926072,"line_start":230,"line_end":230,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7553}],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13926181,"byte_end":13926188,"line_start":236,"line_end":236,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7555}],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13926294,"byte_end":13926301,"line_start":242,"line_end":242,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7557},{"krate":0,"index":7558}],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13926480,"byte_end":13926487,"line_start":250,"line_end":250,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":7561}],"docs":"","sig":null,"attributes":[]},{"id":465,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13926682,"byte_end":13926689,"line_start":258,"line_end":258,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":7565}],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13926846,"byte_end":13926853,"line_start":264,"line_end":264,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":7569},{"krate":0,"index":7570}],"docs":"","sig":null,"attributes":[]},{"id":467,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13926974,"byte_end":13926981,"line_start":272,"line_end":272,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7572}],"docs":"","sig":null,"attributes":[]},{"id":468,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13927073,"byte_end":13927076,"line_start":278,"line_end":278,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":7575}],"docs":"","sig":null,"attributes":[]},{"id":469,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13927208,"byte_end":13927211,"line_start":285,"line_end":285,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":7578}],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13927362,"byte_end":13927369,"line_start":292,"line_end":292,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7581}],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13927481,"byte_end":13927484,"line_start":299,"line_end":299,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7583}],"docs":"","sig":null,"attributes":[]},{"id":472,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13927707,"byte_end":13927709,"line_start":307,"line_end":307,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7585}],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13927924,"byte_end":13927931,"line_start":315,"line_end":315,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7587}],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13928076,"byte_end":13928083,"line_start":322,"line_end":322,"column_start":44,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":7590}],"docs":"","sig":null,"attributes":[]},{"id":475,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13928625,"byte_end":13928632,"line_start":343,"line_end":343,"column_start":56,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":7597}],"docs":"","sig":null,"attributes":[]},{"id":476,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13929075,"byte_end":13929082,"line_start":361,"line_end":361,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":7602}],"docs":"","sig":null,"attributes":[]},{"id":477,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13929211,"byte_end":13929218,"line_start":367,"line_end":367,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":7604}],"docs":"","sig":null,"attributes":[]},{"id":478,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13929323,"byte_end":13929330,"line_start":373,"line_end":373,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":7606}],"docs":"","sig":null,"attributes":[]},{"id":479,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":13934158,"byte_end":13934177,"line_start":72,"line_end":72,"column_start":19,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":480,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":13934345,"byte_end":13934364,"line_start":77,"line_end":77,"column_start":26,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":7753}],"docs":"","sig":null,"attributes":[]},{"id":481,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":13934636,"byte_end":13934655,"line_start":86,"line_end":86,"column_start":49,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":7757},{"krate":0,"index":7758}],"docs":"","sig":null,"attributes":[]},{"id":482,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":13935358,"byte_end":13935368,"line_start":107,"line_end":107,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":7760},{"krate":0,"index":7761}],"docs":"","sig":null,"attributes":[]},{"id":483,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":13935663,"byte_end":13935675,"line_start":120,"line_end":120,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7763},{"krate":0,"index":7764}],"docs":"","sig":null,"attributes":[]},{"id":484,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":13936040,"byte_end":13936052,"line_start":135,"line_end":135,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7767},{"krate":0,"index":7768}],"docs":"","sig":null,"attributes":[]},{"id":486,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":13939771,"byte_end":13939777,"line_start":274,"line_end":274,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7798},{"krate":0,"index":7799}],"docs":"","sig":null,"attributes":[]},{"id":487,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13941710,"byte_end":13941721,"line_start":56,"line_end":56,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":7854},{"krate":0,"index":7859},{"krate":0,"index":7862},{"krate":0,"index":7863},{"krate":0,"index":7868}],"docs":"","sig":null,"attributes":[]},{"id":488,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13947696,"byte_end":13947704,"line_start":231,"line_end":231,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7873},{"krate":0,"index":7874}],"docs":"","sig":null,"attributes":[]},{"id":489,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13948039,"byte_end":13948047,"line_start":240,"line_end":240,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":7878}],"docs":"","sig":null,"attributes":[]},{"id":490,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13948203,"byte_end":13948214,"line_start":246,"line_end":246,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":7880}],"docs":"","sig":null,"attributes":[]},{"id":491,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13948585,"byte_end":13948596,"line_start":258,"line_end":258,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8477}],"docs":"","sig":null,"attributes":[]},{"id":492,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13948725,"byte_end":13948736,"line_start":264,"line_end":264,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":8479}],"docs":"","sig":null,"attributes":[]},{"id":493,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13948895,"byte_end":13948906,"line_start":270,"line_end":270,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":8481}],"docs":"","sig":null,"attributes":[]},{"id":494,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13951522,"byte_end":13951531,"line_start":53,"line_end":53,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7922},{"krate":0,"index":7927},{"krate":0,"index":7928},{"krate":0,"index":7929},{"krate":0,"index":7930},{"krate":0,"index":7931},{"krate":0,"index":7934},{"krate":0,"index":7935},{"krate":0,"index":7936}],"docs":"","sig":null,"attributes":[]},{"id":495,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13958639,"byte_end":13958648,"line_start":284,"line_end":284,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7938},{"krate":0,"index":7939}],"docs":"","sig":null,"attributes":[]},{"id":496,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13959549,"byte_end":13959558,"line_start":320,"line_end":320,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7944},{"krate":0,"index":7945},{"krate":0,"index":7946},{"krate":0,"index":7947}],"docs":"","sig":null,"attributes":[]},{"id":497,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13961042,"byte_end":13961051,"line_start":372,"line_end":372,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":7954}],"docs":"","sig":null,"attributes":[]},{"id":498,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13961418,"byte_end":13961427,"line_start":384,"line_end":384,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8502}],"docs":"","sig":null,"attributes":[]},{"id":499,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13961556,"byte_end":13961565,"line_start":390,"line_end":390,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8504}],"docs":"","sig":null,"attributes":[]},{"id":500,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13961720,"byte_end":13961729,"line_start":396,"line_end":396,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8506}],"docs":"","sig":null,"attributes":[]},{"id":501,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13964440,"byte_end":13964449,"line_start":51,"line_end":51,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7979},{"krate":0,"index":7984},{"krate":0,"index":7986},{"krate":0,"index":7988},{"krate":0,"index":7993},{"krate":0,"index":7996},{"krate":0,"index":7999},{"krate":0,"index":8005},{"krate":0,"index":8008},{"krate":0,"index":8011},{"krate":0,"index":8014},{"krate":0,"index":8015},{"krate":0,"index":8016},{"krate":0,"index":8017},{"krate":0,"index":8018},{"krate":0,"index":8019},{"krate":0,"index":8020},{"krate":0,"index":8021},{"krate":0,"index":8022},{"krate":0,"index":8023},{"krate":0,"index":8024},{"krate":0,"index":8025},{"krate":0,"index":8026},{"krate":0,"index":8027}],"docs":"","sig":null,"attributes":[]},{"id":502,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13980344,"byte_end":13980353,"line_start":526,"line_end":526,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":8029}],"docs":"","sig":null,"attributes":[]},{"id":503,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13980710,"byte_end":13980719,"line_start":538,"line_end":538,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8525}],"docs":"","sig":null,"attributes":[]},{"id":504,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13980848,"byte_end":13980857,"line_start":544,"line_end":544,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8527}],"docs":"","sig":null,"attributes":[]},{"id":505,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13981012,"byte_end":13981021,"line_start":550,"line_end":550,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8529}],"docs":"","sig":null,"attributes":[]},{"id":506,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/vec/extend.rs","byte_start":13988785,"byte_end":13988788,"line_start":6,"line_end":6,"column_start":37,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":8618}],"docs":"","sig":null,"attributes":[]},{"id":507,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/vec/from_stream.rs","byte_start":13989347,"byte_end":13989350,"line_start":9,"line_end":9,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8648}],"docs":"","sig":null,"attributes":[]},{"id":508,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/vec/from_stream.rs","byte_start":13989801,"byte_end":13989804,"line_start":27,"line_end":27,"column_start":45,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":8655}],"docs":"","sig":null,"attributes":[]},{"id":509,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/vec/from_stream.rs","byte_start":13990209,"byte_end":13990212,"line_start":43,"line_end":43,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8661}],"docs":"","sig":null,"attributes":[]},{"id":510,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/vec/from_stream.rs","byte_start":13990613,"byte_end":13990615,"line_start":59,"line_end":59,"column_start":33,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":8667}],"docs":"","sig":null,"attributes":[]},{"id":511,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/vec/from_stream.rs","byte_start":13991004,"byte_end":13991007,"line_start":75,"line_end":75,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8673}],"docs":"","sig":null,"attributes":[]},{"id":512,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/result/from_stream.rs","byte_start":13991742,"byte_end":13991748,"line_start":6,"line_end":6,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":8697}],"docs":"","sig":null,"attributes":[]},{"id":513,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/result/product.rs","byte_start":14011898,"byte_end":14011904,"line_start":6,"line_end":6,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":9243}],"docs":"","sig":null,"attributes":[]},{"id":514,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/result/sum.rs","byte_start":14014167,"byte_end":14014173,"line_start":6,"line_end":6,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":9265}],"docs":"","sig":null,"attributes":[]},{"id":515,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/option/from_stream.rs","byte_start":13994203,"byte_end":13994209,"line_start":7,"line_end":7,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":8725}],"docs":"","sig":null,"attributes":[]},{"id":516,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/option/product.rs","byte_start":14016432,"byte_end":14016438,"line_start":7,"line_end":7,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":9289}],"docs":"","sig":null,"attributes":[]},{"id":517,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/option/sum.rs","byte_start":14018239,"byte_end":14018245,"line_start":7,"line_end":7,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":9312}],"docs":"","sig":null,"attributes":[]},{"id":518,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/string/extend.rs","byte_start":13995660,"byte_end":13995666,"line_start":7,"line_end":7,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":8750}],"docs":"","sig":null,"attributes":[]},{"id":519,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/string/extend.rs","byte_start":13996201,"byte_end":13996207,"line_start":28,"line_end":28,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":8756}],"docs":"","sig":null,"attributes":[]},{"id":520,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/string/extend.rs","byte_start":13996702,"byte_end":13996708,"line_start":48,"line_end":48,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":8762}],"docs":"","sig":null,"attributes":[]},{"id":521,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/string/extend.rs","byte_start":13997200,"byte_end":13997206,"line_start":68,"line_end":68,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":8767}],"docs":"","sig":null,"attributes":[]},{"id":522,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/string/extend.rs","byte_start":13997707,"byte_end":13997713,"line_start":88,"line_end":88,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":8773}],"docs":"","sig":null,"attributes":[]},{"id":523,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/string/from_stream.rs","byte_start":13998321,"byte_end":13998327,"line_start":7,"line_end":7,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8796}],"docs":"","sig":null,"attributes":[]},{"id":524,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/string/from_stream.rs","byte_start":13998776,"byte_end":13998782,"line_start":25,"line_end":25,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":8802}],"docs":"","sig":null,"attributes":[]},{"id":525,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/string/from_stream.rs","byte_start":13999234,"byte_end":13999240,"line_start":43,"line_end":43,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":8808}],"docs":"","sig":null,"attributes":[]},{"id":526,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/string/from_stream.rs","byte_start":13999686,"byte_end":13999692,"line_start":61,"line_end":61,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":8813}],"docs":"","sig":null,"attributes":[]},{"id":527,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/string/from_stream.rs","byte_start":14000147,"byte_end":14000153,"line_start":79,"line_end":79,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":8819}],"docs":"","sig":null,"attributes":[]},{"id":528,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/collections/binary_heap/extend.rs","byte_start":14001382,"byte_end":14001392,"line_start":7,"line_end":7,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":8845}],"docs":"","sig":null,"attributes":[]},{"id":529,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/collections/binary_heap/from_stream.rs","byte_start":14001932,"byte_end":14001942,"line_start":7,"line_end":7,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":8869}],"docs":"","sig":null,"attributes":[]},{"id":530,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/collections/btree_map/extend.rs","byte_start":14002638,"byte_end":14002646,"line_start":7,"line_end":7,"column_start":57,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":8895}],"docs":"","sig":null,"attributes":[]},{"id":531,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/collections/btree_map/from_stream.rs","byte_start":14003160,"byte_end":14003168,"line_start":7,"line_end":7,"column_start":53,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":8920}],"docs":"","sig":null,"attributes":[]},{"id":532,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/collections/btree_set/extend.rs","byte_start":14003857,"byte_end":14003865,"line_start":7,"line_end":7,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":8945}],"docs":"","sig":null,"attributes":[]},{"id":533,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/collections/btree_set/from_stream.rs","byte_start":14004355,"byte_end":14004363,"line_start":7,"line_end":7,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":8969}],"docs":"","sig":null,"attributes":[]},{"id":534,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/collections/hash_map/extend.rs","byte_start":14005128,"byte_end":14005135,"line_start":8,"line_end":8,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":9003}],"docs":"","sig":null,"attributes":[]},{"id":535,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/collections/hash_map/from_stream.rs","byte_start":14006422,"byte_end":14006429,"line_start":8,"line_end":8,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":9036}],"docs":"","sig":null,"attributes":[]},{"id":536,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/collections/hash_set/extend.rs","byte_start":14007303,"byte_end":14007310,"line_start":8,"line_end":8,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":9069}],"docs":"","sig":null,"attributes":[]},{"id":537,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/collections/hash_set/from_stream.rs","byte_start":14008759,"byte_end":14008766,"line_start":8,"line_end":8,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":9101}],"docs":"","sig":null,"attributes":[]},{"id":538,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/collections/linked_list/extend.rs","byte_start":14009566,"byte_end":14009576,"line_start":7,"line_end":7,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":9126}],"docs":"","sig":null,"attributes":[]},{"id":539,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/collections/linked_list/from_stream.rs","byte_start":14010069,"byte_end":14010079,"line_start":7,"line_end":7,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":9150}],"docs":"","sig":null,"attributes":[]},{"id":540,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/collections/vec_deque/extend.rs","byte_start":14010806,"byte_end":14010814,"line_start":7,"line_end":7,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":9175}],"docs":"","sig":null,"attributes":[]},{"id":541,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/collections/vec_deque/from_stream.rs","byte_start":14011351,"byte_end":14011359,"line_start":7,"line_end":7,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":9199}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":10910,"byte_end":10914,"line_start":300,"line_end":300,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":50}},{"kind":"Mod","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":10928,"byte_end":10934,"line_start":301,"line_end":301,"column_start":13,"column_end":19},"ref_id":{"krate":0,"index":51}},{"kind":"Mod","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":10948,"byte_end":10954,"line_start":302,"line_end":302,"column_start":13,"column_end":19},"ref_id":{"krate":0,"index":107}},{"kind":"Mod","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":10982,"byte_end":10984,"line_start":306,"line_end":306,"column_start":13,"column_end":15},"ref_id":{"krate":0,"index":4279}},{"kind":"Mod","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/mod.rs","byte_start":13618213,"byte_end":13618220,"line_start":290,"line_end":290,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":4387}},{"kind":"Mod","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":10998,"byte_end":11000,"line_start":307,"line_end":307,"column_start":13,"column_end":15},"ref_id":{"krate":0,"index":4281}},{"kind":"Mod","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/mod.rs","byte_start":13619171,"byte_end":13619175,"line_start":4,"line_end":4,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":5930}},{"kind":"Mod","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/mod.rs","byte_start":13747238,"byte_end":13747240,"line_start":4,"line_end":4,"column_start":13,"column_end":15},"ref_id":{"krate":0,"index":5934}},{"kind":"Mod","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/mod.rs","byte_start":13747272,"byte_end":13747274,"line_start":8,"line_end":8,"column_start":13,"column_end":15},"ref_id":{"krate":0,"index":5948}},{"kind":"Mod","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/mod.rs","byte_start":13747288,"byte_end":13747291,"line_start":9,"line_end":9,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":5964}},{"kind":"Mod","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":11014,"byte_end":11021,"line_start":308,"line_end":308,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":4282}},{"kind":"Mod","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":11035,"byte_end":11039,"line_start":309,"line_end":309,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":4283}},{"kind":"Mod","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":11053,"byte_end":11060,"line_start":310,"line_end":310,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":4314}},{"kind":"Mod","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":11131,"byte_end":11133,"line_start":315,"line_end":315,"column_start":13,"column_end":15},"ref_id":{"krate":0,"index":6480}},{"kind":"Mod","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":11147,"byte_end":11151,"line_start":316,"line_end":316,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":7231}},{"kind":"Mod","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":11165,"byte_end":11168,"line_start":317,"line_end":317,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":7644}},{"kind":"Mod","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":11263,"byte_end":11266,"line_start":323,"line_end":323,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":8530}},{"kind":"Mod","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/lib.rs","byte_start":11341,"byte_end":11348,"line_start":325,"line_end":325,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":8534}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/utils.rs","byte_start":11808,"byte_end":11812,"line_start":11,"line_end":11,"column_start":19,"column_end":23},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":11},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/yield_now.rs","byte_start":13355643,"byte_end":13355651,"line_start":36,"line_end":36,"column_start":17,"column_end":25},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1991},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/builder.rs","byte_start":13357550,"byte_end":13357557,"line_start":17,"line_end":17,"column_start":6,"column_end":13},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":2312},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/builder.rs","byte_start":13362914,"byte_end":13362931,"line_start":192,"line_end":192,"column_start":28,"column_end":45},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":12309},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/join_handle.rs","byte_start":13365177,"byte_end":13365187,"line_start":25,"line_end":25,"column_start":9,"column_end":19},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":2325},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/join_handle.rs","byte_start":13366260,"byte_end":13366270,"line_start":70,"line_end":70,"column_start":18,"column_end":28},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":2325},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/join_handle.rs","byte_start":13366419,"byte_end":13366429,"line_start":78,"line_end":78,"column_start":20,"column_end":30},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":2325},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task.rs","byte_start":13369631,"byte_end":13369635,"line_start":16,"line_end":16,"column_start":6,"column_end":10},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":2332},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task.rs","byte_start":13370245,"byte_end":13370249,"line_start":42,"line_end":42,"column_start":21,"column_end":25},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":2332},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_id.rs","byte_start":13370803,"byte_end":13370809,"line_start":18,"line_end":18,"column_start":6,"column_end":12},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":2337},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_id.rs","byte_start":13371220,"byte_end":13371226,"line_start":32,"line_end":32,"column_start":23,"column_end":29},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":2337},"to":{"krate":2,"index":9560}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13371816,"byte_end":13371824,"line_start":21,"line_end":21,"column_start":25,"column_end":33},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":2355},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13375704,"byte_end":13375715,"line_start":148,"line_end":148,"column_start":21,"column_end":32},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":2362},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13375859,"byte_end":13375870,"line_start":154,"line_end":154,"column_start":23,"column_end":34},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":2362},"to":{"krate":2,"index":9560}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13376035,"byte_end":13376046,"line_start":160,"line_end":160,"column_start":16,"column_end":27},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":2362},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_local.rs","byte_start":13376414,"byte_end":13376423,"line_start":177,"line_end":177,"column_start":6,"column_end":15},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":2262},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_locals_wrapper.rs","byte_start":13378275,"byte_end":13378292,"line_start":21,"line_end":21,"column_start":6,"column_end":23},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":2290},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/task/task_locals_wrapper.rs","byte_start":13379705,"byte_end":13379722,"line_start":77,"line_end":77,"column_start":15,"column_end":32},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":2290},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/delay.rs","byte_start":13515808,"byte_end":13515819,"line_start":21,"line_end":21,"column_start":9,"column_end":20},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":12272},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/delay.rs","byte_start":13515999,"byte_end":13516010,"line_start":29,"line_end":29,"column_start":28,"column_end":39},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":12272},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/flatten.rs","byte_start":13517039,"byte_end":13517052,"line_start":33,"line_end":33,"column_start":18,"column_end":31},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":12231},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/flatten.rs","byte_start":13517239,"byte_end":13517252,"line_start":41,"line_end":41,"column_start":23,"column_end":36},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":12231},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/race.rs","byte_start":13518517,"byte_end":13518521,"line_start":22,"line_end":22,"column_start":12,"column_end":16},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":12139},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/race.rs","byte_start":13518775,"byte_end":13518779,"line_start":35,"line_end":35,"column_start":23,"column_end":27},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":12139},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/try_race.rs","byte_start":13519772,"byte_end":13519779,"line_start":22,"line_end":22,"column_start":12,"column_end":19},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":12094},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/try_race.rs","byte_start":13520039,"byte_end":13520046,"line_start":35,"line_end":35,"column_start":29,"column_end":36},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":12094},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/join.rs","byte_start":13521518,"byte_end":13521522,"line_start":22,"line_end":22,"column_start":12,"column_end":16},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":12049},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/join.rs","byte_start":13521756,"byte_end":13521760,"line_start":35,"line_end":35,"column_start":23,"column_end":27},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":12049},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/try_join.rs","byte_start":13522938,"byte_end":13522945,"line_start":22,"line_end":22,"column_start":12,"column_end":19},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":12004},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/try_join.rs","byte_start":13523188,"byte_end":13523195,"line_start":35,"line_end":35,"column_start":32,"column_end":39},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":12004},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":13508199,"byte_end":13508205,"line_start":30,"line_end":30,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":12915},"to":{"krate":0,"index":2411}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/future/mod.rs","byte_start":13515422,"byte_end":13515423,"line_start":287,"line_end":287,"column_start":40,"column_end":41},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":2429},"to":{"krate":0,"index":2411}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/pending.rs","byte_start":13525125,"byte_end":13525132,"line_start":38,"line_end":38,"column_start":20,"column_end":27},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":2673},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/poll_fn.rs","byte_start":13526025,"byte_end":13526031,"line_start":38,"line_end":38,"column_start":19,"column_end":25},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":2699},"to":{"krate":2,"index":3060}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/poll_fn.rs","byte_start":13526061,"byte_end":13526067,"line_start":40,"line_end":40,"column_start":23,"column_end":29},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":2699},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/timeout.rs","byte_start":13220074,"byte_end":13220087,"line_start":49,"line_end":49,"column_start":9,"column_end":22},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":11967},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/timeout.rs","byte_start":13220314,"byte_end":13220327,"line_start":59,"line_end":59,"column_start":28,"column_end":41},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":11967},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/timeout.rs","byte_start":13220963,"byte_end":13220975,"line_start":80,"line_end":80,"column_start":16,"column_end":28},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":2714},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/timeout.rs","byte_start":13221002,"byte_end":13221014,"line_start":82,"line_end":82,"column_start":23,"column_end":35},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":2714},"to":{"krate":2,"index":9560}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/into_future.rs","byte_start":13527718,"byte_end":13527719,"line_start":46,"line_end":46,"column_start":32,"column_end":33},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":2743},"to":{"krate":0,"index":2738}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/maybe_done.rs","byte_start":13528532,"byte_end":13528541,"line_start":27,"line_end":27,"column_start":19,"column_end":28},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":2776},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/future/maybe_done.rs","byte_start":13529794,"byte_end":13529803,"line_start":65,"line_end":65,"column_start":30,"column_end":39},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":2776},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/all.rs","byte_start":13291382,"byte_end":13291391,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":172},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/all.rs","byte_start":13291598,"byte_end":13291607,"line_start":26,"line_end":26,"column_start":32,"column_end":41},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":172},"to":{"krate":2,"index":3060}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/all.rs","byte_start":13291647,"byte_end":13291656,"line_start":28,"line_end":28,"column_start":23,"column_end":32},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":172},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/any.rs","byte_start":13292737,"byte_end":13292746,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":215},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/any.rs","byte_start":13292953,"byte_end":13292962,"line_start":26,"line_end":26,"column_start":32,"column_end":41},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":215},"to":{"krate":2,"index":3060}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/any.rs","byte_start":13293002,"byte_end":13293011,"line_start":28,"line_end":28,"column_start":23,"column_end":32},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":215},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/chain.rs","byte_start":13294381,"byte_end":13294386,"line_start":27,"line_end":27,"column_start":28,"column_end":33},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":11918},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/chain.rs","byte_start":13294604,"byte_end":13294609,"line_start":36,"line_end":36,"column_start":55,"column_end":60},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":11918},"to":{"krate":25,"index":96}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/cloned.rs","byte_start":13295647,"byte_end":13295653,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":11882},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/cloned.rs","byte_start":13295765,"byte_end":13295771,"line_start":21,"line_end":21,"column_start":31,"column_end":37},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":11882},"to":{"krate":25,"index":96}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/cmp.rs","byte_start":13296722,"byte_end":13296731,"line_start":27,"line_end":27,"column_start":28,"column_end":37},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":11829},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/cmp.rs","byte_start":13296960,"byte_end":13296969,"line_start":38,"line_end":38,"column_start":39,"column_end":48},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":11829},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/copied.rs","byte_start":13299268,"byte_end":13299274,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":11793},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/copied.rs","byte_start":13299386,"byte_end":13299392,"line_start":21,"line_end":21,"column_start":31,"column_end":37},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":11793},"to":{"krate":25,"index":96}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/cycle.rs","byte_start":13300049,"byte_end":13300054,"line_start":19,"line_end":19,"column_start":9,"column_end":14},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":11753},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/cycle.rs","byte_start":13300239,"byte_end":13300244,"line_start":31,"line_end":31,"column_start":20,"column_end":25},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":11753},"to":{"krate":25,"index":96}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/enumerate.rs","byte_start":13300937,"byte_end":13300946,"line_start":17,"line_end":17,"column_start":9,"column_end":18},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":11713},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/enumerate.rs","byte_start":13301053,"byte_end":13301062,"line_start":23,"line_end":23,"column_start":20,"column_end":29},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":11713},"to":{"krate":25,"index":96}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/eq.rs","byte_start":13302078,"byte_end":13302086,"line_start":24,"line_end":24,"column_start":28,"column_end":36},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":11668},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/eq.rs","byte_start":13302300,"byte_end":13302308,"line_start":36,"line_end":36,"column_start":39,"column_end":47},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":11668},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/filter.rs","byte_start":13303577,"byte_end":13303583,"line_start":24,"line_end":24,"column_start":12,"column_end":18},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":11619},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/filter.rs","byte_start":13303748,"byte_end":13303754,"line_start":33,"line_end":33,"column_start":23,"column_end":29},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":11619},"to":{"krate":25,"index":96}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/filter_map.rs","byte_start":13304551,"byte_end":13304560,"line_start":17,"line_end":17,"column_start":12,"column_end":21},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":11570},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/filter_map.rs","byte_start":13304679,"byte_end":13304688,"line_start":23,"line_end":23,"column_start":26,"column_end":35},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":11570},"to":{"krate":25,"index":96}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/find.rs","byte_start":13305527,"byte_end":13305537,"line_start":14,"line_end":14,"column_start":16,"column_end":26},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":516},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/find.rs","byte_start":13305671,"byte_end":13305681,"line_start":20,"line_end":20,"column_start":29,"column_end":39},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":516},"to":{"krate":2,"index":3060}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/find.rs","byte_start":13305722,"byte_end":13305732,"line_start":22,"line_end":22,"column_start":27,"column_end":37},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":516},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/find_map.rs","byte_start":13306526,"byte_end":13306539,"line_start":14,"line_end":14,"column_start":16,"column_end":29},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":553},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/find_map.rs","byte_start":13306673,"byte_end":13306686,"line_start":20,"line_end":20,"column_start":29,"column_end":42},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":553},"to":{"krate":2,"index":3060}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/find_map.rs","byte_start":13306730,"byte_end":13306743,"line_start":22,"line_end":22,"column_start":30,"column_end":43},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":553},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/fold.rs","byte_start":13307656,"byte_end":13307666,"line_start":19,"line_end":19,"column_start":15,"column_end":25},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":11508},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/fold.rs","byte_start":13307859,"byte_end":13307869,"line_start":29,"line_end":29,"column_start":26,"column_end":36},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":11508},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/for_each.rs","byte_start":13308829,"byte_end":13308842,"line_start":19,"line_end":19,"column_start":12,"column_end":25},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":11463},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/for_each.rs","byte_start":13308991,"byte_end":13309004,"line_start":28,"line_end":28,"column_start":23,"column_end":36},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":11463},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/fuse.rs","byte_start":13310035,"byte_end":13310039,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":11420},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/fuse.rs","byte_start":13310194,"byte_end":13310198,"line_start":33,"line_end":33,"column_start":28,"column_end":32},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":11420},"to":{"krate":25,"index":96}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/ge.rs","byte_start":13311221,"byte_end":13311229,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":11379},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/ge.rs","byte_start":13311437,"byte_end":13311445,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":11379},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/gt.rs","byte_start":13312454,"byte_end":13312462,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":11338},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/gt.rs","byte_start":13312670,"byte_end":13312678,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":11338},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/inspect.rs","byte_start":13313646,"byte_end":13313653,"line_start":24,"line_end":24,"column_start":12,"column_end":19},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":11289},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/inspect.rs","byte_start":13313802,"byte_end":13313809,"line_start":33,"line_end":33,"column_start":23,"column_end":30},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":11289},"to":{"krate":25,"index":96}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/last.rs","byte_start":13314529,"byte_end":13314539,"line_start":19,"line_end":19,"column_start":12,"column_end":22},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":11244},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/last.rs","byte_start":13314655,"byte_end":13314665,"line_start":25,"line_end":25,"column_start":20,"column_end":30},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":11244},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/le.rs","byte_start":13315783,"byte_end":13315791,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":11203},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/le.rs","byte_start":13315999,"byte_end":13316007,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":11203},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/lt.rs","byte_start":13317026,"byte_end":13317034,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":11162},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/lt.rs","byte_start":13317242,"byte_end":13317250,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":11162},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/map.rs","byte_start":13317983,"byte_end":13317986,"line_start":18,"line_end":18,"column_start":12,"column_end":15},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":11113},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/map.rs","byte_start":13318138,"byte_end":13318141,"line_start":27,"line_end":27,"column_start":26,"column_end":29},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":11113},"to":{"krate":25,"index":96}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/max.rs","byte_start":13318826,"byte_end":13318835,"line_start":20,"line_end":20,"column_start":12,"column_end":21},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":11068},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/max.rs","byte_start":13318950,"byte_end":13318959,"line_start":26,"line_end":26,"column_start":20,"column_end":29},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":11068},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/max_by.rs","byte_start":13320131,"byte_end":13320142,"line_start":21,"line_end":21,"column_start":15,"column_end":26},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":11011},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/max_by.rs","byte_start":13320329,"byte_end":13320340,"line_start":31,"line_end":31,"column_start":23,"column_end":34},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":11011},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/max_by_key.rs","byte_start":13321562,"byte_end":13321576,"line_start":21,"line_end":21,"column_start":15,"column_end":29},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":10954},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/max_by_key.rs","byte_start":13321761,"byte_end":13321775,"line_start":31,"line_end":31,"column_start":23,"column_end":37},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":10954},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/min.rs","byte_start":13323181,"byte_end":13323190,"line_start":20,"line_end":20,"column_start":12,"column_end":21},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":10909},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/min.rs","byte_start":13323305,"byte_end":13323314,"line_start":26,"line_end":26,"column_start":20,"column_end":29},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":10909},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/min_by.rs","byte_start":13324483,"byte_end":13324494,"line_start":21,"line_end":21,"column_start":15,"column_end":26},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":10852},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/min_by.rs","byte_start":13324681,"byte_end":13324692,"line_start":31,"line_end":31,"column_start":23,"column_end":34},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":10852},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/min_by_key.rs","byte_start":13325940,"byte_end":13325954,"line_start":21,"line_end":21,"column_start":15,"column_end":29},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":10795},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/min_by_key.rs","byte_start":13326139,"byte_end":13326153,"line_start":31,"line_end":31,"column_start":23,"column_end":37},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":10795},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/ne.rs","byte_start":13327722,"byte_end":13327730,"line_start":24,"line_end":24,"column_start":28,"column_end":36},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":10750},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/ne.rs","byte_start":13327944,"byte_end":13327952,"line_start":36,"line_end":36,"column_start":39,"column_end":47},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":10750},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/next.rs","byte_start":13329008,"byte_end":13329018,"line_start":13,"line_end":13,"column_start":45,"column_end":55},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1160},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/nth.rs","byte_start":13329465,"byte_end":13329474,"line_start":14,"line_end":14,"column_start":26,"column_end":35},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1185},"to":{"krate":2,"index":3060}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/nth.rs","byte_start":13329498,"byte_end":13329507,"line_start":16,"line_end":16,"column_start":13,"column_end":22},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1185},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/nth.rs","byte_start":13329637,"byte_end":13329646,"line_start":22,"line_end":22,"column_start":24,"column_end":33},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1185},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/partial_cmp.rs","byte_start":13330859,"byte_end":13330875,"line_start":27,"line_end":27,"column_start":28,"column_end":44},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":10697},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/partial_cmp.rs","byte_start":13331104,"byte_end":13331120,"line_start":38,"line_end":38,"column_start":39,"column_end":55},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":10697},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/position.rs","byte_start":13333503,"byte_end":13333517,"line_start":15,"line_end":15,"column_start":26,"column_end":40},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1256},"to":{"krate":2,"index":3060}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/position.rs","byte_start":13333547,"byte_end":13333561,"line_start":17,"line_end":17,"column_start":16,"column_end":30},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1256},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/position.rs","byte_start":13333764,"byte_end":13333778,"line_start":27,"line_end":27,"column_start":27,"column_end":41},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1256},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/scan.rs","byte_start":13334976,"byte_end":13334980,"line_start":24,"line_end":24,"column_start":16,"column_end":20},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":10639},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/scan.rs","byte_start":13335185,"byte_end":13335189,"line_start":33,"line_end":33,"column_start":30,"column_end":34},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":10639},"to":{"krate":25,"index":96}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/skip.rs","byte_start":13336174,"byte_end":13336178,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":10599},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/skip.rs","byte_start":13336292,"byte_end":13336296,"line_start":30,"line_end":30,"column_start":20,"column_end":24},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":10599},"to":{"krate":25,"index":96}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/skip_while.rs","byte_start":13337416,"byte_end":13337425,"line_start":24,"line_end":24,"column_start":12,"column_end":21},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":10550},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/skip_while.rs","byte_start":13337607,"byte_end":13337616,"line_start":33,"line_end":33,"column_start":23,"column_end":32},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":10550},"to":{"krate":25,"index":96}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/step_by.rs","byte_start":13338959,"byte_end":13338965,"line_start":25,"line_end":25,"column_start":9,"column_end":15},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":10506},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/step_by.rs","byte_start":13339166,"byte_end":13339172,"line_start":35,"line_end":35,"column_start":20,"column_end":26},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":10506},"to":{"krate":25,"index":96}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/take.rs","byte_start":13340375,"byte_end":13340379,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":10463},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/take.rs","byte_start":13340550,"byte_end":13340554,"line_start":33,"line_end":33,"column_start":28,"column_end":32},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":10463},"to":{"krate":25,"index":96}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/take_while.rs","byte_start":13341599,"byte_end":13341608,"line_start":24,"line_end":24,"column_start":12,"column_end":21},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":10414},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/take_while.rs","byte_start":13341773,"byte_end":13341782,"line_start":33,"line_end":33,"column_start":23,"column_end":32},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":10414},"to":{"krate":25,"index":96}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/try_fold.rs","byte_start":13342636,"byte_end":13342649,"line_start":15,"line_end":15,"column_start":29,"column_end":42},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1450},"to":{"krate":2,"index":3060}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/try_fold.rs","byte_start":13342685,"byte_end":13342698,"line_start":17,"line_end":17,"column_start":19,"column_end":32},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1450},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/try_fold.rs","byte_start":13342910,"byte_end":13342923,"line_start":27,"line_end":27,"column_start":33,"column_end":46},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1450},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/try_for_each.rs","byte_start":13343953,"byte_end":13343969,"line_start":14,"line_end":14,"column_start":26,"column_end":42},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":1494},"to":{"krate":2,"index":3060}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/try_for_each.rs","byte_start":13343999,"byte_end":13344015,"line_start":16,"line_end":16,"column_start":16,"column_end":32},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":1494},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/try_for_each.rs","byte_start":13344150,"byte_end":13344166,"line_start":22,"line_end":22,"column_start":30,"column_end":46},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":1494},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/zip.rs","byte_start":13345428,"byte_end":13345431,"line_start":26,"line_end":26,"column_start":60,"column_end":63},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":10365},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/zip.rs","byte_start":13345671,"byte_end":13345674,"line_start":35,"line_end":35,"column_start":20,"column_end":23},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":10365},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/zip.rs","byte_start":13345876,"byte_end":13345879,"line_start":45,"line_end":45,"column_start":39,"column_end":42},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":10365},"to":{"krate":25,"index":96}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/count.rs","byte_start":13560267,"byte_end":13560278,"line_start":21,"line_end":21,"column_start":9,"column_end":20},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":10328},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/count.rs","byte_start":13560389,"byte_end":13560400,"line_start":27,"line_end":27,"column_start":20,"column_end":31},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":10328},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/merge.rs","byte_start":13561617,"byte_end":13561622,"line_start":30,"line_end":30,"column_start":28,"column_end":33},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":10279},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/merge.rs","byte_start":13561805,"byte_end":13561810,"line_start":39,"line_end":39,"column_start":26,"column_end":31},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":10279},"to":{"krate":25,"index":96}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/flatten.rs","byte_start":13563439,"byte_end":13563446,"line_start":30,"line_end":30,"column_start":9,"column_end":16},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":10242},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/flatten.rs","byte_start":13563649,"byte_end":13563656,"line_start":43,"line_end":43,"column_start":23,"column_end":30},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":10242},"to":{"krate":25,"index":96}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/flatten.rs","byte_start":13564501,"byte_end":13564508,"line_start":69,"line_end":69,"column_start":27,"column_end":34},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":10242},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/flat_map.rs","byte_start":13565508,"byte_end":13565515,"line_start":27,"line_end":27,"column_start":15,"column_end":22},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":10189},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/flat_map.rs","byte_start":13565770,"byte_end":13565777,"line_start":41,"line_end":41,"column_start":26,"column_end":33},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":10189},"to":{"krate":25,"index":96}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/partition.rs","byte_start":13567019,"byte_end":13567034,"line_start":21,"line_end":21,"column_start":24,"column_end":39},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":10127},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/partition.rs","byte_start":13567242,"byte_end":13567257,"line_start":31,"line_end":31,"column_start":26,"column_end":41},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":10127},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/timeout.rs","byte_start":13568503,"byte_end":13568510,"line_start":25,"line_end":25,"column_start":17,"column_end":24},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":10083},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/timeout.rs","byte_start":13568695,"byte_end":13568702,"line_start":33,"line_end":33,"column_start":28,"column_end":35},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":10083},"to":{"krate":25,"index":96}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/timeout.rs","byte_start":13569624,"byte_end":13569636,"line_start":62,"line_end":62,"column_start":16,"column_end":28},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":3173},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/timeout.rs","byte_start":13569663,"byte_end":13569675,"line_start":64,"line_end":64,"column_start":23,"column_end":35},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":3173},"to":{"krate":2,"index":9560}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/throttle.rs","byte_start":13570559,"byte_end":13570567,"line_start":32,"line_end":32,"column_start":17,"column_end":25},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":10038},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/throttle.rs","byte_start":13570820,"byte_end":13570828,"line_start":43,"line_end":43,"column_start":28,"column_end":36},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":10038},"to":{"krate":25,"index":96}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/delay.rs","byte_start":13572020,"byte_end":13572025,"line_start":23,"line_end":23,"column_start":9,"column_end":14},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":9997},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/delay.rs","byte_start":13572231,"byte_end":13572236,"line_start":33,"line_end":33,"column_start":20,"column_end":25},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":9997},"to":{"krate":25,"index":96}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/unzip.rs","byte_start":13573024,"byte_end":13573035,"line_start":20,"line_end":20,"column_start":31,"column_end":42},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":9934},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/unzip.rs","byte_start":13573305,"byte_end":13573316,"line_start":33,"line_end":33,"column_start":40,"column_end":51},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":9934},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13235275,"byte_end":13235281,"line_start":153,"line_end":153,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":25,"index":96},"to":{"krate":0,"index":1685}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/stream/mod.rs","byte_start":13291028,"byte_end":13291029,"line_start":2309,"line_end":2309,"column_start":40,"column_end":41},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":1804},"to":{"krate":0,"index":1685}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/empty.rs","byte_start":13347417,"byte_end":13347422,"line_start":44,"line_end":44,"column_start":20,"column_end":25},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":3187},"to":{"krate":25,"index":96}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":13347923,"byte_end":13347929,"line_start":17,"line_end":17,"column_start":19,"column_end":25},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":3193},"to":{"krate":2,"index":3060}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_fn.rs","byte_start":13348858,"byte_end":13348864,"line_start":58,"line_end":58,"column_start":23,"column_end":29},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":3193},"to":{"krate":25,"index":96}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_iter.rs","byte_start":13350218,"byte_end":13350226,"line_start":49,"line_end":49,"column_start":30,"column_end":38},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":9895},"to":{"krate":25,"index":96}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/from_iter.rs","byte_start":13350481,"byte_end":13350489,"line_start":58,"line_end":58,"column_start":52,"column_end":60},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":9895},"to":{"krate":0,"index":3405}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/once.rs","byte_start":13351533,"byte_end":13351537,"line_start":45,"line_end":45,"column_start":20,"column_end":24},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":9856},"to":{"krate":25,"index":96}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/once.rs","byte_start":13351762,"byte_end":13351766,"line_start":54,"line_end":54,"column_start":32,"column_end":36},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":9856},"to":{"krate":0,"index":3405}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat.rs","byte_start":13352706,"byte_end":13352712,"line_start":41,"line_end":41,"column_start":27,"column_end":33},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":3202},"to":{"krate":25,"index":96}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":13353281,"byte_end":13353291,"line_start":17,"line_end":17,"column_start":19,"column_end":29},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":3211},"to":{"krate":2,"index":3060}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/repeat_with.rs","byte_start":13354483,"byte_end":13354493,"line_start":74,"line_end":74,"column_start":23,"column_end":33},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":3211},"to":{"krate":25,"index":96}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/next_back.rs","byte_start":13581340,"byte_end":13581354,"line_start":13,"line_end":13,"column_start":56,"column_end":70},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":3251},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/nth_back.rs","byte_start":13581808,"byte_end":13581821,"line_start":14,"line_end":14,"column_start":13,"column_end":26},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":3276},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/nth_back.rs","byte_start":13581960,"byte_end":13581973,"line_start":20,"line_end":20,"column_start":24,"column_end":37},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":3276},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/rfind.rs","byte_start":13582830,"byte_end":13582841,"line_start":14,"line_end":14,"column_start":16,"column_end":27},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":3307},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/rfind.rs","byte_start":13582982,"byte_end":13582993,"line_start":20,"line_end":20,"column_start":29,"column_end":40},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":3307},"to":{"krate":2,"index":3060}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/rfind.rs","byte_start":13583034,"byte_end":13583045,"line_start":22,"line_end":22,"column_start":27,"column_end":38},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":3307},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/rfold.rs","byte_start":13583970,"byte_end":13583981,"line_start":20,"line_end":20,"column_start":15,"column_end":26},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":9799},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/rfold.rs","byte_start":13584181,"byte_end":13584192,"line_start":30,"line_end":30,"column_start":26,"column_end":37},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":9799},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/try_rfold.rs","byte_start":13585211,"byte_end":13585225,"line_start":20,"line_end":20,"column_start":15,"column_end":29},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":9742},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/try_rfold.rs","byte_start":13585431,"byte_end":13585445,"line_start":30,"line_end":30,"column_start":29,"column_end":43},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":9742},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/double_ended_stream/mod.rs","byte_start":13574697,"byte_end":13574703,"line_start":27,"line_end":27,"column_start":30,"column_end":36},"kind":"SuperTrait","from":{"krate":25,"index":96},"to":{"krate":0,"index":3405}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/exact_size_stream.rs","byte_start":13588691,"byte_end":13588697,"line_start":81,"line_end":81,"column_start":28,"column_end":34},"kind":"SuperTrait","from":{"krate":25,"index":96},"to":{"krate":0,"index":3422}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/fused_stream.rs","byte_start":13597024,"byte_end":13597030,"line_start":19,"line_end":19,"column_start":24,"column_end":30},"kind":"SuperTrait","from":{"krate":25,"index":96},"to":{"krate":0,"index":3468}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/interval.rs","byte_start":13598912,"byte_end":13598920,"line_start":67,"line_end":67,"column_start":17,"column_end":25},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":3688},"to":{"krate":25,"index":96}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/into_stream.rs","byte_start":13600140,"byte_end":13600141,"line_start":29,"line_end":29,"column_start":32,"column_end":33},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":3511},"to":{"krate":0,"index":3506}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":13601301,"byte_end":13601308,"line_start":48,"line_end":48,"column_start":20,"column_end":27},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":3693},"to":{"krate":25,"index":96}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":13601476,"byte_end":13601483,"line_start":56,"line_end":56,"column_start":31,"column_end":38},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":3693},"to":{"krate":0,"index":3405}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":13601630,"byte_end":13601637,"line_start":62,"line_end":62,"column_start":25,"column_end":32},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":3693},"to":{"krate":0,"index":3468}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/pending.rs","byte_start":13601673,"byte_end":13601680,"line_start":64,"line_end":64,"column_start":29,"column_end":36},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":3693},"to":{"krate":0,"index":3422}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/product.rs","byte_start":13602448,"byte_end":13602453,"line_start":18,"line_end":18,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":3024},"to":{"krate":0,"index":3566}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/successors.rs","byte_start":13605832,"byte_end":13605842,"line_start":58,"line_end":58,"column_start":23,"column_end":33},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":9693},"to":{"krate":25,"index":96}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/stream/sum.rs","byte_start":13607039,"byte_end":13607044,"line_start":18,"line_end":18,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":3024},"to":{"krate":0,"index":3620}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_read/lines.rs","byte_start":13636747,"byte_end":13636752,"line_start":32,"line_end":32,"column_start":29,"column_end":34},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":9645},"to":{"krate":25,"index":96}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_read/read_line.rs","byte_start":13638674,"byte_end":13638688,"line_start":19,"line_end":19,"column_start":46,"column_end":60},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":4483},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_read/read_until.rs","byte_start":13640147,"byte_end":13640162,"line_start":17,"line_end":17,"column_start":46,"column_end":61},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":4519},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_read/split.rs","byte_start":13641362,"byte_end":13641367,"line_start":31,"line_end":31,"column_start":29,"column_end":34},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":9597},"to":{"krate":25,"index":96}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_read/mod.rs","byte_start":13628819,"byte_end":13628826,"line_start":25,"line_end":25,"column_start":23,"column_end":30},"kind":"SuperTrait","from":{"krate":33,"index":49},"to":{"krate":0,"index":4595}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_read/mod.rs","byte_start":13635116,"byte_end":13635117,"line_start":240,"line_end":240,"column_start":42,"column_end":43},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":4603},"to":{"krate":0,"index":4595}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/bytes.rs","byte_start":13654144,"byte_end":13654149,"line_start":18,"line_end":18,"column_start":34,"column_end":39},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":5574},"to":{"krate":25,"index":96}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":13655964,"byte_end":13655969,"line_start":25,"line_end":25,"column_start":12,"column_end":17},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":9548},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":13658128,"byte_end":13658133,"line_start":97,"line_end":97,"column_start":51,"column_end":56},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":9548},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":13658375,"byte_end":13658380,"line_start":106,"line_end":106,"column_start":33,"column_end":38},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":9548},"to":{"krate":33,"index":39}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/chain.rs","byte_start":13659525,"byte_end":13659530,"line_start":142,"line_end":142,"column_start":42,"column_end":47},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":9548},"to":{"krate":33,"index":49}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/read.rs","byte_start":13661231,"byte_end":13661241,"line_start":14,"line_end":14,"column_start":43,"column_end":53},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":4703},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/read_exact.rs","byte_start":13661816,"byte_end":13661831,"line_start":15,"line_end":15,"column_start":43,"column_end":58},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":4736},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/read_to_end.rs","byte_start":13662753,"byte_end":13662768,"line_start":15,"line_end":15,"column_start":43,"column_end":58},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":4766},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/read_to_end.rs","byte_start":13663918,"byte_end":13663923,"line_start":48,"line_end":48,"column_start":19,"column_end":24},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":4778},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/read_to_string.rs","byte_start":13665240,"byte_end":13665258,"line_start":19,"line_end":19,"column_start":43,"column_end":61},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":4814},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/read_vectored.rs","byte_start":13666612,"byte_end":13666630,"line_start":14,"line_end":14,"column_start":43,"column_end":61},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":4850},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13667450,"byte_end":13667454,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":9508},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13671126,"byte_end":13671130,"line_start":160,"line_end":160,"column_start":24,"column_end":28},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":9508},"to":{"krate":33,"index":39}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/take.rs","byte_start":13672048,"byte_end":13672052,"line_start":194,"line_end":194,"column_start":30,"column_end":34},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":9508},"to":{"krate":33,"index":49}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/mod.rs","byte_start":13642536,"byte_end":13642540,"line_start":31,"line_end":31,"column_start":20,"column_end":24},"kind":"SuperTrait","from":{"krate":33,"index":39},"to":{"krate":0,"index":4939}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/read/mod.rs","byte_start":13652534,"byte_end":13652535,"line_start":376,"line_end":376,"column_start":36,"column_end":37},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":4956},"to":{"krate":0,"index":4939}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/seek/seek.rs","byte_start":13674941,"byte_end":13674951,"line_start":14,"line_end":14,"column_start":43,"column_end":53},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":4984},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/seek/mod.rs","byte_start":13673766,"byte_end":13673770,"line_start":14,"line_end":14,"column_start":20,"column_end":24},"kind":"SuperTrait","from":{"krate":33,"index":47},"to":{"krate":0,"index":5002}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/seek/mod.rs","byte_start":13674605,"byte_end":13674606,"line_start":50,"line_end":50,"column_start":36,"column_end":37},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":5005},"to":{"krate":0,"index":5002}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/write/flush.rs","byte_start":13680742,"byte_end":13680753,"line_start":13,"line_end":13,"column_start":44,"column_end":55},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":5028},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/write/write.rs","byte_start":13681265,"byte_end":13681276,"line_start":14,"line_end":14,"column_start":44,"column_end":55},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":5057},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/write/write_all.rs","byte_start":13681841,"byte_end":13681855,"line_start":15,"line_end":15,"column_start":44,"column_end":58},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":5090},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/write/write_fmt.rs","byte_start":13682826,"byte_end":13682840,"line_start":17,"line_end":17,"column_start":44,"column_end":58},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":5120},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/write/write_vectored.rs","byte_start":13684325,"byte_end":13684344,"line_start":14,"line_end":14,"column_start":44,"column_end":63},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":5155},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/write/mod.rs","byte_start":13675582,"byte_end":13675587,"line_start":22,"line_end":22,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":33,"index":42},"to":{"krate":0,"index":5189}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/write/mod.rs","byte_start":13680443,"byte_end":13680444,"line_start":187,"line_end":187,"column_start":38,"column_end":39},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":5202},"to":{"krate":0,"index":5189}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/utils.rs","byte_start":13684811,"byte_end":13684817,"line_start":8,"line_end":8,"column_start":21,"column_end":27},"kind":{"Impl":{"id":268}},"from":{"krate":2,"index":45218},"to":{"krate":0,"index":23}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/utils.rs","byte_start":13685070,"byte_end":13685082,"line_start":20,"line_end":20,"column_start":6,"column_end":18},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":5580},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/utils.rs","byte_start":13685369,"byte_end":13685381,"line_start":32,"line_end":32,"column_start":23,"column_end":35},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":5580},"to":{"krate":2,"index":9560}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/utils.rs","byte_start":13685512,"byte_end":13685524,"line_start":38,"line_end":38,"column_start":19,"column_end":31},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":5580},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13687505,"byte_end":13687514,"line_start":55,"line_end":55,"column_start":19,"column_end":28},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":9463},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13688742,"byte_end":13688751,"line_start":100,"line_end":100,"column_start":9,"column_end":18},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":9463},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13691491,"byte_end":13691500,"line_start":201,"line_end":201,"column_start":24,"column_end":33},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":9463},"to":{"krate":33,"index":39}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13692954,"byte_end":13692963,"line_start":240,"line_end":240,"column_start":27,"column_end":36},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":9463},"to":{"krate":33,"index":49}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13693885,"byte_end":13693894,"line_start":265,"line_end":265,"column_start":47,"column_end":56},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":9463},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_reader.rs","byte_start":13694232,"byte_end":13694241,"line_start":277,"line_end":277,"column_start":24,"column_end":33},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":9463},"to":{"krate":33,"index":47}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13701071,"byte_end":13701080,"line_start":119,"line_end":119,"column_start":16,"column_end":25},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":9422},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13706912,"byte_end":13706921,"line_start":303,"line_end":303,"column_start":26,"column_end":35},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":9422},"to":{"krate":33,"index":42}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13707819,"byte_end":13707828,"line_start":330,"line_end":330,"column_start":44,"column_end":53},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":9422},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/buf_writer.rs","byte_start":13708074,"byte_end":13708083,"line_start":339,"line_end":339,"column_start":32,"column_end":41},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":9422},"to":{"krate":33,"index":47}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/copy.rs","byte_start":13712879,"byte_end":13712889,"line_start":150,"line_end":150,"column_start":27,"column_end":37},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":9373},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13714952,"byte_end":13714958,"line_start":29,"line_end":29,"column_start":9,"column_end":15},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":5593},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13718259,"byte_end":13718265,"line_start":154,"line_end":154,"column_start":18,"column_end":24},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":5593},"to":{"krate":33,"index":47}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13718531,"byte_end":13718537,"line_start":167,"line_end":167,"column_start":18,"column_end":24},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":5593},"to":{"krate":33,"index":39}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13719053,"byte_end":13719059,"line_start":188,"line_end":188,"column_start":21,"column_end":27},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":5593},"to":{"krate":33,"index":49}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13719409,"byte_end":13719415,"line_start":201,"line_end":201,"column_start":16,"column_end":22},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":5593},"to":{"krate":33,"index":42}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13720174,"byte_end":13720180,"line_start":227,"line_end":227,"column_start":16,"column_end":22},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":5593},"to":{"krate":33,"index":42}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/cursor.rs","byte_start":13720704,"byte_end":13720710,"line_start":245,"line_end":245,"column_start":16,"column_end":22},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":5593},"to":{"krate":33,"index":42}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/empty.rs","byte_start":13721988,"byte_end":13721993,"line_start":39,"line_end":39,"column_start":21,"column_end":26},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":5506},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/empty.rs","byte_start":13722112,"byte_end":13722117,"line_start":45,"line_end":45,"column_start":15,"column_end":20},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":5506},"to":{"krate":33,"index":39}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/empty.rs","byte_start":13722321,"byte_end":13722326,"line_start":56,"line_end":56,"column_start":18,"column_end":23},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":5506},"to":{"krate":33,"index":49}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/repeat.rs","byte_start":13723511,"byte_end":13723517,"line_start":40,"line_end":40,"column_start":21,"column_end":27},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":5538},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/repeat.rs","byte_start":13723636,"byte_end":13723642,"line_start":46,"line_end":46,"column_start":15,"column_end":21},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":5538},"to":{"krate":33,"index":39}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/sink.rs","byte_start":13724627,"byte_end":13724631,"line_start":36,"line_end":36,"column_start":21,"column_end":25},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":5566},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/sink.rs","byte_start":13724750,"byte_end":13724754,"line_start":42,"line_end":42,"column_start":16,"column_end":20},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":5566},"to":{"krate":33,"index":42}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/timeout.rs","byte_start":13726502,"byte_end":13726509,"line_start":60,"line_end":60,"column_start":23,"column_end":30},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":9324},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":13729500,"byte_end":13729506,"line_start":90,"line_end":90,"column_start":16,"column_end":22},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":5815},"to":{"krate":33,"index":42}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stderr.rs","byte_start":13732987,"byte_end":13732993,"line_start":178,"line_end":178,"column_start":22,"column_end":28},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":5815},"to":{"krate":1,"index":6643}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":13735845,"byte_end":13735850,"line_start":96,"line_end":96,"column_start":6,"column_end":11},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":5853},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":13737866,"byte_end":13737871,"line_start":150,"line_end":150,"column_start":15,"column_end":20},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":5853},"to":{"krate":33,"index":39}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdin.rs","byte_start":13740009,"byte_end":13740014,"line_start":204,"line_end":204,"column_start":22,"column_end":27},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":5853},"to":{"krate":1,"index":6643}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":13743345,"byte_end":13743351,"line_start":90,"line_end":90,"column_start":16,"column_end":22},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":5892},"to":{"krate":33,"index":42}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/io/stdout.rs","byte_start":13746832,"byte_end":13746838,"line_start":178,"line_end":178,"column_start":22,"column_end":28},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":5892},"to":{"krate":1,"index":6643}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13756114,"byte_end":13756126,"line_start":46,"line_end":46,"column_start":6,"column_end":18},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":6013},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13763478,"byte_end":13763490,"line_start":288,"line_end":288,"column_start":21,"column_end":33},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":6013},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13763926,"byte_end":13763938,"line_start":305,"line_end":305,"column_start":32,"column_end":44},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":6013},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13764231,"byte_end":13764243,"line_start":314,"line_end":314,"column_start":18,"column_end":30},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":6013},"to":{"krate":1,"index":6643}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13764342,"byte_end":13764354,"line_start":320,"line_end":320,"column_start":20,"column_end":32},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":6013},"to":{"krate":1,"index":6645}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/datagram.rs","byte_start":13764628,"byte_end":13764640,"line_start":328,"line_end":328,"column_start":20,"column_end":32},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":6013},"to":{"krate":1,"index":6647}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13766345,"byte_end":13766357,"line_start":56,"line_end":56,"column_start":6,"column_end":18},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":6110},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13769392,"byte_end":13769404,"line_start":155,"line_end":155,"column_start":21,"column_end":33},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":6110},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13770439,"byte_end":13770447,"line_start":183,"line_end":183,"column_start":17,"column_end":25},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":6124},"to":{"krate":25,"index":96}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13770784,"byte_end":13770792,"line_start":192,"line_end":192,"column_start":21,"column_end":29},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":6124},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13770959,"byte_end":13770971,"line_start":199,"line_end":199,"column_start":32,"column_end":44},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":6110},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13771264,"byte_end":13771276,"line_start":208,"line_end":208,"column_start":18,"column_end":30},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":6110},"to":{"krate":1,"index":6643}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13771375,"byte_end":13771387,"line_start":214,"line_end":214,"column_start":20,"column_end":32},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":6110},"to":{"krate":1,"index":6645}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/listener.rs","byte_start":13771571,"byte_end":13771583,"line_start":221,"line_end":221,"column_start":20,"column_end":32},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":6110},"to":{"krate":1,"index":6647}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13772808,"byte_end":13772818,"line_start":45,"line_end":45,"column_start":6,"column_end":16},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":6238},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13776030,"byte_end":13776040,"line_start":151,"line_end":151,"column_start":15,"column_end":25},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":6238},"to":{"krate":33,"index":39}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13776484,"byte_end":13776494,"line_start":171,"line_end":171,"column_start":16,"column_end":26},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":6238},"to":{"krate":33,"index":42}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13777516,"byte_end":13777526,"line_start":207,"line_end":207,"column_start":21,"column_end":31},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":6238},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13777958,"byte_end":13777968,"line_start":224,"line_end":224,"column_start":30,"column_end":40},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":6238},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13778286,"byte_end":13778296,"line_start":234,"line_end":234,"column_start":18,"column_end":28},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":6238},"to":{"krate":1,"index":6643}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13778395,"byte_end":13778405,"line_start":240,"line_end":240,"column_start":20,"column_end":30},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":6238},"to":{"krate":1,"index":6645}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/os/unix/net/stream.rs","byte_start":13778581,"byte_end":13778591,"line_start":247,"line_end":247,"column_start":20,"column_end":30},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":6238},"to":{"krate":1,"index":6647}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13779082,"byte_end":13779099,"line_start":15,"line_end":15,"column_start":6,"column_end":23},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":6449},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13780262,"byte_end":13780269,"line_start":63,"line_end":63,"column_start":22,"column_end":29},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":6335},"to":{"krate":2,"index":3019}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13780294,"byte_end":13780301,"line_start":64,"line_end":64,"column_start":22,"column_end":29},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":6335},"to":{"krate":2,"index":3031}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13780323,"byte_end":13780330,"line_start":66,"line_end":66,"column_start":18,"column_end":25},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":6335},"to":{"krate":2,"index":2997}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13780397,"byte_end":13780404,"line_start":72,"line_end":72,"column_start":6,"column_end":13},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":6335},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13789178,"byte_end":13789185,"line_start":362,"line_end":362,"column_start":21,"column_end":28},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":6335},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13789977,"byte_end":13789988,"line_start":384,"line_end":384,"column_start":28,"column_end":39},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":6372},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/condvar.rs","byte_start":13790896,"byte_end":13790907,"line_start":411,"line_end":411,"column_start":26,"column_end":37},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":6372},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/waker_set.rs","byte_start":13792549,"byte_end":13792557,"line_start":49,"line_end":49,"column_start":6,"column_end":14},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":6427},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/waker_set.rs","byte_start":13796715,"byte_end":13796719,"line_start":190,"line_end":190,"column_start":15,"column_end":19},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":6439},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/waker_set.rs","byte_start":13797285,"byte_end":13797289,"line_start":210,"line_end":210,"column_start":16,"column_end":20},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":6439},"to":{"krate":2,"index":3234}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/sync/waker_set.rs","byte_start":13797443,"byte_end":13797447,"line_start":219,"line_end":219,"column_start":19,"column_end":23},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":6439},"to":{"krate":2,"index":3247}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":13805750,"byte_end":13805760,"line_start":25,"line_end":25,"column_start":6,"column_end":16},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":8042},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_builder.rs","byte_start":13808339,"byte_end":13808349,"line_start":117,"line_end":117,"column_start":28,"column_end":38},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":8042},"to":{"krate":1,"index":5585}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13808984,"byte_end":13808992,"line_start":20,"line_end":20,"column_start":6,"column_end":14},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":6684},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13812955,"byte_end":13812963,"line_start":155,"line_end":155,"column_start":21,"column_end":29},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":6684},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13813116,"byte_end":13813124,"line_start":161,"line_end":161,"column_start":16,"column_end":24},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":6684},"to":{"krate":2,"index":2640}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/dir_entry.rs","byte_start":13813279,"byte_end":13813287,"line_start":170,"line_end":170,"column_start":26,"column_end":34},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":6684},"to":{"krate":1,"index":5573}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13815303,"byte_end":13815307,"line_start":70,"line_end":70,"column_start":6,"column_end":10},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":8059},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13823075,"byte_end":13823079,"line_start":312,"line_end":312,"column_start":15,"column_end":19},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":8059},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13823574,"byte_end":13823578,"line_start":322,"line_end":322,"column_start":21,"column_end":25},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":8059},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13823692,"byte_end":13823696,"line_start":328,"line_end":328,"column_start":15,"column_end":19},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":8059},"to":{"krate":33,"index":39}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13824177,"byte_end":13824181,"line_start":349,"line_end":349,"column_start":16,"column_end":20},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":8059},"to":{"krate":33,"index":42}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13825345,"byte_end":13825349,"line_start":388,"line_end":388,"column_start":15,"column_end":19},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":8059},"to":{"krate":33,"index":47}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13825838,"byte_end":13825842,"line_start":409,"line_end":409,"column_start":30,"column_end":34},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":8059},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13826031,"byte_end":13826035,"line_start":418,"line_end":418,"column_start":22,"column_end":26},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":8059},"to":{"krate":1,"index":6643}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13826151,"byte_end":13826155,"line_start":424,"line_end":424,"column_start":24,"column_end":28},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":8059},"to":{"krate":1,"index":6645}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13826299,"byte_end":13826303,"line_start":430,"line_end":430,"column_start":24,"column_end":28},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":8059},"to":{"krate":1,"index":6647}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13827423,"byte_end":13827427,"line_start":470,"line_end":470,"column_start":31,"column_end":35},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":6852},"to":{"krate":2,"index":3019}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13827464,"byte_end":13827468,"line_start":471,"line_end":471,"column_start":31,"column_end":35},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":6852},"to":{"krate":2,"index":3031}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13827494,"byte_end":13827498,"line_start":473,"line_end":473,"column_start":19,"column_end":23},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":6852},"to":{"krate":2,"index":2640}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13827850,"byte_end":13827854,"line_start":492,"line_end":492,"column_start":9,"column_end":13},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":6852},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13829089,"byte_end":13829098,"line_start":529,"line_end":529,"column_start":31,"column_end":40},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":6873},"to":{"krate":2,"index":3019}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13829135,"byte_end":13829144,"line_start":530,"line_end":530,"column_start":31,"column_end":40},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":6873},"to":{"krate":2,"index":3031}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13829160,"byte_end":13829169,"line_start":532,"line_end":532,"column_start":9,"column_end":18},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":6873},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13829560,"byte_end":13829569,"line_start":545,"line_end":545,"column_start":18,"column_end":27},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":6873},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13829877,"byte_end":13829886,"line_start":557,"line_end":557,"column_start":19,"column_end":28},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":6873},"to":{"krate":2,"index":3234}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13830012,"byte_end":13830021,"line_start":565,"line_end":565,"column_start":22,"column_end":31},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":6873},"to":{"krate":2,"index":3247}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/file.rs","byte_start":13831582,"byte_end":13831591,"line_start":618,"line_end":618,"column_start":6,"column_end":15},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":6873},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13855655,"byte_end":13855666,"line_start":64,"line_end":64,"column_start":6,"column_end":17},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":8089},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13862455,"byte_end":13862466,"line_start":294,"line_end":294,"column_start":18,"column_end":29},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":8089},"to":{"krate":2,"index":2997}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/open_options.rs","byte_start":13862611,"byte_end":13862622,"line_start":303,"line_end":303,"column_start":29,"column_end":40},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":8089},"to":{"krate":1,"index":5523}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":13868307,"byte_end":13868314,"line_start":81,"line_end":81,"column_start":6,"column_end":13},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":8105},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/fs/read_dir.rs","byte_start":13868513,"byte_end":13868520,"line_start":88,"line_end":88,"column_start":17,"column_end":24},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":8105},"to":{"krate":25,"index":96}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/ancestors.rs","byte_start":13883466,"byte_end":13883475,"line_start":29,"line_end":29,"column_start":23,"column_end":32},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":8119},"to":{"krate":2,"index":7822}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/ancestors.rs","byte_start":13883680,"byte_end":13883689,"line_start":39,"line_end":39,"column_start":24,"column_end":33},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":8119},"to":{"krate":2,"index":8092}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":13884435,"byte_end":13884445,"line_start":31,"line_end":31,"column_start":10,"column_end":20},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":8130},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":13884954,"byte_end":13884964,"line_start":50,"line_end":50,"column_start":22,"column_end":32},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":8130},"to":{"krate":2,"index":2916}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":13885057,"byte_end":13885067,"line_start":56,"line_end":56,"column_start":23,"column_end":33},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":8130},"to":{"krate":2,"index":2916}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":13885173,"byte_end":13885183,"line_start":62,"line_end":62,"column_start":23,"column_end":33},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":8130},"to":{"krate":2,"index":7822}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":13885340,"byte_end":13885350,"line_start":70,"line_end":70,"column_start":34,"column_end":44},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":8130},"to":{"krate":2,"index":7677}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":13885475,"byte_end":13885485,"line_start":76,"line_end":76,"column_start":24,"column_end":34},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":8130},"to":{"krate":2,"index":8092}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/components.rs","byte_start":13885515,"byte_end":13885524,"line_start":78,"line_end":78,"column_start":22,"column_end":31},"kind":{"Impl":{"id":379}},"from":{"krate":1,"index":11206},"to":{"krate":2,"index":2916}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":13886155,"byte_end":13886159,"line_start":21,"line_end":21,"column_start":10,"column_end":14},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":8156},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":13886632,"byte_end":13886636,"line_start":40,"line_end":40,"column_start":23,"column_end":27},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":8156},"to":{"krate":2,"index":7822}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":13886798,"byte_end":13886802,"line_start":48,"line_end":48,"column_start":21,"column_end":25},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":8156},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":13886943,"byte_end":13886954,"line_start":52,"line_end":52,"column_start":29,"column_end":40},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":7304},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":13887251,"byte_end":13887255,"line_start":64,"line_end":64,"column_start":22,"column_end":26},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":8156},"to":{"krate":2,"index":2916}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":13887348,"byte_end":13887352,"line_start":70,"line_end":70,"column_start":23,"column_end":27},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":8156},"to":{"krate":2,"index":2916}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":13887469,"byte_end":13887473,"line_start":76,"line_end":76,"column_start":34,"column_end":38},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":8156},"to":{"krate":2,"index":7677}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/iter.rs","byte_start":13887620,"byte_end":13887624,"line_start":82,"line_end":82,"column_start":24,"column_end":28},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":8156},"to":{"krate":2,"index":8092}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13889224,"byte_end":13889228,"line_start":53,"line_end":53,"column_start":6,"column_end":10},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":8162},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13914390,"byte_end":13914393,"line_start":824,"line_end":824,"column_start":22,"column_end":25},"kind":{"Impl":{"id":389}},"from":{"krate":5,"index":315},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13914622,"byte_end":13914625,"line_start":832,"line_end":832,"column_start":22,"column_end":25},"kind":{"Impl":{"id":390}},"from":{"krate":5,"index":5984},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13914920,"byte_end":13914922,"line_start":841,"line_end":841,"column_start":22,"column_end":24},"kind":{"Impl":{"id":391}},"from":{"krate":5,"index":4665},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13915125,"byte_end":13915129,"line_start":849,"line_end":849,"column_start":18,"column_end":22},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":8162},"to":{"krate":5,"index":663}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13915253,"byte_end":13915257,"line_start":857,"line_end":857,"column_start":23,"column_end":27},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":8162},"to":{"krate":2,"index":2916}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13915351,"byte_end":13915355,"line_start":863,"line_end":863,"column_start":22,"column_end":26},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":8162},"to":{"krate":2,"index":2916}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13915433,"byte_end":13915438,"line_start":869,"line_end":869,"column_start":22,"column_end":27},"kind":{"Impl":{"id":395}},"from":{"krate":1,"index":2787},"to":{"krate":2,"index":2916}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13915534,"byte_end":13915537,"line_start":875,"line_end":875,"column_start":29,"column_end":32},"kind":{"Impl":{"id":396}},"from":{"krate":5,"index":672},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13915663,"byte_end":13915666,"line_start":882,"line_end":882,"column_start":22,"column_end":25},"kind":{"Impl":{"id":397}},"from":{"krate":5,"index":672},"to":{"krate":2,"index":2916}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13915766,"byte_end":13915774,"line_start":888,"line_end":888,"column_start":22,"column_end":30},"kind":{"Impl":{"id":398}},"from":{"krate":1,"index":2784},"to":{"krate":2,"index":2916}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13915955,"byte_end":13915961,"line_start":900,"line_end":900,"column_start":22,"column_end":28},"kind":{"Impl":{"id":400}},"from":{"krate":5,"index":7617},"to":{"krate":2,"index":2916}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13916050,"byte_end":13916057,"line_start":906,"line_end":906,"column_start":22,"column_end":29},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":8436},"to":{"krate":2,"index":2916}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13919205,"byte_end":13919209,"line_start":1024,"line_end":1024,"column_start":33,"column_end":37},"kind":{"Impl":{"id":452}},"from":{"krate":0,"index":8162},"to":{"krate":2,"index":2916}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13919316,"byte_end":13919320,"line_start":1030,"line_end":1030,"column_start":33,"column_end":37},"kind":{"Impl":{"id":453}},"from":{"krate":1,"index":7174},"to":{"krate":2,"index":2916}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/path.rs","byte_start":13919416,"byte_end":13919423,"line_start":1036,"line_end":1036,"column_start":33,"column_end":40},"kind":{"Impl":{"id":454}},"from":{"krate":1,"index":7067},"to":{"krate":2,"index":2916}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13920199,"byte_end":13920206,"line_start":25,"line_end":25,"column_start":6,"column_end":13},"kind":{"Impl":{"id":455}},"from":{"krate":0,"index":8436},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13925452,"byte_end":13925459,"line_start":199,"line_end":199,"column_start":26,"column_end":33},"kind":{"Impl":{"id":456}},"from":{"krate":0,"index":8436},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13925567,"byte_end":13925570,"line_start":205,"line_end":205,"column_start":24,"column_end":27},"kind":{"Impl":{"id":457}},"from":{"krate":5,"index":315},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13925670,"byte_end":13925673,"line_start":211,"line_end":211,"column_start":16,"column_end":19},"kind":{"Impl":{"id":458}},"from":{"krate":5,"index":315},"to":{"krate":2,"index":2640}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13925824,"byte_end":13925831,"line_start":218,"line_end":218,"column_start":45,"column_end":52},"kind":{"Impl":{"id":459}},"from":{"krate":0,"index":8436},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13925948,"byte_end":13925955,"line_start":224,"line_end":224,"column_start":25,"column_end":32},"kind":{"Impl":{"id":460}},"from":{"krate":0,"index":8436},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13926064,"byte_end":13926072,"line_start":230,"line_end":230,"column_start":24,"column_end":32},"kind":{"Impl":{"id":461}},"from":{"krate":1,"index":2784},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13926181,"byte_end":13926188,"line_start":236,"line_end":236,"column_start":23,"column_end":30},"kind":{"Impl":{"id":462}},"from":{"krate":0,"index":8436},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13926294,"byte_end":13926301,"line_start":242,"line_end":242,"column_start":18,"column_end":25},"kind":{"Impl":{"id":463}},"from":{"krate":0,"index":8436},"to":{"krate":2,"index":12144}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13926480,"byte_end":13926487,"line_start":250,"line_end":250,"column_start":42,"column_end":49},"kind":{"Impl":{"id":464}},"from":{"krate":0,"index":8436},"to":{"krate":2,"index":7629}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13926682,"byte_end":13926689,"line_start":258,"line_end":258,"column_start":42,"column_end":49},"kind":{"Impl":{"id":465}},"from":{"krate":0,"index":8436},"to":{"krate":2,"index":7642}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13926846,"byte_end":13926853,"line_start":264,"line_end":264,"column_start":16,"column_end":23},"kind":{"Impl":{"id":466}},"from":{"krate":0,"index":8436},"to":{"krate":2,"index":3234}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13926974,"byte_end":13926981,"line_start":272,"line_end":272,"column_start":23,"column_end":30},"kind":{"Impl":{"id":467}},"from":{"krate":0,"index":8436},"to":{"krate":2,"index":2618}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13927073,"byte_end":13927076,"line_start":278,"line_end":278,"column_start":28,"column_end":31},"kind":{"Impl":{"id":468}},"from":{"krate":5,"index":672},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13927208,"byte_end":13927211,"line_start":285,"line_end":285,"column_start":32,"column_end":35},"kind":{"Impl":{"id":469}},"from":{"krate":5,"index":672},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13927362,"byte_end":13927369,"line_start":292,"line_end":292,"column_start":34,"column_end":41},"kind":{"Impl":{"id":470}},"from":{"krate":0,"index":8436},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13927481,"byte_end":13927484,"line_start":299,"line_end":299,"column_start":24,"column_end":27},"kind":{"Impl":{"id":471}},"from":{"krate":5,"index":5984},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13927707,"byte_end":13927709,"line_start":307,"line_end":307,"column_start":24,"column_end":26},"kind":{"Impl":{"id":472}},"from":{"krate":5,"index":4665},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13927924,"byte_end":13927931,"line_start":315,"line_end":315,"column_start":23,"column_end":30},"kind":{"Impl":{"id":473}},"from":{"krate":0,"index":8436},"to":{"krate":2,"index":2916}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13928076,"byte_end":13928083,"line_start":322,"line_end":322,"column_start":44,"column_end":51},"kind":{"Impl":{"id":474}},"from":{"krate":0,"index":8436},"to":{"krate":0,"index":3437}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13928625,"byte_end":13928632,"line_start":343,"line_end":343,"column_start":56,"column_end":63},"kind":{"Impl":{"id":475}},"from":{"krate":0,"index":8436},"to":{"krate":0,"index":3459}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13929075,"byte_end":13929082,"line_start":361,"line_end":361,"column_start":35,"column_end":42},"kind":{"Impl":{"id":476}},"from":{"krate":0,"index":8436},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13929211,"byte_end":13929218,"line_start":367,"line_end":367,"column_start":35,"column_end":42},"kind":{"Impl":{"id":477}},"from":{"krate":0,"index":8436},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/path/pathbuf.rs","byte_start":13929323,"byte_end":13929330,"line_start":373,"line_end":373,"column_start":33,"column_end":40},"kind":{"Impl":{"id":478}},"from":{"krate":0,"index":8436},"to":{"krate":2,"index":2916}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":13934158,"byte_end":13934177,"line_start":72,"line_end":72,"column_start":19,"column_end":38},"kind":{"Impl":{"id":479}},"from":{"krate":0,"index":7739},"to":{"krate":2,"index":3060}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":13934345,"byte_end":13934364,"line_start":77,"line_end":77,"column_start":26,"column_end":45},"kind":{"Impl":{"id":480}},"from":{"krate":0,"index":7739},"to":{"krate":0,"index":23}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":13934636,"byte_end":13934655,"line_start":86,"line_end":86,"column_start":49,"column_end":68},"kind":{"Impl":{"id":481}},"from":{"krate":0,"index":7739},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":13935358,"byte_end":13935368,"line_start":107,"line_end":107,"column_start":24,"column_end":34},"kind":{"Impl":{"id":482}},"from":{"krate":1,"index":10838},"to":{"krate":0,"index":7736}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":13935663,"byte_end":13935675,"line_start":120,"line_end":120,"column_start":24,"column_end":36},"kind":{"Impl":{"id":483}},"from":{"krate":1,"index":10862},"to":{"krate":0,"index":7736}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":13936040,"byte_end":13936052,"line_start":135,"line_end":135,"column_start":24,"column_end":36},"kind":{"Impl":{"id":484}},"from":{"krate":1,"index":10865},"to":{"krate":0,"index":7736}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/addr.rs","byte_start":13939771,"byte_end":13939777,"line_start":274,"line_end":274,"column_start":24,"column_end":30},"kind":{"Impl":{"id":486}},"from":{"krate":5,"index":7617},"to":{"krate":0,"index":7736}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13941710,"byte_end":13941721,"line_start":56,"line_end":56,"column_start":6,"column_end":17},"kind":{"Impl":{"id":487}},"from":{"krate":0,"index":8459},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13947696,"byte_end":13947704,"line_start":231,"line_end":231,"column_start":17,"column_end":25},"kind":{"Impl":{"id":488}},"from":{"krate":0,"index":7869},"to":{"krate":25,"index":96}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13948039,"byte_end":13948047,"line_start":240,"line_end":240,"column_start":21,"column_end":29},"kind":{"Impl":{"id":489}},"from":{"krate":0,"index":7869},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13948203,"byte_end":13948214,"line_start":246,"line_end":246,"column_start":38,"column_end":49},"kind":{"Impl":{"id":490}},"from":{"krate":0,"index":8459},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13948585,"byte_end":13948596,"line_start":258,"line_end":258,"column_start":22,"column_end":33},"kind":{"Impl":{"id":491}},"from":{"krate":0,"index":8459},"to":{"krate":1,"index":6643}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13948725,"byte_end":13948736,"line_start":264,"line_end":264,"column_start":24,"column_end":35},"kind":{"Impl":{"id":492}},"from":{"krate":0,"index":8459},"to":{"krate":1,"index":6645}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/listener.rs","byte_start":13948895,"byte_end":13948906,"line_start":270,"line_end":270,"column_start":24,"column_end":35},"kind":{"Impl":{"id":493}},"from":{"krate":0,"index":8459},"to":{"krate":1,"index":6647}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13951522,"byte_end":13951531,"line_start":53,"line_end":53,"column_start":6,"column_end":15},"kind":{"Impl":{"id":494}},"from":{"krate":0,"index":8482},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13958639,"byte_end":13958648,"line_start":284,"line_end":284,"column_start":15,"column_end":24},"kind":{"Impl":{"id":495}},"from":{"krate":0,"index":8482},"to":{"krate":33,"index":39}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13959549,"byte_end":13959558,"line_start":320,"line_end":320,"column_start":16,"column_end":25},"kind":{"Impl":{"id":496}},"from":{"krate":0,"index":8482},"to":{"krate":33,"index":42}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13961042,"byte_end":13961051,"line_start":372,"line_end":372,"column_start":36,"column_end":45},"kind":{"Impl":{"id":497}},"from":{"krate":0,"index":8482},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13961418,"byte_end":13961427,"line_start":384,"line_end":384,"column_start":22,"column_end":31},"kind":{"Impl":{"id":498}},"from":{"krate":0,"index":8482},"to":{"krate":1,"index":6643}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13961556,"byte_end":13961565,"line_start":390,"line_end":390,"column_start":24,"column_end":33},"kind":{"Impl":{"id":499}},"from":{"krate":0,"index":8482},"to":{"krate":1,"index":6645}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/tcp/stream.rs","byte_start":13961720,"byte_end":13961729,"line_start":396,"line_end":396,"column_start":24,"column_end":33},"kind":{"Impl":{"id":500}},"from":{"krate":0,"index":8482},"to":{"krate":1,"index":6647}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13964440,"byte_end":13964449,"line_start":51,"line_end":51,"column_start":6,"column_end":15},"kind":{"Impl":{"id":501}},"from":{"krate":0,"index":8507},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13980344,"byte_end":13980353,"line_start":526,"line_end":526,"column_start":36,"column_end":45},"kind":{"Impl":{"id":502}},"from":{"krate":0,"index":8507},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13980710,"byte_end":13980719,"line_start":538,"line_end":538,"column_start":22,"column_end":31},"kind":{"Impl":{"id":503}},"from":{"krate":0,"index":8507},"to":{"krate":1,"index":6643}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13980848,"byte_end":13980857,"line_start":544,"line_end":544,"column_start":24,"column_end":33},"kind":{"Impl":{"id":504}},"from":{"krate":0,"index":8507},"to":{"krate":1,"index":6645}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/net/udp/mod.rs","byte_start":13981012,"byte_end":13981021,"line_start":550,"line_end":550,"column_start":24,"column_end":33},"kind":{"Impl":{"id":505}},"from":{"krate":0,"index":8507},"to":{"krate":1,"index":6647}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/vec/extend.rs","byte_start":13988785,"byte_end":13988788,"line_start":6,"line_end":6,"column_start":37,"column_end":40},"kind":{"Impl":{"id":506}},"from":{"krate":5,"index":7080},"to":{"krate":0,"index":3437}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/vec/from_stream.rs","byte_start":13989347,"byte_end":13989350,"line_start":9,"line_end":9,"column_start":33,"column_end":36},"kind":{"Impl":{"id":507}},"from":{"krate":5,"index":7080},"to":{"krate":0,"index":3459}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/vec/from_stream.rs","byte_start":13989801,"byte_end":13989804,"line_start":27,"line_end":27,"column_start":45,"column_end":48},"kind":{"Impl":{"id":508}},"from":{"krate":5,"index":672},"to":{"krate":0,"index":3459}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/vec/from_stream.rs","byte_start":13990209,"byte_end":13990212,"line_start":43,"line_end":43,"column_start":33,"column_end":36},"kind":{"Impl":{"id":509}},"from":{"krate":5,"index":315},"to":{"krate":0,"index":3459}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/vec/from_stream.rs","byte_start":13990613,"byte_end":13990615,"line_start":59,"line_end":59,"column_start":33,"column_end":35},"kind":{"Impl":{"id":510}},"from":{"krate":5,"index":4665},"to":{"krate":0,"index":3459}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/vec/from_stream.rs","byte_start":13991004,"byte_end":13991007,"line_start":75,"line_end":75,"column_start":33,"column_end":36},"kind":{"Impl":{"id":511}},"from":{"krate":5,"index":5984},"to":{"krate":0,"index":3459}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/result/from_stream.rs","byte_start":13991742,"byte_end":13991748,"line_start":6,"line_end":6,"column_start":44,"column_end":50},"kind":{"Impl":{"id":512}},"from":{"krate":2,"index":45218},"to":{"krate":0,"index":3459}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/result/product.rs","byte_start":14011898,"byte_end":14011904,"line_start":6,"line_end":6,"column_start":41,"column_end":47},"kind":{"Impl":{"id":513}},"from":{"krate":2,"index":45218},"to":{"krate":0,"index":3566}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/result/sum.rs","byte_start":14014167,"byte_end":14014173,"line_start":6,"line_end":6,"column_start":37,"column_end":43},"kind":{"Impl":{"id":514}},"from":{"krate":2,"index":45218},"to":{"krate":0,"index":3620}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/option/from_stream.rs","byte_start":13994203,"byte_end":13994209,"line_start":7,"line_end":7,"column_start":44,"column_end":50},"kind":{"Impl":{"id":515}},"from":{"krate":2,"index":45092},"to":{"krate":0,"index":3459}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/option/product.rs","byte_start":14016432,"byte_end":14016438,"line_start":7,"line_end":7,"column_start":35,"column_end":41},"kind":{"Impl":{"id":516}},"from":{"krate":2,"index":45092},"to":{"krate":0,"index":3566}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/option/sum.rs","byte_start":14018239,"byte_end":14018245,"line_start":7,"line_end":7,"column_start":31,"column_end":37},"kind":{"Impl":{"id":517}},"from":{"krate":2,"index":45092},"to":{"krate":0,"index":3620}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/string/extend.rs","byte_start":13995660,"byte_end":13995666,"line_start":7,"line_end":7,"column_start":31,"column_end":37},"kind":{"Impl":{"id":518}},"from":{"krate":5,"index":7617},"to":{"krate":0,"index":3437}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/string/extend.rs","byte_start":13996201,"byte_end":13996207,"line_start":28,"line_end":28,"column_start":39,"column_end":45},"kind":{"Impl":{"id":519}},"from":{"krate":5,"index":7617},"to":{"krate":0,"index":3437}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/string/extend.rs","byte_start":13996702,"byte_end":13996708,"line_start":48,"line_end":48,"column_start":38,"column_end":44},"kind":{"Impl":{"id":520}},"from":{"krate":5,"index":7617},"to":{"krate":0,"index":3437}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/string/extend.rs","byte_start":13997200,"byte_end":13997206,"line_start":68,"line_end":68,"column_start":33,"column_end":39},"kind":{"Impl":{"id":521}},"from":{"krate":5,"index":7617},"to":{"krate":0,"index":3437}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/string/extend.rs","byte_start":13997707,"byte_end":13997713,"line_start":88,"line_end":88,"column_start":43,"column_end":49},"kind":{"Impl":{"id":522}},"from":{"krate":5,"index":7617},"to":{"krate":0,"index":3437}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/string/from_stream.rs","byte_start":13998321,"byte_end":13998327,"line_start":7,"line_end":7,"column_start":27,"column_end":33},"kind":{"Impl":{"id":523}},"from":{"krate":5,"index":7617},"to":{"krate":0,"index":3459}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/string/from_stream.rs","byte_start":13998776,"byte_end":13998782,"line_start":25,"line_end":25,"column_start":35,"column_end":41},"kind":{"Impl":{"id":524}},"from":{"krate":5,"index":7617},"to":{"krate":0,"index":3459}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/string/from_stream.rs","byte_start":13999234,"byte_end":13999240,"line_start":43,"line_end":43,"column_start":34,"column_end":40},"kind":{"Impl":{"id":525}},"from":{"krate":5,"index":7617},"to":{"krate":0,"index":3459}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/string/from_stream.rs","byte_start":13999686,"byte_end":13999692,"line_start":61,"line_end":61,"column_start":29,"column_end":35},"kind":{"Impl":{"id":526}},"from":{"krate":5,"index":7617},"to":{"krate":0,"index":3459}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/string/from_stream.rs","byte_start":14000147,"byte_end":14000153,"line_start":79,"line_end":79,"column_start":39,"column_end":45},"kind":{"Impl":{"id":527}},"from":{"krate":5,"index":7617},"to":{"krate":0,"index":3459}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/collections/binary_heap/extend.rs","byte_start":14001382,"byte_end":14001392,"line_start":7,"line_end":7,"column_start":43,"column_end":53},"kind":{"Impl":{"id":528}},"from":{"krate":5,"index":800},"to":{"krate":0,"index":3437}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/collections/binary_heap/from_stream.rs","byte_start":14001932,"byte_end":14001942,"line_start":7,"line_end":7,"column_start":39,"column_end":49},"kind":{"Impl":{"id":529}},"from":{"krate":5,"index":800},"to":{"krate":0,"index":3459}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/collections/btree_map/extend.rs","byte_start":14002638,"byte_end":14002646,"line_start":7,"line_end":7,"column_start":57,"column_end":65},"kind":{"Impl":{"id":530}},"from":{"krate":5,"index":1392},"to":{"krate":0,"index":3437}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/collections/btree_map/from_stream.rs","byte_start":14003160,"byte_end":14003168,"line_start":7,"line_end":7,"column_start":53,"column_end":61},"kind":{"Impl":{"id":531}},"from":{"krate":5,"index":1392},"to":{"krate":0,"index":3459}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/collections/btree_set/extend.rs","byte_start":14003857,"byte_end":14003865,"line_start":7,"line_end":7,"column_start":43,"column_end":51},"kind":{"Impl":{"id":532}},"from":{"krate":5,"index":7454},"to":{"krate":0,"index":3437}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/collections/btree_set/from_stream.rs","byte_start":14004355,"byte_end":14004363,"line_start":7,"line_end":7,"column_start":39,"column_end":47},"kind":{"Impl":{"id":533}},"from":{"krate":5,"index":7454},"to":{"krate":0,"index":3459}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/collections/hash_map/extend.rs","byte_start":14005128,"byte_end":14005135,"line_start":8,"line_end":8,"column_start":42,"column_end":49},"kind":{"Impl":{"id":534}},"from":{"krate":1,"index":1089},"to":{"krate":0,"index":3437}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/collections/hash_map/from_stream.rs","byte_start":14006422,"byte_end":14006429,"line_start":8,"line_end":8,"column_start":38,"column_end":45},"kind":{"Impl":{"id":535}},"from":{"krate":1,"index":1089},"to":{"krate":0,"index":3459}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/collections/hash_set/extend.rs","byte_start":14007303,"byte_end":14007310,"line_start":8,"line_end":8,"column_start":34,"column_end":41},"kind":{"Impl":{"id":536}},"from":{"krate":1,"index":1806},"to":{"krate":0,"index":3437}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/collections/hash_set/from_stream.rs","byte_start":14008759,"byte_end":14008766,"line_start":8,"line_end":8,"column_start":30,"column_end":37},"kind":{"Impl":{"id":537}},"from":{"krate":1,"index":1806},"to":{"krate":0,"index":3459}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/collections/linked_list/extend.rs","byte_start":14009566,"byte_end":14009576,"line_start":7,"line_end":7,"column_start":37,"column_end":47},"kind":{"Impl":{"id":538}},"from":{"krate":5,"index":3366},"to":{"krate":0,"index":3437}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/collections/linked_list/from_stream.rs","byte_start":14010069,"byte_end":14010079,"line_start":7,"line_end":7,"column_start":33,"column_end":43},"kind":{"Impl":{"id":539}},"from":{"krate":5,"index":3366},"to":{"krate":0,"index":3459}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/collections/vec_deque/extend.rs","byte_start":14010806,"byte_end":14010814,"line_start":7,"line_end":7,"column_start":37,"column_end":45},"kind":{"Impl":{"id":540}},"from":{"krate":5,"index":4173},"to":{"krate":0,"index":3437}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.11.0/src/collections/vec_deque/from_stream.rs","byte_start":14011351,"byte_end":14011359,"line_start":7,"line_end":7,"column_start":33,"column_end":41},"kind":{"Impl":{"id":541}},"from":{"krate":5,"index":4173},"to":{"krate":0,"index":3459}}]}