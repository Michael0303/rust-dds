{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0","program":"/home/newslab/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","prost_types","--edition=2018","/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata,link","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=75348c67e1c158d6","-C","extra-filename=-75348c67e1c158d6","--out-dir","/home/newslab/rust_practice/ws/sender/target/rls/debug/deps","-L","dependency=/home/newslab/rust_practice/ws/sender/target/rls/debug/deps","--extern","bytes=/home/newslab/rust_practice/ws/sender/target/rls/debug/deps/libbytes-c29310ac139c099c.rmeta","--extern","prost=/home/newslab/rust_practice/ws/sender/target/rls/debug/deps/libprost-2880f87a0162fde1.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/newslab/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/newslab/rust_practice/ws/sender/target/rls/debug/deps/libprost_types-75348c67e1c158d6.rmeta"},"prelude":{"crate_id":{"name":"prost_types","disambiguator":[14016305271883418247,0]},"crate_root":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src","external_crates":[{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[14026078687029744792,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[5443730852259234579,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[4162025702538114948,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[17612152343462746361,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5560808256873132085,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[135160560163186024,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[5800521777261530329,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[7095478770525139037,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17225897750877482818,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15613653607383163471,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[12428323400248712701,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[11893279639181573711,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[13583305032161054644,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[16609837797022023111,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[18098459435141129808,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[15244551393771456017,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[6576340271055396708,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[15284510821186066958,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[12982807908830018159,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","num":20,"id":{"name":"prost","disambiguator":[5523790211835686154,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","num":21,"id":{"name":"prost_derive","disambiguator":[4733936935190638668,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","num":22,"id":{"name":"bytes","disambiguator":[12152782766538150761,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","num":23,"id":{"name":"byteorder","disambiguator":[12346703004895631807,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","num":24,"id":{"name":"iovec","disambiguator":[141615001635512939,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","num":25,"id":{"name":"libc","disambiguator":[939024296648786786,0]}}],"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/lib.rs","byte_start":0,"byte_end":5298,"line_start":1,"line_end":150,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/lib.rs","byte_start":0,"byte_end":5298,"line_start":1,"line_end":150,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":69},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":179},{"krate":0,"index":26},{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":347},{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":372},{"krate":0,"index":27},{"krate":0,"index":640},{"krate":0,"index":641},{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":647},{"krate":0,"index":680},{"krate":0,"index":681},{"krate":0,"index":683},{"krate":0,"index":684},{"krate":0,"index":687},{"krate":0,"index":28},{"krate":0,"index":785},{"krate":0,"index":786},{"krate":0,"index":788},{"krate":0,"index":789},{"krate":0,"index":792},{"krate":0,"index":838},{"krate":0,"index":839},{"krate":0,"index":841},{"krate":0,"index":842},{"krate":0,"index":845},{"krate":0,"index":880},{"krate":0,"index":881},{"krate":0,"index":883},{"krate":0,"index":884},{"krate":0,"index":887},{"krate":0,"index":972},{"krate":0,"index":973},{"krate":0,"index":975},{"krate":0,"index":976},{"krate":0,"index":979},{"krate":0,"index":29},{"krate":0,"index":1301},{"krate":0,"index":1302},{"krate":0,"index":1304},{"krate":0,"index":1305},{"krate":0,"index":1308},{"krate":0,"index":1379},{"krate":0,"index":1380},{"krate":0,"index":1382},{"krate":0,"index":1383},{"krate":0,"index":1386},{"krate":0,"index":30},{"krate":0,"index":1569},{"krate":0,"index":1570},{"krate":0,"index":1572},{"krate":0,"index":1573},{"krate":0,"index":1576},{"krate":0,"index":1594},{"krate":0,"index":1595},{"krate":0,"index":1597},{"krate":0,"index":1598},{"krate":0,"index":1601},{"krate":0,"index":1646},{"krate":0,"index":1647},{"krate":0,"index":1649},{"krate":0,"index":1650},{"krate":0,"index":1653},{"krate":0,"index":1685},{"krate":0,"index":1686},{"krate":0,"index":1688},{"krate":0,"index":1689},{"krate":0,"index":1692},{"krate":0,"index":1724},{"krate":0,"index":1725},{"krate":0,"index":1727},{"krate":0,"index":1728},{"krate":0,"index":1731},{"krate":0,"index":31},{"krate":0,"index":1819},{"krate":0,"index":1820},{"krate":0,"index":1822},{"krate":0,"index":1823},{"krate":0,"index":1826},{"krate":0,"index":32},{"krate":0,"index":1954},{"krate":0,"index":1955},{"krate":0,"index":1957},{"krate":0,"index":1958},{"krate":0,"index":1961},{"krate":0,"index":33},{"krate":0,"index":2062},{"krate":0,"index":2063},{"krate":0,"index":2065},{"krate":0,"index":2066},{"krate":0,"index":2069},{"krate":0,"index":34},{"krate":0,"index":2161},{"krate":0,"index":2162},{"krate":0,"index":2164},{"krate":0,"index":2165},{"krate":0,"index":2168},{"krate":0,"index":2192},{"krate":0,"index":2193},{"krate":0,"index":2195},{"krate":0,"index":2196},{"krate":0,"index":2199},{"krate":0,"index":2219},{"krate":0,"index":2220},{"krate":0,"index":2222},{"krate":0,"index":2223},{"krate":0,"index":2226},{"krate":0,"index":2276},{"krate":0,"index":2277},{"krate":0,"index":2279},{"krate":0,"index":2280},{"krate":0,"index":2283},{"krate":0,"index":35},{"krate":0,"index":2477},{"krate":0,"index":2478},{"krate":0,"index":2480},{"krate":0,"index":2481},{"krate":0,"index":2484},{"krate":0,"index":2523},{"krate":0,"index":2524},{"krate":0,"index":2526},{"krate":0,"index":2527},{"krate":0,"index":2530},{"krate":0,"index":2556},{"krate":0,"index":2557},{"krate":0,"index":2559},{"krate":0,"index":2560},{"krate":0,"index":2563},{"krate":0,"index":2586},{"krate":0,"index":2593},{"krate":0,"index":2595},{"krate":0,"index":2596},{"krate":0,"index":2598},{"krate":0,"index":2599},{"krate":0,"index":2601},{"krate":0,"index":2602},{"krate":0,"index":2604},{"krate":0,"index":2607},{"krate":0,"index":2609},{"krate":0,"index":2611},{"krate":0,"index":2620},{"krate":0,"index":2621},{"krate":0,"index":2623},{"krate":0,"index":2624},{"krate":0,"index":2627},{"krate":0,"index":2672},{"krate":0,"index":2673},{"krate":0,"index":2675},{"krate":0,"index":2676},{"krate":0,"index":2679},{"krate":0,"index":2729},{"krate":0,"index":2730},{"krate":0,"index":2732},{"krate":0,"index":2733},{"krate":0,"index":2736},{"krate":0,"index":2760},{"krate":0,"index":2761},{"krate":0,"index":2763},{"krate":0,"index":2764},{"krate":0,"index":2767},{"krate":0,"index":2791},{"krate":0,"index":2792},{"krate":0,"index":2794},{"krate":0,"index":2795},{"krate":0,"index":2798},{"krate":0,"index":2825},{"krate":0,"index":2826},{"krate":0,"index":2828},{"krate":0,"index":2829},{"krate":0,"index":2832},{"krate":0,"index":2863},{"krate":0,"index":2864},{"krate":0,"index":2866},{"krate":0,"index":2867},{"krate":0,"index":2870},{"krate":0,"index":36},{"krate":0,"index":2944},{"krate":0,"index":2945},{"krate":0,"index":2947},{"krate":0,"index":2948},{"krate":0,"index":2951},{"krate":0,"index":2969},{"krate":0,"index":2973},{"krate":0,"index":2975},{"krate":0,"index":2976},{"krate":0,"index":2978},{"krate":0,"index":2979},{"krate":0,"index":2981},{"krate":0,"index":2982},{"krate":0,"index":2984},{"krate":0,"index":2987},{"krate":0,"index":2989},{"krate":0,"index":2991},{"krate":0,"index":3000},{"krate":0,"index":3001},{"krate":0,"index":3003},{"krate":0,"index":3004},{"krate":0,"index":3007},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":16},{"krate":0,"index":18},{"krate":0,"index":20},{"krate":0,"index":22},{"krate":0,"index":24}],"decl_id":null,"docs":" Protocol Buffers well-known types.","sig":null,"attributes":[{"value":"/ Protocol Buffers well-known types.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/lib.rs","byte_start":64,"byte_end":102,"line_start":3,"line_end":3,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/lib.rs","byte_start":103,"byte_end":106,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Note that the documentation for the types defined in this crate are generated from the Protobuf","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/lib.rs","byte_start":107,"byte_end":206,"line_start":5,"line_end":5,"column_start":1,"column_end":100}},{"value":"/ definitions, so code examples are not in Rust.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/lib.rs","byte_start":207,"byte_end":257,"line_start":6,"line_end":6,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/lib.rs","byte_start":258,"byte_end":261,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ See the [Protobuf reference][1] for more information about well-known types.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/lib.rs","byte_start":262,"byte_end":342,"line_start":8,"line_end":8,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/lib.rs","byte_start":343,"byte_end":346,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [1]: https://developers.google.com/protocol-buffers/docs/reference/google.protobuf","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/lib.rs","byte_start":347,"byte_end":433,"line_start":10,"line_end":10,"column_start":1,"column_end":87}}]},{"kind":"Struct","id":{"krate":0,"index":37},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13192779,"byte_end":13192796,"line_start":4,"line_end":4,"column_start":12,"column_end":29},"name":"FileDescriptorSet","qualname":"::FileDescriptorSet","value":"FileDescriptorSet { file }","parent":null,"children":[{"krate":0,"index":61}],"decl_id":null,"docs":" The protocol compiler can output a FileDescriptorSet containing the .proto\n files it parses.\n","sig":null,"attributes":[{"value":"/ The protocol compiler can output a FileDescriptorSet containing the .proto","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13192622,"byte_end":13192700,"line_start":1,"line_end":1,"column_start":1,"column_end":79}},{"value":"/ files it parses.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13192701,"byte_end":13192721,"line_start":2,"line_end":2,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":61},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13192848,"byte_end":13192852,"line_start":6,"line_end":6,"column_start":9,"column_end":13},"name":"file","qualname":"::FileDescriptorSet::file","value":"std::vec::Vec<FileDescriptorProto>","parent":{"krate":0,"index":37},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, repeated, tag = \"1\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13192803,"byte_end":13192839,"line_start":5,"line_end":5,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":62},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13192989,"byte_end":13193008,"line_start":10,"line_end":10,"column_start":12,"column_end":31},"name":"FileDescriptorProto","qualname":"::FileDescriptorProto","value":"FileDescriptorProto { name, package, dependency, public_dependency, weak_dependency, message_type, enum_type, service, extension, options, source_code_info, syntax }","parent":null,"children":[{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171}],"decl_id":null,"docs":" Describes a complete .proto file.\n","sig":null,"attributes":[{"value":"/ Describes a complete .proto file.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13192894,"byte_end":13192931,"line_start":8,"line_end":8,"column_start":1,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":160},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13193110,"byte_end":13193114,"line_start":13,"line_end":13,"column_start":9,"column_end":13},"name":"name","qualname":"::FileDescriptorProto::name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" file name, relative to root of source tree\n","sig":null,"attributes":[{"value":"/ file name, relative to root of source tree","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13193015,"byte_end":13193061,"line_start":11,"line_end":11,"column_start":5,"column_end":51}},{"value":"prost(string, optional, tag = \"1\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13193066,"byte_end":13193101,"line_start":12,"line_end":12,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":161},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13193244,"byte_end":13193251,"line_start":16,"line_end":16,"column_start":9,"column_end":16},"name":"package","qualname":"::FileDescriptorProto::package","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" e.g. \"foo\", \"foo.bar\", etc.\n","sig":null,"attributes":[{"value":"/ e.g. \"foo\", \"foo.bar\", etc.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13193164,"byte_end":13193195,"line_start":14,"line_end":14,"column_start":5,"column_end":36}},{"value":"prost(string, optional, tag = \"2\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13193200,"byte_end":13193235,"line_start":15,"line_end":15,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":162},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13193391,"byte_end":13193401,"line_start":19,"line_end":19,"column_start":9,"column_end":19},"name":"dependency","qualname":"::FileDescriptorProto::dependency","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Names of files imported by this file.\n","sig":null,"attributes":[{"value":"/ Names of files imported by this file.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13193301,"byte_end":13193342,"line_start":17,"line_end":17,"column_start":5,"column_end":46}},{"value":"prost(string, repeated, tag = \"3\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13193347,"byte_end":13193382,"line_start":18,"line_end":18,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":163},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13193580,"byte_end":13193597,"line_start":22,"line_end":22,"column_start":9,"column_end":26},"name":"public_dependency","qualname":"::FileDescriptorProto::public_dependency","value":"std::vec::Vec<i32>","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Indexes of the public imported files in the dependency list above.\n","sig":null,"attributes":[{"value":"/ Indexes of the public imported files in the dependency list above.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13193445,"byte_end":13193515,"line_start":20,"line_end":20,"column_start":5,"column_end":75}},{"value":"prost(int32, repeated, packed = \"false\", tag = \"10\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13193520,"byte_end":13193571,"line_start":21,"line_end":21,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":164},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13193808,"byte_end":13193823,"line_start":26,"line_end":26,"column_start":9,"column_end":24},"name":"weak_dependency","qualname":"::FileDescriptorProto::weak_dependency","value":"std::vec::Vec<i32>","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Indexes of the weak imported files in the dependency list.\n For Google-internal migration only. Do not use.\n","sig":null,"attributes":[{"value":"/ Indexes of the weak imported files in the dependency list.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13193625,"byte_end":13193687,"line_start":23,"line_end":23,"column_start":5,"column_end":67}},{"value":"/ For Google-internal migration only. Do not use.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13193692,"byte_end":13193743,"line_start":24,"line_end":24,"column_start":5,"column_end":56}},{"value":"prost(int32, repeated, packed = \"false\", tag = \"11\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13193748,"byte_end":13193799,"line_start":25,"line_end":25,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":165},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13193944,"byte_end":13193956,"line_start":29,"line_end":29,"column_start":9,"column_end":21},"name":"message_type","qualname":"::FileDescriptorProto::message_type","value":"std::vec::Vec<DescriptorProto>","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" All top-level definitions in this file.\n","sig":null,"attributes":[{"value":"/ All top-level definitions in this file.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13193851,"byte_end":13193894,"line_start":27,"line_end":27,"column_start":5,"column_end":48}},{"value":"prost(message, repeated, tag = \"4\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13193899,"byte_end":13193935,"line_start":28,"line_end":28,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":166},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13194041,"byte_end":13194050,"line_start":31,"line_end":31,"column_start":9,"column_end":18},"name":"enum_type","qualname":"::FileDescriptorProto::enum_type","value":"std::vec::Vec<EnumDescriptorProto>","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, repeated, tag = \"5\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13193996,"byte_end":13194032,"line_start":30,"line_end":30,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":167},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13194139,"byte_end":13194146,"line_start":33,"line_end":33,"column_start":9,"column_end":16},"name":"service","qualname":"::FileDescriptorProto::service","value":"std::vec::Vec<ServiceDescriptorProto>","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, repeated, tag = \"6\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13194094,"byte_end":13194130,"line_start":32,"line_end":32,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":168},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13194238,"byte_end":13194247,"line_start":35,"line_end":35,"column_start":9,"column_end":18},"name":"extension","qualname":"::FileDescriptorProto::extension","value":"std::vec::Vec<FieldDescriptorProto>","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, repeated, tag = \"7\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13194193,"byte_end":13194229,"line_start":34,"line_end":34,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":169},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13194337,"byte_end":13194344,"line_start":37,"line_end":37,"column_start":9,"column_end":16},"name":"options","qualname":"::FileDescriptorProto::options","value":"std::option::Option<FileOptions>","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, optional, tag = \"8\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13194292,"byte_end":13194328,"line_start":36,"line_end":36,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":170},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13194689,"byte_end":13194705,"line_start":43,"line_end":43,"column_start":9,"column_end":25},"name":"source_code_info","qualname":"::FileDescriptorProto::source_code_info","value":"std::option::Option<SourceCodeInfo>","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" This field contains optional information about the original source code.\n You may safely remove this entire field without harming runtime\n functionality of the descriptors -- the information is needed only by\n development tools.\n","sig":null,"attributes":[{"value":"/ This field contains optional information about the original source code.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13194386,"byte_end":13194462,"line_start":38,"line_end":38,"column_start":5,"column_end":81}},{"value":"/ You may safely remove this entire field without harming runtime","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13194467,"byte_end":13194534,"line_start":39,"line_end":39,"column_start":5,"column_end":72}},{"value":"/ functionality of the descriptors -- the information is needed only by","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13194539,"byte_end":13194612,"line_start":40,"line_end":40,"column_start":5,"column_end":78}},{"value":"/ development tools.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13194617,"byte_end":13194639,"line_start":41,"line_end":41,"column_start":5,"column_end":27}},{"value":"prost(message, optional, tag = \"9\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13194644,"byte_end":13194680,"line_start":42,"line_end":42,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":171},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13194889,"byte_end":13194895,"line_start":47,"line_end":47,"column_start":9,"column_end":15},"name":"syntax","qualname":"::FileDescriptorProto::syntax","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" The syntax of the proto file.\n The supported values are \"proto2\" and \"proto3\".\n","sig":null,"attributes":[{"value":"/ The syntax of the proto file.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13194750,"byte_end":13194783,"line_start":44,"line_end":44,"column_start":5,"column_end":38}},{"value":"/ The supported values are \"proto2\" and \"proto3\".","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13194788,"byte_end":13194839,"line_start":45,"line_end":45,"column_start":5,"column_end":56}},{"value":"prost(string, optional, tag = \"12\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13194844,"byte_end":13194880,"line_start":46,"line_end":46,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13193110,"byte_end":13193114,"line_start":13,"line_end":13,"column_start":9,"column_end":13},"name":"name","qualname":"<FileDescriptorProto>::name","value":"pub fn name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13193244,"byte_end":13193251,"line_start":16,"line_end":16,"column_start":9,"column_end":16},"name":"package","qualname":"<FileDescriptorProto>::package","value":"pub fn package(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13194889,"byte_end":13194895,"line_start":47,"line_end":47,"column_start":9,"column_end":15},"name":"syntax","qualname":"<FileDescriptorProto>::syntax","value":"pub fn syntax(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":172},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13195030,"byte_end":13195045,"line_start":51,"line_end":51,"column_start":12,"column_end":27},"name":"DescriptorProto","qualname":"::DescriptorProto","value":"DescriptorProto { name, field, extension, nested_type, enum_type, extension_range, oneof_decl, options, reserved_range, reserved_name }","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236}],"decl_id":null,"docs":" Describes a message type.\n","sig":null,"attributes":[{"value":"/ Describes a message type.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13194943,"byte_end":13194972,"line_start":49,"line_end":49,"column_start":1,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":227},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13195096,"byte_end":13195100,"line_start":53,"line_end":53,"column_start":9,"column_end":13},"name":"name","qualname":"::DescriptorProto::name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":172},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(string, optional, tag = \"1\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13195052,"byte_end":13195087,"line_start":52,"line_end":52,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":228},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13195195,"byte_end":13195200,"line_start":55,"line_end":55,"column_start":9,"column_end":14},"name":"field","qualname":"::DescriptorProto::field","value":"std::vec::Vec<FieldDescriptorProto>","parent":{"krate":0,"index":172},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, repeated, tag = \"2\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13195150,"byte_end":13195186,"line_start":54,"line_end":54,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":229},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13195290,"byte_end":13195299,"line_start":57,"line_end":57,"column_start":9,"column_end":18},"name":"extension","qualname":"::DescriptorProto::extension","value":"std::vec::Vec<FieldDescriptorProto>","parent":{"krate":0,"index":172},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, repeated, tag = \"6\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13195245,"byte_end":13195281,"line_start":56,"line_end":56,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":230},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13195389,"byte_end":13195400,"line_start":59,"line_end":59,"column_start":9,"column_end":20},"name":"nested_type","qualname":"::DescriptorProto::nested_type","value":"std::vec::Vec<DescriptorProto>","parent":{"krate":0,"index":172},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, repeated, tag = \"3\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13195344,"byte_end":13195380,"line_start":58,"line_end":58,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":231},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13195485,"byte_end":13195494,"line_start":61,"line_end":61,"column_start":9,"column_end":18},"name":"enum_type","qualname":"::DescriptorProto::enum_type","value":"std::vec::Vec<EnumDescriptorProto>","parent":{"krate":0,"index":172},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, repeated, tag = \"4\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13195440,"byte_end":13195476,"line_start":60,"line_end":60,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":232},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13195583,"byte_end":13195598,"line_start":63,"line_end":63,"column_start":9,"column_end":24},"name":"extension_range","qualname":"::DescriptorProto::extension_range","value":"std::vec::Vec<descriptor_proto::ExtensionRange>","parent":{"krate":0,"index":172},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, repeated, tag = \"5\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13195538,"byte_end":13195574,"line_start":62,"line_end":62,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":233},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13195700,"byte_end":13195710,"line_start":65,"line_end":65,"column_start":9,"column_end":19},"name":"oneof_decl","qualname":"::DescriptorProto::oneof_decl","value":"std::vec::Vec<OneofDescriptorProto>","parent":{"krate":0,"index":172},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, repeated, tag = \"8\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13195655,"byte_end":13195691,"line_start":64,"line_end":64,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":234},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13195800,"byte_end":13195807,"line_start":67,"line_end":67,"column_start":9,"column_end":16},"name":"options","qualname":"::DescriptorProto::options","value":"std::option::Option<MessageOptions>","parent":{"krate":0,"index":172},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, optional, tag = \"7\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13195755,"byte_end":13195791,"line_start":66,"line_end":66,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":235},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13195897,"byte_end":13195911,"line_start":69,"line_end":69,"column_start":9,"column_end":23},"name":"reserved_range","qualname":"::DescriptorProto::reserved_range","value":"std::vec::Vec<descriptor_proto::ReservedRange>","parent":{"krate":0,"index":172},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, repeated, tag = \"9\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13195852,"byte_end":13195888,"line_start":68,"line_end":68,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":236},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13196143,"byte_end":13196156,"line_start":73,"line_end":73,"column_start":9,"column_end":22},"name":"reserved_name","qualname":"::DescriptorProto::reserved_name","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":172},"children":[],"decl_id":null,"docs":" Reserved field names, which may not be used by fields in the same message.\n A given name may only be reserved once.\n","sig":null,"attributes":[{"value":"/ Reserved field names, which may not be used by fields in the same message.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13195967,"byte_end":13196045,"line_start":70,"line_end":70,"column_start":5,"column_end":83}},{"value":"/ A given name may only be reserved once.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13196050,"byte_end":13196093,"line_start":71,"line_end":71,"column_start":5,"column_end":48}},{"value":"prost(string, repeated, tag = \"10\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13196098,"byte_end":13196134,"line_start":72,"line_end":72,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13195096,"byte_end":13195100,"line_start":53,"line_end":53,"column_start":9,"column_end":13},"name":"name","qualname":"<DescriptorProto>::name","value":"pub fn name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":26},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13196206,"byte_end":13196222,"line_start":75,"line_end":75,"column_start":9,"column_end":25},"name":"descriptor_proto","qualname":"::descriptor_proto","value":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","parent":null,"children":[{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":244},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":297}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":237},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13196290,"byte_end":13196304,"line_start":77,"line_end":77,"column_start":16,"column_end":30},"name":"ExtensionRange","qualname":"::descriptor_proto::ExtensionRange","value":"ExtensionRange { start, end, options }","parent":null,"children":[{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":287},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13196362,"byte_end":13196367,"line_start":79,"line_end":79,"column_start":13,"column_end":18},"name":"start","qualname":"::descriptor_proto::ExtensionRange::start","value":"std::option::Option<i32>","parent":{"krate":0,"index":237},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(int32, optional, tag = \"1\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13196315,"byte_end":13196349,"line_start":78,"line_end":78,"column_start":9,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":288},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13196452,"byte_end":13196455,"line_start":81,"line_end":81,"column_start":13,"column_end":16},"name":"end","qualname":"::descriptor_proto::ExtensionRange::end","value":"std::option::Option<i32>","parent":{"krate":0,"index":237},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(int32, optional, tag = \"2\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13196405,"byte_end":13196439,"line_start":80,"line_end":80,"column_start":9,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":289},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13196542,"byte_end":13196549,"line_start":83,"line_end":83,"column_start":13,"column_end":20},"name":"options","qualname":"::descriptor_proto::ExtensionRange::options","value":"std::option::Option<ExtensionRangeOptions>","parent":{"krate":0,"index":237},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, optional, tag = \"3\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13196493,"byte_end":13196529,"line_start":82,"line_end":82,"column_start":9,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":285},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13196362,"byte_end":13196367,"line_start":79,"line_end":79,"column_start":13,"column_end":18},"name":"start","qualname":"<ExtensionRange>::start","value":"pub fn start(&Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13196452,"byte_end":13196455,"line_start":81,"line_end":81,"column_start":13,"column_end":16},"name":"end","qualname":"<ExtensionRange>::end","value":"pub fn end(&Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":290},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13196851,"byte_end":13196864,"line_start":89,"line_end":89,"column_start":16,"column_end":29},"name":"ReservedRange","qualname":"::descriptor_proto::ReservedRange","value":"ReservedRange { start, end }","parent":null,"children":[{"krate":0,"index":338},{"krate":0,"index":339}],"decl_id":null,"docs":" Range of reserved tag numbers. Reserved tag numbers may not be used by\n fields or extension ranges in the same message. Reserved ranges may\n not overlap.\n","sig":null,"attributes":[{"value":"/ Range of reserved tag numbers. Reserved tag numbers may not be used by","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13196614,"byte_end":13196688,"line_start":85,"line_end":85,"column_start":5,"column_end":79}},{"value":"/ fields or extension ranges in the same message. Reserved ranges may","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13196693,"byte_end":13196764,"line_start":86,"line_end":86,"column_start":5,"column_end":76}},{"value":"/ not overlap.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13196769,"byte_end":13196785,"line_start":87,"line_end":87,"column_start":5,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":338},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13196945,"byte_end":13196950,"line_start":92,"line_end":92,"column_start":13,"column_end":18},"name":"start","qualname":"::descriptor_proto::ReservedRange::start","value":"std::option::Option<i32>","parent":{"krate":0,"index":290},"children":[],"decl_id":null,"docs":" Inclusive.\n","sig":null,"attributes":[{"value":"/ Inclusive.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13196875,"byte_end":13196889,"line_start":90,"line_end":90,"column_start":9,"column_end":23}},{"value":"prost(int32, optional, tag = \"1\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13196898,"byte_end":13196932,"line_start":91,"line_end":91,"column_start":9,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":339},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13197058,"byte_end":13197061,"line_start":95,"line_end":95,"column_start":13,"column_end":16},"name":"end","qualname":"::descriptor_proto::ReservedRange::end","value":"std::option::Option<i32>","parent":{"krate":0,"index":290},"children":[],"decl_id":null,"docs":" Exclusive.\n","sig":null,"attributes":[{"value":"/ Exclusive.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13196988,"byte_end":13197002,"line_start":93,"line_end":93,"column_start":9,"column_end":23}},{"value":"prost(int32, optional, tag = \"2\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13197011,"byte_end":13197045,"line_start":94,"line_end":94,"column_start":9,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":336},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13196945,"byte_end":13196950,"line_start":92,"line_end":92,"column_start":13,"column_end":18},"name":"start","qualname":"<ReservedRange>::start","value":"pub fn start(&Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":337},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13197058,"byte_end":13197061,"line_start":95,"line_end":95,"column_start":13,"column_end":16},"name":"end","qualname":"<ReservedRange>::end","value":"pub fn end(&Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":340},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13197156,"byte_end":13197177,"line_start":99,"line_end":99,"column_start":12,"column_end":33},"name":"ExtensionRangeOptions","qualname":"::ExtensionRangeOptions","value":"ExtensionRangeOptions { uninterpreted_option }","parent":null,"children":[{"krate":0,"index":364}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":364},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13197303,"byte_end":13197323,"line_start":102,"line_end":102,"column_start":9,"column_end":29},"name":"uninterpreted_option","qualname":"::ExtensionRangeOptions::uninterpreted_option","value":"std::vec::Vec<UninterpretedOption>","parent":{"krate":0,"index":340},"children":[],"decl_id":null,"docs":" The parser stores options it doesn't recognize here. See above.\n","sig":null,"attributes":[{"value":"/ The parser stores options it doesn't recognize here. See above.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13197184,"byte_end":13197251,"line_start":100,"line_end":100,"column_start":5,"column_end":72}},{"value":"prost(message, repeated, tag = \"999\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13197256,"byte_end":13197294,"line_start":101,"line_end":101,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":365},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13197462,"byte_end":13197482,"line_start":106,"line_end":106,"column_start":12,"column_end":32},"name":"FieldDescriptorProto","qualname":"::FieldDescriptorProto","value":"FieldDescriptorProto { name, number, label, r#type, type_name, extendee, default_value, oneof_index, json_name, options }","parent":null,"children":[{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":516},{"krate":0,"index":517},{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":520}],"decl_id":null,"docs":" Describes a field within a message.\n","sig":null,"attributes":[{"value":"/ Describes a field within a message.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13197365,"byte_end":13197404,"line_start":104,"line_end":104,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":511},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13197533,"byte_end":13197537,"line_start":108,"line_end":108,"column_start":9,"column_end":13},"name":"name","qualname":"::FieldDescriptorProto::name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":365},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(string, optional, tag = \"1\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13197489,"byte_end":13197524,"line_start":107,"line_end":107,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":512},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13197630,"byte_end":13197636,"line_start":110,"line_end":110,"column_start":9,"column_end":15},"name":"number","qualname":"::FieldDescriptorProto::number","value":"std::option::Option<i32>","parent":{"krate":0,"index":365},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(int32, optional, tag = \"3\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13197587,"byte_end":13197621,"line_start":109,"line_end":109,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":513},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13197751,"byte_end":13197756,"line_start":112,"line_end":112,"column_start":9,"column_end":14},"name":"label","qualname":"::FieldDescriptorProto::label","value":"std::option::Option<i32>","parent":{"krate":0,"index":365},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(enumeration = \"field_descriptor_proto::Label\", optional, tag = \"4\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13197670,"byte_end":13197742,"line_start":111,"line_end":111,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":514},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13198025,"byte_end":13198031,"line_start":116,"line_end":116,"column_start":9,"column_end":15},"name":"r#type","qualname":"::FieldDescriptorProto::r#type","value":"std::option::Option<i32>","parent":{"krate":0,"index":365},"children":[],"decl_id":null,"docs":" If type_name is set, this need not be set.  If both this and type_name\n are set, this must be one of TYPE_ENUM, TYPE_MESSAGE or TYPE_GROUP.\n","sig":null,"attributes":[{"value":"/ If type_name is set, this need not be set.  If both this and type_name","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13197790,"byte_end":13197864,"line_start":113,"line_end":113,"column_start":5,"column_end":79}},{"value":"/ are set, this must be one of TYPE_ENUM, TYPE_MESSAGE or TYPE_GROUP.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13197869,"byte_end":13197940,"line_start":114,"line_end":114,"column_start":5,"column_end":76}},{"value":"prost(enumeration = \"field_descriptor_proto::Type\", optional, tag = \"5\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13197945,"byte_end":13198016,"line_start":115,"line_end":115,"column_start":5,"column_end":76}}]},{"kind":"Field","id":{"krate":0,"index":515},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13198440,"byte_end":13198449,"line_start":123,"line_end":123,"column_start":9,"column_end":18},"name":"type_name","qualname":"::FieldDescriptorProto::type_name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":365},"children":[],"decl_id":null,"docs":" For message and enum types, this is the name of the type.  If the name\n starts with a '.', it is fully-qualified.  Otherwise, C++-like scoping\n rules are used to find the type (i.e. first the nested types within this\n message are searched, then within the parent, on up to the root\n namespace).\n","sig":null,"attributes":[{"value":"/ For message and enum types, this is the name of the type.  If the name","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13198065,"byte_end":13198139,"line_start":117,"line_end":117,"column_start":5,"column_end":79}},{"value":"/ starts with a '.', it is fully-qualified.  Otherwise, C++-like scoping","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13198144,"byte_end":13198218,"line_start":118,"line_end":118,"column_start":5,"column_end":79}},{"value":"/ rules are used to find the type (i.e. first the nested types within this","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13198223,"byte_end":13198299,"line_start":119,"line_end":119,"column_start":5,"column_end":81}},{"value":"/ message are searched, then within the parent, on up to the root","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13198304,"byte_end":13198371,"line_start":120,"line_end":120,"column_start":5,"column_end":72}},{"value":"/ namespace).","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13198376,"byte_end":13198391,"line_start":121,"line_end":121,"column_start":5,"column_end":20}},{"value":"prost(string, optional, tag = \"6\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13198396,"byte_end":13198431,"line_start":122,"line_end":122,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":516},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13198669,"byte_end":13198677,"line_start":127,"line_end":127,"column_start":9,"column_end":17},"name":"extendee","qualname":"::FieldDescriptorProto::extendee","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":365},"children":[],"decl_id":null,"docs":" For extensions, this is the name of the type being extended.  It is\n resolved in the same manner as type_name.\n","sig":null,"attributes":[{"value":"/ For extensions, this is the name of the type being extended.  It is","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13198499,"byte_end":13198570,"line_start":124,"line_end":124,"column_start":5,"column_end":76}},{"value":"/ resolved in the same manner as type_name.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13198575,"byte_end":13198620,"line_start":125,"line_end":125,"column_start":5,"column_end":50}},{"value":"prost(string, optional, tag = \"2\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13198625,"byte_end":13198660,"line_start":126,"line_end":126,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":517},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13199096,"byte_end":13199109,"line_start":134,"line_end":134,"column_start":9,"column_end":22},"name":"default_value","qualname":"::FieldDescriptorProto::default_value","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":365},"children":[],"decl_id":null,"docs":" For numeric types, contains the original text representation of the value.\n For booleans, \"true\" or \"false\".\n For strings, contains the default text contents (not escaped in any way).\n For bytes, contains the C escaped value.  All bytes >= 128 are escaped.\n TODO(kenton):  Base-64 encode?\n","sig":null,"attributes":[{"value":"/ For numeric types, contains the original text representation of the value.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13198727,"byte_end":13198805,"line_start":128,"line_end":128,"column_start":5,"column_end":83}},{"value":"/ For booleans, \"true\" or \"false\".","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13198810,"byte_end":13198846,"line_start":129,"line_end":129,"column_start":5,"column_end":41}},{"value":"/ For strings, contains the default text contents (not escaped in any way).","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13198851,"byte_end":13198928,"line_start":130,"line_end":130,"column_start":5,"column_end":82}},{"value":"/ For bytes, contains the C escaped value.  All bytes >= 128 are escaped.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13198933,"byte_end":13199008,"line_start":131,"line_end":131,"column_start":5,"column_end":80}},{"value":"/ TODO(kenton):  Base-64 encode?","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13199013,"byte_end":13199047,"line_start":132,"line_end":132,"column_start":5,"column_end":39}},{"value":"prost(string, optional, tag = \"7\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13199052,"byte_end":13199087,"line_start":133,"line_end":133,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":518},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13199334,"byte_end":13199345,"line_start":138,"line_end":138,"column_start":9,"column_end":20},"name":"oneof_index","qualname":"::FieldDescriptorProto::oneof_index","value":"std::option::Option<i32>","parent":{"krate":0,"index":365},"children":[],"decl_id":null,"docs":" If set, gives the index of a oneof in the containing type's oneof_decl\n list.  This field is a member of that oneof.\n","sig":null,"attributes":[{"value":"/ If set, gives the index of a oneof in the containing type's oneof_decl","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13199159,"byte_end":13199233,"line_start":135,"line_end":135,"column_start":5,"column_end":79}},{"value":"/ list.  This field is a member of that oneof.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13199238,"byte_end":13199286,"line_start":136,"line_end":136,"column_start":5,"column_end":53}},{"value":"prost(int32, optional, tag = \"9\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13199291,"byte_end":13199325,"line_start":137,"line_end":137,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":519},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13199687,"byte_end":13199696,"line_start":144,"line_end":144,"column_start":9,"column_end":18},"name":"json_name","qualname":"::FieldDescriptorProto::json_name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":365},"children":[],"decl_id":null,"docs":" JSON name of this field. The value is set by protocol compiler. If the\n user has set a \"json_name\" option on this field, that option's value\n will be used. Otherwise, it's deduced from the field's name by converting\n it to camelCase.\n","sig":null,"attributes":[{"value":"/ JSON name of this field. The value is set by protocol compiler. If the","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13199379,"byte_end":13199453,"line_start":139,"line_end":139,"column_start":5,"column_end":79}},{"value":"/ user has set a \"json_name\" option on this field, that option's value","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13199458,"byte_end":13199530,"line_start":140,"line_end":140,"column_start":5,"column_end":77}},{"value":"/ will be used. Otherwise, it's deduced from the field's name by converting","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13199535,"byte_end":13199612,"line_start":141,"line_end":141,"column_start":5,"column_end":82}},{"value":"/ it to camelCase.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13199617,"byte_end":13199637,"line_start":142,"line_end":142,"column_start":5,"column_end":25}},{"value":"prost(string, optional, tag = \"10\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13199642,"byte_end":13199678,"line_start":143,"line_end":143,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":520},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13199791,"byte_end":13199798,"line_start":146,"line_end":146,"column_start":9,"column_end":16},"name":"options","qualname":"::FieldDescriptorProto::options","value":"std::option::Option<FieldOptions>","parent":{"krate":0,"index":365},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, optional, tag = \"8\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13199746,"byte_end":13199782,"line_start":145,"line_end":145,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13197533,"byte_end":13197537,"line_start":108,"line_end":108,"column_start":9,"column_end":13},"name":"name","qualname":"<FieldDescriptorProto>::name","value":"pub fn name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":501},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13198669,"byte_end":13198677,"line_start":127,"line_end":127,"column_start":9,"column_end":17},"name":"extendee","qualname":"<FieldDescriptorProto>::extendee","value":"pub fn extendee(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13197630,"byte_end":13197636,"line_start":110,"line_end":110,"column_start":9,"column_end":15},"name":"number","qualname":"<FieldDescriptorProto>::number","value":"pub fn number(&Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":503},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13197751,"byte_end":13197756,"line_start":112,"line_end":112,"column_start":9,"column_end":14},"name":"label","qualname":"<FieldDescriptorProto>::label","value":"pub fn label(&Self) -> super::field_descriptor_proto::Label","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":505},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13198025,"byte_end":13198031,"line_start":116,"line_end":116,"column_start":9,"column_end":15},"name":"type","qualname":"<FieldDescriptorProto>::type","value":"pub fn r#type(&Self) -> super::field_descriptor_proto::Type","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":507},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13198440,"byte_end":13198449,"line_start":123,"line_end":123,"column_start":9,"column_end":18},"name":"type_name","qualname":"<FieldDescriptorProto>::type_name","value":"pub fn type_name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":508},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13199096,"byte_end":13199109,"line_start":134,"line_end":134,"column_start":9,"column_end":22},"name":"default_value","qualname":"<FieldDescriptorProto>::default_value","value":"pub fn default_value(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":509},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13199334,"byte_end":13199345,"line_start":138,"line_end":138,"column_start":9,"column_end":20},"name":"oneof_index","qualname":"<FieldDescriptorProto>::oneof_index","value":"pub fn oneof_index(&Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13199687,"byte_end":13199696,"line_start":144,"line_end":144,"column_start":9,"column_end":18},"name":"json_name","qualname":"<FieldDescriptorProto>::json_name","value":"pub fn json_name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":27},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13199847,"byte_end":13199869,"line_start":148,"line_end":148,"column_start":9,"column_end":31},"name":"field_descriptor_proto","qualname":"::field_descriptor_proto","value":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","parent":null,"children":[{"krate":0,"index":521},{"krate":0,"index":576},{"krate":0,"index":578},{"krate":0,"index":579},{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":584},{"krate":0,"index":585},{"krate":0,"index":587},{"krate":0,"index":590},{"krate":0,"index":592},{"krate":0,"index":594},{"krate":0,"index":603},{"krate":0,"index":613},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":621},{"krate":0,"index":622},{"krate":0,"index":624},{"krate":0,"index":627},{"krate":0,"index":629},{"krate":0,"index":631}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":522},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13200100,"byte_end":13200106,"line_start":154,"line_end":154,"column_start":9,"column_end":15},"name":"Double","qualname":"::field_descriptor_proto::Type::Double","value":"Type::Double","parent":{"krate":0,"index":521},"children":[],"decl_id":null,"docs":" 0 is reserved for errors.\n Order is weird for historical reasons.\n","sig":null,"attributes":[{"value":"/ 0 is reserved for errors.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13200011,"byte_end":13200040,"line_start":152,"line_end":152,"column_start":9,"column_end":38}},{"value":"/ Order is weird for historical reasons.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13200049,"byte_end":13200091,"line_start":153,"line_end":153,"column_start":9,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":525},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13200120,"byte_end":13200125,"line_start":155,"line_end":155,"column_start":9,"column_end":14},"name":"Float","qualname":"::field_descriptor_proto::Type::Float","value":"Type::Float","parent":{"krate":0,"index":521},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":528},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13200264,"byte_end":13200269,"line_start":158,"line_end":158,"column_start":9,"column_end":14},"name":"Int64","qualname":"::field_descriptor_proto::Type::Int64","value":"Type::Int64","parent":{"krate":0,"index":521},"children":[],"decl_id":null,"docs":" Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT64 if\n negative values are likely.\n","sig":null,"attributes":[{"value":"/ Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT64 if","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13200139,"byte_end":13200215,"line_start":156,"line_end":156,"column_start":9,"column_end":85}},{"value":"/ negative values are likely.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13200224,"byte_end":13200255,"line_start":157,"line_end":157,"column_start":9,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":531},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13200283,"byte_end":13200289,"line_start":159,"line_end":159,"column_start":9,"column_end":15},"name":"Uint64","qualname":"::field_descriptor_proto::Type::Uint64","value":"Type::Uint64","parent":{"krate":0,"index":521},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":534},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13200428,"byte_end":13200433,"line_start":162,"line_end":162,"column_start":9,"column_end":14},"name":"Int32","qualname":"::field_descriptor_proto::Type::Int32","value":"Type::Int32","parent":{"krate":0,"index":521},"children":[],"decl_id":null,"docs":" Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT32 if\n negative values are likely.\n","sig":null,"attributes":[{"value":"/ Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT32 if","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13200303,"byte_end":13200379,"line_start":160,"line_end":160,"column_start":9,"column_end":85}},{"value":"/ negative values are likely.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13200388,"byte_end":13200419,"line_start":161,"line_end":161,"column_start":9,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":537},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13200447,"byte_end":13200454,"line_start":163,"line_end":163,"column_start":9,"column_end":16},"name":"Fixed64","qualname":"::field_descriptor_proto::Type::Fixed64","value":"Type::Fixed64","parent":{"krate":0,"index":521},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":540},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13200468,"byte_end":13200475,"line_start":164,"line_end":164,"column_start":9,"column_end":16},"name":"Fixed32","qualname":"::field_descriptor_proto::Type::Fixed32","value":"Type::Fixed32","parent":{"krate":0,"index":521},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":543},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13200489,"byte_end":13200493,"line_start":165,"line_end":165,"column_start":9,"column_end":13},"name":"Bool","qualname":"::field_descriptor_proto::Type::Bool","value":"Type::Bool","parent":{"krate":0,"index":521},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":546},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13200507,"byte_end":13200513,"line_start":166,"line_end":166,"column_start":9,"column_end":15},"name":"String","qualname":"::field_descriptor_proto::Type::String","value":"Type::String","parent":{"krate":0,"index":521},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":549},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13200780,"byte_end":13200785,"line_start":171,"line_end":171,"column_start":9,"column_end":14},"name":"Group","qualname":"::field_descriptor_proto::Type::Group","value":"Type::Group","parent":{"krate":0,"index":521},"children":[],"decl_id":null,"docs":" Tag-delimited aggregate.\n Group type is deprecated and not supported in proto3. However, Proto3\n implementations should still be able to parse the group wire format and\n treat group fields as unknown fields.\n","sig":null,"attributes":[{"value":"/ Tag-delimited aggregate.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13200527,"byte_end":13200555,"line_start":167,"line_end":167,"column_start":9,"column_end":37}},{"value":"/ Group type is deprecated and not supported in proto3. However, Proto3","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13200564,"byte_end":13200637,"line_start":168,"line_end":168,"column_start":9,"column_end":82}},{"value":"/ implementations should still be able to parse the group wire format and","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13200646,"byte_end":13200721,"line_start":169,"line_end":169,"column_start":9,"column_end":84}},{"value":"/ treat group fields as unknown fields.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13200730,"byte_end":13200771,"line_start":170,"line_end":170,"column_start":9,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":552},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13200840,"byte_end":13200847,"line_start":173,"line_end":173,"column_start":9,"column_end":16},"name":"Message","qualname":"::field_descriptor_proto::Type::Message","value":"Type::Message","parent":{"krate":0,"index":521},"children":[],"decl_id":null,"docs":" Length-delimited aggregate.\n","sig":null,"attributes":[{"value":"/ Length-delimited aggregate.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13200800,"byte_end":13200831,"line_start":172,"line_end":172,"column_start":9,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":555},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13200892,"byte_end":13200897,"line_start":175,"line_end":175,"column_start":9,"column_end":14},"name":"Bytes","qualname":"::field_descriptor_proto::Type::Bytes","value":"Type::Bytes","parent":{"krate":0,"index":521},"children":[],"decl_id":null,"docs":" New in version 2.\n","sig":null,"attributes":[{"value":"/ New in version 2.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13200862,"byte_end":13200883,"line_start":174,"line_end":174,"column_start":9,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":558},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13200912,"byte_end":13200918,"line_start":176,"line_end":176,"column_start":9,"column_end":15},"name":"Uint32","qualname":"::field_descriptor_proto::Type::Uint32","value":"Type::Uint32","parent":{"krate":0,"index":521},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":561},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13200933,"byte_end":13200937,"line_start":177,"line_end":177,"column_start":9,"column_end":13},"name":"Enum","qualname":"::field_descriptor_proto::Type::Enum","value":"Type::Enum","parent":{"krate":0,"index":521},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":564},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13200952,"byte_end":13200960,"line_start":178,"line_end":178,"column_start":9,"column_end":17},"name":"Sfixed32","qualname":"::field_descriptor_proto::Type::Sfixed32","value":"Type::Sfixed32","parent":{"krate":0,"index":521},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":567},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13200975,"byte_end":13200983,"line_start":179,"line_end":179,"column_start":9,"column_end":17},"name":"Sfixed64","qualname":"::field_descriptor_proto::Type::Sfixed64","value":"Type::Sfixed64","parent":{"krate":0,"index":521},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":570},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13201032,"byte_end":13201038,"line_start":181,"line_end":181,"column_start":9,"column_end":15},"name":"Sint32","qualname":"::field_descriptor_proto::Type::Sint32","value":"Type::Sint32","parent":{"krate":0,"index":521},"children":[],"decl_id":null,"docs":" Uses ZigZag encoding.\n","sig":null,"attributes":[{"value":"/ Uses ZigZag encoding.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13200998,"byte_end":13201023,"line_start":180,"line_end":180,"column_start":9,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":573},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13201087,"byte_end":13201093,"line_start":183,"line_end":183,"column_start":9,"column_end":15},"name":"Sint64","qualname":"::field_descriptor_proto::Type::Sint64","value":"Type::Sint64","parent":{"krate":0,"index":521},"children":[],"decl_id":null,"docs":" Uses ZigZag encoding.\n","sig":null,"attributes":[{"value":"/ Uses ZigZag encoding.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13201053,"byte_end":13201078,"line_start":182,"line_end":182,"column_start":9,"column_end":34}}]},{"kind":"Enum","id":{"krate":0,"index":521},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13199996,"byte_end":13200000,"line_start":151,"line_end":151,"column_start":14,"column_end":18},"name":"Type","qualname":"::field_descriptor_proto::Type","value":"pub enum Type {\n    Double = ,\n    Float = ,\n    Int64 = ,\n    Uint64 = ,\n    Int32 = ,\n    Fixed64 = ,\n    Fixed32 = ,\n    Bool = ,\n    String = ,\n    Group = ,\n    Message = ,\n    Bytes = ,\n    Uint32 = ,\n    Enum = ,\n    Sfixed32 = ,\n    Sfixed64 = ,\n    Sint32 = ,\n    Sint64 = ,\n}","parent":null,"children":[{"krate":0,"index":522},{"krate":0,"index":525},{"krate":0,"index":528},{"krate":0,"index":531},{"krate":0,"index":534},{"krate":0,"index":537},{"krate":0,"index":540},{"krate":0,"index":543},{"krate":0,"index":546},{"krate":0,"index":549},{"krate":0,"index":552},{"krate":0,"index":555},{"krate":0,"index":558},{"krate":0,"index":561},{"krate":0,"index":564},{"krate":0,"index":567},{"krate":0,"index":570},{"krate":0,"index":573}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(i32)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13199970,"byte_end":13199982,"line_start":150,"line_end":150,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":604},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13201283,"byte_end":13201291,"line_start":189,"line_end":189,"column_start":9,"column_end":17},"name":"Optional","qualname":"::field_descriptor_proto::Label::Optional","value":"Label::Optional","parent":{"krate":0,"index":603},"children":[],"decl_id":null,"docs":" 0 is reserved for errors\n","sig":null,"attributes":[{"value":"/ 0 is reserved for errors","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13201246,"byte_end":13201274,"line_start":188,"line_end":188,"column_start":9,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":607},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13201305,"byte_end":13201313,"line_start":190,"line_end":190,"column_start":9,"column_end":17},"name":"Required","qualname":"::field_descriptor_proto::Label::Required","value":"Label::Required","parent":{"krate":0,"index":603},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":610},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13201327,"byte_end":13201335,"line_start":191,"line_end":191,"column_start":9,"column_end":17},"name":"Repeated","qualname":"::field_descriptor_proto::Label::Repeated","value":"Label::Repeated","parent":{"krate":0,"index":603},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":603},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13201230,"byte_end":13201235,"line_start":187,"line_end":187,"column_start":14,"column_end":19},"name":"Label","qualname":"::field_descriptor_proto::Label","value":"pub enum Label { Optional = , Required = , Repeated = , }","parent":null,"children":[{"krate":0,"index":604},{"krate":0,"index":607},{"krate":0,"index":610}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(i32)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13201204,"byte_end":13201216,"line_start":186,"line_end":186,"column_start":5,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":640},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13201429,"byte_end":13201449,"line_start":196,"line_end":196,"column_start":12,"column_end":32},"name":"OneofDescriptorProto","qualname":"::OneofDescriptorProto","value":"OneofDescriptorProto { name, options }","parent":null,"children":[{"krate":0,"index":678},{"krate":0,"index":679}],"decl_id":null,"docs":" Describes a oneof.\n","sig":null,"attributes":[{"value":"/ Describes a oneof.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13201349,"byte_end":13201371,"line_start":194,"line_end":194,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":678},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13201500,"byte_end":13201504,"line_start":198,"line_end":198,"column_start":9,"column_end":13},"name":"name","qualname":"::OneofDescriptorProto::name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":640},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(string, optional, tag = \"1\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13201456,"byte_end":13201491,"line_start":197,"line_end":197,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":679},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13201599,"byte_end":13201606,"line_start":200,"line_end":200,"column_start":9,"column_end":16},"name":"options","qualname":"::OneofDescriptorProto::options","value":"std::option::Option<OneofOptions>","parent":{"krate":0,"index":640},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, optional, tag = \"2\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13201554,"byte_end":13201590,"line_start":199,"line_end":199,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":677},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13201500,"byte_end":13201504,"line_start":198,"line_end":198,"column_start":9,"column_end":13},"name":"name","qualname":"<OneofDescriptorProto>::name","value":"pub fn name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":680},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13201732,"byte_end":13201751,"line_start":204,"line_end":204,"column_start":12,"column_end":31},"name":"EnumDescriptorProto","qualname":"::EnumDescriptorProto","value":"EnumDescriptorProto { name, value, options, reserved_range, reserved_name }","parent":null,"children":[{"krate":0,"index":730},{"krate":0,"index":731},{"krate":0,"index":732},{"krate":0,"index":733},{"krate":0,"index":734}],"decl_id":null,"docs":" Describes an enum type.\n","sig":null,"attributes":[{"value":"/ Describes an enum type.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13201647,"byte_end":13201674,"line_start":202,"line_end":202,"column_start":1,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":730},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13201802,"byte_end":13201806,"line_start":206,"line_end":206,"column_start":9,"column_end":13},"name":"name","qualname":"::EnumDescriptorProto::name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":680},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(string, optional, tag = \"1\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13201758,"byte_end":13201793,"line_start":205,"line_end":205,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":731},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13201901,"byte_end":13201906,"line_start":208,"line_end":208,"column_start":9,"column_end":14},"name":"value","qualname":"::EnumDescriptorProto::value","value":"std::vec::Vec<EnumValueDescriptorProto>","parent":{"krate":0,"index":680},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, repeated, tag = \"2\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13201856,"byte_end":13201892,"line_start":207,"line_end":207,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":732},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13202000,"byte_end":13202007,"line_start":210,"line_end":210,"column_start":9,"column_end":16},"name":"options","qualname":"::EnumDescriptorProto::options","value":"std::option::Option<EnumOptions>","parent":{"krate":0,"index":680},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, optional, tag = \"3\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13201955,"byte_end":13201991,"line_start":209,"line_end":209,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":733},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13202270,"byte_end":13202284,"line_start":215,"line_end":215,"column_start":9,"column_end":23},"name":"reserved_range","qualname":"::EnumDescriptorProto::reserved_range","value":"std::vec::Vec<enum_descriptor_proto::EnumReservedRange>","parent":{"krate":0,"index":680},"children":[],"decl_id":null,"docs":" Range of reserved numeric values. Reserved numeric values may not be used\n by enum values in the same enum declaration. Reserved ranges may not\n overlap.\n","sig":null,"attributes":[{"value":"/ Range of reserved numeric values. Reserved numeric values may not be used","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13202049,"byte_end":13202126,"line_start":211,"line_end":211,"column_start":5,"column_end":82}},{"value":"/ by enum values in the same enum declaration. Reserved ranges may not","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13202131,"byte_end":13202203,"line_start":212,"line_end":212,"column_start":5,"column_end":77}},{"value":"/ overlap.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13202208,"byte_end":13202220,"line_start":213,"line_end":213,"column_start":5,"column_end":17}},{"value":"prost(message, repeated, tag = \"4\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13202225,"byte_end":13202261,"line_start":214,"line_end":214,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":734},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13202501,"byte_end":13202514,"line_start":219,"line_end":219,"column_start":9,"column_end":22},"name":"reserved_name","qualname":"::EnumDescriptorProto::reserved_name","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":680},"children":[],"decl_id":null,"docs":" Reserved enum value names, which may not be reused. A given name may only\n be reserved once.\n","sig":null,"attributes":[{"value":"/ Reserved enum value names, which may not be reused. A given name may only","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13202349,"byte_end":13202426,"line_start":216,"line_end":216,"column_start":5,"column_end":82}},{"value":"/ be reserved once.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13202431,"byte_end":13202452,"line_start":217,"line_end":217,"column_start":5,"column_end":26}},{"value":"prost(string, repeated, tag = \"5\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13202457,"byte_end":13202492,"line_start":218,"line_end":218,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":729},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13201802,"byte_end":13201806,"line_start":206,"line_end":206,"column_start":9,"column_end":13},"name":"name","qualname":"<EnumDescriptorProto>::name","value":"pub fn name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":28},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13202564,"byte_end":13202585,"line_start":221,"line_end":221,"column_start":9,"column_end":30},"name":"enum_descriptor_proto","qualname":"::enum_descriptor_proto","value":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","parent":null,"children":[{"krate":0,"index":735},{"krate":0,"index":736},{"krate":0,"index":738},{"krate":0,"index":739},{"krate":0,"index":742}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":735},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13202981,"byte_end":13202998,"line_start":229,"line_end":229,"column_start":16,"column_end":33},"name":"EnumReservedRange","qualname":"::enum_descriptor_proto::EnumReservedRange","value":"EnumReservedRange { start, end }","parent":null,"children":[{"krate":0,"index":783},{"krate":0,"index":784}],"decl_id":null,"docs":" Range of reserved numeric values. Reserved values may not be used by\n entries in the same enum. Reserved ranges may not overlap.","sig":null,"attributes":[{"value":"/ Range of reserved numeric values. Reserved values may not be used by","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13202592,"byte_end":13202664,"line_start":222,"line_end":222,"column_start":5,"column_end":77}},{"value":"/ entries in the same enum. Reserved ranges may not overlap.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13202669,"byte_end":13202731,"line_start":223,"line_end":223,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13202736,"byte_end":13202739,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ Note that this is distinct from DescriptorProto.ReservedRange in that it","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13202744,"byte_end":13202820,"line_start":225,"line_end":225,"column_start":5,"column_end":81}},{"value":"/ is inclusive such that it can appropriately represent the entire int32","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13202825,"byte_end":13202899,"line_start":226,"line_end":226,"column_start":5,"column_end":79}},{"value":"/ domain.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13202904,"byte_end":13202915,"line_start":227,"line_end":227,"column_start":5,"column_end":16}}]},{"kind":"Field","id":{"krate":0,"index":783},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13203079,"byte_end":13203084,"line_start":232,"line_end":232,"column_start":13,"column_end":18},"name":"start","qualname":"::enum_descriptor_proto::EnumReservedRange::start","value":"std::option::Option<i32>","parent":{"krate":0,"index":735},"children":[],"decl_id":null,"docs":" Inclusive.\n","sig":null,"attributes":[{"value":"/ Inclusive.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13203009,"byte_end":13203023,"line_start":230,"line_end":230,"column_start":9,"column_end":23}},{"value":"prost(int32, optional, tag = \"1\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13203032,"byte_end":13203066,"line_start":231,"line_end":231,"column_start":9,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":784},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13203192,"byte_end":13203195,"line_start":235,"line_end":235,"column_start":13,"column_end":16},"name":"end","qualname":"::enum_descriptor_proto::EnumReservedRange::end","value":"std::option::Option<i32>","parent":{"krate":0,"index":735},"children":[],"decl_id":null,"docs":" Inclusive.\n","sig":null,"attributes":[{"value":"/ Inclusive.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13203122,"byte_end":13203136,"line_start":233,"line_end":233,"column_start":9,"column_end":23}},{"value":"prost(int32, optional, tag = \"2\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13203145,"byte_end":13203179,"line_start":234,"line_end":234,"column_start":9,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":781},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13203079,"byte_end":13203084,"line_start":232,"line_end":232,"column_start":13,"column_end":18},"name":"start","qualname":"<EnumReservedRange>::start","value":"pub fn start(&Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":782},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13203192,"byte_end":13203195,"line_start":235,"line_end":235,"column_start":13,"column_end":16},"name":"end","qualname":"<EnumReservedRange>::end","value":"pub fn end(&Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":785},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13203328,"byte_end":13203352,"line_start":240,"line_end":240,"column_start":12,"column_end":36},"name":"EnumValueDescriptorProto","qualname":"::EnumValueDescriptorProto","value":"EnumValueDescriptorProto { name, number, options }","parent":null,"children":[{"krate":0,"index":835},{"krate":0,"index":836},{"krate":0,"index":837}],"decl_id":null,"docs":" Describes a value within an enum.\n","sig":null,"attributes":[{"value":"/ Describes a value within an enum.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13203233,"byte_end":13203270,"line_start":238,"line_end":238,"column_start":1,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":835},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13203403,"byte_end":13203407,"line_start":242,"line_end":242,"column_start":9,"column_end":13},"name":"name","qualname":"::EnumValueDescriptorProto::name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":785},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(string, optional, tag = \"1\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13203359,"byte_end":13203394,"line_start":241,"line_end":241,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":836},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13203500,"byte_end":13203506,"line_start":244,"line_end":244,"column_start":9,"column_end":15},"name":"number","qualname":"::EnumValueDescriptorProto::number","value":"std::option::Option<i32>","parent":{"krate":0,"index":785},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(int32, optional, tag = \"2\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13203457,"byte_end":13203491,"line_start":243,"line_end":243,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":837},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13203585,"byte_end":13203592,"line_start":246,"line_end":246,"column_start":9,"column_end":16},"name":"options","qualname":"::EnumValueDescriptorProto::options","value":"std::option::Option<EnumValueOptions>","parent":{"krate":0,"index":785},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, optional, tag = \"3\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13203540,"byte_end":13203576,"line_start":245,"line_end":245,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":833},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13203403,"byte_end":13203407,"line_start":242,"line_end":242,"column_start":9,"column_end":13},"name":"name","qualname":"<EnumValueDescriptorProto>::name","value":"pub fn name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":834},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13203500,"byte_end":13203506,"line_start":244,"line_end":244,"column_start":9,"column_end":15},"name":"number","qualname":"<EnumValueDescriptorProto>::number","value":"pub fn number(&Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":838},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13203719,"byte_end":13203741,"line_start":250,"line_end":250,"column_start":12,"column_end":34},"name":"ServiceDescriptorProto","qualname":"::ServiceDescriptorProto","value":"ServiceDescriptorProto { name, method, options }","parent":null,"children":[{"krate":0,"index":877},{"krate":0,"index":878},{"krate":0,"index":879}],"decl_id":null,"docs":" Describes a service.\n","sig":null,"attributes":[{"value":"/ Describes a service.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13203637,"byte_end":13203661,"line_start":248,"line_end":248,"column_start":1,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":877},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13203792,"byte_end":13203796,"line_start":252,"line_end":252,"column_start":9,"column_end":13},"name":"name","qualname":"::ServiceDescriptorProto::name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":838},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(string, optional, tag = \"1\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13203748,"byte_end":13203783,"line_start":251,"line_end":251,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":878},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13203891,"byte_end":13203897,"line_start":254,"line_end":254,"column_start":9,"column_end":15},"name":"method","qualname":"::ServiceDescriptorProto::method","value":"std::vec::Vec<MethodDescriptorProto>","parent":{"krate":0,"index":838},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, repeated, tag = \"2\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13203846,"byte_end":13203882,"line_start":253,"line_end":253,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":879},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13203988,"byte_end":13203995,"line_start":256,"line_end":256,"column_start":9,"column_end":16},"name":"options","qualname":"::ServiceDescriptorProto::options","value":"std::option::Option<ServiceOptions>","parent":{"krate":0,"index":838},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, optional, tag = \"3\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13203943,"byte_end":13203979,"line_start":255,"line_end":255,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":876},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13203792,"byte_end":13203796,"line_start":252,"line_end":252,"column_start":9,"column_end":13},"name":"name","qualname":"<ServiceDescriptorProto>::name","value":"pub fn name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":880},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13204132,"byte_end":13204153,"line_start":260,"line_end":260,"column_start":12,"column_end":33},"name":"MethodDescriptorProto","qualname":"::MethodDescriptorProto","value":"MethodDescriptorProto { name, input_type, output_type, options, client_streaming, server_streaming }","parent":null,"children":[{"krate":0,"index":966},{"krate":0,"index":967},{"krate":0,"index":968},{"krate":0,"index":969},{"krate":0,"index":970},{"krate":0,"index":971}],"decl_id":null,"docs":" Describes a method of a service.\n","sig":null,"attributes":[{"value":"/ Describes a method of a service.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13204038,"byte_end":13204074,"line_start":258,"line_end":258,"column_start":1,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":966},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13204204,"byte_end":13204208,"line_start":262,"line_end":262,"column_start":9,"column_end":13},"name":"name","qualname":"::MethodDescriptorProto::name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":880},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(string, optional, tag = \"1\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13204160,"byte_end":13204195,"line_start":261,"line_end":261,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":967},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13204452,"byte_end":13204462,"line_start":266,"line_end":266,"column_start":9,"column_end":19},"name":"input_type","qualname":"::MethodDescriptorProto::input_type","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":880},"children":[],"decl_id":null,"docs":" Input and output type names.  These are resolved in the same way as\n FieldDescriptorProto.type_name, but must refer to a message type.\n","sig":null,"attributes":[{"value":"/ Input and output type names.  These are resolved in the same way as","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13204258,"byte_end":13204329,"line_start":263,"line_end":263,"column_start":5,"column_end":76}},{"value":"/ FieldDescriptorProto.type_name, but must refer to a message type.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13204334,"byte_end":13204403,"line_start":264,"line_end":264,"column_start":5,"column_end":74}},{"value":"prost(string, optional, tag = \"2\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13204408,"byte_end":13204443,"line_start":265,"line_end":265,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":968},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13204556,"byte_end":13204567,"line_start":268,"line_end":268,"column_start":9,"column_end":20},"name":"output_type","qualname":"::MethodDescriptorProto::output_type","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":880},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(string, optional, tag = \"3\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13204512,"byte_end":13204547,"line_start":267,"line_end":267,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":969},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13204662,"byte_end":13204669,"line_start":270,"line_end":270,"column_start":9,"column_end":16},"name":"options","qualname":"::MethodDescriptorProto::options","value":"std::option::Option<MethodOptions>","parent":{"krate":0,"index":880},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, optional, tag = \"4\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13204617,"byte_end":13204653,"line_start":269,"line_end":269,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":970},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13204834,"byte_end":13204850,"line_start":273,"line_end":273,"column_start":9,"column_end":25},"name":"client_streaming","qualname":"::MethodDescriptorProto::client_streaming","value":"std::option::Option<bool>","parent":{"krate":0,"index":880},"children":[],"decl_id":null,"docs":" Identifies if client streams multiple client messages\n","sig":null,"attributes":[{"value":"/ Identifies if client streams multiple client messages","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13204713,"byte_end":13204770,"line_start":271,"line_end":271,"column_start":5,"column_end":62}},{"value":"prost(bool, optional, tag = \"5\", default = \"false\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13204775,"byte_end":13204825,"line_start":272,"line_end":272,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":971},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13205006,"byte_end":13205022,"line_start":276,"line_end":276,"column_start":9,"column_end":25},"name":"server_streaming","qualname":"::MethodDescriptorProto::server_streaming","value":"std::option::Option<bool>","parent":{"krate":0,"index":880},"children":[],"decl_id":null,"docs":" Identifies if server streams multiple server messages\n","sig":null,"attributes":[{"value":"/ Identifies if server streams multiple server messages","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13204885,"byte_end":13204942,"line_start":274,"line_end":274,"column_start":5,"column_end":62}},{"value":"prost(bool, optional, tag = \"6\", default = \"false\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13204947,"byte_end":13204997,"line_start":275,"line_end":275,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":961},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13204204,"byte_end":13204208,"line_start":262,"line_end":262,"column_start":9,"column_end":13},"name":"name","qualname":"<MethodDescriptorProto>::name","value":"pub fn name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":962},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13204452,"byte_end":13204462,"line_start":266,"line_end":266,"column_start":9,"column_end":19},"name":"input_type","qualname":"<MethodDescriptorProto>::input_type","value":"pub fn input_type(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":963},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13204556,"byte_end":13204567,"line_start":268,"line_end":268,"column_start":9,"column_end":20},"name":"output_type","qualname":"<MethodDescriptorProto>::output_type","value":"pub fn output_type(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":964},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13204834,"byte_end":13204850,"line_start":273,"line_end":273,"column_start":9,"column_end":25},"name":"client_streaming","qualname":"<MethodDescriptorProto>::client_streaming","value":"pub fn client_streaming(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":965},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13205006,"byte_end":13205022,"line_start":276,"line_end":276,"column_start":9,"column_end":25},"name":"server_streaming","qualname":"<MethodDescriptorProto>::server_streaming","value":"pub fn server_streaming(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":972},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13206996,"byte_end":13207007,"line_start":311,"line_end":311,"column_start":12,"column_end":23},"name":"FileOptions","qualname":"::FileOptions","value":"FileOptions { java_package, java_outer_classname, java_multiple_files, java_generate_equals_and_hash, java_string_check_utf8, optimize_for, go_package, cc_generic_services, java_generic_services, py_generic_services, php_generic_services, deprecated, cc_enable_arenas, objc_class_prefix, csharp_namespace, swift_prefix, php_class_prefix, php_namespace, php_metadata_namespace, ruby_package, uninterpreted_option }","parent":null,"children":[{"krate":0,"index":1243},{"krate":0,"index":1244},{"krate":0,"index":1245},{"krate":0,"index":1246},{"krate":0,"index":1247},{"krate":0,"index":1248},{"krate":0,"index":1249},{"krate":0,"index":1250},{"krate":0,"index":1251},{"krate":0,"index":1252},{"krate":0,"index":1253},{"krate":0,"index":1254},{"krate":0,"index":1255},{"krate":0,"index":1256},{"krate":0,"index":1257},{"krate":0,"index":1258},{"krate":0,"index":1259},{"krate":0,"index":1260},{"krate":0,"index":1261},{"krate":0,"index":1262},{"krate":0,"index":1263}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1243},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13207315,"byte_end":13207327,"line_start":317,"line_end":317,"column_start":9,"column_end":21},"name":"java_package","qualname":"::FileOptions::java_package","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":972},"children":[],"decl_id":null,"docs":" Sets the Java package where classes generated from this .proto will be\n placed.  By default, the proto package is used, but this is often\n inappropriate because proto packages do not normally start with backwards\n domain names.\n","sig":null,"attributes":[{"value":"/ Sets the Java package where classes generated from this .proto will be","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13207014,"byte_end":13207088,"line_start":312,"line_end":312,"column_start":5,"column_end":79}},{"value":"/ placed.  By default, the proto package is used, but this is often","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13207093,"byte_end":13207162,"line_start":313,"line_end":313,"column_start":5,"column_end":74}},{"value":"/ inappropriate because proto packages do not normally start with backwards","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13207167,"byte_end":13207244,"line_start":314,"line_end":314,"column_start":5,"column_end":82}},{"value":"/ domain names.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13207249,"byte_end":13207266,"line_start":315,"line_end":315,"column_start":5,"column_end":22}},{"value":"prost(string, optional, tag = \"1\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13207271,"byte_end":13207306,"line_start":316,"line_end":316,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1244},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13207760,"byte_end":13207780,"line_start":324,"line_end":324,"column_start":9,"column_end":29},"name":"java_outer_classname","qualname":"::FileOptions::java_outer_classname","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":972},"children":[],"decl_id":null,"docs":" If set, all the classes from the .proto file are wrapped in a single\n outer class with the given name.  This applies to both Proto1\n (equivalent to the old \"--one_java_file\" option) and Proto2 (where\n a .proto always translates to a single class, but you may want to\n explicitly choose the class name).\n","sig":null,"attributes":[{"value":"/ If set, all the classes from the .proto file are wrapped in a single","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13207377,"byte_end":13207449,"line_start":318,"line_end":318,"column_start":5,"column_end":77}},{"value":"/ outer class with the given name.  This applies to both Proto1","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13207454,"byte_end":13207519,"line_start":319,"line_end":319,"column_start":5,"column_end":70}},{"value":"/ (equivalent to the old \"--one_java_file\" option) and Proto2 (where","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13207524,"byte_end":13207594,"line_start":320,"line_end":320,"column_start":5,"column_end":75}},{"value":"/ a .proto always translates to a single class, but you may want to","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13207599,"byte_end":13207668,"line_start":321,"line_end":321,"column_start":5,"column_end":74}},{"value":"/ explicitly choose the class name).","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13207673,"byte_end":13207711,"line_start":322,"line_end":322,"column_start":5,"column_end":43}},{"value":"prost(string, optional, tag = \"8\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13207716,"byte_end":13207751,"line_start":323,"line_end":323,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1245},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13208336,"byte_end":13208355,"line_start":332,"line_end":332,"column_start":9,"column_end":28},"name":"java_multiple_files","qualname":"::FileOptions::java_multiple_files","value":"std::option::Option<bool>","parent":{"krate":0,"index":972},"children":[],"decl_id":null,"docs":" If set true, then the Java code generator will generate a separate .java\n file for each top-level message, enum, and service defined in the .proto\n file.  Thus, these types will *not* be nested inside the outer class\n named by java_outer_classname.  However, the outer class will still be\n generated to contain the file's getDescriptor() method as well as any\n top-level extensions defined in the file.\n","sig":null,"attributes":[{"value":"/ If set true, then the Java code generator will generate a separate .java","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13207830,"byte_end":13207906,"line_start":325,"line_end":325,"column_start":5,"column_end":81}},{"value":"/ file for each top-level message, enum, and service defined in the .proto","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13207911,"byte_end":13207987,"line_start":326,"line_end":326,"column_start":5,"column_end":81}},{"value":"/ file.  Thus, these types will *not* be nested inside the outer class","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13207992,"byte_end":13208064,"line_start":327,"line_end":327,"column_start":5,"column_end":77}},{"value":"/ named by java_outer_classname.  However, the outer class will still be","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13208069,"byte_end":13208143,"line_start":328,"line_end":328,"column_start":5,"column_end":79}},{"value":"/ generated to contain the file's getDescriptor() method as well as any","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13208148,"byte_end":13208221,"line_start":329,"line_end":329,"column_start":5,"column_end":78}},{"value":"/ top-level extensions defined in the file.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13208226,"byte_end":13208271,"line_start":330,"line_end":330,"column_start":5,"column_end":50}},{"value":"prost(bool, optional, tag = \"10\", default = \"false\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13208276,"byte_end":13208327,"line_start":331,"line_end":331,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":1246},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13208467,"byte_end":13208496,"line_start":335,"line_end":335,"column_start":9,"column_end":38},"name":"java_generate_equals_and_hash","qualname":"::FileOptions::java_generate_equals_and_hash","value":"std::option::Option<bool>","parent":{"krate":0,"index":972},"children":[],"decl_id":null,"docs":" This option does nothing.\n","sig":null,"attributes":[{"value":"/ This option does nothing.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13208390,"byte_end":13208419,"line_start":333,"line_end":333,"column_start":5,"column_end":34}},{"value":"prost(bool, optional, tag = \"20\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13208424,"byte_end":13208458,"line_start":334,"line_end":334,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":1247},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13208976,"byte_end":13208998,"line_start":343,"line_end":343,"column_start":9,"column_end":31},"name":"java_string_check_utf8","qualname":"::FileOptions::java_string_check_utf8","value":"std::option::Option<bool>","parent":{"krate":0,"index":972},"children":[],"decl_id":null,"docs":" If set true, then the Java2 code generator will generate code that\n throws an exception whenever an attempt is made to assign a non-UTF-8\n byte sequence to a string field.\n Message reflection will do the same.\n However, an extension field still accepts non-UTF-8 byte sequences.\n This option has no effect on when used with the lite runtime.\n","sig":null,"attributes":[{"value":"/ If set true, then the Java2 code generator will generate code that","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13208531,"byte_end":13208601,"line_start":336,"line_end":336,"column_start":5,"column_end":75}},{"value":"/ throws an exception whenever an attempt is made to assign a non-UTF-8","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13208606,"byte_end":13208679,"line_start":337,"line_end":337,"column_start":5,"column_end":78}},{"value":"/ byte sequence to a string field.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13208684,"byte_end":13208720,"line_start":338,"line_end":338,"column_start":5,"column_end":41}},{"value":"/ Message reflection will do the same.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13208725,"byte_end":13208765,"line_start":339,"line_end":339,"column_start":5,"column_end":45}},{"value":"/ However, an extension field still accepts non-UTF-8 byte sequences.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13208770,"byte_end":13208841,"line_start":340,"line_end":340,"column_start":5,"column_end":76}},{"value":"/ This option has no effect on when used with the lite runtime.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13208846,"byte_end":13208911,"line_start":341,"line_end":341,"column_start":5,"column_end":70}},{"value":"prost(bool, optional, tag = \"27\", default = \"false\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13208916,"byte_end":13208967,"line_start":342,"line_end":342,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":1248},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13209128,"byte_end":13209140,"line_start":345,"line_end":345,"column_start":9,"column_end":21},"name":"optimize_for","qualname":"::FileOptions::optimize_for","value":"std::option::Option<i32>","parent":{"krate":0,"index":972},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(enumeration = \"file_options::OptimizeMode\", optional, tag = \"9\",\n        default = \"Speed\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13209033,"byte_end":13209119,"line_start":344,"line_end":344,"column_start":5,"column_end":91}}]},{"kind":"Field","id":{"krate":0,"index":1249},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13209593,"byte_end":13209603,"line_start":352,"line_end":352,"column_start":9,"column_end":19},"name":"go_package","qualname":"::FileOptions::go_package","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":972},"children":[],"decl_id":null,"docs":" Sets the Go package where structs generated from this .proto will be\n placed. If omitted, the Go package will be derived from the following:\n   - The basename of the package import path, if provided.\n   - Otherwise, the package statement in the .proto file, if present.\n   - Otherwise, the basename of the .proto file, without extension.\n","sig":null,"attributes":[{"value":"/ Sets the Go package where structs generated from this .proto will be","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13209174,"byte_end":13209246,"line_start":346,"line_end":346,"column_start":5,"column_end":77}},{"value":"/ placed. If omitted, the Go package will be derived from the following:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13209251,"byte_end":13209325,"line_start":347,"line_end":347,"column_start":5,"column_end":79}},{"value":"/   - The basename of the package import path, if provided.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13209330,"byte_end":13209391,"line_start":348,"line_end":348,"column_start":5,"column_end":66}},{"value":"/   - Otherwise, the package statement in the .proto file, if present.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13209396,"byte_end":13209468,"line_start":349,"line_end":349,"column_start":5,"column_end":77}},{"value":"/   - Otherwise, the basename of the .proto file, without extension.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13209473,"byte_end":13209543,"line_start":350,"line_end":350,"column_start":5,"column_end":75}},{"value":"prost(string, optional, tag = \"11\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13209548,"byte_end":13209584,"line_start":351,"line_end":351,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":1250},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13210364,"byte_end":13210383,"line_start":364,"line_end":364,"column_start":9,"column_end":28},"name":"cc_generic_services","qualname":"::FileOptions::cc_generic_services","value":"std::option::Option<bool>","parent":{"krate":0,"index":972},"children":[],"decl_id":null,"docs":" Should generic services be generated in each language?  \"Generic\" services\n are not specific to any particular RPC system.  They are generated by the\n main code generators in each language (without additional plugins).\n Generic services were the only kind of service generation supported by\n early versions of google.protobuf.","sig":null,"attributes":[{"value":"/ Should generic services be generated in each language?  \"Generic\" services","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13209653,"byte_end":13209731,"line_start":353,"line_end":353,"column_start":5,"column_end":83}},{"value":"/ are not specific to any particular RPC system.  They are generated by the","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13209736,"byte_end":13209813,"line_start":354,"line_end":354,"column_start":5,"column_end":82}},{"value":"/ main code generators in each language (without additional plugins).","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13209818,"byte_end":13209889,"line_start":355,"line_end":355,"column_start":5,"column_end":76}},{"value":"/ Generic services were the only kind of service generation supported by","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13209894,"byte_end":13209968,"line_start":356,"line_end":356,"column_start":5,"column_end":79}},{"value":"/ early versions of google.protobuf.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13209973,"byte_end":13210011,"line_start":357,"line_end":357,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13210016,"byte_end":13210019,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ Generic services are now considered deprecated in favor of using plugins","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13210024,"byte_end":13210100,"line_start":359,"line_end":359,"column_start":5,"column_end":81}},{"value":"/ that generate code specific to your particular RPC system.  Therefore,","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13210105,"byte_end":13210179,"line_start":360,"line_end":360,"column_start":5,"column_end":79}},{"value":"/ these default to false.  Old code which depends on generic services should","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13210184,"byte_end":13210262,"line_start":361,"line_end":361,"column_start":5,"column_end":83}},{"value":"/ explicitly set them to true.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13210267,"byte_end":13210299,"line_start":362,"line_end":362,"column_start":5,"column_end":37}},{"value":"prost(bool, optional, tag = \"16\", default = \"false\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13210304,"byte_end":13210355,"line_start":363,"line_end":363,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":1251},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13210478,"byte_end":13210499,"line_start":366,"line_end":366,"column_start":9,"column_end":30},"name":"java_generic_services","qualname":"::FileOptions::java_generic_services","value":"std::option::Option<bool>","parent":{"krate":0,"index":972},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(bool, optional, tag = \"17\", default = \"false\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13210418,"byte_end":13210469,"line_start":365,"line_end":365,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":1252},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13210594,"byte_end":13210613,"line_start":368,"line_end":368,"column_start":9,"column_end":28},"name":"py_generic_services","qualname":"::FileOptions::py_generic_services","value":"std::option::Option<bool>","parent":{"krate":0,"index":972},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(bool, optional, tag = \"18\", default = \"false\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13210534,"byte_end":13210585,"line_start":367,"line_end":367,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":1253},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13210708,"byte_end":13210728,"line_start":370,"line_end":370,"column_start":9,"column_end":29},"name":"php_generic_services","qualname":"::FileOptions::php_generic_services","value":"std::option::Option<bool>","parent":{"krate":0,"index":972},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(bool, optional, tag = \"42\", default = \"false\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13210648,"byte_end":13210699,"line_start":369,"line_end":369,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":1254},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13211079,"byte_end":13211089,"line_start":376,"line_end":376,"column_start":9,"column_end":19},"name":"deprecated","qualname":"::FileOptions::deprecated","value":"std::option::Option<bool>","parent":{"krate":0,"index":972},"children":[],"decl_id":null,"docs":" Is this file deprecated?\n Depending on the target platform, this can emit Deprecated annotations\n for everything in the file, or it will be completely ignored; in the very\n least, this is a formalization for deprecating files.\n","sig":null,"attributes":[{"value":"/ Is this file deprecated?","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13210763,"byte_end":13210791,"line_start":371,"line_end":371,"column_start":5,"column_end":33}},{"value":"/ Depending on the target platform, this can emit Deprecated annotations","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13210796,"byte_end":13210870,"line_start":372,"line_end":372,"column_start":5,"column_end":79}},{"value":"/ for everything in the file, or it will be completely ignored; in the very","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13210875,"byte_end":13210952,"line_start":373,"line_end":373,"column_start":5,"column_end":82}},{"value":"/ least, this is a formalization for deprecating files.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13210957,"byte_end":13211014,"line_start":374,"line_end":374,"column_start":5,"column_end":62}},{"value":"prost(bool, optional, tag = \"23\", default = \"false\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13211019,"byte_end":13211070,"line_start":375,"line_end":375,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":1255},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13211311,"byte_end":13211327,"line_start":380,"line_end":380,"column_start":9,"column_end":25},"name":"cc_enable_arenas","qualname":"::FileOptions::cc_enable_arenas","value":"std::option::Option<bool>","parent":{"krate":0,"index":972},"children":[],"decl_id":null,"docs":" Enables the use of arenas for the proto messages in this file. This applies\n only to generated classes for C++.\n","sig":null,"attributes":[{"value":"/ Enables the use of arenas for the proto messages in this file. This applies","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13211124,"byte_end":13211203,"line_start":377,"line_end":377,"column_start":5,"column_end":84}},{"value":"/ only to generated classes for C++.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13211208,"byte_end":13211246,"line_start":378,"line_end":378,"column_start":5,"column_end":43}},{"value":"prost(bool, optional, tag = \"31\", default = \"false\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13211251,"byte_end":13211302,"line_start":379,"line_end":379,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":1256},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13211552,"byte_end":13211569,"line_start":384,"line_end":384,"column_start":9,"column_end":26},"name":"objc_class_prefix","qualname":"::FileOptions::objc_class_prefix","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":972},"children":[],"decl_id":null,"docs":" Sets the objective c class prefix which is prepended to all objective c\n generated classes from this .proto. There is no default.\n","sig":null,"attributes":[{"value":"/ Sets the objective c class prefix which is prepended to all objective c","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13211362,"byte_end":13211437,"line_start":381,"line_end":381,"column_start":5,"column_end":80}},{"value":"/ generated classes from this .proto. There is no default.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13211442,"byte_end":13211502,"line_start":382,"line_end":382,"column_start":5,"column_end":65}},{"value":"prost(string, optional, tag = \"36\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13211507,"byte_end":13211543,"line_start":383,"line_end":383,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":1257},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13211730,"byte_end":13211746,"line_start":387,"line_end":387,"column_start":9,"column_end":25},"name":"csharp_namespace","qualname":"::FileOptions::csharp_namespace","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":972},"children":[],"decl_id":null,"docs":" Namespace for generated classes; defaults to the package.\n","sig":null,"attributes":[{"value":"/ Namespace for generated classes; defaults to the package.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13211619,"byte_end":13211680,"line_start":385,"line_end":385,"column_start":5,"column_end":66}},{"value":"prost(string, optional, tag = \"37\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13211685,"byte_end":13211721,"line_start":386,"line_end":386,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":1258},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13212127,"byte_end":13212139,"line_start":393,"line_end":393,"column_start":9,"column_end":21},"name":"swift_prefix","qualname":"::FileOptions::swift_prefix","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":972},"children":[],"decl_id":null,"docs":" By default Swift generators will take the proto package and CamelCase it\n replacing '.' with underscore and use that to prefix the types/symbols\n defined. When this options is provided, they will use this value instead\n to prefix the types/symbols defined.\n","sig":null,"attributes":[{"value":"/ By default Swift generators will take the proto package and CamelCase it","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13211796,"byte_end":13211872,"line_start":388,"line_end":388,"column_start":5,"column_end":81}},{"value":"/ replacing '.' with underscore and use that to prefix the types/symbols","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13211877,"byte_end":13211951,"line_start":389,"line_end":389,"column_start":5,"column_end":79}},{"value":"/ defined. When this options is provided, they will use this value instead","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13211956,"byte_end":13212032,"line_start":390,"line_end":390,"column_start":5,"column_end":81}},{"value":"/ to prefix the types/symbols defined.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13212037,"byte_end":13212077,"line_start":391,"line_end":391,"column_start":5,"column_end":45}},{"value":"prost(string, optional, tag = \"39\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13212082,"byte_end":13212118,"line_start":392,"line_end":392,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":1259},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13212360,"byte_end":13212376,"line_start":397,"line_end":397,"column_start":9,"column_end":25},"name":"php_class_prefix","qualname":"::FileOptions::php_class_prefix","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":972},"children":[],"decl_id":null,"docs":" Sets the php class prefix which is prepended to all php generated classes\n from this .proto. Default is empty.\n","sig":null,"attributes":[{"value":"/ Sets the php class prefix which is prepended to all php generated classes","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13212189,"byte_end":13212266,"line_start":394,"line_end":394,"column_start":5,"column_end":82}},{"value":"/ from this .proto. Default is empty.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13212271,"byte_end":13212310,"line_start":395,"line_end":395,"column_start":5,"column_end":44}},{"value":"prost(string, optional, tag = \"40\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13212315,"byte_end":13212351,"line_start":396,"line_end":396,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":1260},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13212667,"byte_end":13212680,"line_start":402,"line_end":402,"column_start":9,"column_end":22},"name":"php_namespace","qualname":"::FileOptions::php_namespace","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":972},"children":[],"decl_id":null,"docs":" Use this option to change the namespace of php generated classes. Default\n is empty. When this option is empty, the package name will be used for\n determining the namespace.\n","sig":null,"attributes":[{"value":"/ Use this option to change the namespace of php generated classes. Default","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13212426,"byte_end":13212503,"line_start":398,"line_end":398,"column_start":5,"column_end":82}},{"value":"/ is empty. When this option is empty, the package name will be used for","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13212508,"byte_end":13212582,"line_start":399,"line_end":399,"column_start":5,"column_end":79}},{"value":"/ determining the namespace.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13212587,"byte_end":13212617,"line_start":400,"line_end":400,"column_start":5,"column_end":35}},{"value":"prost(string, optional, tag = \"41\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13212622,"byte_end":13212658,"line_start":401,"line_end":401,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":1261},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13212983,"byte_end":13213005,"line_start":407,"line_end":407,"column_start":9,"column_end":31},"name":"php_metadata_namespace","qualname":"::FileOptions::php_metadata_namespace","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":972},"children":[],"decl_id":null,"docs":" Use this option to change the namespace of php generated metadata classes.\n Default is empty. When this option is empty, the proto file name will be used\n for determining the namespace.\n","sig":null,"attributes":[{"value":"/ Use this option to change the namespace of php generated metadata classes.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13212730,"byte_end":13212808,"line_start":403,"line_end":403,"column_start":5,"column_end":83}},{"value":"/ Default is empty. When this option is empty, the proto file name will be used","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13212813,"byte_end":13212894,"line_start":404,"line_end":404,"column_start":5,"column_end":86}},{"value":"/ for determining the namespace.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13212899,"byte_end":13212933,"line_start":405,"line_end":405,"column_start":5,"column_end":39}},{"value":"prost(string, optional, tag = \"44\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13212938,"byte_end":13212974,"line_start":406,"line_end":406,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":1262},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13213300,"byte_end":13213312,"line_start":412,"line_end":412,"column_start":9,"column_end":21},"name":"ruby_package","qualname":"::FileOptions::ruby_package","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":972},"children":[],"decl_id":null,"docs":" Use this option to change the package of ruby generated classes. Default\n is empty. When this option is not set, the package name will be used for\n determining the ruby package.\n","sig":null,"attributes":[{"value":"/ Use this option to change the package of ruby generated classes. Default","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13213055,"byte_end":13213131,"line_start":408,"line_end":408,"column_start":5,"column_end":81}},{"value":"/ is empty. When this option is not set, the package name will be used for","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13213136,"byte_end":13213212,"line_start":409,"line_end":409,"column_start":5,"column_end":81}},{"value":"/ determining the ruby package.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13213217,"byte_end":13213250,"line_start":410,"line_end":410,"column_start":5,"column_end":38}},{"value":"prost(string, optional, tag = \"45\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13213255,"byte_end":13213291,"line_start":411,"line_end":411,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":1263},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13213533,"byte_end":13213553,"line_start":416,"line_end":416,"column_start":9,"column_end":29},"name":"uninterpreted_option","qualname":"::FileOptions::uninterpreted_option","value":"std::vec::Vec<UninterpretedOption>","parent":{"krate":0,"index":972},"children":[],"decl_id":null,"docs":" The parser stores options it doesn't recognize here.\n See the documentation for the \"Options\" section above.\n","sig":null,"attributes":[{"value":"/ The parser stores options it doesn't recognize here.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13213362,"byte_end":13213418,"line_start":413,"line_end":413,"column_start":5,"column_end":61}},{"value":"/ See the documentation for the \"Options\" section above.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13213423,"byte_end":13213481,"line_start":414,"line_end":414,"column_start":5,"column_end":63}},{"value":"prost(message, repeated, tag = \"999\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13213486,"byte_end":13213524,"line_start":415,"line_end":415,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1222},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13207315,"byte_end":13207327,"line_start":317,"line_end":317,"column_start":9,"column_end":21},"name":"java_package","qualname":"<FileOptions>::java_package","value":"pub fn java_package(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1223},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13207760,"byte_end":13207780,"line_start":324,"line_end":324,"column_start":9,"column_end":29},"name":"java_outer_classname","qualname":"<FileOptions>::java_outer_classname","value":"pub fn java_outer_classname(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1224},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13209128,"byte_end":13209140,"line_start":345,"line_end":345,"column_start":9,"column_end":21},"name":"optimize_for","qualname":"<FileOptions>::optimize_for","value":"pub fn optimize_for(&Self) -> super::file_options::OptimizeMode","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1226},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13208336,"byte_end":13208355,"line_start":332,"line_end":332,"column_start":9,"column_end":28},"name":"java_multiple_files","qualname":"<FileOptions>::java_multiple_files","value":"pub fn java_multiple_files(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1227},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13209593,"byte_end":13209603,"line_start":352,"line_end":352,"column_start":9,"column_end":19},"name":"go_package","qualname":"<FileOptions>::go_package","value":"pub fn go_package(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1228},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13210364,"byte_end":13210383,"line_start":364,"line_end":364,"column_start":9,"column_end":28},"name":"cc_generic_services","qualname":"<FileOptions>::cc_generic_services","value":"pub fn cc_generic_services(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1229},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13210478,"byte_end":13210499,"line_start":366,"line_end":366,"column_start":9,"column_end":30},"name":"java_generic_services","qualname":"<FileOptions>::java_generic_services","value":"pub fn java_generic_services(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1230},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13210594,"byte_end":13210613,"line_start":368,"line_end":368,"column_start":9,"column_end":28},"name":"py_generic_services","qualname":"<FileOptions>::py_generic_services","value":"pub fn py_generic_services(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1231},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13208467,"byte_end":13208496,"line_start":335,"line_end":335,"column_start":9,"column_end":38},"name":"java_generate_equals_and_hash","qualname":"<FileOptions>::java_generate_equals_and_hash","value":"pub fn java_generate_equals_and_hash(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1232},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13211079,"byte_end":13211089,"line_start":376,"line_end":376,"column_start":9,"column_end":19},"name":"deprecated","qualname":"<FileOptions>::deprecated","value":"pub fn deprecated(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1233},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13208976,"byte_end":13208998,"line_start":343,"line_end":343,"column_start":9,"column_end":31},"name":"java_string_check_utf8","qualname":"<FileOptions>::java_string_check_utf8","value":"pub fn java_string_check_utf8(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1234},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13211311,"byte_end":13211327,"line_start":380,"line_end":380,"column_start":9,"column_end":25},"name":"cc_enable_arenas","qualname":"<FileOptions>::cc_enable_arenas","value":"pub fn cc_enable_arenas(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1235},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13211552,"byte_end":13211569,"line_start":384,"line_end":384,"column_start":9,"column_end":26},"name":"objc_class_prefix","qualname":"<FileOptions>::objc_class_prefix","value":"pub fn objc_class_prefix(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1236},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13211730,"byte_end":13211746,"line_start":387,"line_end":387,"column_start":9,"column_end":25},"name":"csharp_namespace","qualname":"<FileOptions>::csharp_namespace","value":"pub fn csharp_namespace(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1237},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13212127,"byte_end":13212139,"line_start":393,"line_end":393,"column_start":9,"column_end":21},"name":"swift_prefix","qualname":"<FileOptions>::swift_prefix","value":"pub fn swift_prefix(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1238},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13212360,"byte_end":13212376,"line_start":397,"line_end":397,"column_start":9,"column_end":25},"name":"php_class_prefix","qualname":"<FileOptions>::php_class_prefix","value":"pub fn php_class_prefix(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1239},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13212667,"byte_end":13212680,"line_start":402,"line_end":402,"column_start":9,"column_end":22},"name":"php_namespace","qualname":"<FileOptions>::php_namespace","value":"pub fn php_namespace(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1240},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13210708,"byte_end":13210728,"line_start":370,"line_end":370,"column_start":9,"column_end":29},"name":"php_generic_services","qualname":"<FileOptions>::php_generic_services","value":"pub fn php_generic_services(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1241},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13212983,"byte_end":13213005,"line_start":407,"line_end":407,"column_start":9,"column_end":31},"name":"php_metadata_namespace","qualname":"<FileOptions>::php_metadata_namespace","value":"pub fn php_metadata_namespace(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1242},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13213300,"byte_end":13213312,"line_start":412,"line_end":412,"column_start":9,"column_end":21},"name":"ruby_package","qualname":"<FileOptions>::ruby_package","value":"pub fn ruby_package(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":29},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13213603,"byte_end":13213615,"line_start":418,"line_end":418,"column_start":9,"column_end":21},"name":"file_options","qualname":"::file_options","value":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","parent":null,"children":[{"krate":0,"index":1264},{"krate":0,"index":1274},{"krate":0,"index":1276},{"krate":0,"index":1277},{"krate":0,"index":1279},{"krate":0,"index":1280},{"krate":0,"index":1282},{"krate":0,"index":1283},{"krate":0,"index":1285},{"krate":0,"index":1288},{"krate":0,"index":1290},{"krate":0,"index":1292}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1265},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13213895,"byte_end":13213900,"line_start":424,"line_end":424,"column_start":9,"column_end":14},"name":"Speed","qualname":"::file_options::OptimizeMode::Speed","value":"OptimizeMode::Speed","parent":{"krate":0,"index":1264},"children":[],"decl_id":null,"docs":" Generate complete code for parsing, serialization,\n","sig":null,"attributes":[{"value":"/ Generate complete code for parsing, serialization,","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13213832,"byte_end":13213886,"line_start":423,"line_end":423,"column_start":9,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1268},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13214001,"byte_end":13214009,"line_start":428,"line_end":428,"column_start":9,"column_end":17},"name":"CodeSize","qualname":"::file_options::OptimizeMode::CodeSize","value":"OptimizeMode::CodeSize","parent":{"krate":0,"index":1264},"children":[],"decl_id":null,"docs":" etc.","sig":null,"attributes":[{"value":"/ etc.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13213914,"byte_end":13213922,"line_start":425,"line_end":425,"column_start":9,"column_end":17}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13213931,"byte_end":13213934,"line_start":426,"line_end":426,"column_start":9,"column_end":12}},{"value":"/ Use ReflectionOps to implement these methods.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13213943,"byte_end":13213992,"line_start":427,"line_end":427,"column_start":9,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1271},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13214089,"byte_end":13214100,"line_start":430,"line_end":430,"column_start":9,"column_end":20},"name":"LiteRuntime","qualname":"::file_options::OptimizeMode::LiteRuntime","value":"OptimizeMode::LiteRuntime","parent":{"krate":0,"index":1264},"children":[],"decl_id":null,"docs":" Generate code using MessageLite and the lite runtime.\n","sig":null,"attributes":[{"value":"/ Generate code using MessageLite and the lite runtime.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13214023,"byte_end":13214080,"line_start":429,"line_end":429,"column_start":9,"column_end":66}}]},{"kind":"Enum","id":{"krate":0,"index":1264},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13213809,"byte_end":13213821,"line_start":422,"line_end":422,"column_start":14,"column_end":26},"name":"OptimizeMode","qualname":"::file_options::OptimizeMode","value":"pub enum OptimizeMode { Speed = , CodeSize = , LiteRuntime = , }","parent":null,"children":[{"krate":0,"index":1265},{"krate":0,"index":1268},{"krate":0,"index":1271}],"decl_id":null,"docs":" Generated classes can be optimized for speed or code size.\n","sig":null,"attributes":[{"value":"/ Generated classes can be optimized for speed or code size.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13213622,"byte_end":13213684,"line_start":419,"line_end":419,"column_start":5,"column_end":67}},{"value":"repr(i32)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13213783,"byte_end":13213795,"line_start":421,"line_end":421,"column_start":5,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":1301},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13214171,"byte_end":13214185,"line_start":434,"line_end":434,"column_start":12,"column_end":26},"name":"MessageOptions","qualname":"::MessageOptions","value":"MessageOptions { message_set_wire_format, no_standard_descriptor_accessor, deprecated, map_entry, uninterpreted_option }","parent":null,"children":[{"krate":0,"index":1374},{"krate":0,"index":1375},{"krate":0,"index":1376},{"krate":0,"index":1377},{"krate":0,"index":1378}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1374},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13215090,"byte_end":13215113,"line_start":454,"line_end":454,"column_start":9,"column_end":32},"name":"message_set_wire_format","qualname":"::MessageOptions::message_set_wire_format","value":"std::option::Option<bool>","parent":{"krate":0,"index":1301},"children":[],"decl_id":null,"docs":" Set true to use the old proto1 MessageSet wire format for extensions.\n This is provided for backwards-compatibility with the MessageSet wire\n format.  You should not use this for any other reason:  It's less\n efficient, has fewer features, and is more complicated.","sig":null,"attributes":[{"value":"/ Set true to use the old proto1 MessageSet wire format for extensions.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13214192,"byte_end":13214265,"line_start":435,"line_end":435,"column_start":5,"column_end":78}},{"value":"/ This is provided for backwards-compatibility with the MessageSet wire","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13214270,"byte_end":13214343,"line_start":436,"line_end":436,"column_start":5,"column_end":78}},{"value":"/ format.  You should not use this for any other reason:  It's less","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13214348,"byte_end":13214417,"line_start":437,"line_end":437,"column_start":5,"column_end":74}},{"value":"/ efficient, has fewer features, and is more complicated.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13214422,"byte_end":13214481,"line_start":438,"line_end":438,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13214486,"byte_end":13214489,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ The message must be defined exactly as follows:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13214494,"byte_end":13214545,"line_start":440,"line_end":440,"column_start":5,"column_end":56}},{"value":"/   message Foo {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13214550,"byte_end":13214569,"line_start":441,"line_end":441,"column_start":5,"column_end":24}},{"value":"/     option message_set_wire_format = true;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13214574,"byte_end":13214620,"line_start":442,"line_end":442,"column_start":5,"column_end":51}},{"value":"/     extensions 4 to max;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13214625,"byte_end":13214653,"line_start":443,"line_end":443,"column_start":5,"column_end":33}},{"value":"/   }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13214658,"byte_end":13214665,"line_start":444,"line_end":444,"column_start":5,"column_end":12}},{"value":"/ Note that the message cannot have any defined fields; MessageSets only","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13214670,"byte_end":13214744,"line_start":445,"line_end":445,"column_start":5,"column_end":79}},{"value":"/ have extensions.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13214749,"byte_end":13214769,"line_start":446,"line_end":446,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13214774,"byte_end":13214777,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ All extensions of your type must be singular messages; e.g. they cannot","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13214782,"byte_end":13214857,"line_start":448,"line_end":448,"column_start":5,"column_end":80}},{"value":"/ be int32s, enums, or repeated messages.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13214862,"byte_end":13214905,"line_start":449,"line_end":449,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13214910,"byte_end":13214913,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ Because this is an option, the above two restrictions are not enforced by","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13214918,"byte_end":13214995,"line_start":451,"line_end":451,"column_start":5,"column_end":82}},{"value":"/ the protocol compiler.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13215000,"byte_end":13215026,"line_start":452,"line_end":452,"column_start":5,"column_end":31}},{"value":"prost(bool, optional, tag = \"1\", default = \"false\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13215031,"byte_end":13215081,"line_start":453,"line_end":453,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":1375},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13215448,"byte_end":13215479,"line_start":459,"line_end":459,"column_start":9,"column_end":40},"name":"no_standard_descriptor_accessor","qualname":"::MessageOptions::no_standard_descriptor_accessor","value":"std::option::Option<bool>","parent":{"krate":0,"index":1301},"children":[],"decl_id":null,"docs":" Disables the generation of the standard \"descriptor()\" accessor, which can\n conflict with a field of the same name.  This is meant to make migration\n from proto1 easier; new code should avoid fields named \"descriptor\".\n","sig":null,"attributes":[{"value":"/ Disables the generation of the standard \"descriptor()\" accessor, which can","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13215148,"byte_end":13215226,"line_start":455,"line_end":455,"column_start":5,"column_end":83}},{"value":"/ conflict with a field of the same name.  This is meant to make migration","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13215231,"byte_end":13215307,"line_start":456,"line_end":456,"column_start":5,"column_end":81}},{"value":"/ from proto1 easier; new code should avoid fields named \"descriptor\".","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13215312,"byte_end":13215384,"line_start":457,"line_end":457,"column_start":5,"column_end":77}},{"value":"prost(bool, optional, tag = \"2\", default = \"false\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13215389,"byte_end":13215439,"line_start":458,"line_end":458,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":1376},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13215824,"byte_end":13215834,"line_start":465,"line_end":465,"column_start":9,"column_end":19},"name":"deprecated","qualname":"::MessageOptions::deprecated","value":"std::option::Option<bool>","parent":{"krate":0,"index":1301},"children":[],"decl_id":null,"docs":" Is this message deprecated?\n Depending on the target platform, this can emit Deprecated annotations\n for the message, or it will be completely ignored; in the very least,\n this is a formalization for deprecating messages.\n","sig":null,"attributes":[{"value":"/ Is this message deprecated?","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13215514,"byte_end":13215545,"line_start":460,"line_end":460,"column_start":5,"column_end":36}},{"value":"/ Depending on the target platform, this can emit Deprecated annotations","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13215550,"byte_end":13215624,"line_start":461,"line_end":461,"column_start":5,"column_end":79}},{"value":"/ for the message, or it will be completely ignored; in the very least,","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13215629,"byte_end":13215702,"line_start":462,"line_end":462,"column_start":5,"column_end":78}},{"value":"/ this is a formalization for deprecating messages.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13215707,"byte_end":13215760,"line_start":463,"line_end":463,"column_start":5,"column_end":58}},{"value":"prost(bool, optional, tag = \"3\", default = \"false\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13215765,"byte_end":13215815,"line_start":464,"line_end":464,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":1377},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13216841,"byte_end":13216850,"line_start":488,"line_end":488,"column_start":9,"column_end":18},"name":"map_entry","qualname":"::MessageOptions::map_entry","value":"std::option::Option<bool>","parent":{"krate":0,"index":1301},"children":[],"decl_id":null,"docs":" Whether the message is an automatically generated map entry type for the\n maps field.","sig":null,"attributes":[{"value":"/ Whether the message is an automatically generated map entry type for the","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13215869,"byte_end":13215945,"line_start":466,"line_end":466,"column_start":5,"column_end":81}},{"value":"/ maps field.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13215950,"byte_end":13215965,"line_start":467,"line_end":467,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13215970,"byte_end":13215973,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ For maps fields:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13215978,"byte_end":13215998,"line_start":469,"line_end":469,"column_start":5,"column_end":25}},{"value":"/     map<KeyType, ValueType> map_field = 1;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13216003,"byte_end":13216049,"line_start":470,"line_end":470,"column_start":5,"column_end":51}},{"value":"/ The parsed descriptor looks like:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13216054,"byte_end":13216091,"line_start":471,"line_end":471,"column_start":5,"column_end":42}},{"value":"/     message MapFieldEntry {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13216096,"byte_end":13216127,"line_start":472,"line_end":472,"column_start":5,"column_end":36}},{"value":"/         option map_entry = true;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13216132,"byte_end":13216168,"line_start":473,"line_end":473,"column_start":5,"column_end":41}},{"value":"/         optional KeyType key = 1;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13216173,"byte_end":13216210,"line_start":474,"line_end":474,"column_start":5,"column_end":42}},{"value":"/         optional ValueType value = 2;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13216215,"byte_end":13216256,"line_start":475,"line_end":475,"column_start":5,"column_end":46}},{"value":"/     }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13216261,"byte_end":13216270,"line_start":476,"line_end":476,"column_start":5,"column_end":14}},{"value":"/     repeated MapFieldEntry map_field = 1;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13216275,"byte_end":13216320,"line_start":477,"line_end":477,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13216325,"byte_end":13216328,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ Implementations may choose not to generate the map_entry=true message, but","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13216333,"byte_end":13216411,"line_start":479,"line_end":479,"column_start":5,"column_end":83}},{"value":"/ use a native map in the target language to hold the keys and values.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13216416,"byte_end":13216488,"line_start":480,"line_end":480,"column_start":5,"column_end":77}},{"value":"/ The reflection APIs in such implementions still need to work as","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13216493,"byte_end":13216560,"line_start":481,"line_end":481,"column_start":5,"column_end":72}},{"value":"/ if the field is a repeated message field.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13216565,"byte_end":13216610,"line_start":482,"line_end":482,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13216615,"byte_end":13216618,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ NOTE: Do not set the option in .proto files. Always use the maps syntax","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13216623,"byte_end":13216698,"line_start":484,"line_end":484,"column_start":5,"column_end":80}},{"value":"/ instead. The option should only be implicitly set by the proto compiler","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13216703,"byte_end":13216778,"line_start":485,"line_end":485,"column_start":5,"column_end":80}},{"value":"/ parser.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13216783,"byte_end":13216794,"line_start":486,"line_end":486,"column_start":5,"column_end":16}},{"value":"prost(bool, optional, tag = \"7\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13216799,"byte_end":13216832,"line_start":487,"line_end":487,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":1378},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13217004,"byte_end":13217024,"line_start":491,"line_end":491,"column_start":9,"column_end":29},"name":"uninterpreted_option","qualname":"::MessageOptions::uninterpreted_option","value":"std::vec::Vec<UninterpretedOption>","parent":{"krate":0,"index":1301},"children":[],"decl_id":null,"docs":" The parser stores options it doesn't recognize here. See above.\n","sig":null,"attributes":[{"value":"/ The parser stores options it doesn't recognize here. See above.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13216885,"byte_end":13216952,"line_start":489,"line_end":489,"column_start":5,"column_end":72}},{"value":"prost(message, repeated, tag = \"999\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13216957,"byte_end":13216995,"line_start":490,"line_end":490,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1370},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13215090,"byte_end":13215113,"line_start":454,"line_end":454,"column_start":9,"column_end":32},"name":"message_set_wire_format","qualname":"<MessageOptions>::message_set_wire_format","value":"pub fn message_set_wire_format(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1371},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13215448,"byte_end":13215479,"line_start":459,"line_end":459,"column_start":9,"column_end":40},"name":"no_standard_descriptor_accessor","qualname":"<MessageOptions>::no_standard_descriptor_accessor","value":"pub fn no_standard_descriptor_accessor(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1372},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13215824,"byte_end":13215834,"line_start":465,"line_end":465,"column_start":9,"column_end":19},"name":"deprecated","qualname":"<MessageOptions>::deprecated","value":"pub fn deprecated(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1373},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13216841,"byte_end":13216850,"line_start":488,"line_end":488,"column_start":9,"column_end":18},"name":"map_entry","qualname":"<MessageOptions>::map_entry","value":"pub fn map_entry(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1379},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13217123,"byte_end":13217135,"line_start":494,"line_end":494,"column_start":12,"column_end":24},"name":"FieldOptions","qualname":"::FieldOptions","value":"FieldOptions { ctype, packed, jstype, lazy, deprecated, weak, uninterpreted_option }","parent":null,"children":[{"krate":0,"index":1488},{"krate":0,"index":1489},{"krate":0,"index":1490},{"krate":0,"index":1491},{"krate":0,"index":1492},{"krate":0,"index":1493},{"krate":0,"index":1494}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1488},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13217536,"byte_end":13217541,"line_start":500,"line_end":500,"column_start":9,"column_end":14},"name":"ctype","qualname":"::FieldOptions::ctype","value":"std::option::Option<i32>","parent":{"krate":0,"index":1379},"children":[],"decl_id":null,"docs":" The ctype option instructs the C++ code generator to use a different\n representation of the field than it normally would.  See the specific\n options below.  This option is not yet implemented in the open source\n release -- sorry, we'll try to include it in a future version!\n","sig":null,"attributes":[{"value":"/ The ctype option instructs the C++ code generator to use a different","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13217142,"byte_end":13217214,"line_start":495,"line_end":495,"column_start":5,"column_end":77}},{"value":"/ representation of the field than it normally would.  See the specific","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13217219,"byte_end":13217292,"line_start":496,"line_end":496,"column_start":5,"column_end":78}},{"value":"/ options below.  This option is not yet implemented in the open source","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13217297,"byte_end":13217370,"line_start":497,"line_end":497,"column_start":5,"column_end":78}},{"value":"/ release -- sorry, we'll try to include it in a future version!","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13217375,"byte_end":13217441,"line_start":498,"line_end":498,"column_start":5,"column_end":71}},{"value":"prost(enumeration = \"field_options::CType\", optional, tag = \"1\", default =\n        \"String\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13217446,"byte_end":13217527,"line_start":499,"line_end":499,"column_start":5,"column_end":86}}]},{"kind":"Field","id":{"krate":0,"index":1489},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13217983,"byte_end":13217989,"line_start":507,"line_end":507,"column_start":9,"column_end":15},"name":"packed","qualname":"::FieldOptions::packed","value":"std::option::Option<bool>","parent":{"krate":0,"index":1379},"children":[],"decl_id":null,"docs":" The packed option can be enabled for repeated primitive fields to enable\n a more efficient representation on the wire. Rather than repeatedly\n writing the tag and type for each element, the entire array is encoded as\n a single length-delimited blob. In proto3, only explicit setting it to\n false will avoid using packed encoding.\n","sig":null,"attributes":[{"value":"/ The packed option can be enabled for repeated primitive fields to enable","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13217575,"byte_end":13217651,"line_start":501,"line_end":501,"column_start":5,"column_end":81}},{"value":"/ a more efficient representation on the wire. Rather than repeatedly","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13217656,"byte_end":13217727,"line_start":502,"line_end":502,"column_start":5,"column_end":76}},{"value":"/ writing the tag and type for each element, the entire array is encoded as","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13217732,"byte_end":13217809,"line_start":503,"line_end":503,"column_start":5,"column_end":82}},{"value":"/ a single length-delimited blob. In proto3, only explicit setting it to","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13217814,"byte_end":13217888,"line_start":504,"line_end":504,"column_start":5,"column_end":79}},{"value":"/ false will avoid using packed encoding.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13217893,"byte_end":13217936,"line_start":505,"line_end":505,"column_start":5,"column_end":48}},{"value":"prost(bool, optional, tag = \"2\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13217941,"byte_end":13217974,"line_start":506,"line_end":506,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":1490},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13218845,"byte_end":13218851,"line_start":520,"line_end":520,"column_start":9,"column_end":15},"name":"jstype","qualname":"::FieldOptions::jstype","value":"std::option::Option<i32>","parent":{"krate":0,"index":1379},"children":[],"decl_id":null,"docs":" The jstype option determines the JavaScript type used for values of the\n field.  The option is permitted only for 64 bit integral and fixed types\n (int64, uint64, sint64, fixed64, sfixed64).  A field with jstype JS_STRING\n is represented as JavaScript string, which avoids loss of precision that\n can happen when a large value is converted to a floating point JavaScript.\n Specifying JS_NUMBER for the jstype causes the generated JavaScript code to\n use the JavaScript \"number\" type.  The behavior of the default option\n JS_NORMAL is implementation dependent.","sig":null,"attributes":[{"value":"/ The jstype option determines the JavaScript type used for values of the","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13218024,"byte_end":13218099,"line_start":508,"line_end":508,"column_start":5,"column_end":80}},{"value":"/ field.  The option is permitted only for 64 bit integral and fixed types","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13218104,"byte_end":13218180,"line_start":509,"line_end":509,"column_start":5,"column_end":81}},{"value":"/ (int64, uint64, sint64, fixed64, sfixed64).  A field with jstype JS_STRING","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13218185,"byte_end":13218263,"line_start":510,"line_end":510,"column_start":5,"column_end":83}},{"value":"/ is represented as JavaScript string, which avoids loss of precision that","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13218268,"byte_end":13218344,"line_start":511,"line_end":511,"column_start":5,"column_end":81}},{"value":"/ can happen when a large value is converted to a floating point JavaScript.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13218349,"byte_end":13218427,"line_start":512,"line_end":512,"column_start":5,"column_end":83}},{"value":"/ Specifying JS_NUMBER for the jstype causes the generated JavaScript code to","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13218432,"byte_end":13218511,"line_start":513,"line_end":513,"column_start":5,"column_end":84}},{"value":"/ use the JavaScript \"number\" type.  The behavior of the default option","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13218516,"byte_end":13218589,"line_start":514,"line_end":514,"column_start":5,"column_end":78}},{"value":"/ JS_NORMAL is implementation dependent.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13218594,"byte_end":13218636,"line_start":515,"line_end":515,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13218641,"byte_end":13218644,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ This option is an enum to permit additional types to be added, e.g.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13218649,"byte_end":13218720,"line_start":517,"line_end":517,"column_start":5,"column_end":76}},{"value":"/ goog.math.Integer.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13218725,"byte_end":13218747,"line_start":518,"line_end":518,"column_start":5,"column_end":27}},{"value":"prost(enumeration = \"field_options::JsType\", optional, tag = \"6\", default =\n        \"JsNormal\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13218752,"byte_end":13218836,"line_start":519,"line_end":519,"column_start":5,"column_end":89}}]},{"kind":"Field","id":{"krate":0,"index":1491},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13220772,"byte_end":13220776,"line_start":550,"line_end":550,"column_start":9,"column_end":13},"name":"lazy","qualname":"::FieldOptions::lazy","value":"std::option::Option<bool>","parent":{"krate":0,"index":1379},"children":[],"decl_id":null,"docs":" Should this field be parsed lazily?  Lazy applies only to message-type\n fields.  It means that when the outer message is initially parsed, the\n inner message's contents will not be parsed but instead stored in encoded\n form.  The inner message will actually be parsed when it is first accessed.","sig":null,"attributes":[{"value":"/ Should this field be parsed lazily?  Lazy applies only to message-type","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13218885,"byte_end":13218959,"line_start":521,"line_end":521,"column_start":5,"column_end":79}},{"value":"/ fields.  It means that when the outer message is initially parsed, the","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13218964,"byte_end":13219038,"line_start":522,"line_end":522,"column_start":5,"column_end":79}},{"value":"/ inner message's contents will not be parsed but instead stored in encoded","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13219043,"byte_end":13219120,"line_start":523,"line_end":523,"column_start":5,"column_end":82}},{"value":"/ form.  The inner message will actually be parsed when it is first accessed.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13219125,"byte_end":13219204,"line_start":524,"line_end":524,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13219209,"byte_end":13219212,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ This is only a hint.  Implementations are free to choose whether to use","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13219217,"byte_end":13219292,"line_start":526,"line_end":526,"column_start":5,"column_end":80}},{"value":"/ eager or lazy parsing regardless of the value of this option.  However,","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13219297,"byte_end":13219372,"line_start":527,"line_end":527,"column_start":5,"column_end":80}},{"value":"/ setting this option true suggests that the protocol author believes that","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13219377,"byte_end":13219453,"line_start":528,"line_end":528,"column_start":5,"column_end":81}},{"value":"/ using lazy parsing on this field is worth the additional bookkeeping","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13219458,"byte_end":13219530,"line_start":529,"line_end":529,"column_start":5,"column_end":77}},{"value":"/ overhead typically needed to implement it.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13219535,"byte_end":13219581,"line_start":530,"line_end":530,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13219586,"byte_end":13219589,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ This option does not affect the public interface of any generated code;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13219594,"byte_end":13219669,"line_start":532,"line_end":532,"column_start":5,"column_end":80}},{"value":"/ all method signatures remain the same.  Furthermore, thread-safety of the","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13219674,"byte_end":13219751,"line_start":533,"line_end":533,"column_start":5,"column_end":82}},{"value":"/ interface is not affected by this option; const methods remain safe to","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13219756,"byte_end":13219830,"line_start":534,"line_end":534,"column_start":5,"column_end":79}},{"value":"/ call from multiple threads concurrently, while non-const methods continue","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13219835,"byte_end":13219912,"line_start":535,"line_end":535,"column_start":5,"column_end":82}},{"value":"/ to require exclusive access.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13219917,"byte_end":13219949,"line_start":536,"line_end":536,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13219954,"byte_end":13219957,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13219962,"byte_end":13219965,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ Note that implementations may choose not to check required fields within","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13219970,"byte_end":13220046,"line_start":539,"line_end":539,"column_start":5,"column_end":81}},{"value":"/ a lazy sub-message.  That is, calling IsInitialized() on the outer message","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13220051,"byte_end":13220129,"line_start":540,"line_end":540,"column_start":5,"column_end":83}},{"value":"/ may return true even if the inner message has missing required fields.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13220134,"byte_end":13220208,"line_start":541,"line_end":541,"column_start":5,"column_end":79}},{"value":"/ This is necessary because otherwise the inner message would have to be","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13220213,"byte_end":13220287,"line_start":542,"line_end":542,"column_start":5,"column_end":79}},{"value":"/ parsed in order to perform the check, defeating the purpose of lazy","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13220292,"byte_end":13220363,"line_start":543,"line_end":543,"column_start":5,"column_end":76}},{"value":"/ parsing.  An implementation which chooses not to check required fields","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13220368,"byte_end":13220442,"line_start":544,"line_end":544,"column_start":5,"column_end":79}},{"value":"/ must be consistent about it.  That is, for any particular sub-message, the","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13220447,"byte_end":13220525,"line_start":545,"line_end":545,"column_start":5,"column_end":83}},{"value":"/ implementation must either *always* check its required fields, or *never*","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13220530,"byte_end":13220607,"line_start":546,"line_end":546,"column_start":5,"column_end":82}},{"value":"/ check its required fields, regardless of whether or not the message has","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13220612,"byte_end":13220687,"line_start":547,"line_end":547,"column_start":5,"column_end":80}},{"value":"/ been parsed.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13220692,"byte_end":13220708,"line_start":548,"line_end":548,"column_start":5,"column_end":21}},{"value":"prost(bool, optional, tag = \"5\", default = \"false\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13220713,"byte_end":13220763,"line_start":549,"line_end":549,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":1492},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13221115,"byte_end":13221125,"line_start":556,"line_end":556,"column_start":9,"column_end":19},"name":"deprecated","qualname":"::FieldOptions::deprecated","value":"std::option::Option<bool>","parent":{"krate":0,"index":1379},"children":[],"decl_id":null,"docs":" Is this field deprecated?\n Depending on the target platform, this can emit Deprecated annotations\n for accessors, or it will be completely ignored; in the very least, this\n is a formalization for deprecating fields.\n","sig":null,"attributes":[{"value":"/ Is this field deprecated?","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13220811,"byte_end":13220840,"line_start":551,"line_end":551,"column_start":5,"column_end":34}},{"value":"/ Depending on the target platform, this can emit Deprecated annotations","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13220845,"byte_end":13220919,"line_start":552,"line_end":552,"column_start":5,"column_end":79}},{"value":"/ for accessors, or it will be completely ignored; in the very least, this","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13220924,"byte_end":13221000,"line_start":553,"line_end":553,"column_start":5,"column_end":81}},{"value":"/ is a formalization for deprecating fields.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13221005,"byte_end":13221051,"line_start":554,"line_end":554,"column_start":5,"column_end":51}},{"value":"prost(bool, optional, tag = \"3\", default = \"false\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13221056,"byte_end":13221106,"line_start":555,"line_end":555,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":1493},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13221276,"byte_end":13221280,"line_start":559,"line_end":559,"column_start":9,"column_end":13},"name":"weak","qualname":"::FieldOptions::weak","value":"std::option::Option<bool>","parent":{"krate":0,"index":1379},"children":[],"decl_id":null,"docs":" For Google-internal migration only. Do not use.\n","sig":null,"attributes":[{"value":"/ For Google-internal migration only. Do not use.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13221160,"byte_end":13221211,"line_start":557,"line_end":557,"column_start":5,"column_end":56}},{"value":"prost(bool, optional, tag = \"10\", default = \"false\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13221216,"byte_end":13221267,"line_start":558,"line_end":558,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":1494},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13221434,"byte_end":13221454,"line_start":562,"line_end":562,"column_start":9,"column_end":29},"name":"uninterpreted_option","qualname":"::FieldOptions::uninterpreted_option","value":"std::vec::Vec<UninterpretedOption>","parent":{"krate":0,"index":1379},"children":[],"decl_id":null,"docs":" The parser stores options it doesn't recognize here. See above.\n","sig":null,"attributes":[{"value":"/ The parser stores options it doesn't recognize here. See above.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13221315,"byte_end":13221382,"line_start":560,"line_end":560,"column_start":5,"column_end":72}},{"value":"prost(message, repeated, tag = \"999\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13221387,"byte_end":13221425,"line_start":561,"line_end":561,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1480},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13217536,"byte_end":13217541,"line_start":500,"line_end":500,"column_start":9,"column_end":14},"name":"ctype","qualname":"<FieldOptions>::ctype","value":"pub fn ctype(&Self) -> super::field_options::CType","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1482},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13217983,"byte_end":13217989,"line_start":507,"line_end":507,"column_start":9,"column_end":15},"name":"packed","qualname":"<FieldOptions>::packed","value":"pub fn packed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1483},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13221115,"byte_end":13221125,"line_start":556,"line_end":556,"column_start":9,"column_end":19},"name":"deprecated","qualname":"<FieldOptions>::deprecated","value":"pub fn deprecated(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1484},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13220772,"byte_end":13220776,"line_start":550,"line_end":550,"column_start":9,"column_end":13},"name":"lazy","qualname":"<FieldOptions>::lazy","value":"pub fn lazy(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1485},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13218845,"byte_end":13218851,"line_start":520,"line_end":520,"column_start":9,"column_end":15},"name":"jstype","qualname":"<FieldOptions>::jstype","value":"pub fn jstype(&Self) -> super::field_options::JsType","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1487},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13221276,"byte_end":13221280,"line_start":559,"line_end":559,"column_start":9,"column_end":13},"name":"weak","qualname":"<FieldOptions>::weak","value":"pub fn weak(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":30},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13221504,"byte_end":13221517,"line_start":564,"line_end":564,"column_start":9,"column_end":22},"name":"field_options","qualname":"::field_options","value":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","parent":null,"children":[{"krate":0,"index":1495},{"krate":0,"index":1505},{"krate":0,"index":1507},{"krate":0,"index":1508},{"krate":0,"index":1510},{"krate":0,"index":1511},{"krate":0,"index":1513},{"krate":0,"index":1514},{"krate":0,"index":1516},{"krate":0,"index":1519},{"krate":0,"index":1521},{"krate":0,"index":1523},{"krate":0,"index":1532},{"krate":0,"index":1542},{"krate":0,"index":1544},{"krate":0,"index":1545},{"krate":0,"index":1547},{"krate":0,"index":1548},{"krate":0,"index":1550},{"krate":0,"index":1551},{"krate":0,"index":1553},{"krate":0,"index":1556},{"krate":0,"index":1558},{"krate":0,"index":1560}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1496},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13221686,"byte_end":13221692,"line_start":569,"line_end":569,"column_start":9,"column_end":15},"name":"String","qualname":"::field_options::CType::String","value":"CType::String","parent":{"krate":0,"index":1495},"children":[],"decl_id":null,"docs":" Default mode.\n","sig":null,"attributes":[{"value":"/ Default mode.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13221660,"byte_end":13221677,"line_start":568,"line_end":568,"column_start":9,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1499},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13221706,"byte_end":13221710,"line_start":570,"line_end":570,"column_start":9,"column_end":13},"name":"Cord","qualname":"::field_options::CType::Cord","value":"CType::Cord","parent":{"krate":0,"index":1495},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1502},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13221724,"byte_end":13221735,"line_start":571,"line_end":571,"column_start":9,"column_end":20},"name":"StringPiece","qualname":"::field_options::CType::StringPiece","value":"CType::StringPiece","parent":{"krate":0,"index":1495},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1495},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13221644,"byte_end":13221649,"line_start":567,"line_end":567,"column_start":14,"column_end":19},"name":"CType","qualname":"::field_options::CType","value":"pub enum CType { String = , Cord = , StringPiece = , }","parent":null,"children":[{"krate":0,"index":1496},{"krate":0,"index":1499},{"krate":0,"index":1502}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(i32)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13221618,"byte_end":13221630,"line_start":566,"line_end":566,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1533},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13221922,"byte_end":13221930,"line_start":577,"line_end":577,"column_start":9,"column_end":17},"name":"JsNormal","qualname":"::field_options::JsType::JsNormal","value":"JsType::JsNormal","parent":{"krate":0,"index":1532},"children":[],"decl_id":null,"docs":" Use the default type.\n","sig":null,"attributes":[{"value":"/ Use the default type.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13221888,"byte_end":13221913,"line_start":576,"line_end":576,"column_start":9,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1536},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13221980,"byte_end":13221988,"line_start":579,"line_end":579,"column_start":9,"column_end":17},"name":"JsString","qualname":"::field_options::JsType::JsString","value":"JsType::JsString","parent":{"krate":0,"index":1532},"children":[],"decl_id":null,"docs":" Use JavaScript strings.\n","sig":null,"attributes":[{"value":"/ Use JavaScript strings.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13221944,"byte_end":13221971,"line_start":578,"line_end":578,"column_start":9,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1539},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13222038,"byte_end":13222046,"line_start":581,"line_end":581,"column_start":9,"column_end":17},"name":"JsNumber","qualname":"::field_options::JsType::JsNumber","value":"JsType::JsNumber","parent":{"krate":0,"index":1532},"children":[],"decl_id":null,"docs":" Use JavaScript numbers.\n","sig":null,"attributes":[{"value":"/ Use JavaScript numbers.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13222002,"byte_end":13222029,"line_start":580,"line_end":580,"column_start":9,"column_end":36}}]},{"kind":"Enum","id":{"krate":0,"index":1532},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13221871,"byte_end":13221877,"line_start":575,"line_end":575,"column_start":14,"column_end":20},"name":"JsType","qualname":"::field_options::JsType","value":"pub enum JsType { JsNormal = , JsString = , JsNumber = , }","parent":null,"children":[{"krate":0,"index":1533},{"krate":0,"index":1536},{"krate":0,"index":1539}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(i32)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13221845,"byte_end":13221857,"line_start":574,"line_end":574,"column_start":5,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":1569},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13222117,"byte_end":13222129,"line_start":585,"line_end":585,"column_start":12,"column_end":24},"name":"OneofOptions","qualname":"::OneofOptions","value":"OneofOptions { uninterpreted_option }","parent":null,"children":[{"krate":0,"index":1593}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1593},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13222255,"byte_end":13222275,"line_start":588,"line_end":588,"column_start":9,"column_end":29},"name":"uninterpreted_option","qualname":"::OneofOptions::uninterpreted_option","value":"std::vec::Vec<UninterpretedOption>","parent":{"krate":0,"index":1569},"children":[],"decl_id":null,"docs":" The parser stores options it doesn't recognize here. See above.\n","sig":null,"attributes":[{"value":"/ The parser stores options it doesn't recognize here. See above.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13222136,"byte_end":13222203,"line_start":586,"line_end":586,"column_start":5,"column_end":72}},{"value":"prost(message, repeated, tag = \"999\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13222208,"byte_end":13222246,"line_start":587,"line_end":587,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":1594},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13222374,"byte_end":13222385,"line_start":591,"line_end":591,"column_start":12,"column_end":23},"name":"EnumOptions","qualname":"::EnumOptions","value":"EnumOptions { allow_alias, deprecated, uninterpreted_option }","parent":null,"children":[{"krate":0,"index":1643},{"krate":0,"index":1644},{"krate":0,"index":1645}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1643},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13222530,"byte_end":13222541,"line_start":595,"line_end":595,"column_start":9,"column_end":20},"name":"allow_alias","qualname":"::EnumOptions::allow_alias","value":"std::option::Option<bool>","parent":{"krate":0,"index":1594},"children":[],"decl_id":null,"docs":" Set this option to true to allow mapping different tag names to the same\n value.\n","sig":null,"attributes":[{"value":"/ Set this option to true to allow mapping different tag names to the same","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13222392,"byte_end":13222468,"line_start":592,"line_end":592,"column_start":5,"column_end":81}},{"value":"/ value.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13222473,"byte_end":13222483,"line_start":593,"line_end":593,"column_start":5,"column_end":15}},{"value":"prost(bool, optional, tag = \"2\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13222488,"byte_end":13222521,"line_start":594,"line_end":594,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":1644},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13222877,"byte_end":13222887,"line_start":601,"line_end":601,"column_start":9,"column_end":19},"name":"deprecated","qualname":"::EnumOptions::deprecated","value":"std::option::Option<bool>","parent":{"krate":0,"index":1594},"children":[],"decl_id":null,"docs":" Is this enum deprecated?\n Depending on the target platform, this can emit Deprecated annotations\n for the enum, or it will be completely ignored; in the very least, this\n is a formalization for deprecating enums.\n","sig":null,"attributes":[{"value":"/ Is this enum deprecated?","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13222576,"byte_end":13222604,"line_start":596,"line_end":596,"column_start":5,"column_end":33}},{"value":"/ Depending on the target platform, this can emit Deprecated annotations","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13222609,"byte_end":13222683,"line_start":597,"line_end":597,"column_start":5,"column_end":79}},{"value":"/ for the enum, or it will be completely ignored; in the very least, this","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13222688,"byte_end":13222763,"line_start":598,"line_end":598,"column_start":5,"column_end":80}},{"value":"/ is a formalization for deprecating enums.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13222768,"byte_end":13222813,"line_start":599,"line_end":599,"column_start":5,"column_end":50}},{"value":"prost(bool, optional, tag = \"3\", default = \"false\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13222818,"byte_end":13222868,"line_start":600,"line_end":600,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":1645},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13223041,"byte_end":13223061,"line_start":604,"line_end":604,"column_start":9,"column_end":29},"name":"uninterpreted_option","qualname":"::EnumOptions::uninterpreted_option","value":"std::vec::Vec<UninterpretedOption>","parent":{"krate":0,"index":1594},"children":[],"decl_id":null,"docs":" The parser stores options it doesn't recognize here. See above.\n","sig":null,"attributes":[{"value":"/ The parser stores options it doesn't recognize here. See above.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13222922,"byte_end":13222989,"line_start":602,"line_end":602,"column_start":5,"column_end":72}},{"value":"prost(message, repeated, tag = \"999\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13222994,"byte_end":13223032,"line_start":603,"line_end":603,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1641},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13222530,"byte_end":13222541,"line_start":595,"line_end":595,"column_start":9,"column_end":20},"name":"allow_alias","qualname":"<EnumOptions>::allow_alias","value":"pub fn allow_alias(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1642},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13222877,"byte_end":13222887,"line_start":601,"line_end":601,"column_start":9,"column_end":19},"name":"deprecated","qualname":"<EnumOptions>::deprecated","value":"pub fn deprecated(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1646},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13223160,"byte_end":13223176,"line_start":607,"line_end":607,"column_start":12,"column_end":28},"name":"EnumValueOptions","qualname":"::EnumValueOptions","value":"EnumValueOptions { deprecated, uninterpreted_option }","parent":null,"children":[{"krate":0,"index":1683},{"krate":0,"index":1684}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1683},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13223502,"byte_end":13223512,"line_start":613,"line_end":613,"column_start":9,"column_end":19},"name":"deprecated","qualname":"::EnumValueOptions::deprecated","value":"std::option::Option<bool>","parent":{"krate":0,"index":1646},"children":[],"decl_id":null,"docs":" Is this enum value deprecated?\n Depending on the target platform, this can emit Deprecated annotations\n for the enum value, or it will be completely ignored; in the very least,\n this is a formalization for deprecating enum values.\n","sig":null,"attributes":[{"value":"/ Is this enum value deprecated?","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13223183,"byte_end":13223217,"line_start":608,"line_end":608,"column_start":5,"column_end":39}},{"value":"/ Depending on the target platform, this can emit Deprecated annotations","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13223222,"byte_end":13223296,"line_start":609,"line_end":609,"column_start":5,"column_end":79}},{"value":"/ for the enum value, or it will be completely ignored; in the very least,","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13223301,"byte_end":13223377,"line_start":610,"line_end":610,"column_start":5,"column_end":81}},{"value":"/ this is a formalization for deprecating enum values.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13223382,"byte_end":13223438,"line_start":611,"line_end":611,"column_start":5,"column_end":61}},{"value":"prost(bool, optional, tag = \"1\", default = \"false\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13223443,"byte_end":13223493,"line_start":612,"line_end":612,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":1684},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13223666,"byte_end":13223686,"line_start":616,"line_end":616,"column_start":9,"column_end":29},"name":"uninterpreted_option","qualname":"::EnumValueOptions::uninterpreted_option","value":"std::vec::Vec<UninterpretedOption>","parent":{"krate":0,"index":1646},"children":[],"decl_id":null,"docs":" The parser stores options it doesn't recognize here. See above.\n","sig":null,"attributes":[{"value":"/ The parser stores options it doesn't recognize here. See above.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13223547,"byte_end":13223614,"line_start":614,"line_end":614,"column_start":5,"column_end":72}},{"value":"prost(message, repeated, tag = \"999\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13223619,"byte_end":13223657,"line_start":615,"line_end":615,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1682},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13223502,"byte_end":13223512,"line_start":613,"line_end":613,"column_start":9,"column_end":19},"name":"deprecated","qualname":"<EnumValueOptions>::deprecated","value":"pub fn deprecated(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1685},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13223785,"byte_end":13223799,"line_start":619,"line_end":619,"column_start":12,"column_end":26},"name":"ServiceOptions","qualname":"::ServiceOptions","value":"ServiceOptions { deprecated, uninterpreted_option }","parent":null,"children":[{"krate":0,"index":1722},{"krate":0,"index":1723}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1722},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13224374,"byte_end":13224384,"line_start":630,"line_end":630,"column_start":9,"column_end":19},"name":"deprecated","qualname":"::ServiceOptions::deprecated","value":"std::option::Option<bool>","parent":{"krate":0,"index":1685},"children":[],"decl_id":null,"docs":" Is this service deprecated?\n Depending on the target platform, this can emit Deprecated annotations\n for the service, or it will be completely ignored; in the very least,\n this is a formalization for deprecating services.\n","sig":null,"attributes":[{"value":"/ Is this service deprecated?","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13224063,"byte_end":13224094,"line_start":625,"line_end":625,"column_start":5,"column_end":36}},{"value":"/ Depending on the target platform, this can emit Deprecated annotations","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13224099,"byte_end":13224173,"line_start":626,"line_end":626,"column_start":5,"column_end":79}},{"value":"/ for the service, or it will be completely ignored; in the very least,","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13224178,"byte_end":13224251,"line_start":627,"line_end":627,"column_start":5,"column_end":78}},{"value":"/ this is a formalization for deprecating services.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13224256,"byte_end":13224309,"line_start":628,"line_end":628,"column_start":5,"column_end":58}},{"value":"prost(bool, optional, tag = \"33\", default = \"false\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13224314,"byte_end":13224365,"line_start":629,"line_end":629,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":1723},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13224538,"byte_end":13224558,"line_start":633,"line_end":633,"column_start":9,"column_end":29},"name":"uninterpreted_option","qualname":"::ServiceOptions::uninterpreted_option","value":"std::vec::Vec<UninterpretedOption>","parent":{"krate":0,"index":1685},"children":[],"decl_id":null,"docs":" The parser stores options it doesn't recognize here. See above.\n","sig":null,"attributes":[{"value":"/ The parser stores options it doesn't recognize here. See above.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13224419,"byte_end":13224486,"line_start":631,"line_end":631,"column_start":5,"column_end":72}},{"value":"prost(message, repeated, tag = \"999\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13224491,"byte_end":13224529,"line_start":632,"line_end":632,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1721},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13224374,"byte_end":13224384,"line_start":630,"line_end":630,"column_start":9,"column_end":19},"name":"deprecated","qualname":"<ServiceOptions>::deprecated","value":"pub fn deprecated(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1724},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13224657,"byte_end":13224670,"line_start":636,"line_end":636,"column_start":12,"column_end":25},"name":"MethodOptions","qualname":"::MethodOptions","value":"MethodOptions { deprecated, idempotency_level, uninterpreted_option }","parent":null,"children":[{"krate":0,"index":1779},{"krate":0,"index":1780},{"krate":0,"index":1781}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1779},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13225242,"byte_end":13225252,"line_start":647,"line_end":647,"column_start":9,"column_end":19},"name":"deprecated","qualname":"::MethodOptions::deprecated","value":"std::option::Option<bool>","parent":{"krate":0,"index":1724},"children":[],"decl_id":null,"docs":" Is this method deprecated?\n Depending on the target platform, this can emit Deprecated annotations\n for the method, or it will be completely ignored; in the very least,\n this is a formalization for deprecating methods.\n","sig":null,"attributes":[{"value":"/ Is this method deprecated?","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13224934,"byte_end":13224964,"line_start":642,"line_end":642,"column_start":5,"column_end":35}},{"value":"/ Depending on the target platform, this can emit Deprecated annotations","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13224969,"byte_end":13225043,"line_start":643,"line_end":643,"column_start":5,"column_end":79}},{"value":"/ for the method, or it will be completely ignored; in the very least,","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13225048,"byte_end":13225120,"line_start":644,"line_end":644,"column_start":5,"column_end":77}},{"value":"/ this is a formalization for deprecating methods.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13225125,"byte_end":13225177,"line_start":645,"line_end":645,"column_start":5,"column_end":57}},{"value":"prost(bool, optional, tag = \"33\", default = \"false\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13225182,"byte_end":13225233,"line_start":646,"line_end":646,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":1780},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13225402,"byte_end":13225419,"line_start":649,"line_end":649,"column_start":9,"column_end":26},"name":"idempotency_level","qualname":"::MethodOptions::idempotency_level","value":"std::option::Option<i32>","parent":{"krate":0,"index":1724},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(enumeration = \"method_options::IdempotencyLevel\", optional, tag =\n        \"34\", default = \"IdempotencyUnknown\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13225287,"byte_end":13225393,"line_start":648,"line_end":648,"column_start":5,"column_end":111}}]},{"kind":"Field","id":{"krate":0,"index":1781},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13225572,"byte_end":13225592,"line_start":652,"line_end":652,"column_start":9,"column_end":29},"name":"uninterpreted_option","qualname":"::MethodOptions::uninterpreted_option","value":"std::vec::Vec<UninterpretedOption>","parent":{"krate":0,"index":1724},"children":[],"decl_id":null,"docs":" The parser stores options it doesn't recognize here. See above.\n","sig":null,"attributes":[{"value":"/ The parser stores options it doesn't recognize here. See above.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13225453,"byte_end":13225520,"line_start":650,"line_end":650,"column_start":5,"column_end":72}},{"value":"prost(message, repeated, tag = \"999\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13225525,"byte_end":13225563,"line_start":651,"line_end":651,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1776},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13225242,"byte_end":13225252,"line_start":647,"line_end":647,"column_start":9,"column_end":19},"name":"deprecated","qualname":"<MethodOptions>::deprecated","value":"pub fn deprecated(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1777},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13225402,"byte_end":13225419,"line_start":649,"line_end":649,"column_start":9,"column_end":26},"name":"idempotency_level","qualname":"<MethodOptions>::idempotency_level","value":"pub fn idempotency_level(&Self) -> super::method_options::IdempotencyLevel","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":31},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13225642,"byte_end":13225656,"line_start":654,"line_end":654,"column_start":9,"column_end":23},"name":"method_options","qualname":"::method_options","value":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","parent":null,"children":[{"krate":0,"index":1782},{"krate":0,"index":1792},{"krate":0,"index":1794},{"krate":0,"index":1795},{"krate":0,"index":1797},{"krate":0,"index":1798},{"krate":0,"index":1800},{"krate":0,"index":1801},{"krate":0,"index":1803},{"krate":0,"index":1806},{"krate":0,"index":1808},{"krate":0,"index":1810}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1783},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13226054,"byte_end":13226072,"line_start":661,"line_end":661,"column_start":9,"column_end":27},"name":"IdempotencyUnknown","qualname":"::method_options::IdempotencyLevel::IdempotencyUnknown","value":"IdempotencyLevel::IdempotencyUnknown","parent":{"krate":0,"index":1782},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1786},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13226117,"byte_end":13226130,"line_start":663,"line_end":663,"column_start":9,"column_end":22},"name":"NoSideEffects","qualname":"::method_options::IdempotencyLevel::NoSideEffects","value":"IdempotencyLevel::NoSideEffects","parent":{"krate":0,"index":1782},"children":[],"decl_id":null,"docs":" implies idempotent\n","sig":null,"attributes":[{"value":"/ implies idempotent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13226086,"byte_end":13226108,"line_start":662,"line_end":662,"column_start":9,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1789},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13226194,"byte_end":13226204,"line_start":665,"line_end":665,"column_start":9,"column_end":19},"name":"Idempotent","qualname":"::method_options::IdempotencyLevel::Idempotent","value":"IdempotencyLevel::Idempotent","parent":{"krate":0,"index":1782},"children":[],"decl_id":null,"docs":" idempotent, but may have side effects\n","sig":null,"attributes":[{"value":"/ idempotent, but may have side effects","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13226144,"byte_end":13226185,"line_start":664,"line_end":664,"column_start":9,"column_end":50}}]},{"kind":"Enum","id":{"krate":0,"index":1782},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13226027,"byte_end":13226043,"line_start":660,"line_end":660,"column_start":14,"column_end":30},"name":"IdempotencyLevel","qualname":"::method_options::IdempotencyLevel","value":"pub enum IdempotencyLevel {\n    IdempotencyUnknown = ,\n    NoSideEffects = ,\n    Idempotent = ,\n}","parent":null,"children":[{"krate":0,"index":1783},{"krate":0,"index":1786},{"krate":0,"index":1789}],"decl_id":null,"docs":" Is this method side-effect-free (or safe in HTTP parlance), or idempotent,\n or neither? HTTP based RPC implementation may choose GET verb for safe\n methods, and PUT verb for idempotent methods instead of the default POST.\n","sig":null,"attributes":[{"value":"/ Is this method side-effect-free (or safe in HTTP parlance), or idempotent,","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13225663,"byte_end":13225741,"line_start":655,"line_end":655,"column_start":5,"column_end":83}},{"value":"/ or neither? HTTP based RPC implementation may choose GET verb for safe","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13225746,"byte_end":13225820,"line_start":656,"line_end":656,"column_start":5,"column_end":79}},{"value":"/ methods, and PUT verb for idempotent methods instead of the default POST.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13225825,"byte_end":13225902,"line_start":657,"line_end":657,"column_start":5,"column_end":82}},{"value":"repr(i32)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13226001,"byte_end":13226013,"line_start":659,"line_end":659,"column_start":5,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":1819},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13226673,"byte_end":13226692,"line_start":675,"line_end":675,"column_start":12,"column_end":31},"name":"UninterpretedOption","qualname":"::UninterpretedOption","value":"UninterpretedOption { name, identifier_value, positive_int_value, negative_int_value, double_value, string_value, aggregate_value }","parent":null,"children":[{"krate":0,"index":1916},{"krate":0,"index":1917},{"krate":0,"index":1918},{"krate":0,"index":1919},{"krate":0,"index":1920},{"krate":0,"index":1921},{"krate":0,"index":1922}],"decl_id":null,"docs":" A message representing a option the parser does not recognize. This only\n appears in options protos created by the compiler::Parser class.\n DescriptorPool resolves these when building Descriptor objects. Therefore,\n options protos in descriptor objects (e.g. returned by Descriptor::options(),\n or produced by Descriptor::CopyTo()) will never have UninterpretedOptions\n in them.\n","sig":null,"attributes":[{"value":"/ A message representing a option the parser does not recognize. This only","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13226218,"byte_end":13226294,"line_start":668,"line_end":668,"column_start":1,"column_end":77}},{"value":"/ appears in options protos created by the compiler::Parser class.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13226295,"byte_end":13226363,"line_start":669,"line_end":669,"column_start":1,"column_end":69}},{"value":"/ DescriptorPool resolves these when building Descriptor objects. Therefore,","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13226364,"byte_end":13226442,"line_start":670,"line_end":670,"column_start":1,"column_end":79}},{"value":"/ options protos in descriptor objects (e.g. returned by Descriptor::options(),","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13226443,"byte_end":13226524,"line_start":671,"line_end":671,"column_start":1,"column_end":82}},{"value":"/ or produced by Descriptor::CopyTo()) will never have UninterpretedOptions","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13226525,"byte_end":13226602,"line_start":672,"line_end":672,"column_start":1,"column_end":78}},{"value":"/ in them.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13226603,"byte_end":13226615,"line_start":673,"line_end":673,"column_start":1,"column_end":13}}]},{"kind":"Field","id":{"krate":0,"index":1916},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13226744,"byte_end":13226748,"line_start":677,"line_end":677,"column_start":9,"column_end":13},"name":"name","qualname":"::UninterpretedOption::name","value":"std::vec::Vec<uninterpreted_option::NamePart>","parent":{"krate":0,"index":1819},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, repeated, tag = \"2\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13226699,"byte_end":13226735,"line_start":676,"line_end":676,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":1917},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13227002,"byte_end":13227018,"line_start":681,"line_end":681,"column_start":9,"column_end":25},"name":"identifier_value","qualname":"::UninterpretedOption::identifier_value","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1819},"children":[],"decl_id":null,"docs":" The value of the uninterpreted option, in whatever type the tokenizer\n identified it as during parsing. Exactly one of these should be set.\n","sig":null,"attributes":[{"value":"/ The value of the uninterpreted option, in whatever type the tokenizer","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13226803,"byte_end":13226876,"line_start":678,"line_end":678,"column_start":5,"column_end":78}},{"value":"/ identified it as during parsing. Exactly one of these should be set.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13226881,"byte_end":13226953,"line_start":679,"line_end":679,"column_start":5,"column_end":77}},{"value":"prost(string, optional, tag = \"3\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13226958,"byte_end":13226993,"line_start":680,"line_end":680,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1918},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13227112,"byte_end":13227130,"line_start":683,"line_end":683,"column_start":9,"column_end":27},"name":"positive_int_value","qualname":"::UninterpretedOption::positive_int_value","value":"std::option::Option<u64>","parent":{"krate":0,"index":1819},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(uint64, optional, tag = \"4\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13227068,"byte_end":13227103,"line_start":682,"line_end":682,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1919},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13227207,"byte_end":13227225,"line_start":685,"line_end":685,"column_start":9,"column_end":27},"name":"negative_int_value","qualname":"::UninterpretedOption::negative_int_value","value":"std::option::Option<i64>","parent":{"krate":0,"index":1819},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(int64, optional, tag = \"5\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13227164,"byte_end":13227198,"line_start":684,"line_end":684,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":1920},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13227303,"byte_end":13227315,"line_start":687,"line_end":687,"column_start":9,"column_end":21},"name":"double_value","qualname":"::UninterpretedOption::double_value","value":"std::option::Option<f64>","parent":{"krate":0,"index":1819},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(double, optional, tag = \"6\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13227259,"byte_end":13227294,"line_start":686,"line_end":686,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1921},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13227392,"byte_end":13227404,"line_start":689,"line_end":689,"column_start":9,"column_end":21},"name":"string_value","qualname":"::UninterpretedOption::string_value","value":"std::option::Option<std::vec::Vec<u8>>","parent":{"krate":0,"index":1819},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(bytes, optional, tag = \"7\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13227349,"byte_end":13227383,"line_start":688,"line_end":688,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":1922},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13227496,"byte_end":13227511,"line_start":691,"line_end":691,"column_start":9,"column_end":24},"name":"aggregate_value","qualname":"::UninterpretedOption::aggregate_value","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1819},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(string, optional, tag = \"8\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13227452,"byte_end":13227487,"line_start":690,"line_end":690,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1910},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13227002,"byte_end":13227018,"line_start":681,"line_end":681,"column_start":9,"column_end":25},"name":"identifier_value","qualname":"<UninterpretedOption>::identifier_value","value":"pub fn identifier_value(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1911},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13227112,"byte_end":13227130,"line_start":683,"line_end":683,"column_start":9,"column_end":27},"name":"positive_int_value","qualname":"<UninterpretedOption>::positive_int_value","value":"pub fn positive_int_value(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1912},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13227207,"byte_end":13227225,"line_start":685,"line_end":685,"column_start":9,"column_end":27},"name":"negative_int_value","qualname":"<UninterpretedOption>::negative_int_value","value":"pub fn negative_int_value(&Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1913},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13227303,"byte_end":13227315,"line_start":687,"line_end":687,"column_start":9,"column_end":21},"name":"double_value","qualname":"<UninterpretedOption>::double_value","value":"pub fn double_value(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1914},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13227392,"byte_end":13227404,"line_start":689,"line_end":689,"column_start":9,"column_end":21},"name":"string_value","qualname":"<UninterpretedOption>::string_value","value":"pub fn string_value(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1915},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13227496,"byte_end":13227511,"line_start":691,"line_end":691,"column_start":9,"column_end":24},"name":"aggregate_value","qualname":"<UninterpretedOption>::aggregate_value","value":"pub fn aggregate_value(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":32},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13227567,"byte_end":13227587,"line_start":693,"line_end":693,"column_start":9,"column_end":29},"name":"uninterpreted_option","qualname":"::uninterpreted_option","value":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","parent":null,"children":[{"krate":0,"index":1923},{"krate":0,"index":1924},{"krate":0,"index":1926},{"krate":0,"index":1927},{"krate":0,"index":1930}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1923},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13228004,"byte_end":13228012,"line_start":700,"line_end":700,"column_start":16,"column_end":24},"name":"NamePart","qualname":"::uninterpreted_option::NamePart","value":"NamePart { name_part, is_extension }","parent":null,"children":[{"krate":0,"index":1952},{"krate":0,"index":1953}],"decl_id":null,"docs":" The name of the uninterpreted option.  Each string represents a segment in\n a dot-separated name.  is_extension is true iff a segment represents an\n extension (denoted with parentheses in options specs in .proto files).\n E.g.,{ [\"foo\", false], [\"bar.baz\", true], [\"qux\", false] } represents\n \"foo.(bar.baz).qux\".\n","sig":null,"attributes":[{"value":"/ The name of the uninterpreted option.  Each string represents a segment in","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13227594,"byte_end":13227672,"line_start":694,"line_end":694,"column_start":5,"column_end":83}},{"value":"/ a dot-separated name.  is_extension is true iff a segment represents an","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13227677,"byte_end":13227752,"line_start":695,"line_end":695,"column_start":5,"column_end":80}},{"value":"/ extension (denoted with parentheses in options specs in .proto files).","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13227757,"byte_end":13227831,"line_start":696,"line_end":696,"column_start":5,"column_end":79}},{"value":"/ E.g.,{ [\"foo\", false], [\"bar.baz\", true], [\"qux\", false] } represents","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13227836,"byte_end":13227909,"line_start":697,"line_end":697,"column_start":5,"column_end":78}},{"value":"/ \"foo.(bar.baz).qux\".","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13227914,"byte_end":13227938,"line_start":698,"line_end":698,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":1952},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13228071,"byte_end":13228080,"line_start":702,"line_end":702,"column_start":13,"column_end":22},"name":"name_part","qualname":"::uninterpreted_option::NamePart::name_part","value":"std::string::String","parent":{"krate":0,"index":1923},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(string, required, tag = \"1\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13228023,"byte_end":13228058,"line_start":701,"line_end":701,"column_start":9,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":1953},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13228157,"byte_end":13228169,"line_start":704,"line_end":704,"column_start":13,"column_end":25},"name":"is_extension","qualname":"::uninterpreted_option::NamePart::is_extension","value":"bool","parent":{"krate":0,"index":1923},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(bool, required, tag = \"2\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13228111,"byte_end":13228144,"line_start":703,"line_end":703,"column_start":9,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":1954},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13228455,"byte_end":13228469,"line_start":713,"line_end":713,"column_start":12,"column_end":26},"name":"SourceCodeInfo","qualname":"::SourceCodeInfo","value":"SourceCodeInfo { location }","parent":null,"children":[{"krate":0,"index":1978}],"decl_id":null,"docs":" Encapsulates information about the original source file from which a\n FileDescriptorProto was generated.\n","sig":null,"attributes":[{"value":"/ Encapsulates information about the original source file from which a","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13228286,"byte_end":13228358,"line_start":710,"line_end":710,"column_start":1,"column_end":73}},{"value":"/ FileDescriptorProto was generated.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13228359,"byte_end":13228397,"line_start":711,"line_end":711,"column_start":1,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":1978},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13230985,"byte_end":13230993,"line_start":758,"line_end":758,"column_start":9,"column_end":17},"name":"location","qualname":"::SourceCodeInfo::location","value":"std::vec::Vec<source_code_info::Location>","parent":{"krate":0,"index":1954},"children":[],"decl_id":null,"docs":" A Location identifies a piece of source code in a .proto file which\n corresponds to a particular definition.  This information is intended\n to be useful to IDEs, code indexers, documentation generators, and similar\n tools.","sig":null,"attributes":[{"value":"/ A Location identifies a piece of source code in a .proto file which","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13228476,"byte_end":13228547,"line_start":714,"line_end":714,"column_start":5,"column_end":76}},{"value":"/ corresponds to a particular definition.  This information is intended","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13228552,"byte_end":13228625,"line_start":715,"line_end":715,"column_start":5,"column_end":78}},{"value":"/ to be useful to IDEs, code indexers, documentation generators, and similar","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13228630,"byte_end":13228708,"line_start":716,"line_end":716,"column_start":5,"column_end":83}},{"value":"/ tools.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13228713,"byte_end":13228723,"line_start":717,"line_end":717,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13228728,"byte_end":13228731,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ For example, say we have a file like:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13228736,"byte_end":13228777,"line_start":719,"line_end":719,"column_start":5,"column_end":46}},{"value":"/   message Foo {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13228782,"byte_end":13228801,"line_start":720,"line_end":720,"column_start":5,"column_end":24}},{"value":"/     optional string foo = 1;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13228806,"byte_end":13228838,"line_start":721,"line_end":721,"column_start":5,"column_end":37}},{"value":"/   }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13228843,"byte_end":13228850,"line_start":722,"line_end":722,"column_start":5,"column_end":12}},{"value":"/ Let's look at just the field definition:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13228855,"byte_end":13228899,"line_start":723,"line_end":723,"column_start":5,"column_end":49}},{"value":"/   optional string foo = 1;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13228904,"byte_end":13228934,"line_start":724,"line_end":724,"column_start":5,"column_end":35}},{"value":"/   ^       ^^     ^^  ^  ^^^","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13228939,"byte_end":13228970,"line_start":725,"line_end":725,"column_start":5,"column_end":36}},{"value":"/   a       bc     de  f  ghi","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13228975,"byte_end":13229006,"line_start":726,"line_end":726,"column_start":5,"column_end":36}},{"value":"/ We have the following locations:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13229011,"byte_end":13229047,"line_start":727,"line_end":727,"column_start":5,"column_end":41}},{"value":"/   span   path               represents","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13229052,"byte_end":13229094,"line_start":728,"line_end":728,"column_start":5,"column_end":47}},{"value":"/   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13229099,"byte_end":13229158,"line_start":729,"line_end":729,"column_start":5,"column_end":64}},{"value":"/   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13229163,"byte_end":13229216,"line_start":730,"line_end":730,"column_start":5,"column_end":58}},{"value":"/   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13229221,"byte_end":13229271,"line_start":731,"line_end":731,"column_start":5,"column_end":55}},{"value":"/   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13229276,"byte_end":13229323,"line_start":732,"line_end":732,"column_start":5,"column_end":52}},{"value":"/   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13229328,"byte_end":13229375,"line_start":733,"line_end":733,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13229380,"byte_end":13229383,"line_start":734,"line_end":734,"column_start":5,"column_end":8}},{"value":"/ Notes:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13229388,"byte_end":13229398,"line_start":735,"line_end":735,"column_start":5,"column_end":15}},{"value":"/ - A location may refer to a repeated field itself (i.e. not to any","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13229403,"byte_end":13229473,"line_start":736,"line_end":736,"column_start":5,"column_end":75}},{"value":"/   particular index within it).  This is used whenever a set of elements are","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13229478,"byte_end":13229557,"line_start":737,"line_end":737,"column_start":5,"column_end":84}},{"value":"/   logically enclosed in a single code segment.  For example, an entire","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13229562,"byte_end":13229636,"line_start":738,"line_end":738,"column_start":5,"column_end":79}},{"value":"/   extend block (possibly containing multiple extension definitions) will","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13229641,"byte_end":13229717,"line_start":739,"line_end":739,"column_start":5,"column_end":81}},{"value":"/   have an outer location whose path refers to the \"extensions\" repeated","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13229722,"byte_end":13229797,"line_start":740,"line_end":740,"column_start":5,"column_end":80}},{"value":"/   field without an index.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13229802,"byte_end":13229831,"line_start":741,"line_end":741,"column_start":5,"column_end":34}},{"value":"/ - Multiple locations may have the same path.  This happens when a single","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13229836,"byte_end":13229912,"line_start":742,"line_end":742,"column_start":5,"column_end":81}},{"value":"/   logical declaration is spread out across multiple places.  The most","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13229917,"byte_end":13229990,"line_start":743,"line_end":743,"column_start":5,"column_end":78}},{"value":"/   obvious example is the \"extend\" block again -- there may be multiple","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13229995,"byte_end":13230069,"line_start":744,"line_end":744,"column_start":5,"column_end":79}},{"value":"/   extend blocks in the same scope, each of which will have the same path.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13230074,"byte_end":13230151,"line_start":745,"line_end":745,"column_start":5,"column_end":82}},{"value":"/ - A location's span is not always a subset of its parent's span.  For","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13230156,"byte_end":13230229,"line_start":746,"line_end":746,"column_start":5,"column_end":78}},{"value":"/   example, the \"extendee\" of an extension declaration appears at the","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13230234,"byte_end":13230306,"line_start":747,"line_end":747,"column_start":5,"column_end":77}},{"value":"/   beginning of the \"extend\" block and is shared by all extensions within","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13230311,"byte_end":13230387,"line_start":748,"line_end":748,"column_start":5,"column_end":81}},{"value":"/   the block.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13230392,"byte_end":13230408,"line_start":749,"line_end":749,"column_start":5,"column_end":21}},{"value":"/ - Just because a location's span is a subset of some other location's span","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13230413,"byte_end":13230491,"line_start":750,"line_end":750,"column_start":5,"column_end":83}},{"value":"/   does not mean that it is a descendent.  For example, a \"group\" defines","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13230496,"byte_end":13230572,"line_start":751,"line_end":751,"column_start":5,"column_end":81}},{"value":"/   both a type and a field in a single declaration.  Thus, the locations","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13230577,"byte_end":13230652,"line_start":752,"line_end":752,"column_start":5,"column_end":80}},{"value":"/   corresponding to the type and field and their components will overlap.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13230657,"byte_end":13230733,"line_start":753,"line_end":753,"column_start":5,"column_end":81}},{"value":"/ - Code which tries to interpret locations should probably be designed to","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13230738,"byte_end":13230814,"line_start":754,"line_end":754,"column_start":5,"column_end":81}},{"value":"/   ignore those that it doesn't understand, as more types of locations could","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13230819,"byte_end":13230898,"line_start":755,"line_end":755,"column_start":5,"column_end":84}},{"value":"/   be recorded in the future.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13230903,"byte_end":13230935,"line_start":756,"line_end":756,"column_start":5,"column_end":37}},{"value":"prost(message, repeated, tag = \"1\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13230940,"byte_end":13230976,"line_start":757,"line_end":757,"column_start":5,"column_end":41}}]},{"kind":"Mod","id":{"krate":0,"index":33},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13231050,"byte_end":13231066,"line_start":760,"line_end":760,"column_start":9,"column_end":25},"name":"source_code_info","qualname":"::source_code_info","value":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","parent":null,"children":[{"krate":0,"index":1979},{"krate":0,"index":1980},{"krate":0,"index":1982},{"krate":0,"index":1983},{"krate":0,"index":1986}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1979},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13231134,"byte_end":13231142,"line_start":762,"line_end":762,"column_start":16,"column_end":24},"name":"Location","qualname":"::source_code_info::Location","value":"Location { path, span, leading_comments, trailing_comments, leading_detached_comments }","parent":null,"children":[{"krate":0,"index":2057},{"krate":0,"index":2058},{"krate":0,"index":2059},{"krate":0,"index":2060},{"krate":0,"index":2061}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2057},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13232335,"byte_end":13232339,"line_start":787,"line_end":787,"column_start":13,"column_end":17},"name":"path","qualname":"::source_code_info::Location::path","value":"std::vec::Vec<i32>","parent":{"krate":0,"index":1979},"children":[],"decl_id":null,"docs":" Identifies which part of the FileDescriptorProto was defined at this\n location.","sig":null,"attributes":[{"value":"/ Identifies which part of the FileDescriptorProto was defined at this","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13231153,"byte_end":13231225,"line_start":763,"line_end":763,"column_start":9,"column_end":81}},{"value":"/ location.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13231234,"byte_end":13231247,"line_start":764,"line_end":764,"column_start":9,"column_end":22}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13231256,"byte_end":13231259,"line_start":765,"line_end":765,"column_start":9,"column_end":12}},{"value":"/ Each element is a field number or an index.  They form a path from","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13231268,"byte_end":13231338,"line_start":766,"line_end":766,"column_start":9,"column_end":79}},{"value":"/ the root FileDescriptorProto to the place where the definition.  For","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13231347,"byte_end":13231419,"line_start":767,"line_end":767,"column_start":9,"column_end":81}},{"value":"/ example, this path:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13231428,"byte_end":13231451,"line_start":768,"line_end":768,"column_start":9,"column_end":32}},{"value":"/   [ 4, 3, 2, 7, 1 ]","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13231460,"byte_end":13231483,"line_start":769,"line_end":769,"column_start":9,"column_end":32}},{"value":"/ refers to:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13231492,"byte_end":13231506,"line_start":770,"line_end":770,"column_start":9,"column_end":23}},{"value":"/   file.message_type(3)  // 4, 3","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13231515,"byte_end":13231550,"line_start":771,"line_end":771,"column_start":9,"column_end":44}},{"value":"/       .field(7)         // 2, 7","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13231559,"byte_end":13231594,"line_start":772,"line_end":772,"column_start":9,"column_end":44}},{"value":"/       .name()           // 1","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13231603,"byte_end":13231635,"line_start":773,"line_end":773,"column_start":9,"column_end":41}},{"value":"/ This is because FileDescriptorProto.message_type has field number 4:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13231644,"byte_end":13231716,"line_start":774,"line_end":774,"column_start":9,"column_end":81}},{"value":"/   repeated DescriptorProto message_type = 4;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13231725,"byte_end":13231773,"line_start":775,"line_end":775,"column_start":9,"column_end":57}},{"value":"/ and DescriptorProto.field has field number 2:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13231782,"byte_end":13231831,"line_start":776,"line_end":776,"column_start":9,"column_end":58}},{"value":"/   repeated FieldDescriptorProto field = 2;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13231840,"byte_end":13231886,"line_start":777,"line_end":777,"column_start":9,"column_end":55}},{"value":"/ and FieldDescriptorProto.name has field number 1:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13231895,"byte_end":13231948,"line_start":778,"line_end":778,"column_start":9,"column_end":62}},{"value":"/   optional string name = 1;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13231957,"byte_end":13231988,"line_start":779,"line_end":779,"column_start":9,"column_end":40}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13231997,"byte_end":13232000,"line_start":780,"line_end":780,"column_start":9,"column_end":12}},{"value":"/ Thus, the above path gives the location of a field name.  If we removed","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13232009,"byte_end":13232084,"line_start":781,"line_end":781,"column_start":9,"column_end":84}},{"value":"/ the last element:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13232093,"byte_end":13232114,"line_start":782,"line_end":782,"column_start":9,"column_end":30}},{"value":"/   [ 4, 3, 2, 7 ]","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13232123,"byte_end":13232143,"line_start":783,"line_end":783,"column_start":9,"column_end":29}},{"value":"/ this path refers to the whole field declaration (from the beginning","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13232152,"byte_end":13232223,"line_start":784,"line_end":784,"column_start":9,"column_end":80}},{"value":"/ of the label to the terminating semicolon).","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13232232,"byte_end":13232279,"line_start":785,"line_end":785,"column_start":9,"column_end":56}},{"value":"prost(int32, repeated, tag = \"1\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13232288,"byte_end":13232322,"line_start":786,"line_end":786,"column_start":9,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":2058},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13232794,"byte_end":13232798,"line_start":794,"line_end":794,"column_start":13,"column_end":17},"name":"span","qualname":"::source_code_info::Location::span","value":"std::vec::Vec<i32>","parent":{"krate":0,"index":1979},"children":[],"decl_id":null,"docs":" Always has exactly three or four elements: start line, start column,\n end line (optional, otherwise assumed same as start line), end column.\n These are packed into a single field for efficiency.  Note that line\n and column numbers are zero-based -- typically you will want to add\n 1 to each before displaying to a user.\n","sig":null,"attributes":[{"value":"/ Always has exactly three or four elements: start line, start column,","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13232371,"byte_end":13232443,"line_start":788,"line_end":788,"column_start":9,"column_end":81}},{"value":"/ end line (optional, otherwise assumed same as start line), end column.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13232452,"byte_end":13232526,"line_start":789,"line_end":789,"column_start":9,"column_end":83}},{"value":"/ These are packed into a single field for efficiency.  Note that line","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13232535,"byte_end":13232607,"line_start":790,"line_end":790,"column_start":9,"column_end":81}},{"value":"/ and column numbers are zero-based -- typically you will want to add","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13232616,"byte_end":13232687,"line_start":791,"line_end":791,"column_start":9,"column_end":80}},{"value":"/ 1 to each before displaying to a user.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13232696,"byte_end":13232738,"line_start":792,"line_end":792,"column_start":9,"column_end":51}},{"value":"prost(int32, repeated, tag = \"2\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13232747,"byte_end":13232781,"line_start":793,"line_end":793,"column_start":9,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":2059},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13234951,"byte_end":13234967,"line_start":843,"line_end":843,"column_start":13,"column_end":29},"name":"leading_comments","qualname":"::source_code_info::Location::leading_comments","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1979},"children":[],"decl_id":null,"docs":" If this SourceCodeInfo represents a complete declaration, these are any\n comments appearing before and after the declaration which appear to be\n attached to the declaration.","sig":null,"attributes":[{"value":"/ If this SourceCodeInfo represents a complete declaration, these are any","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13232830,"byte_end":13232905,"line_start":795,"line_end":795,"column_start":9,"column_end":84}},{"value":"/ comments appearing before and after the declaration which appear to be","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13232914,"byte_end":13232988,"line_start":796,"line_end":796,"column_start":9,"column_end":83}},{"value":"/ attached to the declaration.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13232997,"byte_end":13233029,"line_start":797,"line_end":797,"column_start":9,"column_end":41}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13233038,"byte_end":13233041,"line_start":798,"line_end":798,"column_start":9,"column_end":12}},{"value":"/ A series of line comments appearing on consecutive lines, with no other","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13233050,"byte_end":13233125,"line_start":799,"line_end":799,"column_start":9,"column_end":84}},{"value":"/ tokens appearing on those lines, will be treated as a single comment.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13233134,"byte_end":13233207,"line_start":800,"line_end":800,"column_start":9,"column_end":82}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13233216,"byte_end":13233219,"line_start":801,"line_end":801,"column_start":9,"column_end":12}},{"value":"/ leading_detached_comments will keep paragraphs of comments that appear","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13233228,"byte_end":13233302,"line_start":802,"line_end":802,"column_start":9,"column_end":83}},{"value":"/ before (but not connected to) the current element. Each paragraph,","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13233311,"byte_end":13233381,"line_start":803,"line_end":803,"column_start":9,"column_end":79}},{"value":"/ separated by empty lines, will be one comment element in the repeated","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13233390,"byte_end":13233463,"line_start":804,"line_end":804,"column_start":9,"column_end":82}},{"value":"/ field.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13233472,"byte_end":13233482,"line_start":805,"line_end":805,"column_start":9,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13233491,"byte_end":13233494,"line_start":806,"line_end":806,"column_start":9,"column_end":12}},{"value":"/ Only the comment content is provided; comment markers (e.g. //) are","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13233503,"byte_end":13233574,"line_start":807,"line_end":807,"column_start":9,"column_end":80}},{"value":"/ stripped out.  For block comments, leading whitespace and an asterisk","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13233583,"byte_end":13233656,"line_start":808,"line_end":808,"column_start":9,"column_end":82}},{"value":"/ will be stripped from the beginning of each line other than the first.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13233665,"byte_end":13233739,"line_start":809,"line_end":809,"column_start":9,"column_end":83}},{"value":"/ Newlines are included in the output.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13233748,"byte_end":13233788,"line_start":810,"line_end":810,"column_start":9,"column_end":49}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13233797,"byte_end":13233800,"line_start":811,"line_end":811,"column_start":9,"column_end":12}},{"value":"/ Examples:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13233809,"byte_end":13233822,"line_start":812,"line_end":812,"column_start":9,"column_end":22}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13233831,"byte_end":13233834,"line_start":813,"line_end":813,"column_start":9,"column_end":12}},{"value":"/   optional int32 foo = 1;  // Comment attached to foo.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13233843,"byte_end":13233901,"line_start":814,"line_end":814,"column_start":9,"column_end":67}},{"value":"/   // Comment attached to bar.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13233910,"byte_end":13233943,"line_start":815,"line_end":815,"column_start":9,"column_end":42}},{"value":"/   optional int32 bar = 2;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13233952,"byte_end":13233981,"line_start":816,"line_end":816,"column_start":9,"column_end":38}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13233990,"byte_end":13233993,"line_start":817,"line_end":817,"column_start":9,"column_end":12}},{"value":"/   optional string baz = 3;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13234002,"byte_end":13234032,"line_start":818,"line_end":818,"column_start":9,"column_end":39}},{"value":"/   // Comment attached to baz.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13234041,"byte_end":13234074,"line_start":819,"line_end":819,"column_start":9,"column_end":42}},{"value":"/   // Another line attached to baz.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13234083,"byte_end":13234121,"line_start":820,"line_end":820,"column_start":9,"column_end":47}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13234130,"byte_end":13234133,"line_start":821,"line_end":821,"column_start":9,"column_end":12}},{"value":"/   // Comment attached to qux.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13234142,"byte_end":13234175,"line_start":822,"line_end":822,"column_start":9,"column_end":42}},{"value":"/   //","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13234184,"byte_end":13234192,"line_start":823,"line_end":823,"column_start":9,"column_end":17}},{"value":"/   // Another line attached to qux.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13234201,"byte_end":13234239,"line_start":824,"line_end":824,"column_start":9,"column_end":47}},{"value":"/   optional double qux = 4;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13234248,"byte_end":13234278,"line_start":825,"line_end":825,"column_start":9,"column_end":39}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13234287,"byte_end":13234290,"line_start":826,"line_end":826,"column_start":9,"column_end":12}},{"value":"/   // Detached comment for corge. This is not leading or trailing comments","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13234299,"byte_end":13234376,"line_start":827,"line_end":827,"column_start":9,"column_end":86}},{"value":"/   // to qux or corge because there are blank lines separating it from","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13234385,"byte_end":13234458,"line_start":828,"line_end":828,"column_start":9,"column_end":82}},{"value":"/   // both.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13234467,"byte_end":13234481,"line_start":829,"line_end":829,"column_start":9,"column_end":23}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13234490,"byte_end":13234493,"line_start":830,"line_end":830,"column_start":9,"column_end":12}},{"value":"/   // Detached comment for corge paragraph 2.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13234502,"byte_end":13234550,"line_start":831,"line_end":831,"column_start":9,"column_end":57}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13234559,"byte_end":13234562,"line_start":832,"line_end":832,"column_start":9,"column_end":12}},{"value":"/   optional string corge = 5;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13234571,"byte_end":13234603,"line_start":833,"line_end":833,"column_start":9,"column_end":41}},{"value":"/   /* Block comment attached","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13234612,"byte_end":13234643,"line_start":834,"line_end":834,"column_start":9,"column_end":40}},{"value":"/    * to corge.  Leading asterisks","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13234652,"byte_end":13234689,"line_start":835,"line_end":835,"column_start":9,"column_end":46}},{"value":"/    * will be removed. */","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13234698,"byte_end":13234726,"line_start":836,"line_end":836,"column_start":9,"column_end":37}},{"value":"/   /* Block comment attached to","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13234735,"byte_end":13234769,"line_start":837,"line_end":837,"column_start":9,"column_end":43}},{"value":"/    * grault. */","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13234778,"byte_end":13234797,"line_start":838,"line_end":838,"column_start":9,"column_end":28}},{"value":"/   optional int32 grault = 6;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13234806,"byte_end":13234838,"line_start":839,"line_end":839,"column_start":9,"column_end":41}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13234847,"byte_end":13234850,"line_start":840,"line_end":840,"column_start":9,"column_end":12}},{"value":"/   // ignored detached comments.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13234859,"byte_end":13234894,"line_start":841,"line_end":841,"column_start":9,"column_end":44}},{"value":"prost(string, optional, tag = \"3\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13234903,"byte_end":13234938,"line_start":842,"line_end":842,"column_start":9,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":2060},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13235069,"byte_end":13235086,"line_start":845,"line_end":845,"column_start":13,"column_end":30},"name":"trailing_comments","qualname":"::source_code_info::Location::trailing_comments","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1979},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(string, optional, tag = \"4\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13235021,"byte_end":13235056,"line_start":844,"line_end":844,"column_start":9,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":2061},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13235188,"byte_end":13235213,"line_start":847,"line_end":847,"column_start":13,"column_end":38},"name":"leading_detached_comments","qualname":"::source_code_info::Location::leading_detached_comments","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":1979},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(string, repeated, tag = \"6\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13235140,"byte_end":13235175,"line_start":846,"line_end":846,"column_start":9,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2055},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13234951,"byte_end":13234967,"line_start":843,"line_end":843,"column_start":13,"column_end":29},"name":"leading_comments","qualname":"<Location>::leading_comments","value":"pub fn leading_comments(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2056},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13235069,"byte_end":13235086,"line_start":845,"line_end":845,"column_start":13,"column_end":30},"name":"trailing_comments","qualname":"<Location>::trailing_comments","value":"pub fn trailing_comments(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2062},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13235550,"byte_end":13235567,"line_start":854,"line_end":854,"column_start":12,"column_end":29},"name":"GeneratedCodeInfo","qualname":"::GeneratedCodeInfo","value":"GeneratedCodeInfo { annotation }","parent":null,"children":[{"krate":0,"index":2086}],"decl_id":null,"docs":" Describes the relationship between generated code and its original source\n file. A GeneratedCodeInfo message is associated with only one generated\n source file, but may contain references to different source .proto files.\n","sig":null,"attributes":[{"value":"/ Describes the relationship between generated code and its original source","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13235261,"byte_end":13235338,"line_start":850,"line_end":850,"column_start":1,"column_end":78}},{"value":"/ file. A GeneratedCodeInfo message is associated with only one generated","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13235339,"byte_end":13235414,"line_start":851,"line_end":851,"column_start":1,"column_end":76}},{"value":"/ source file, but may contain references to different source .proto files.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13235415,"byte_end":13235492,"line_start":852,"line_end":852,"column_start":1,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":2086},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13235739,"byte_end":13235749,"line_start":858,"line_end":858,"column_start":9,"column_end":19},"name":"annotation","qualname":"::GeneratedCodeInfo::annotation","value":"std::vec::Vec<generated_code_info::Annotation>","parent":{"krate":0,"index":2062},"children":[],"decl_id":null,"docs":" An Annotation connects some span of text in generated code to an element\n of its generating .proto file.\n","sig":null,"attributes":[{"value":"/ An Annotation connects some span of text in generated code to an element","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13235574,"byte_end":13235650,"line_start":855,"line_end":855,"column_start":5,"column_end":81}},{"value":"/ of its generating .proto file.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13235655,"byte_end":13235689,"line_start":856,"line_end":856,"column_start":5,"column_end":39}},{"value":"prost(message, repeated, tag = \"1\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13235694,"byte_end":13235730,"line_start":857,"line_end":857,"column_start":5,"column_end":41}}]},{"kind":"Mod","id":{"krate":0,"index":34},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13235811,"byte_end":13235830,"line_start":860,"line_end":860,"column_start":9,"column_end":28},"name":"generated_code_info","qualname":"::generated_code_info","value":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","parent":null,"children":[{"krate":0,"index":2087},{"krate":0,"index":2088},{"krate":0,"index":2090},{"krate":0,"index":2091},{"krate":0,"index":2094}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2087},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13235898,"byte_end":13235908,"line_start":862,"line_end":862,"column_start":16,"column_end":26},"name":"Annotation","qualname":"::generated_code_info::Annotation","value":"Annotation { path, source_file, begin, end }","parent":null,"children":[{"krate":0,"index":2157},{"krate":0,"index":2158},{"krate":0,"index":2159},{"krate":0,"index":2160}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2157},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13236115,"byte_end":13236119,"line_start":866,"line_end":866,"column_start":13,"column_end":17},"name":"path","qualname":"::generated_code_info::Annotation::path","value":"std::vec::Vec<i32>","parent":{"krate":0,"index":2087},"children":[],"decl_id":null,"docs":" Identifies the element in the original source .proto file. This field\n is formatted the same as SourceCodeInfo.Location.path.\n","sig":null,"attributes":[{"value":"/ Identifies the element in the original source .proto file. This field","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13235919,"byte_end":13235992,"line_start":863,"line_end":863,"column_start":9,"column_end":82}},{"value":"/ is formatted the same as SourceCodeInfo.Location.path.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13236001,"byte_end":13236059,"line_start":864,"line_end":864,"column_start":9,"column_end":67}},{"value":"prost(int32, repeated, tag = \"1\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13236068,"byte_end":13236102,"line_start":865,"line_end":865,"column_start":9,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":2158},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13236273,"byte_end":13236284,"line_start":869,"line_end":869,"column_start":13,"column_end":24},"name":"source_file","qualname":"::generated_code_info::Annotation::source_file","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":2087},"children":[],"decl_id":null,"docs":" Identifies the filesystem path to the original source .proto.\n","sig":null,"attributes":[{"value":"/ Identifies the filesystem path to the original source .proto.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13236151,"byte_end":13236216,"line_start":867,"line_end":867,"column_start":9,"column_end":74}},{"value":"prost(string, optional, tag = \"2\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13236225,"byte_end":13236260,"line_start":868,"line_end":868,"column_start":9,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":2159},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13236510,"byte_end":13236515,"line_start":873,"line_end":873,"column_start":13,"column_end":18},"name":"begin","qualname":"::generated_code_info::Annotation::begin","value":"std::option::Option<i32>","parent":{"krate":0,"index":2087},"children":[],"decl_id":null,"docs":" Identifies the starting offset in bytes in the generated code\n that relates to the identified object.\n","sig":null,"attributes":[{"value":"/ Identifies the starting offset in bytes in the generated code","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13236338,"byte_end":13236403,"line_start":870,"line_end":870,"column_start":9,"column_end":74}},{"value":"/ that relates to the identified object.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13236412,"byte_end":13236454,"line_start":871,"line_end":871,"column_start":9,"column_end":51}},{"value":"prost(int32, optional, tag = \"3\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13236463,"byte_end":13236497,"line_start":872,"line_end":872,"column_start":9,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":2160},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13236835,"byte_end":13236838,"line_start":878,"line_end":878,"column_start":13,"column_end":16},"name":"end","qualname":"::generated_code_info::Annotation::end","value":"std::option::Option<i32>","parent":{"krate":0,"index":2087},"children":[],"decl_id":null,"docs":" Identifies the ending offset in bytes in the generated code that\n relates to the identified offset. The end offset should be one past\n the last relevant byte (so the length of the text = end - begin).\n","sig":null,"attributes":[{"value":"/ Identifies the ending offset in bytes in the generated code that","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13236553,"byte_end":13236621,"line_start":874,"line_end":874,"column_start":9,"column_end":77}},{"value":"/ relates to the identified offset. The end offset should be one past","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13236630,"byte_end":13236701,"line_start":875,"line_end":875,"column_start":9,"column_end":80}},{"value":"/ the last relevant byte (so the length of the text = end - begin).","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13236710,"byte_end":13236779,"line_start":876,"line_end":876,"column_start":9,"column_end":78}},{"value":"prost(int32, optional, tag = \"4\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13236788,"byte_end":13236822,"line_start":877,"line_end":877,"column_start":9,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2154},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13236273,"byte_end":13236284,"line_start":869,"line_end":869,"column_start":13,"column_end":24},"name":"source_file","qualname":"<Annotation>::source_file","value":"pub fn source_file(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2155},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13236510,"byte_end":13236515,"line_start":873,"line_end":873,"column_start":13,"column_end":18},"name":"begin","qualname":"<Annotation>::begin","value":"pub fn begin(&Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2156},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13236835,"byte_end":13236838,"line_start":878,"line_end":878,"column_start":13,"column_end":16},"name":"end","qualname":"<Annotation>::end","value":"pub fn end(&Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2161},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13239307,"byte_end":13239310,"line_start":962,"line_end":962,"column_start":12,"column_end":15},"name":"Any","qualname":"::Any","value":"Any { type_url, value }","parent":null,"children":[{"krate":0,"index":2190},{"krate":0,"index":2191}],"decl_id":null,"docs":" `Any` contains an arbitrary serialized protocol buffer message along with a\n URL that describes the type of the serialized message.","sig":null,"attributes":[{"value":"/ `Any` contains an arbitrary serialized protocol buffer message along with a","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13236876,"byte_end":13236955,"line_start":881,"line_end":881,"column_start":1,"column_end":80}},{"value":"/ URL that describes the type of the serialized message.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13236956,"byte_end":13237014,"line_start":882,"line_end":882,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13237015,"byte_end":13237018,"line_start":883,"line_end":883,"column_start":1,"column_end":4}},{"value":"/ Protobuf library provides support to pack/unpack Any values in the form","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13237019,"byte_end":13237094,"line_start":884,"line_end":884,"column_start":1,"column_end":76}},{"value":"/ of utility functions or additional generated methods of the Any type.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13237095,"byte_end":13237168,"line_start":885,"line_end":885,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13237169,"byte_end":13237172,"line_start":886,"line_end":886,"column_start":1,"column_end":4}},{"value":"/ Example 1: Pack and unpack a message in C++.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13237173,"byte_end":13237221,"line_start":887,"line_end":887,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13237222,"byte_end":13237225,"line_start":888,"line_end":888,"column_start":1,"column_end":4}},{"value":"/     Foo foo = ...;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13237226,"byte_end":13237248,"line_start":889,"line_end":889,"column_start":1,"column_end":23}},{"value":"/     Any any;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13237249,"byte_end":13237265,"line_start":890,"line_end":890,"column_start":1,"column_end":17}},{"value":"/     any.PackFrom(foo);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13237266,"byte_end":13237292,"line_start":891,"line_end":891,"column_start":1,"column_end":27}},{"value":"/     ...","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13237293,"byte_end":13237304,"line_start":892,"line_end":892,"column_start":1,"column_end":12}},{"value":"/     if (any.UnpackTo(&foo)) {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13237305,"byte_end":13237338,"line_start":893,"line_end":893,"column_start":1,"column_end":34}},{"value":"/       ...","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13237339,"byte_end":13237352,"line_start":894,"line_end":894,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13237353,"byte_end":13237362,"line_start":895,"line_end":895,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13237363,"byte_end":13237366,"line_start":896,"line_end":896,"column_start":1,"column_end":4}},{"value":"/ Example 2: Pack and unpack a message in Java.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13237367,"byte_end":13237416,"line_start":897,"line_end":897,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13237417,"byte_end":13237420,"line_start":898,"line_end":898,"column_start":1,"column_end":4}},{"value":"/     Foo foo = ...;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13237421,"byte_end":13237443,"line_start":899,"line_end":899,"column_start":1,"column_end":23}},{"value":"/     Any any = Any.pack(foo);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13237444,"byte_end":13237476,"line_start":900,"line_end":900,"column_start":1,"column_end":33}},{"value":"/     ...","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13237477,"byte_end":13237488,"line_start":901,"line_end":901,"column_start":1,"column_end":12}},{"value":"/     if (any.is(Foo.class)) {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13237489,"byte_end":13237521,"line_start":902,"line_end":902,"column_start":1,"column_end":33}},{"value":"/       foo = any.unpack(Foo.class);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13237522,"byte_end":13237560,"line_start":903,"line_end":903,"column_start":1,"column_end":39}},{"value":"/     }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13237561,"byte_end":13237570,"line_start":904,"line_end":904,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13237571,"byte_end":13237574,"line_start":905,"line_end":905,"column_start":1,"column_end":4}},{"value":"/  Example 3: Pack and unpack a message in Python.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13237575,"byte_end":13237627,"line_start":906,"line_end":906,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13237628,"byte_end":13237631,"line_start":907,"line_end":907,"column_start":1,"column_end":4}},{"value":"/     foo = Foo(...)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13237632,"byte_end":13237654,"line_start":908,"line_end":908,"column_start":1,"column_end":23}},{"value":"/     any = Any()","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13237655,"byte_end":13237674,"line_start":909,"line_end":909,"column_start":1,"column_end":20}},{"value":"/     any.Pack(foo)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13237675,"byte_end":13237696,"line_start":910,"line_end":910,"column_start":1,"column_end":22}},{"value":"/     ...","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13237697,"byte_end":13237708,"line_start":911,"line_end":911,"column_start":1,"column_end":12}},{"value":"/     if any.Is(Foo.DESCRIPTOR):","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13237709,"byte_end":13237743,"line_start":912,"line_end":912,"column_start":1,"column_end":35}},{"value":"/       any.Unpack(foo)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13237744,"byte_end":13237769,"line_start":913,"line_end":913,"column_start":1,"column_end":26}},{"value":"/       ...","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13237770,"byte_end":13237783,"line_start":914,"line_end":914,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13237784,"byte_end":13237787,"line_start":915,"line_end":915,"column_start":1,"column_end":4}},{"value":"/  Example 4: Pack and unpack a message in Go","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13237788,"byte_end":13237835,"line_start":916,"line_end":916,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13237836,"byte_end":13237839,"line_start":917,"line_end":917,"column_start":1,"column_end":4}},{"value":"/      foo := &pb.Foo{...}","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13237840,"byte_end":13237868,"line_start":918,"line_end":918,"column_start":1,"column_end":29}},{"value":"/      any, err := ptypes.MarshalAny(foo)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13237869,"byte_end":13237912,"line_start":919,"line_end":919,"column_start":1,"column_end":44}},{"value":"/      ...","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13237913,"byte_end":13237925,"line_start":920,"line_end":920,"column_start":1,"column_end":13}},{"value":"/      foo := &pb.Foo{}","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13237926,"byte_end":13237951,"line_start":921,"line_end":921,"column_start":1,"column_end":26}},{"value":"/      if err := ptypes.UnmarshalAny(any, foo); err != nil {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13237952,"byte_end":13238014,"line_start":922,"line_end":922,"column_start":1,"column_end":63}},{"value":"/        ...","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13238015,"byte_end":13238029,"line_start":923,"line_end":923,"column_start":1,"column_end":15}},{"value":"/      }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13238030,"byte_end":13238040,"line_start":924,"line_end":924,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13238041,"byte_end":13238044,"line_start":925,"line_end":925,"column_start":1,"column_end":4}},{"value":"/ The pack methods provided by protobuf library will by default use","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13238045,"byte_end":13238114,"line_start":926,"line_end":926,"column_start":1,"column_end":70}},{"value":"/ 'type.googleapis.com/full.type.name' as the type URL and the unpack","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13238115,"byte_end":13238186,"line_start":927,"line_end":927,"column_start":1,"column_end":72}},{"value":"/ methods only use the fully qualified type name after the last '/'","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13238187,"byte_end":13238256,"line_start":928,"line_end":928,"column_start":1,"column_end":70}},{"value":"/ in the type URL, for example \"foo.bar.com/x/y.z\" will yield type","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13238257,"byte_end":13238325,"line_start":929,"line_end":929,"column_start":1,"column_end":69}},{"value":"/ name \"y.z\".","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13238326,"byte_end":13238341,"line_start":930,"line_end":930,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13238342,"byte_end":13238345,"line_start":931,"line_end":931,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13238346,"byte_end":13238349,"line_start":932,"line_end":932,"column_start":1,"column_end":4}},{"value":"/ JSON","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13238350,"byte_end":13238358,"line_start":933,"line_end":933,"column_start":1,"column_end":9}},{"value":"/ ====","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13238359,"byte_end":13238367,"line_start":934,"line_end":934,"column_start":1,"column_end":9}},{"value":"/ The JSON representation of an `Any` value uses the regular","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13238368,"byte_end":13238430,"line_start":935,"line_end":935,"column_start":1,"column_end":63}},{"value":"/ representation of the deserialized, embedded message, with an","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13238431,"byte_end":13238496,"line_start":936,"line_end":936,"column_start":1,"column_end":66}},{"value":"/ additional field `@type` which contains the type URL. Example:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13238497,"byte_end":13238563,"line_start":937,"line_end":937,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13238564,"byte_end":13238567,"line_start":938,"line_end":938,"column_start":1,"column_end":4}},{"value":"/     package google.profile;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13238568,"byte_end":13238599,"line_start":939,"line_end":939,"column_start":1,"column_end":32}},{"value":"/     message Person {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13238600,"byte_end":13238624,"line_start":940,"line_end":940,"column_start":1,"column_end":25}},{"value":"/       string first_name = 1;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13238625,"byte_end":13238657,"line_start":941,"line_end":941,"column_start":1,"column_end":33}},{"value":"/       string last_name = 2;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13238658,"byte_end":13238689,"line_start":942,"line_end":942,"column_start":1,"column_end":32}},{"value":"/     }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13238690,"byte_end":13238699,"line_start":943,"line_end":943,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13238700,"byte_end":13238703,"line_start":944,"line_end":944,"column_start":1,"column_end":4}},{"value":"/     {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13238704,"byte_end":13238713,"line_start":945,"line_end":945,"column_start":1,"column_end":10}},{"value":"/       \"@type\": \"type.googleapis.com/google.profile.Person\",","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13238714,"byte_end":13238777,"line_start":946,"line_end":946,"column_start":1,"column_end":64}},{"value":"/       \"firstName\": <string>,","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13238778,"byte_end":13238810,"line_start":947,"line_end":947,"column_start":1,"column_end":33}},{"value":"/       \"lastName\": <string>","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13238811,"byte_end":13238841,"line_start":948,"line_end":948,"column_start":1,"column_end":31}},{"value":"/     }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13238842,"byte_end":13238851,"line_start":949,"line_end":949,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13238852,"byte_end":13238855,"line_start":950,"line_end":950,"column_start":1,"column_end":4}},{"value":"/ If the embedded message type is well-known and has a custom JSON","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13238856,"byte_end":13238924,"line_start":951,"line_end":951,"column_start":1,"column_end":69}},{"value":"/ representation, that representation will be embedded adding a field","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13238925,"byte_end":13238996,"line_start":952,"line_end":952,"column_start":1,"column_end":72}},{"value":"/ `value` which holds the custom JSON in addition to the `@type`","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13238997,"byte_end":13239063,"line_start":953,"line_end":953,"column_start":1,"column_end":67}},{"value":"/ field. Example (for message [google.protobuf.Duration][]):","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13239064,"byte_end":13239126,"line_start":954,"line_end":954,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13239127,"byte_end":13239130,"line_start":955,"line_end":955,"column_start":1,"column_end":4}},{"value":"/     {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13239131,"byte_end":13239140,"line_start":956,"line_end":956,"column_start":1,"column_end":10}},{"value":"/       \"@type\": \"type.googleapis.com/google.protobuf.Duration\",","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13239141,"byte_end":13239207,"line_start":957,"line_end":957,"column_start":1,"column_end":67}},{"value":"/       \"value\": \"1.212s\"","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13239208,"byte_end":13239235,"line_start":958,"line_end":958,"column_start":1,"column_end":28}},{"value":"/     }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13239236,"byte_end":13239245,"line_start":959,"line_end":959,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13239246,"byte_end":13239249,"line_start":960,"line_end":960,"column_start":1,"column_end":4}}]},{"kind":"Field","id":{"krate":0,"index":2190},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13240838,"byte_end":13240846,"line_start":991,"line_end":991,"column_start":9,"column_end":17},"name":"type_url","qualname":"::Any::type_url","value":"std::string::String","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" A URL/resource name that uniquely identifies the type of the serialized\n protocol buffer message. The last segment of the URL's path must represent\n the fully qualified name of the type (as in\n `path/google.protobuf.Duration`). The name should be in a canonical form\n (e.g., leading \".\" is not accepted).","sig":null,"attributes":[{"value":"/ A URL/resource name that uniquely identifies the type of the serialized","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13239317,"byte_end":13239392,"line_start":963,"line_end":963,"column_start":5,"column_end":80}},{"value":"/ protocol buffer message. The last segment of the URL's path must represent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13239397,"byte_end":13239475,"line_start":964,"line_end":964,"column_start":5,"column_end":83}},{"value":"/ the fully qualified name of the type (as in","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13239480,"byte_end":13239527,"line_start":965,"line_end":965,"column_start":5,"column_end":52}},{"value":"/ `path/google.protobuf.Duration`). The name should be in a canonical form","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13239532,"byte_end":13239608,"line_start":966,"line_end":966,"column_start":5,"column_end":81}},{"value":"/ (e.g., leading \".\" is not accepted).","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13239613,"byte_end":13239653,"line_start":967,"line_end":967,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13239658,"byte_end":13239661,"line_start":968,"line_end":968,"column_start":5,"column_end":8}},{"value":"/ In practice, teams usually precompile into the binary all types that they","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13239666,"byte_end":13239743,"line_start":969,"line_end":969,"column_start":5,"column_end":82}},{"value":"/ expect it to use in the context of Any. However, for URLs which use the","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13239748,"byte_end":13239823,"line_start":970,"line_end":970,"column_start":5,"column_end":80}},{"value":"/ scheme `http`, `https`, or no scheme, one can optionally set up a type","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13239828,"byte_end":13239902,"line_start":971,"line_end":971,"column_start":5,"column_end":79}},{"value":"/ server that maps type URLs to message definitions as follows:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13239907,"byte_end":13239972,"line_start":972,"line_end":972,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13239977,"byte_end":13239980,"line_start":973,"line_end":973,"column_start":5,"column_end":8}},{"value":"/ * If no scheme is provided, `https` is assumed.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13239985,"byte_end":13240036,"line_start":974,"line_end":974,"column_start":5,"column_end":56}},{"value":"/ * An HTTP GET on the URL must yield a [google.protobuf.Type][]","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13240041,"byte_end":13240107,"line_start":975,"line_end":975,"column_start":5,"column_end":71}},{"value":"/   value in binary format, or produce an error.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13240112,"byte_end":13240162,"line_start":976,"line_end":976,"column_start":5,"column_end":55}},{"value":"/ * Applications are allowed to cache lookup results based on the","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13240167,"byte_end":13240234,"line_start":977,"line_end":977,"column_start":5,"column_end":72}},{"value":"/   URL, or have them precompiled into a binary to avoid any","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13240239,"byte_end":13240301,"line_start":978,"line_end":978,"column_start":5,"column_end":67}},{"value":"/   lookup. Therefore, binary compatibility needs to be preserved","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13240306,"byte_end":13240373,"line_start":979,"line_end":979,"column_start":5,"column_end":72}},{"value":"/   on changes to types. (Use versioned type names to manage","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13240378,"byte_end":13240440,"line_start":980,"line_end":980,"column_start":5,"column_end":67}},{"value":"/   breaking changes.)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13240445,"byte_end":13240469,"line_start":981,"line_end":981,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13240474,"byte_end":13240477,"line_start":982,"line_end":982,"column_start":5,"column_end":8}},{"value":"/ Note: this functionality is not currently available in the official","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13240482,"byte_end":13240553,"line_start":983,"line_end":983,"column_start":5,"column_end":76}},{"value":"/ protobuf release, and it is not used for type URLs beginning with","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13240558,"byte_end":13240627,"line_start":984,"line_end":984,"column_start":5,"column_end":74}},{"value":"/ type.googleapis.com.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13240632,"byte_end":13240656,"line_start":985,"line_end":985,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13240661,"byte_end":13240664,"line_start":986,"line_end":986,"column_start":5,"column_end":8}},{"value":"/ Schemes other than `http`, `https` (or the empty scheme) might be","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13240669,"byte_end":13240738,"line_start":987,"line_end":987,"column_start":5,"column_end":74}},{"value":"/ used with implementation specific semantics.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13240743,"byte_end":13240791,"line_start":988,"line_end":988,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13240796,"byte_end":13240799,"line_start":989,"line_end":989,"column_start":5,"column_end":8}},{"value":"prost(string, tag = \"1\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13240804,"byte_end":13240829,"line_start":990,"line_end":990,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":2191},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13240986,"byte_end":13240991,"line_start":994,"line_end":994,"column_start":9,"column_end":14},"name":"value","qualname":"::Any::value","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Must be a valid serialized protocol buffer of the above specified type.\n","sig":null,"attributes":[{"value":"/ Must be a valid serialized protocol buffer of the above specified type.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13240873,"byte_end":13240948,"line_start":992,"line_end":992,"column_start":5,"column_end":80}},{"value":"prost(bytes, tag = \"2\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13240953,"byte_end":13240977,"line_start":993,"line_end":993,"column_start":5,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":2192},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13241196,"byte_end":13241209,"line_start":999,"line_end":999,"column_start":12,"column_end":25},"name":"SourceContext","qualname":"::SourceContext","value":"SourceContext { file_name }","parent":null,"children":[{"krate":0,"index":2218}],"decl_id":null,"docs":" `SourceContext` represents information about the source of a\n protobuf element, like the file in which it is defined.\n","sig":null,"attributes":[{"value":"/ `SourceContext` represents information about the source of a","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13241014,"byte_end":13241078,"line_start":996,"line_end":996,"column_start":1,"column_end":65}},{"value":"/ protobuf element, like the file in which it is defined.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13241079,"byte_end":13241138,"line_start":997,"line_end":997,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":2218},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13241413,"byte_end":13241422,"line_start":1003,"line_end":1003,"column_start":9,"column_end":18},"name":"file_name","qualname":"::SourceContext::file_name","value":"std::string::String","parent":{"krate":0,"index":2192},"children":[],"decl_id":null,"docs":" The path-qualified name of the .proto file that contained the associated\n protobuf element.  For example: `\"google/protobuf/source_context.proto\"`.\n","sig":null,"attributes":[{"value":"/ The path-qualified name of the .proto file that contained the associated","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13241216,"byte_end":13241292,"line_start":1000,"line_end":1000,"column_start":5,"column_end":81}},{"value":"/ protobuf element.  For example: `\"google/protobuf/source_context.proto\"`.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13241297,"byte_end":13241374,"line_start":1001,"line_end":1001,"column_start":5,"column_end":82}},{"value":"prost(string, tag = \"1\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13241379,"byte_end":13241404,"line_start":1002,"line_end":1002,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":2219},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13241540,"byte_end":13241544,"line_start":1007,"line_end":1007,"column_start":12,"column_end":16},"name":"Type","qualname":"::Type","value":"Type { name, fields, oneofs, options, source_context, syntax }","parent":null,"children":[{"krate":0,"index":2270},{"krate":0,"index":2271},{"krate":0,"index":2272},{"krate":0,"index":2273},{"krate":0,"index":2274},{"krate":0,"index":2275}],"decl_id":null,"docs":" A protocol buffer message type.\n","sig":null,"attributes":[{"value":"/ A protocol buffer message type.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13241447,"byte_end":13241482,"line_start":1005,"line_end":1005,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":2270},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13241627,"byte_end":13241631,"line_start":1010,"line_end":1010,"column_start":9,"column_end":13},"name":"name","qualname":"::Type::name","value":"std::string::String","parent":{"krate":0,"index":2219},"children":[],"decl_id":null,"docs":" The fully qualified message name.\n","sig":null,"attributes":[{"value":"/ The fully qualified message name.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13241551,"byte_end":13241588,"line_start":1008,"line_end":1008,"column_start":5,"column_end":42}},{"value":"prost(string, tag = \"1\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13241593,"byte_end":13241618,"line_start":1009,"line_end":1009,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":2271},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13241731,"byte_end":13241737,"line_start":1013,"line_end":1013,"column_start":9,"column_end":15},"name":"fields","qualname":"::Type::fields","value":"std::vec::Vec<Field>","parent":{"krate":0,"index":2219},"children":[],"decl_id":null,"docs":" The list of fields.\n","sig":null,"attributes":[{"value":"/ The list of fields.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13241658,"byte_end":13241681,"line_start":1011,"line_end":1011,"column_start":5,"column_end":28}},{"value":"prost(message, repeated, tag = \"2\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13241686,"byte_end":13241722,"line_start":1012,"line_end":1012,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":2272},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13241884,"byte_end":13241890,"line_start":1016,"line_end":1016,"column_start":9,"column_end":15},"name":"oneofs","qualname":"::Type::oneofs","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":2219},"children":[],"decl_id":null,"docs":" The list of types appearing in `oneof` definitions in this type.\n","sig":null,"attributes":[{"value":"/ The list of types appearing in `oneof` definitions in this type.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13241767,"byte_end":13241835,"line_start":1014,"line_end":1014,"column_start":5,"column_end":73}},{"value":"prost(string, repeated, tag = \"3\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13241840,"byte_end":13241875,"line_start":1015,"line_end":1015,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":2273},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13242016,"byte_end":13242023,"line_start":1019,"line_end":1019,"column_start":9,"column_end":16},"name":"options","qualname":"::Type::options","value":"std::vec::Vec<Option>","parent":{"krate":0,"index":2219},"children":[],"decl_id":null,"docs":" The protocol buffer options.\n","sig":null,"attributes":[{"value":"/ The protocol buffer options.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13241934,"byte_end":13241966,"line_start":1017,"line_end":1017,"column_start":5,"column_end":37}},{"value":"prost(message, repeated, tag = \"4\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13241971,"byte_end":13242007,"line_start":1018,"line_end":1018,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":2274},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13242127,"byte_end":13242141,"line_start":1022,"line_end":1022,"column_start":9,"column_end":23},"name":"source_context","qualname":"::Type::source_context","value":"std::option::Option<SourceContext>","parent":{"krate":0,"index":2219},"children":[],"decl_id":null,"docs":" The source context.\n","sig":null,"attributes":[{"value":"/ The source context.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13242054,"byte_end":13242077,"line_start":1020,"line_end":1020,"column_start":5,"column_end":28}},{"value":"prost(message, optional, tag = \"5\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13242082,"byte_end":13242118,"line_start":1021,"line_end":1021,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":2275},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13242260,"byte_end":13242266,"line_start":1025,"line_end":1025,"column_start":9,"column_end":15},"name":"syntax","qualname":"::Type::syntax","value":"i32","parent":{"krate":0,"index":2219},"children":[],"decl_id":null,"docs":" The source syntax.\n","sig":null,"attributes":[{"value":"/ The source syntax.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13242185,"byte_end":13242207,"line_start":1023,"line_end":1023,"column_start":5,"column_end":27}},{"value":"prost(enumeration = \"Syntax\", tag = \"6\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13242212,"byte_end":13242251,"line_start":1024,"line_end":1024,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2268},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13242260,"byte_end":13242266,"line_start":1025,"line_end":1025,"column_start":9,"column_end":15},"name":"syntax","qualname":"<Type>::syntax","value":"pub fn syntax(&Self) -> super::Syntax","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2276},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13242370,"byte_end":13242375,"line_start":1029,"line_end":1029,"column_start":12,"column_end":17},"name":"Field","qualname":"::Field","value":"Field { kind, cardinality, number, name, type_url, oneof_index, packed, options, json_name, default_value }","parent":null,"children":[{"krate":0,"index":2342},{"krate":0,"index":2343},{"krate":0,"index":2344},{"krate":0,"index":2345},{"krate":0,"index":2346},{"krate":0,"index":2347},{"krate":0,"index":2348},{"krate":0,"index":2349},{"krate":0,"index":2350},{"krate":0,"index":2351}],"decl_id":null,"docs":" A single field of a message type.\n","sig":null,"attributes":[{"value":"/ A single field of a message type.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13242275,"byte_end":13242312,"line_start":1027,"line_end":1027,"column_start":1,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":2342},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13242459,"byte_end":13242463,"line_start":1032,"line_end":1032,"column_start":9,"column_end":13},"name":"kind","qualname":"::Field::kind","value":"i32","parent":{"krate":0,"index":2276},"children":[],"decl_id":null,"docs":" The field type.\n","sig":null,"attributes":[{"value":"/ The field type.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13242382,"byte_end":13242401,"line_start":1030,"line_end":1030,"column_start":5,"column_end":24}},{"value":"prost(enumeration = \"field::Kind\", tag = \"1\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13242406,"byte_end":13242450,"line_start":1031,"line_end":1031,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":2343},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13242565,"byte_end":13242576,"line_start":1035,"line_end":1035,"column_start":9,"column_end":20},"name":"cardinality","qualname":"::Field::cardinality","value":"i32","parent":{"krate":0,"index":2276},"children":[],"decl_id":null,"docs":" The field cardinality.\n","sig":null,"attributes":[{"value":"/ The field cardinality.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13242474,"byte_end":13242500,"line_start":1033,"line_end":1033,"column_start":5,"column_end":31}},{"value":"prost(enumeration = \"field::Cardinality\", tag = \"2\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13242505,"byte_end":13242556,"line_start":1034,"line_end":1034,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":2344},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13242646,"byte_end":13242652,"line_start":1038,"line_end":1038,"column_start":9,"column_end":15},"name":"number","qualname":"::Field::number","value":"i32","parent":{"krate":0,"index":2276},"children":[],"decl_id":null,"docs":" The field number.\n","sig":null,"attributes":[{"value":"/ The field number.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13242587,"byte_end":13242608,"line_start":1036,"line_end":1036,"column_start":5,"column_end":26}},{"value":"prost(int32, tag = \"3\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13242613,"byte_end":13242637,"line_start":1037,"line_end":1037,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":2345},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13242721,"byte_end":13242725,"line_start":1041,"line_end":1041,"column_start":9,"column_end":13},"name":"name","qualname":"::Field::name","value":"std::string::String","parent":{"krate":0,"index":2276},"children":[],"decl_id":null,"docs":" The field name.\n","sig":null,"attributes":[{"value":"/ The field name.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13242663,"byte_end":13242682,"line_start":1039,"line_end":1039,"column_start":5,"column_end":24}},{"value":"prost(string, tag = \"4\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13242687,"byte_end":13242712,"line_start":1040,"line_end":1040,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":2346},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13242936,"byte_end":13242944,"line_start":1045,"line_end":1045,"column_start":9,"column_end":17},"name":"type_url","qualname":"::Field::type_url","value":"std::string::String","parent":{"krate":0,"index":2276},"children":[],"decl_id":null,"docs":" The field type URL, without the scheme, for message or enumeration\n types. Example: `\"type.googleapis.com/google.protobuf.Timestamp\"`.\n","sig":null,"attributes":[{"value":"/ The field type URL, without the scheme, for message or enumeration","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13242752,"byte_end":13242822,"line_start":1042,"line_end":1042,"column_start":5,"column_end":75}},{"value":"/ types. Example: `\"type.googleapis.com/google.protobuf.Timestamp\"`.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13242827,"byte_end":13242897,"line_start":1043,"line_end":1043,"column_start":5,"column_end":75}},{"value":"prost(string, tag = \"6\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13242902,"byte_end":13242927,"line_start":1044,"line_end":1044,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":2347},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13243168,"byte_end":13243179,"line_start":1049,"line_end":1049,"column_start":9,"column_end":20},"name":"oneof_index","qualname":"::Field::oneof_index","value":"i32","parent":{"krate":0,"index":2276},"children":[],"decl_id":null,"docs":" The index of the field type in `Type.oneofs`, for message or enumeration\n types. The first type has index 1; zero means the type is not in the list.\n","sig":null,"attributes":[{"value":"/ The index of the field type in `Type.oneofs`, for message or enumeration","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13242971,"byte_end":13243047,"line_start":1046,"line_end":1046,"column_start":5,"column_end":81}},{"value":"/ types. The first type has index 1; zero means the type is not in the list.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13243052,"byte_end":13243130,"line_start":1047,"line_end":1047,"column_start":5,"column_end":83}},{"value":"prost(int32, tag = \"7\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13243135,"byte_end":13243159,"line_start":1048,"line_end":1048,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":2348},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13243285,"byte_end":13243291,"line_start":1052,"line_end":1052,"column_start":9,"column_end":15},"name":"packed","qualname":"::Field::packed","value":"bool","parent":{"krate":0,"index":2276},"children":[],"decl_id":null,"docs":" Whether to use alternative packed wire representation.\n","sig":null,"attributes":[{"value":"/ Whether to use alternative packed wire representation.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13243190,"byte_end":13243248,"line_start":1050,"line_end":1050,"column_start":5,"column_end":63}},{"value":"prost(bool, tag = \"8\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13243253,"byte_end":13243276,"line_start":1051,"line_end":1051,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":2349},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13243385,"byte_end":13243392,"line_start":1055,"line_end":1055,"column_start":9,"column_end":16},"name":"options","qualname":"::Field::options","value":"std::vec::Vec<Option>","parent":{"krate":0,"index":2276},"children":[],"decl_id":null,"docs":" The protocol buffer options.\n","sig":null,"attributes":[{"value":"/ The protocol buffer options.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13243303,"byte_end":13243335,"line_start":1053,"line_end":1053,"column_start":5,"column_end":37}},{"value":"prost(message, repeated, tag = \"9\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13243340,"byte_end":13243376,"line_start":1054,"line_end":1054,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":2350},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13243487,"byte_end":13243496,"line_start":1058,"line_end":1058,"column_start":9,"column_end":18},"name":"json_name","qualname":"::Field::json_name","value":"std::string::String","parent":{"krate":0,"index":2276},"children":[],"decl_id":null,"docs":" The field JSON name.\n","sig":null,"attributes":[{"value":"/ The field JSON name.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13243423,"byte_end":13243447,"line_start":1056,"line_end":1056,"column_start":5,"column_end":29}},{"value":"prost(string, tag = \"10\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13243452,"byte_end":13243478,"line_start":1057,"line_end":1057,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":2351},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13243639,"byte_end":13243652,"line_start":1061,"line_end":1061,"column_start":9,"column_end":22},"name":"default_value","qualname":"::Field::default_value","value":"std::string::String","parent":{"krate":0,"index":2276},"children":[],"decl_id":null,"docs":" The string value of the default value of this field. Proto2 syntax only.\n","sig":null,"attributes":[{"value":"/ The string value of the default value of this field. Proto2 syntax only.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13243523,"byte_end":13243599,"line_start":1059,"line_end":1059,"column_start":5,"column_end":81}},{"value":"prost(string, tag = \"11\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13243604,"byte_end":13243630,"line_start":1060,"line_end":1060,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2338},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13242459,"byte_end":13242463,"line_start":1032,"line_end":1032,"column_start":9,"column_end":13},"name":"kind","qualname":"<Field>::kind","value":"pub fn kind(&Self) -> super::field::Kind","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2340},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13242565,"byte_end":13242576,"line_start":1035,"line_end":1035,"column_start":9,"column_end":20},"name":"cardinality","qualname":"<Field>::cardinality","value":"pub fn cardinality(&Self) -> super::field::Cardinality","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":35},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13243685,"byte_end":13243690,"line_start":1063,"line_end":1063,"column_start":9,"column_end":14},"name":"field","qualname":"::field","value":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","parent":null,"children":[{"krate":0,"index":2352},{"krate":0,"index":2410},{"krate":0,"index":2412},{"krate":0,"index":2413},{"krate":0,"index":2415},{"krate":0,"index":2416},{"krate":0,"index":2418},{"krate":0,"index":2419},{"krate":0,"index":2421},{"krate":0,"index":2424},{"krate":0,"index":2426},{"krate":0,"index":2428},{"krate":0,"index":2437},{"krate":0,"index":2450},{"krate":0,"index":2452},{"krate":0,"index":2453},{"krate":0,"index":2455},{"krate":0,"index":2456},{"krate":0,"index":2458},{"krate":0,"index":2459},{"krate":0,"index":2461},{"krate":0,"index":2464},{"krate":0,"index":2466},{"krate":0,"index":2468}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2353},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13243891,"byte_end":13243902,"line_start":1069,"line_end":1069,"column_start":9,"column_end":20},"name":"TypeUnknown","qualname":"::field::Kind::TypeUnknown","value":"Kind::TypeUnknown","parent":{"krate":0,"index":2352},"children":[],"decl_id":null,"docs":" Field type unknown.\n","sig":null,"attributes":[{"value":"/ Field type unknown.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13243859,"byte_end":13243882,"line_start":1068,"line_end":1068,"column_start":9,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2356},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13243947,"byte_end":13243957,"line_start":1071,"line_end":1071,"column_start":9,"column_end":19},"name":"TypeDouble","qualname":"::field::Kind::TypeDouble","value":"Kind::TypeDouble","parent":{"krate":0,"index":2352},"children":[],"decl_id":null,"docs":" Field type double.\n","sig":null,"attributes":[{"value":"/ Field type double.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13243916,"byte_end":13243938,"line_start":1070,"line_end":1070,"column_start":9,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2359},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13244001,"byte_end":13244010,"line_start":1073,"line_end":1073,"column_start":9,"column_end":18},"name":"TypeFloat","qualname":"::field::Kind::TypeFloat","value":"Kind::TypeFloat","parent":{"krate":0,"index":2352},"children":[],"decl_id":null,"docs":" Field type float.\n","sig":null,"attributes":[{"value":"/ Field type float.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13243971,"byte_end":13243992,"line_start":1072,"line_end":1072,"column_start":9,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2362},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13244054,"byte_end":13244063,"line_start":1075,"line_end":1075,"column_start":9,"column_end":18},"name":"TypeInt64","qualname":"::field::Kind::TypeInt64","value":"Kind::TypeInt64","parent":{"krate":0,"index":2352},"children":[],"decl_id":null,"docs":" Field type int64.\n","sig":null,"attributes":[{"value":"/ Field type int64.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13244024,"byte_end":13244045,"line_start":1074,"line_end":1074,"column_start":9,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2365},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13244108,"byte_end":13244118,"line_start":1077,"line_end":1077,"column_start":9,"column_end":19},"name":"TypeUint64","qualname":"::field::Kind::TypeUint64","value":"Kind::TypeUint64","parent":{"krate":0,"index":2352},"children":[],"decl_id":null,"docs":" Field type uint64.\n","sig":null,"attributes":[{"value":"/ Field type uint64.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13244077,"byte_end":13244099,"line_start":1076,"line_end":1076,"column_start":9,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2368},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13244162,"byte_end":13244171,"line_start":1079,"line_end":1079,"column_start":9,"column_end":18},"name":"TypeInt32","qualname":"::field::Kind::TypeInt32","value":"Kind::TypeInt32","parent":{"krate":0,"index":2352},"children":[],"decl_id":null,"docs":" Field type int32.\n","sig":null,"attributes":[{"value":"/ Field type int32.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13244132,"byte_end":13244153,"line_start":1078,"line_end":1078,"column_start":9,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2371},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13244217,"byte_end":13244228,"line_start":1081,"line_end":1081,"column_start":9,"column_end":20},"name":"TypeFixed64","qualname":"::field::Kind::TypeFixed64","value":"Kind::TypeFixed64","parent":{"krate":0,"index":2352},"children":[],"decl_id":null,"docs":" Field type fixed64.\n","sig":null,"attributes":[{"value":"/ Field type fixed64.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13244185,"byte_end":13244208,"line_start":1080,"line_end":1080,"column_start":9,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2374},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13244274,"byte_end":13244285,"line_start":1083,"line_end":1083,"column_start":9,"column_end":20},"name":"TypeFixed32","qualname":"::field::Kind::TypeFixed32","value":"Kind::TypeFixed32","parent":{"krate":0,"index":2352},"children":[],"decl_id":null,"docs":" Field type fixed32.\n","sig":null,"attributes":[{"value":"/ Field type fixed32.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13244242,"byte_end":13244265,"line_start":1082,"line_end":1082,"column_start":9,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2377},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13244328,"byte_end":13244336,"line_start":1085,"line_end":1085,"column_start":9,"column_end":17},"name":"TypeBool","qualname":"::field::Kind::TypeBool","value":"Kind::TypeBool","parent":{"krate":0,"index":2352},"children":[],"decl_id":null,"docs":" Field type bool.\n","sig":null,"attributes":[{"value":"/ Field type bool.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13244299,"byte_end":13244319,"line_start":1084,"line_end":1084,"column_start":9,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2380},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13244381,"byte_end":13244391,"line_start":1087,"line_end":1087,"column_start":9,"column_end":19},"name":"TypeString","qualname":"::field::Kind::TypeString","value":"Kind::TypeString","parent":{"krate":0,"index":2352},"children":[],"decl_id":null,"docs":" Field type string.\n","sig":null,"attributes":[{"value":"/ Field type string.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13244350,"byte_end":13244372,"line_start":1086,"line_end":1086,"column_start":9,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2383},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13244471,"byte_end":13244480,"line_start":1089,"line_end":1089,"column_start":9,"column_end":18},"name":"TypeGroup","qualname":"::field::Kind::TypeGroup","value":"Kind::TypeGroup","parent":{"krate":0,"index":2352},"children":[],"decl_id":null,"docs":" Field type group. Proto2 syntax only, and deprecated.\n","sig":null,"attributes":[{"value":"/ Field type group. Proto2 syntax only, and deprecated.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13244405,"byte_end":13244462,"line_start":1088,"line_end":1088,"column_start":9,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2386},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13244527,"byte_end":13244538,"line_start":1091,"line_end":1091,"column_start":9,"column_end":20},"name":"TypeMessage","qualname":"::field::Kind::TypeMessage","value":"Kind::TypeMessage","parent":{"krate":0,"index":2352},"children":[],"decl_id":null,"docs":" Field type message.\n","sig":null,"attributes":[{"value":"/ Field type message.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13244495,"byte_end":13244518,"line_start":1090,"line_end":1090,"column_start":9,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2389},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13244583,"byte_end":13244592,"line_start":1093,"line_end":1093,"column_start":9,"column_end":18},"name":"TypeBytes","qualname":"::field::Kind::TypeBytes","value":"Kind::TypeBytes","parent":{"krate":0,"index":2352},"children":[],"decl_id":null,"docs":" Field type bytes.\n","sig":null,"attributes":[{"value":"/ Field type bytes.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13244553,"byte_end":13244574,"line_start":1092,"line_end":1092,"column_start":9,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2392},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13244638,"byte_end":13244648,"line_start":1095,"line_end":1095,"column_start":9,"column_end":19},"name":"TypeUint32","qualname":"::field::Kind::TypeUint32","value":"Kind::TypeUint32","parent":{"krate":0,"index":2352},"children":[],"decl_id":null,"docs":" Field type uint32.\n","sig":null,"attributes":[{"value":"/ Field type uint32.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13244607,"byte_end":13244629,"line_start":1094,"line_end":1094,"column_start":9,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2395},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13244692,"byte_end":13244700,"line_start":1097,"line_end":1097,"column_start":9,"column_end":17},"name":"TypeEnum","qualname":"::field::Kind::TypeEnum","value":"Kind::TypeEnum","parent":{"krate":0,"index":2352},"children":[],"decl_id":null,"docs":" Field type enum.\n","sig":null,"attributes":[{"value":"/ Field type enum.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13244663,"byte_end":13244683,"line_start":1096,"line_end":1096,"column_start":9,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2398},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13244748,"byte_end":13244760,"line_start":1099,"line_end":1099,"column_start":9,"column_end":21},"name":"TypeSfixed32","qualname":"::field::Kind::TypeSfixed32","value":"Kind::TypeSfixed32","parent":{"krate":0,"index":2352},"children":[],"decl_id":null,"docs":" Field type sfixed32.\n","sig":null,"attributes":[{"value":"/ Field type sfixed32.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13244715,"byte_end":13244739,"line_start":1098,"line_end":1098,"column_start":9,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2401},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13244808,"byte_end":13244820,"line_start":1101,"line_end":1101,"column_start":9,"column_end":21},"name":"TypeSfixed64","qualname":"::field::Kind::TypeSfixed64","value":"Kind::TypeSfixed64","parent":{"krate":0,"index":2352},"children":[],"decl_id":null,"docs":" Field type sfixed64.\n","sig":null,"attributes":[{"value":"/ Field type sfixed64.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13244775,"byte_end":13244799,"line_start":1100,"line_end":1100,"column_start":9,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2404},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13244866,"byte_end":13244876,"line_start":1103,"line_end":1103,"column_start":9,"column_end":19},"name":"TypeSint32","qualname":"::field::Kind::TypeSint32","value":"Kind::TypeSint32","parent":{"krate":0,"index":2352},"children":[],"decl_id":null,"docs":" Field type sint32.\n","sig":null,"attributes":[{"value":"/ Field type sint32.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13244835,"byte_end":13244857,"line_start":1102,"line_end":1102,"column_start":9,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2407},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13244922,"byte_end":13244932,"line_start":1105,"line_end":1105,"column_start":9,"column_end":19},"name":"TypeSint64","qualname":"::field::Kind::TypeSint64","value":"Kind::TypeSint64","parent":{"krate":0,"index":2352},"children":[],"decl_id":null,"docs":" Field type sint64.\n","sig":null,"attributes":[{"value":"/ Field type sint64.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13244891,"byte_end":13244913,"line_start":1104,"line_end":1104,"column_start":9,"column_end":31}}]},{"kind":"Enum","id":{"krate":0,"index":2352},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13243844,"byte_end":13243848,"line_start":1067,"line_end":1067,"column_start":14,"column_end":18},"name":"Kind","qualname":"::field::Kind","value":"pub enum Kind {\n    TypeUnknown = ,\n    TypeDouble = ,\n    TypeFloat = ,\n    TypeInt64 = ,\n    TypeUint64 = ,\n    TypeInt32 = ,\n    TypeFixed64 = ,\n    TypeFixed32 = ,\n    TypeBool = ,\n    TypeString = ,\n    TypeGroup = ,\n    TypeMessage = ,\n    TypeBytes = ,\n    TypeUint32 = ,\n    TypeEnum = ,\n    TypeSfixed32 = ,\n    TypeSfixed64 = ,\n    TypeSint32 = ,\n    TypeSint64 = ,\n}","parent":null,"children":[{"krate":0,"index":2353},{"krate":0,"index":2356},{"krate":0,"index":2359},{"krate":0,"index":2362},{"krate":0,"index":2365},{"krate":0,"index":2368},{"krate":0,"index":2371},{"krate":0,"index":2374},{"krate":0,"index":2377},{"krate":0,"index":2380},{"krate":0,"index":2383},{"krate":0,"index":2386},{"krate":0,"index":2389},{"krate":0,"index":2392},{"krate":0,"index":2395},{"krate":0,"index":2398},{"krate":0,"index":2401},{"krate":0,"index":2404},{"krate":0,"index":2407}],"decl_id":null,"docs":" Basic field types.\n","sig":null,"attributes":[{"value":"/ Basic field types.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13243697,"byte_end":13243719,"line_start":1064,"line_end":1064,"column_start":5,"column_end":27}},{"value":"repr(i32)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13243818,"byte_end":13243830,"line_start":1066,"line_end":1066,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2438},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13245200,"byte_end":13245207,"line_start":1112,"line_end":1112,"column_start":9,"column_end":16},"name":"Unknown","qualname":"::field::Cardinality::Unknown","value":"Cardinality::Unknown","parent":{"krate":0,"index":2437},"children":[],"decl_id":null,"docs":" For fields with unknown cardinality.\n","sig":null,"attributes":[{"value":"/ For fields with unknown cardinality.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13245151,"byte_end":13245191,"line_start":1111,"line_end":1111,"column_start":9,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2441},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13245254,"byte_end":13245262,"line_start":1114,"line_end":1114,"column_start":9,"column_end":17},"name":"Optional","qualname":"::field::Cardinality::Optional","value":"Cardinality::Optional","parent":{"krate":0,"index":2437},"children":[],"decl_id":null,"docs":" For optional fields.\n","sig":null,"attributes":[{"value":"/ For optional fields.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13245221,"byte_end":13245245,"line_start":1113,"line_end":1113,"column_start":9,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2444},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13245329,"byte_end":13245337,"line_start":1116,"line_end":1116,"column_start":9,"column_end":17},"name":"Required","qualname":"::field::Cardinality::Required","value":"Cardinality::Required","parent":{"krate":0,"index":2437},"children":[],"decl_id":null,"docs":" For required fields. Proto2 syntax only.\n","sig":null,"attributes":[{"value":"/ For required fields. Proto2 syntax only.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13245276,"byte_end":13245320,"line_start":1115,"line_end":1115,"column_start":9,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2447},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13245384,"byte_end":13245392,"line_start":1118,"line_end":1118,"column_start":9,"column_end":17},"name":"Repeated","qualname":"::field::Cardinality::Repeated","value":"Cardinality::Repeated","parent":{"krate":0,"index":2437},"children":[],"decl_id":null,"docs":" For repeated fields.\n","sig":null,"attributes":[{"value":"/ For repeated fields.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13245351,"byte_end":13245375,"line_start":1117,"line_end":1117,"column_start":9,"column_end":33}}]},{"kind":"Enum","id":{"krate":0,"index":2437},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13245129,"byte_end":13245140,"line_start":1110,"line_end":1110,"column_start":14,"column_end":25},"name":"Cardinality","qualname":"::field::Cardinality","value":"pub enum Cardinality { Unknown = , Optional = , Required = , Repeated = , }","parent":null,"children":[{"krate":0,"index":2438},{"krate":0,"index":2441},{"krate":0,"index":2444},{"krate":0,"index":2447}],"decl_id":null,"docs":" Whether a field is optional, required, or repeated.\n","sig":null,"attributes":[{"value":"/ Whether a field is optional, required, or repeated.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13244949,"byte_end":13245004,"line_start":1107,"line_end":1107,"column_start":5,"column_end":60}},{"value":"repr(i32)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13245103,"byte_end":13245115,"line_start":1109,"line_end":1109,"column_start":5,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":2477},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13245489,"byte_end":13245493,"line_start":1123,"line_end":1123,"column_start":12,"column_end":16},"name":"Enum","qualname":"::Enum","value":"Enum { name, enumvalue, options, source_context, syntax }","parent":null,"children":[{"krate":0,"index":2518},{"krate":0,"index":2519},{"krate":0,"index":2520},{"krate":0,"index":2521},{"krate":0,"index":2522}],"decl_id":null,"docs":" Enum type definition.\n","sig":null,"attributes":[{"value":"/ Enum type definition.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13245406,"byte_end":13245431,"line_start":1121,"line_end":1121,"column_start":1,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":2518},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13245558,"byte_end":13245562,"line_start":1126,"line_end":1126,"column_start":9,"column_end":13},"name":"name","qualname":"::Enum::name","value":"std::string::String","parent":{"krate":0,"index":2477},"children":[],"decl_id":null,"docs":" Enum type name.\n","sig":null,"attributes":[{"value":"/ Enum type name.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13245500,"byte_end":13245519,"line_start":1124,"line_end":1124,"column_start":5,"column_end":24}},{"value":"prost(string, tag = \"1\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13245524,"byte_end":13245549,"line_start":1125,"line_end":1125,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":2519},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13245666,"byte_end":13245675,"line_start":1129,"line_end":1129,"column_start":9,"column_end":18},"name":"enumvalue","qualname":"::Enum::enumvalue","value":"std::vec::Vec<EnumValue>","parent":{"krate":0,"index":2477},"children":[],"decl_id":null,"docs":" Enum value definitions.\n","sig":null,"attributes":[{"value":"/ Enum value definitions.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13245589,"byte_end":13245616,"line_start":1127,"line_end":1127,"column_start":5,"column_end":32}},{"value":"prost(message, repeated, tag = \"2\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13245621,"byte_end":13245657,"line_start":1128,"line_end":1128,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":2520},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13245787,"byte_end":13245794,"line_start":1132,"line_end":1132,"column_start":9,"column_end":16},"name":"options","qualname":"::Enum::options","value":"std::vec::Vec<Option>","parent":{"krate":0,"index":2477},"children":[],"decl_id":null,"docs":" Protocol buffer options.\n","sig":null,"attributes":[{"value":"/ Protocol buffer options.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13245709,"byte_end":13245737,"line_start":1130,"line_end":1130,"column_start":5,"column_end":33}},{"value":"prost(message, repeated, tag = \"3\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13245742,"byte_end":13245778,"line_start":1131,"line_end":1131,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":2521},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13245898,"byte_end":13245912,"line_start":1135,"line_end":1135,"column_start":9,"column_end":23},"name":"source_context","qualname":"::Enum::source_context","value":"std::option::Option<SourceContext>","parent":{"krate":0,"index":2477},"children":[],"decl_id":null,"docs":" The source context.\n","sig":null,"attributes":[{"value":"/ The source context.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13245825,"byte_end":13245848,"line_start":1133,"line_end":1133,"column_start":5,"column_end":28}},{"value":"prost(message, optional, tag = \"4\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13245853,"byte_end":13245889,"line_start":1134,"line_end":1134,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":2522},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13246031,"byte_end":13246037,"line_start":1138,"line_end":1138,"column_start":9,"column_end":15},"name":"syntax","qualname":"::Enum::syntax","value":"i32","parent":{"krate":0,"index":2477},"children":[],"decl_id":null,"docs":" The source syntax.\n","sig":null,"attributes":[{"value":"/ The source syntax.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13245956,"byte_end":13245978,"line_start":1136,"line_end":1136,"column_start":5,"column_end":27}},{"value":"prost(enumeration = \"Syntax\", tag = \"5\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13245983,"byte_end":13246022,"line_start":1137,"line_end":1137,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2516},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13246031,"byte_end":13246037,"line_start":1138,"line_end":1138,"column_start":9,"column_end":15},"name":"syntax","qualname":"<Enum>::syntax","value":"pub fn syntax(&Self) -> super::Syntax","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2523},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13246130,"byte_end":13246139,"line_start":1142,"line_end":1142,"column_start":12,"column_end":21},"name":"EnumValue","qualname":"::EnumValue","value":"EnumValue { name, number, options }","parent":null,"children":[{"krate":0,"index":2553},{"krate":0,"index":2554},{"krate":0,"index":2555}],"decl_id":null,"docs":" Enum value definition.\n","sig":null,"attributes":[{"value":"/ Enum value definition.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13246046,"byte_end":13246072,"line_start":1140,"line_end":1140,"column_start":1,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":2553},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13246205,"byte_end":13246209,"line_start":1145,"line_end":1145,"column_start":9,"column_end":13},"name":"name","qualname":"::EnumValue::name","value":"std::string::String","parent":{"krate":0,"index":2523},"children":[],"decl_id":null,"docs":" Enum value name.\n","sig":null,"attributes":[{"value":"/ Enum value name.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13246146,"byte_end":13246166,"line_start":1143,"line_end":1143,"column_start":5,"column_end":25}},{"value":"prost(string, tag = \"1\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13246171,"byte_end":13246196,"line_start":1144,"line_end":1144,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":2554},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13246296,"byte_end":13246302,"line_start":1148,"line_end":1148,"column_start":9,"column_end":15},"name":"number","qualname":"::EnumValue::number","value":"i32","parent":{"krate":0,"index":2523},"children":[],"decl_id":null,"docs":" Enum value number.\n","sig":null,"attributes":[{"value":"/ Enum value number.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13246236,"byte_end":13246258,"line_start":1146,"line_end":1146,"column_start":5,"column_end":27}},{"value":"prost(int32, tag = \"2\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13246263,"byte_end":13246287,"line_start":1147,"line_end":1147,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":2555},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13246391,"byte_end":13246398,"line_start":1151,"line_end":1151,"column_start":9,"column_end":16},"name":"options","qualname":"::EnumValue::options","value":"std::vec::Vec<Option>","parent":{"krate":0,"index":2523},"children":[],"decl_id":null,"docs":" Protocol buffer options.\n","sig":null,"attributes":[{"value":"/ Protocol buffer options.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13246313,"byte_end":13246341,"line_start":1149,"line_end":1149,"column_start":5,"column_end":33}},{"value":"prost(message, repeated, tag = \"3\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13246346,"byte_end":13246382,"line_start":1150,"line_end":1150,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":2556},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13246579,"byte_end":13246585,"line_start":1156,"line_end":1156,"column_start":12,"column_end":18},"name":"Option","qualname":"::Option","value":"Option { name, value }","parent":null,"children":[{"krate":0,"index":2584},{"krate":0,"index":2585}],"decl_id":null,"docs":" A protocol buffer option, which can be attached to a message, field,\n enumeration, etc.\n","sig":null,"attributes":[{"value":"/ A protocol buffer option, which can be attached to a message, field,","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13246427,"byte_end":13246499,"line_start":1153,"line_end":1153,"column_start":1,"column_end":73}},{"value":"/ enumeration, etc.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13246500,"byte_end":13246521,"line_start":1154,"line_end":1154,"column_start":1,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":2584},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13246891,"byte_end":13246895,"line_start":1162,"line_end":1162,"column_start":9,"column_end":13},"name":"name","qualname":"::Option::name","value":"std::string::String","parent":{"krate":0,"index":2556},"children":[],"decl_id":null,"docs":" The option's name. For protobuf built-in options (options defined in\n descriptor.proto), this is the short name. For example, `\"map_entry\"`.\n For custom options, it should be the fully-qualified name. For example,\n `\"google.api.http\"`.\n","sig":null,"attributes":[{"value":"/ The option's name. For protobuf built-in options (options defined in","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13246592,"byte_end":13246664,"line_start":1157,"line_end":1157,"column_start":5,"column_end":77}},{"value":"/ descriptor.proto), this is the short name. For example, `\"map_entry\"`.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13246669,"byte_end":13246743,"line_start":1158,"line_end":1158,"column_start":5,"column_end":79}},{"value":"/ For custom options, it should be the fully-qualified name. For example,","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13246748,"byte_end":13246823,"line_start":1159,"line_end":1159,"column_start":5,"column_end":80}},{"value":"/ `\"google.api.http\"`.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13246828,"byte_end":13246852,"line_start":1160,"line_end":1160,"column_start":5,"column_end":29}},{"value":"prost(string, tag = \"1\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13246857,"byte_end":13246882,"line_start":1161,"line_end":1161,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":2585},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13247268,"byte_end":13247273,"line_start":1168,"line_end":1168,"column_start":9,"column_end":14},"name":"value","qualname":"::Option::value","value":"std::option::Option<Any>","parent":{"krate":0,"index":2556},"children":[],"decl_id":null,"docs":" The option's value packed in an Any message. If the value is a primitive,\n the corresponding wrapper type defined in google/protobuf/wrappers.proto\n should be used. If the value is an enum, it should be stored as an int32\n value using the google.protobuf.Int32Value type.\n","sig":null,"attributes":[{"value":"/ The option's value packed in an Any message. If the value is a primitive,","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13246922,"byte_end":13246999,"line_start":1163,"line_end":1163,"column_start":5,"column_end":82}},{"value":"/ the corresponding wrapper type defined in google/protobuf/wrappers.proto","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13247004,"byte_end":13247080,"line_start":1164,"line_end":1164,"column_start":5,"column_end":81}},{"value":"/ should be used. If the value is an enum, it should be stored as an int32","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13247085,"byte_end":13247161,"line_start":1165,"line_end":1165,"column_start":5,"column_end":81}},{"value":"/ value using the google.protobuf.Int32Value type.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13247166,"byte_end":13247218,"line_start":1166,"line_end":1166,"column_start":5,"column_end":57}},{"value":"prost(message, optional, tag = \"2\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13247223,"byte_end":13247259,"line_start":1167,"line_end":1167,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2587},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13247517,"byte_end":13247523,"line_start":1175,"line_end":1175,"column_start":5,"column_end":11},"name":"Proto2","qualname":"::Syntax::Proto2","value":"Syntax::Proto2","parent":{"krate":0,"index":2586},"children":[],"decl_id":null,"docs":" Syntax `proto2`.\n","sig":null,"attributes":[{"value":"/ Syntax `proto2`.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13247492,"byte_end":13247512,"line_start":1174,"line_end":1174,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2590},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13247558,"byte_end":13247564,"line_start":1177,"line_end":1177,"column_start":5,"column_end":11},"name":"Proto3","qualname":"::Syntax::Proto3","value":"Syntax::Proto3","parent":{"krate":0,"index":2586},"children":[],"decl_id":null,"docs":" Syntax `proto3`.\n","sig":null,"attributes":[{"value":"/ Syntax `proto3`.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13247533,"byte_end":13247553,"line_start":1176,"line_end":1176,"column_start":5,"column_end":25}}]},{"kind":"Enum","id":{"krate":0,"index":2586},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13247479,"byte_end":13247485,"line_start":1173,"line_end":1173,"column_start":10,"column_end":16},"name":"Syntax","qualname":"::Syntax","value":"pub enum Syntax { Proto2 = , Proto3 = , }","parent":null,"children":[{"krate":0,"index":2587},{"krate":0,"index":2590}],"decl_id":null,"docs":" The syntax in which a protocol buffer element is defined.\n","sig":null,"attributes":[{"value":"/ The syntax in which a protocol buffer element is defined.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13247305,"byte_end":13247366,"line_start":1170,"line_end":1170,"column_start":1,"column_end":62}},{"value":"repr(i32)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13247457,"byte_end":13247469,"line_start":1172,"line_end":1172,"column_start":1,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":2620},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13248198,"byte_end":13248201,"line_start":1189,"line_end":1189,"column_start":12,"column_end":15},"name":"Api","qualname":"::Api","value":"Api { name, methods, options, version, source_context, mixins, syntax }","parent":null,"children":[{"krate":0,"index":2665},{"krate":0,"index":2666},{"krate":0,"index":2667},{"krate":0,"index":2668},{"krate":0,"index":2669},{"krate":0,"index":2670},{"krate":0,"index":2671}],"decl_id":null,"docs":" Api is a light-weight descriptor for an API Interface.","sig":null,"attributes":[{"value":"/ Api is a light-weight descriptor for an API Interface.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13247572,"byte_end":13247630,"line_start":1179,"line_end":1179,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13247631,"byte_end":13247634,"line_start":1180,"line_end":1180,"column_start":1,"column_end":4}},{"value":"/ Interfaces are also described as \"protocol buffer services\" in some contexts,","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13247635,"byte_end":13247716,"line_start":1181,"line_end":1181,"column_start":1,"column_end":82}},{"value":"/ such as by the \"service\" keyword in a .proto file, but they are different","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13247717,"byte_end":13247794,"line_start":1182,"line_end":1182,"column_start":1,"column_end":78}},{"value":"/ from API Services, which represent a concrete implementation of an interface","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13247795,"byte_end":13247875,"line_start":1183,"line_end":1183,"column_start":1,"column_end":81}},{"value":"/ as opposed to simply a description of methods and bindings. They are also","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13247876,"byte_end":13247953,"line_start":1184,"line_end":1184,"column_start":1,"column_end":78}},{"value":"/ sometimes simply referred to as \"APIs\" in other contexts, such as the name of","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13247954,"byte_end":13248035,"line_start":1185,"line_end":1185,"column_start":1,"column_end":82}},{"value":"/ this message itself. See https://cloud.google.com/apis/design/glossary for","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13248036,"byte_end":13248114,"line_start":1186,"line_end":1186,"column_start":1,"column_end":79}},{"value":"/ detailed terminology.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13248115,"byte_end":13248140,"line_start":1187,"line_end":1187,"column_start":1,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":2665},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13248366,"byte_end":13248370,"line_start":1193,"line_end":1193,"column_start":9,"column_end":13},"name":"name","qualname":"::Api::name","value":"std::string::String","parent":{"krate":0,"index":2620},"children":[],"decl_id":null,"docs":" The fully qualified name of this interface, including package name\n followed by the interface's simple name.\n","sig":null,"attributes":[{"value":"/ The fully qualified name of this interface, including package name","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13248208,"byte_end":13248278,"line_start":1190,"line_end":1190,"column_start":5,"column_end":75}},{"value":"/ followed by the interface's simple name.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13248283,"byte_end":13248327,"line_start":1191,"line_end":1191,"column_start":5,"column_end":49}},{"value":"prost(string, tag = \"1\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13248332,"byte_end":13248357,"line_start":1192,"line_end":1192,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":2666},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13248503,"byte_end":13248510,"line_start":1196,"line_end":1196,"column_start":9,"column_end":16},"name":"methods","qualname":"::Api::methods","value":"std::vec::Vec<Method>","parent":{"krate":0,"index":2620},"children":[],"decl_id":null,"docs":" The methods of this interface, in unspecified order.\n","sig":null,"attributes":[{"value":"/ The methods of this interface, in unspecified order.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13248397,"byte_end":13248453,"line_start":1194,"line_end":1194,"column_start":5,"column_end":61}},{"value":"prost(message, repeated, tag = \"2\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13248458,"byte_end":13248494,"line_start":1195,"line_end":1195,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":2667},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13248634,"byte_end":13248641,"line_start":1199,"line_end":1199,"column_start":9,"column_end":16},"name":"options","qualname":"::Api::options","value":"std::vec::Vec<Option>","parent":{"krate":0,"index":2620},"children":[],"decl_id":null,"docs":" Any metadata attached to the interface.\n","sig":null,"attributes":[{"value":"/ Any metadata attached to the interface.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13248541,"byte_end":13248584,"line_start":1197,"line_end":1197,"column_start":5,"column_end":48}},{"value":"prost(message, repeated, tag = \"3\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13248589,"byte_end":13248625,"line_start":1198,"line_end":1198,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":2668},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13249865,"byte_end":13249872,"line_start":1222,"line_end":1222,"column_start":9,"column_end":16},"name":"version","qualname":"::Api::version","value":"std::string::String","parent":{"krate":0,"index":2620},"children":[],"decl_id":null,"docs":" A version string for this interface. If specified, must have the form\n `major-version.minor-version`, as in `1.10`. If the minor version is\n omitted, it defaults to zero. If the entire version field is empty, the\n major version is derived from the package name, as outlined below. If the\n field is not empty, the version in the package name will be verified to be\n consistent with what is provided here.","sig":null,"attributes":[{"value":"/ A version string for this interface. If specified, must have the form","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13248672,"byte_end":13248745,"line_start":1200,"line_end":1200,"column_start":5,"column_end":78}},{"value":"/ `major-version.minor-version`, as in `1.10`. If the minor version is","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13248750,"byte_end":13248822,"line_start":1201,"line_end":1201,"column_start":5,"column_end":77}},{"value":"/ omitted, it defaults to zero. If the entire version field is empty, the","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13248827,"byte_end":13248902,"line_start":1202,"line_end":1202,"column_start":5,"column_end":80}},{"value":"/ major version is derived from the package name, as outlined below. If the","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13248907,"byte_end":13248984,"line_start":1203,"line_end":1203,"column_start":5,"column_end":82}},{"value":"/ field is not empty, the version in the package name will be verified to be","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13248989,"byte_end":13249067,"line_start":1204,"line_end":1204,"column_start":5,"column_end":83}},{"value":"/ consistent with what is provided here.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13249072,"byte_end":13249114,"line_start":1205,"line_end":1205,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13249119,"byte_end":13249122,"line_start":1206,"line_end":1206,"column_start":5,"column_end":8}},{"value":"/ The versioning schema uses [semantic","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13249127,"byte_end":13249167,"line_start":1207,"line_end":1207,"column_start":5,"column_end":45}},{"value":"/ versioning](http://semver.org) where the major version number","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13249172,"byte_end":13249237,"line_start":1208,"line_end":1208,"column_start":5,"column_end":70}},{"value":"/ indicates a breaking change and the minor version an additive,","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13249242,"byte_end":13249308,"line_start":1209,"line_end":1209,"column_start":5,"column_end":71}},{"value":"/ non-breaking change. Both version numbers are signals to users","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13249313,"byte_end":13249379,"line_start":1210,"line_end":1210,"column_start":5,"column_end":71}},{"value":"/ what to expect from different versions, and should be carefully","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13249384,"byte_end":13249451,"line_start":1211,"line_end":1211,"column_start":5,"column_end":72}},{"value":"/ chosen based on the product plan.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13249456,"byte_end":13249493,"line_start":1212,"line_end":1212,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13249498,"byte_end":13249501,"line_start":1213,"line_end":1213,"column_start":5,"column_end":8}},{"value":"/ The major version is also reflected in the package name of the","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13249506,"byte_end":13249572,"line_start":1214,"line_end":1214,"column_start":5,"column_end":71}},{"value":"/ interface, which must end in `v<major-version>`, as in","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13249577,"byte_end":13249635,"line_start":1215,"line_end":1215,"column_start":5,"column_end":63}},{"value":"/ `google.feature.v1`. For major versions 0 and 1, the suffix can","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13249640,"byte_end":13249707,"line_start":1216,"line_end":1216,"column_start":5,"column_end":72}},{"value":"/ be omitted. Zero major versions must only be used for","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13249712,"byte_end":13249769,"line_start":1217,"line_end":1217,"column_start":5,"column_end":62}},{"value":"/ experimental, non-GA interfaces.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13249774,"byte_end":13249810,"line_start":1218,"line_end":1218,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13249815,"byte_end":13249818,"line_start":1219,"line_end":1219,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13249823,"byte_end":13249826,"line_start":1220,"line_end":1220,"column_start":5,"column_end":8}},{"value":"prost(string, tag = \"4\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13249831,"byte_end":13249856,"line_start":1221,"line_end":1221,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":2669},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13250036,"byte_end":13250050,"line_start":1226,"line_end":1226,"column_start":9,"column_end":23},"name":"source_context","qualname":"::Api::source_context","value":"std::option::Option<SourceContext>","parent":{"krate":0,"index":2620},"children":[],"decl_id":null,"docs":" Source context for the protocol buffer service represented by this\n message.\n","sig":null,"attributes":[{"value":"/ Source context for the protocol buffer service represented by this","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13249899,"byte_end":13249969,"line_start":1223,"line_end":1223,"column_start":5,"column_end":75}},{"value":"/ message.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13249974,"byte_end":13249986,"line_start":1224,"line_end":1224,"column_start":5,"column_end":17}},{"value":"prost(message, optional, tag = \"5\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13249991,"byte_end":13250027,"line_start":1225,"line_end":1225,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":2670},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13250183,"byte_end":13250189,"line_start":1229,"line_end":1229,"column_start":9,"column_end":15},"name":"mixins","qualname":"::Api::mixins","value":"std::vec::Vec<Mixin>","parent":{"krate":0,"index":2620},"children":[],"decl_id":null,"docs":" Included interfaces. See [Mixin][].\n","sig":null,"attributes":[{"value":"/ Included interfaces. See [Mixin][].","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13250094,"byte_end":13250133,"line_start":1227,"line_end":1227,"column_start":5,"column_end":44}},{"value":"prost(message, repeated, tag = \"6\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13250138,"byte_end":13250174,"line_start":1228,"line_end":1228,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":2671},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13250309,"byte_end":13250315,"line_start":1232,"line_end":1232,"column_start":9,"column_end":15},"name":"syntax","qualname":"::Api::syntax","value":"i32","parent":{"krate":0,"index":2620},"children":[],"decl_id":null,"docs":" The source syntax of the service.\n","sig":null,"attributes":[{"value":"/ The source syntax of the service.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13250219,"byte_end":13250256,"line_start":1230,"line_end":1230,"column_start":5,"column_end":42}},{"value":"prost(enumeration = \"Syntax\", tag = \"7\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13250261,"byte_end":13250300,"line_start":1231,"line_end":1231,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2663},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13250309,"byte_end":13250315,"line_start":1232,"line_end":1232,"column_start":9,"column_end":15},"name":"syntax","qualname":"<Api>::syntax","value":"pub fn syntax(&Self) -> super::Syntax","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2672},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13250433,"byte_end":13250439,"line_start":1236,"line_end":1236,"column_start":12,"column_end":18},"name":"Method","qualname":"::Method","value":"Method { name, request_type_url, request_streaming, response_type_url, response_streaming, options, syntax }","parent":null,"children":[{"krate":0,"index":2722},{"krate":0,"index":2723},{"krate":0,"index":2724},{"krate":0,"index":2725},{"krate":0,"index":2726},{"krate":0,"index":2727},{"krate":0,"index":2728}],"decl_id":null,"docs":" Method represents a method of an API interface.\n","sig":null,"attributes":[{"value":"/ Method represents a method of an API interface.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13250324,"byte_end":13250375,"line_start":1234,"line_end":1234,"column_start":1,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2722},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13250520,"byte_end":13250524,"line_start":1239,"line_end":1239,"column_start":9,"column_end":13},"name":"name","qualname":"::Method::name","value":"std::string::String","parent":{"krate":0,"index":2672},"children":[],"decl_id":null,"docs":" The simple name of this method.\n","sig":null,"attributes":[{"value":"/ The simple name of this method.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13250446,"byte_end":13250481,"line_start":1237,"line_end":1237,"column_start":5,"column_end":40}},{"value":"prost(string, tag = \"1\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13250486,"byte_end":13250511,"line_start":1238,"line_end":1238,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":2723},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13250626,"byte_end":13250642,"line_start":1242,"line_end":1242,"column_start":9,"column_end":25},"name":"request_type_url","qualname":"::Method::request_type_url","value":"std::string::String","parent":{"krate":0,"index":2672},"children":[],"decl_id":null,"docs":" A URL of the input message type.\n","sig":null,"attributes":[{"value":"/ A URL of the input message type.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13250551,"byte_end":13250587,"line_start":1240,"line_end":1240,"column_start":5,"column_end":41}},{"value":"prost(string, tag = \"2\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13250592,"byte_end":13250617,"line_start":1241,"line_end":1241,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":2724},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13250743,"byte_end":13250760,"line_start":1245,"line_end":1245,"column_start":9,"column_end":26},"name":"request_streaming","qualname":"::Method::request_streaming","value":"bool","parent":{"krate":0,"index":2672},"children":[],"decl_id":null,"docs":" If true, the request is streamed.\n","sig":null,"attributes":[{"value":"/ If true, the request is streamed.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13250669,"byte_end":13250706,"line_start":1243,"line_end":1243,"column_start":5,"column_end":42}},{"value":"prost(bool, tag = \"3\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13250711,"byte_end":13250734,"line_start":1244,"line_end":1244,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":2725},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13250850,"byte_end":13250867,"line_start":1248,"line_end":1248,"column_start":9,"column_end":26},"name":"response_type_url","qualname":"::Method::response_type_url","value":"std::string::String","parent":{"krate":0,"index":2672},"children":[],"decl_id":null,"docs":" The URL of the output message type.\n","sig":null,"attributes":[{"value":"/ The URL of the output message type.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13250772,"byte_end":13250811,"line_start":1246,"line_end":1246,"column_start":5,"column_end":44}},{"value":"prost(string, tag = \"4\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13250816,"byte_end":13250841,"line_start":1247,"line_end":1247,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":2726},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13250969,"byte_end":13250987,"line_start":1251,"line_end":1251,"column_start":9,"column_end":27},"name":"response_streaming","qualname":"::Method::response_streaming","value":"bool","parent":{"krate":0,"index":2672},"children":[],"decl_id":null,"docs":" If true, the response is streamed.\n","sig":null,"attributes":[{"value":"/ If true, the response is streamed.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13250894,"byte_end":13250932,"line_start":1249,"line_end":1249,"column_start":5,"column_end":43}},{"value":"prost(bool, tag = \"5\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13250937,"byte_end":13250960,"line_start":1250,"line_end":1250,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":2727},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13251089,"byte_end":13251096,"line_start":1254,"line_end":1254,"column_start":9,"column_end":16},"name":"options","qualname":"::Method::options","value":"std::vec::Vec<Option>","parent":{"krate":0,"index":2672},"children":[],"decl_id":null,"docs":" Any metadata attached to the method.\n","sig":null,"attributes":[{"value":"/ Any metadata attached to the method.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13250999,"byte_end":13251039,"line_start":1252,"line_end":1252,"column_start":5,"column_end":45}},{"value":"prost(message, repeated, tag = \"6\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13251044,"byte_end":13251080,"line_start":1253,"line_end":1253,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":2728},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13251217,"byte_end":13251223,"line_start":1257,"line_end":1257,"column_start":9,"column_end":15},"name":"syntax","qualname":"::Method::syntax","value":"i32","parent":{"krate":0,"index":2672},"children":[],"decl_id":null,"docs":" The source syntax of this method.\n","sig":null,"attributes":[{"value":"/ The source syntax of this method.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13251127,"byte_end":13251164,"line_start":1255,"line_end":1255,"column_start":5,"column_end":42}},{"value":"prost(enumeration = \"Syntax\", tag = \"7\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13251169,"byte_end":13251208,"line_start":1256,"line_end":1256,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2720},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13251217,"byte_end":13251223,"line_start":1257,"line_end":1257,"column_start":9,"column_end":15},"name":"syntax","qualname":"<Method>::syntax","value":"pub fn syntax(&Self) -> super::Syntax","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2729},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13254013,"byte_end":13254018,"line_start":1338,"line_end":1338,"column_start":12,"column_end":17},"name":"Mixin","qualname":"::Mixin","value":"Mixin { name, root }","parent":null,"children":[{"krate":0,"index":2758},{"krate":0,"index":2759}],"decl_id":null,"docs":" Declares an API Interface to be included in this interface. The including\n interface must redeclare all the methods from the included interface, but\n documentation and options are inherited as follows:","sig":null,"attributes":[{"value":"/ Declares an API Interface to be included in this interface. The including","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13251232,"byte_end":13251309,"line_start":1259,"line_end":1259,"column_start":1,"column_end":78}},{"value":"/ interface must redeclare all the methods from the included interface, but","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13251310,"byte_end":13251387,"line_start":1260,"line_end":1260,"column_start":1,"column_end":78}},{"value":"/ documentation and options are inherited as follows:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13251388,"byte_end":13251443,"line_start":1261,"line_end":1261,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13251444,"byte_end":13251447,"line_start":1262,"line_end":1262,"column_start":1,"column_end":4}},{"value":"/ - If after comment and whitespace stripping, the documentation","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13251448,"byte_end":13251514,"line_start":1263,"line_end":1263,"column_start":1,"column_end":67}},{"value":"/   string of the redeclared method is empty, it will be inherited","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13251515,"byte_end":13251583,"line_start":1264,"line_end":1264,"column_start":1,"column_end":69}},{"value":"/   from the original method.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13251584,"byte_end":13251615,"line_start":1265,"line_end":1265,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13251616,"byte_end":13251619,"line_start":1266,"line_end":1266,"column_start":1,"column_end":4}},{"value":"/ - Each annotation belonging to the service config (http,","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13251620,"byte_end":13251680,"line_start":1267,"line_end":1267,"column_start":1,"column_end":61}},{"value":"/   visibility) which is not set in the redeclared method will be","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13251681,"byte_end":13251748,"line_start":1268,"line_end":1268,"column_start":1,"column_end":68}},{"value":"/   inherited.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13251749,"byte_end":13251765,"line_start":1269,"line_end":1269,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13251766,"byte_end":13251769,"line_start":1270,"line_end":1270,"column_start":1,"column_end":4}},{"value":"/ - If an http annotation is inherited, the path pattern will be","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13251770,"byte_end":13251836,"line_start":1271,"line_end":1271,"column_start":1,"column_end":67}},{"value":"/   modified as follows. Any version prefix will be replaced by the","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13251837,"byte_end":13251906,"line_start":1272,"line_end":1272,"column_start":1,"column_end":70}},{"value":"/   version of the including interface plus the [root][] path if","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13251907,"byte_end":13251973,"line_start":1273,"line_end":1273,"column_start":1,"column_end":67}},{"value":"/   specified.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13251974,"byte_end":13251990,"line_start":1274,"line_end":1274,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13251991,"byte_end":13251994,"line_start":1275,"line_end":1275,"column_start":1,"column_end":4}},{"value":"/ Example of a simple mixin:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13251995,"byte_end":13252025,"line_start":1276,"line_end":1276,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13252026,"byte_end":13252029,"line_start":1277,"line_end":1277,"column_start":1,"column_end":4}},{"value":"/     package google.acl.v1;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13252030,"byte_end":13252060,"line_start":1278,"line_end":1278,"column_start":1,"column_end":31}},{"value":"/     service AccessControl {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13252061,"byte_end":13252092,"line_start":1279,"line_end":1279,"column_start":1,"column_end":32}},{"value":"/       // Get the underlying ACL object.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13252093,"byte_end":13252136,"line_start":1280,"line_end":1280,"column_start":1,"column_end":44}},{"value":"/       rpc GetAcl(GetAclRequest) returns (Acl) {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13252137,"byte_end":13252188,"line_start":1281,"line_end":1281,"column_start":1,"column_end":52}},{"value":"/         option (google.api.http).get = \"/v1/{resource=**}:getAcl\";","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13252189,"byte_end":13252259,"line_start":1282,"line_end":1282,"column_start":1,"column_end":71}},{"value":"/       }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13252260,"byte_end":13252271,"line_start":1283,"line_end":1283,"column_start":1,"column_end":12}},{"value":"/     }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13252272,"byte_end":13252281,"line_start":1284,"line_end":1284,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13252282,"byte_end":13252285,"line_start":1285,"line_end":1285,"column_start":1,"column_end":4}},{"value":"/     package google.storage.v2;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13252286,"byte_end":13252320,"line_start":1286,"line_end":1286,"column_start":1,"column_end":35}},{"value":"/     service Storage {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13252321,"byte_end":13252346,"line_start":1287,"line_end":1287,"column_start":1,"column_end":26}},{"value":"/       rpc GetAcl(GetAclRequest) returns (Acl);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13252347,"byte_end":13252397,"line_start":1288,"line_end":1288,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13252398,"byte_end":13252401,"line_start":1289,"line_end":1289,"column_start":1,"column_end":4}},{"value":"/       // Get a data record.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13252402,"byte_end":13252433,"line_start":1290,"line_end":1290,"column_start":1,"column_end":32}},{"value":"/       rpc GetData(GetDataRequest) returns (Data) {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13252434,"byte_end":13252488,"line_start":1291,"line_end":1291,"column_start":1,"column_end":55}},{"value":"/         option (google.api.http).get = \"/v2/{resource=**}\";","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13252489,"byte_end":13252552,"line_start":1292,"line_end":1292,"column_start":1,"column_end":64}},{"value":"/       }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13252553,"byte_end":13252564,"line_start":1293,"line_end":1293,"column_start":1,"column_end":12}},{"value":"/     }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13252565,"byte_end":13252574,"line_start":1294,"line_end":1294,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13252575,"byte_end":13252578,"line_start":1295,"line_end":1295,"column_start":1,"column_end":4}},{"value":"/ Example of a mixin configuration:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13252579,"byte_end":13252616,"line_start":1296,"line_end":1296,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13252617,"byte_end":13252620,"line_start":1297,"line_end":1297,"column_start":1,"column_end":4}},{"value":"/     apis:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13252621,"byte_end":13252634,"line_start":1298,"line_end":1298,"column_start":1,"column_end":14}},{"value":"/     - name: google.storage.v2.Storage","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13252635,"byte_end":13252676,"line_start":1299,"line_end":1299,"column_start":1,"column_end":42}},{"value":"/       mixins:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13252677,"byte_end":13252694,"line_start":1300,"line_end":1300,"column_start":1,"column_end":18}},{"value":"/       - name: google.acl.v1.AccessControl","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13252695,"byte_end":13252740,"line_start":1301,"line_end":1301,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13252741,"byte_end":13252744,"line_start":1302,"line_end":1302,"column_start":1,"column_end":4}},{"value":"/ The mixin construct implies that all methods in `AccessControl` are","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13252745,"byte_end":13252816,"line_start":1303,"line_end":1303,"column_start":1,"column_end":72}},{"value":"/ also declared with same name and request/response types in","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13252817,"byte_end":13252879,"line_start":1304,"line_end":1304,"column_start":1,"column_end":63}},{"value":"/ `Storage`. A documentation generator or annotation processor will","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13252880,"byte_end":13252949,"line_start":1305,"line_end":1305,"column_start":1,"column_end":70}},{"value":"/ see the effective `Storage.GetAcl` method after inherting","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13252950,"byte_end":13253011,"line_start":1306,"line_end":1306,"column_start":1,"column_end":62}},{"value":"/ documentation and annotations as follows:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13253012,"byte_end":13253057,"line_start":1307,"line_end":1307,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13253058,"byte_end":13253061,"line_start":1308,"line_end":1308,"column_start":1,"column_end":4}},{"value":"/     service Storage {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13253062,"byte_end":13253087,"line_start":1309,"line_end":1309,"column_start":1,"column_end":26}},{"value":"/       // Get the underlying ACL object.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13253088,"byte_end":13253131,"line_start":1310,"line_end":1310,"column_start":1,"column_end":44}},{"value":"/       rpc GetAcl(GetAclRequest) returns (Acl) {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13253132,"byte_end":13253183,"line_start":1311,"line_end":1311,"column_start":1,"column_end":52}},{"value":"/         option (google.api.http).get = \"/v2/{resource=**}:getAcl\";","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13253184,"byte_end":13253254,"line_start":1312,"line_end":1312,"column_start":1,"column_end":71}},{"value":"/       }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13253255,"byte_end":13253266,"line_start":1313,"line_end":1313,"column_start":1,"column_end":12}},{"value":"/       ...","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13253267,"byte_end":13253280,"line_start":1314,"line_end":1314,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13253281,"byte_end":13253290,"line_start":1315,"line_end":1315,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13253291,"byte_end":13253294,"line_start":1316,"line_end":1316,"column_start":1,"column_end":4}},{"value":"/ Note how the version in the path pattern changed from `v1` to `v2`.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13253295,"byte_end":13253366,"line_start":1317,"line_end":1317,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13253367,"byte_end":13253370,"line_start":1318,"line_end":1318,"column_start":1,"column_end":4}},{"value":"/ If the `root` field in the mixin is specified, it should be a","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13253371,"byte_end":13253436,"line_start":1319,"line_end":1319,"column_start":1,"column_end":66}},{"value":"/ relative path under which inherited HTTP paths are placed. Example:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13253437,"byte_end":13253508,"line_start":1320,"line_end":1320,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13253509,"byte_end":13253512,"line_start":1321,"line_end":1321,"column_start":1,"column_end":4}},{"value":"/     apis:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13253513,"byte_end":13253526,"line_start":1322,"line_end":1322,"column_start":1,"column_end":14}},{"value":"/     - name: google.storage.v2.Storage","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13253527,"byte_end":13253568,"line_start":1323,"line_end":1323,"column_start":1,"column_end":42}},{"value":"/       mixins:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13253569,"byte_end":13253586,"line_start":1324,"line_end":1324,"column_start":1,"column_end":18}},{"value":"/       - name: google.acl.v1.AccessControl","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13253587,"byte_end":13253632,"line_start":1325,"line_end":1325,"column_start":1,"column_end":46}},{"value":"/         root: acls","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13253633,"byte_end":13253655,"line_start":1326,"line_end":1326,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13253656,"byte_end":13253659,"line_start":1327,"line_end":1327,"column_start":1,"column_end":4}},{"value":"/ This implies the following inherited HTTP annotation:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13253660,"byte_end":13253717,"line_start":1328,"line_end":1328,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13253718,"byte_end":13253721,"line_start":1329,"line_end":1329,"column_start":1,"column_end":4}},{"value":"/     service Storage {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13253722,"byte_end":13253747,"line_start":1330,"line_end":1330,"column_start":1,"column_end":26}},{"value":"/       // Get the underlying ACL object.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13253748,"byte_end":13253791,"line_start":1331,"line_end":1331,"column_start":1,"column_end":44}},{"value":"/       rpc GetAcl(GetAclRequest) returns (Acl) {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13253792,"byte_end":13253843,"line_start":1332,"line_end":1332,"column_start":1,"column_end":52}},{"value":"/         option (google.api.http).get = \"/v2/acls/{resource=**}:getAcl\";","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13253844,"byte_end":13253919,"line_start":1333,"line_end":1333,"column_start":1,"column_end":76}},{"value":"/       }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13253920,"byte_end":13253931,"line_start":1334,"line_end":1334,"column_start":1,"column_end":12}},{"value":"/       ...","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13253932,"byte_end":13253945,"line_start":1335,"line_end":1335,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13253946,"byte_end":13253955,"line_start":1336,"line_end":1336,"column_start":1,"column_end":10}}]},{"kind":"Field","id":{"krate":0,"index":2758},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13254128,"byte_end":13254132,"line_start":1341,"line_end":1341,"column_start":9,"column_end":13},"name":"name","qualname":"::Mixin::name","value":"std::string::String","parent":{"krate":0,"index":2729},"children":[],"decl_id":null,"docs":" The fully qualified name of the interface which is included.\n","sig":null,"attributes":[{"value":"/ The fully qualified name of the interface which is included.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13254025,"byte_end":13254089,"line_start":1339,"line_end":1339,"column_start":5,"column_end":69}},{"value":"prost(string, tag = \"1\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13254094,"byte_end":13254119,"line_start":1340,"line_end":1340,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":2759},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13254284,"byte_end":13254288,"line_start":1345,"line_end":1345,"column_start":9,"column_end":13},"name":"root","qualname":"::Mixin::root","value":"std::string::String","parent":{"krate":0,"index":2729},"children":[],"decl_id":null,"docs":" If non-empty specifies a path under which inherited HTTP paths\n are rooted.\n","sig":null,"attributes":[{"value":"/ If non-empty specifies a path under which inherited HTTP paths","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13254159,"byte_end":13254225,"line_start":1342,"line_end":1342,"column_start":5,"column_end":71}},{"value":"/ are rooted.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13254230,"byte_end":13254245,"line_start":1343,"line_end":1343,"column_start":5,"column_end":20}},{"value":"prost(string, tag = \"2\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13254250,"byte_end":13254275,"line_start":1344,"line_end":1344,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":2760},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13256616,"byte_end":13256624,"line_start":1408,"line_end":1408,"column_start":12,"column_end":20},"name":"Duration","qualname":"::Duration","value":"Duration { seconds, nanos }","parent":null,"children":[{"krate":0,"index":2789},{"krate":0,"index":2790}],"decl_id":null,"docs":" A Duration represents a signed, fixed-length span of time represented\n as a count of seconds and fractions of seconds at nanosecond\n resolution. It is independent of any calendar and concepts like \"day\"\n or \"month\". It is related to Timestamp in that the difference between\n two Timestamp values is a Duration and it can be added or subtracted\n from a Timestamp. Range is approximately +-10,000 years.","sig":null,"attributes":[{"value":"/ A Duration represents a signed, fixed-length span of time represented","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13254313,"byte_end":13254386,"line_start":1347,"line_end":1347,"column_start":1,"column_end":74}},{"value":"/ as a count of seconds and fractions of seconds at nanosecond","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13254387,"byte_end":13254451,"line_start":1348,"line_end":1348,"column_start":1,"column_end":65}},{"value":"/ resolution. It is independent of any calendar and concepts like \"day\"","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13254452,"byte_end":13254525,"line_start":1349,"line_end":1349,"column_start":1,"column_end":74}},{"value":"/ or \"month\". It is related to Timestamp in that the difference between","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13254526,"byte_end":13254599,"line_start":1350,"line_end":1350,"column_start":1,"column_end":74}},{"value":"/ two Timestamp values is a Duration and it can be added or subtracted","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13254600,"byte_end":13254672,"line_start":1351,"line_end":1351,"column_start":1,"column_end":73}},{"value":"/ from a Timestamp. Range is approximately +-10,000 years.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13254673,"byte_end":13254733,"line_start":1352,"line_end":1352,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13254734,"byte_end":13254737,"line_start":1353,"line_end":1353,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13254738,"byte_end":13254752,"line_start":1354,"line_end":1354,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13254753,"byte_end":13254756,"line_start":1355,"line_end":1355,"column_start":1,"column_end":4}},{"value":"/ Example 1: Compute Duration from two Timestamps in pseudo code.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13254757,"byte_end":13254824,"line_start":1356,"line_end":1356,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13254825,"byte_end":13254828,"line_start":1357,"line_end":1357,"column_start":1,"column_end":4}},{"value":"/     Timestamp start = ...;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13254829,"byte_end":13254859,"line_start":1358,"line_end":1358,"column_start":1,"column_end":31}},{"value":"/     Timestamp end = ...;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13254860,"byte_end":13254888,"line_start":1359,"line_end":1359,"column_start":1,"column_end":29}},{"value":"/     Duration duration = ...;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13254889,"byte_end":13254921,"line_start":1360,"line_end":1360,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13254922,"byte_end":13254925,"line_start":1361,"line_end":1361,"column_start":1,"column_end":4}},{"value":"/     duration.seconds = end.seconds - start.seconds;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13254926,"byte_end":13254981,"line_start":1362,"line_end":1362,"column_start":1,"column_end":56}},{"value":"/     duration.nanos = end.nanos - start.nanos;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13254982,"byte_end":13255031,"line_start":1363,"line_end":1363,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13255032,"byte_end":13255035,"line_start":1364,"line_end":1364,"column_start":1,"column_end":4}},{"value":"/     if (duration.seconds < 0 && duration.nanos > 0) {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13255036,"byte_end":13255093,"line_start":1365,"line_end":1365,"column_start":1,"column_end":58}},{"value":"/       duration.seconds += 1;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13255094,"byte_end":13255126,"line_start":1366,"line_end":1366,"column_start":1,"column_end":33}},{"value":"/       duration.nanos -= 1000000000;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13255127,"byte_end":13255166,"line_start":1367,"line_end":1367,"column_start":1,"column_end":40}},{"value":"/     } else if (durations.seconds > 0 && duration.nanos < 0) {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13255167,"byte_end":13255232,"line_start":1368,"line_end":1368,"column_start":1,"column_end":66}},{"value":"/       duration.seconds -= 1;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13255233,"byte_end":13255265,"line_start":1369,"line_end":1369,"column_start":1,"column_end":33}},{"value":"/       duration.nanos += 1000000000;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13255266,"byte_end":13255305,"line_start":1370,"line_end":1370,"column_start":1,"column_end":40}},{"value":"/     }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13255306,"byte_end":13255315,"line_start":1371,"line_end":1371,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13255316,"byte_end":13255319,"line_start":1372,"line_end":1372,"column_start":1,"column_end":4}},{"value":"/ Example 2: Compute Timestamp from Timestamp + Duration in pseudo code.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13255320,"byte_end":13255394,"line_start":1373,"line_end":1373,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13255395,"byte_end":13255398,"line_start":1374,"line_end":1374,"column_start":1,"column_end":4}},{"value":"/     Timestamp start = ...;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13255399,"byte_end":13255429,"line_start":1375,"line_end":1375,"column_start":1,"column_end":31}},{"value":"/     Duration duration = ...;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13255430,"byte_end":13255462,"line_start":1376,"line_end":1376,"column_start":1,"column_end":33}},{"value":"/     Timestamp end = ...;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13255463,"byte_end":13255491,"line_start":1377,"line_end":1377,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13255492,"byte_end":13255495,"line_start":1378,"line_end":1378,"column_start":1,"column_end":4}},{"value":"/     end.seconds = start.seconds + duration.seconds;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13255496,"byte_end":13255551,"line_start":1379,"line_end":1379,"column_start":1,"column_end":56}},{"value":"/     end.nanos = start.nanos + duration.nanos;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13255552,"byte_end":13255601,"line_start":1380,"line_end":1380,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13255602,"byte_end":13255605,"line_start":1381,"line_end":1381,"column_start":1,"column_end":4}},{"value":"/     if (end.nanos < 0) {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13255606,"byte_end":13255634,"line_start":1382,"line_end":1382,"column_start":1,"column_end":29}},{"value":"/       end.seconds -= 1;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13255635,"byte_end":13255662,"line_start":1383,"line_end":1383,"column_start":1,"column_end":28}},{"value":"/       end.nanos += 1000000000;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13255663,"byte_end":13255697,"line_start":1384,"line_end":1384,"column_start":1,"column_end":35}},{"value":"/     } else if (end.nanos >= 1000000000) {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13255698,"byte_end":13255743,"line_start":1385,"line_end":1385,"column_start":1,"column_end":46}},{"value":"/       end.seconds += 1;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13255744,"byte_end":13255771,"line_start":1386,"line_end":1386,"column_start":1,"column_end":28}},{"value":"/       end.nanos -= 1000000000;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13255772,"byte_end":13255806,"line_start":1387,"line_end":1387,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13255807,"byte_end":13255816,"line_start":1388,"line_end":1388,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13255817,"byte_end":13255820,"line_start":1389,"line_end":1389,"column_start":1,"column_end":4}},{"value":"/ Example 3: Compute Duration from datetime.timedelta in Python.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13255821,"byte_end":13255887,"line_start":1390,"line_end":1390,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13255888,"byte_end":13255891,"line_start":1391,"line_end":1391,"column_start":1,"column_end":4}},{"value":"/     td = datetime.timedelta(days=3, minutes=10)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13255892,"byte_end":13255943,"line_start":1392,"line_end":1392,"column_start":1,"column_end":52}},{"value":"/     duration = Duration()","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13255944,"byte_end":13255973,"line_start":1393,"line_end":1393,"column_start":1,"column_end":30}},{"value":"/     duration.FromTimedelta(td)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13255974,"byte_end":13256008,"line_start":1394,"line_end":1394,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13256009,"byte_end":13256012,"line_start":1395,"line_end":1395,"column_start":1,"column_end":4}},{"value":"/ # JSON Mapping","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13256013,"byte_end":13256031,"line_start":1396,"line_end":1396,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13256032,"byte_end":13256035,"line_start":1397,"line_end":1397,"column_start":1,"column_end":4}},{"value":"/ In JSON format, the Duration type is encoded as a string rather than an","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13256036,"byte_end":13256111,"line_start":1398,"line_end":1398,"column_start":1,"column_end":76}},{"value":"/ object, where the string ends in the suffix \"s\" (indicating seconds) and","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13256112,"byte_end":13256188,"line_start":1399,"line_end":1399,"column_start":1,"column_end":77}},{"value":"/ is preceded by the number of seconds, with nanoseconds expressed as","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13256189,"byte_end":13256260,"line_start":1400,"line_end":1400,"column_start":1,"column_end":72}},{"value":"/ fractional seconds. For example, 3 seconds with 0 nanoseconds should be","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13256261,"byte_end":13256336,"line_start":1401,"line_end":1401,"column_start":1,"column_end":76}},{"value":"/ encoded in JSON format as \"3s\", while 3 seconds and 1 nanosecond should","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13256337,"byte_end":13256412,"line_start":1402,"line_end":1402,"column_start":1,"column_end":76}},{"value":"/ be expressed in JSON format as \"3.000000001s\", and 3 seconds and 1","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13256413,"byte_end":13256483,"line_start":1403,"line_end":1403,"column_start":1,"column_end":71}},{"value":"/ microsecond should be expressed in JSON format as \"3.000001s\".","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13256484,"byte_end":13256550,"line_start":1404,"line_end":1404,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13256551,"byte_end":13256554,"line_start":1405,"line_end":1405,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13256555,"byte_end":13256558,"line_start":1406,"line_end":1406,"column_start":1,"column_end":4}}]},{"kind":"Field","id":{"krate":0,"index":2789},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13256891,"byte_end":13256898,"line_start":1413,"line_end":1413,"column_start":9,"column_end":16},"name":"seconds","qualname":"::Duration::seconds","value":"i64","parent":{"krate":0,"index":2760},"children":[],"decl_id":null,"docs":" Signed seconds of the span of time. Must be from -315,576,000,000\n to +315,576,000,000 inclusive. Note: these bounds are computed from:\n 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years\n","sig":null,"attributes":[{"value":"/ Signed seconds of the span of time. Must be from -315,576,000,000","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13256631,"byte_end":13256700,"line_start":1409,"line_end":1409,"column_start":5,"column_end":74}},{"value":"/ to +315,576,000,000 inclusive. Note: these bounds are computed from:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13256705,"byte_end":13256777,"line_start":1410,"line_end":1410,"column_start":5,"column_end":77}},{"value":"/ 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13256782,"byte_end":13256853,"line_start":1411,"line_end":1411,"column_start":5,"column_end":76}},{"value":"prost(int64, tag = \"1\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13256858,"byte_end":13256882,"line_start":1412,"line_end":1412,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":2790},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13257357,"byte_end":13257362,"line_start":1421,"line_end":1421,"column_start":9,"column_end":14},"name":"nanos","qualname":"::Duration::nanos","value":"i32","parent":{"krate":0,"index":2760},"children":[],"decl_id":null,"docs":" Signed fractions of a second at nanosecond resolution of the span\n of time. Durations less than one second are represented with a 0\n `seconds` field and a positive or negative `nanos` field. For durations\n of one second or more, a non-zero value for the `nanos` field must be\n of the same sign as the `seconds` field. Must be from -999,999,999\n to +999,999,999 inclusive.\n","sig":null,"attributes":[{"value":"/ Signed fractions of a second at nanosecond resolution of the span","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13256909,"byte_end":13256978,"line_start":1414,"line_end":1414,"column_start":5,"column_end":74}},{"value":"/ of time. Durations less than one second are represented with a 0","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13256983,"byte_end":13257051,"line_start":1415,"line_end":1415,"column_start":5,"column_end":73}},{"value":"/ `seconds` field and a positive or negative `nanos` field. For durations","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13257056,"byte_end":13257131,"line_start":1416,"line_end":1416,"column_start":5,"column_end":80}},{"value":"/ of one second or more, a non-zero value for the `nanos` field must be","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13257136,"byte_end":13257209,"line_start":1417,"line_end":1417,"column_start":5,"column_end":78}},{"value":"/ of the same sign as the `seconds` field. Must be from -999,999,999","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13257214,"byte_end":13257284,"line_start":1418,"line_end":1418,"column_start":5,"column_end":75}},{"value":"/ to +999,999,999 inclusive.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13257289,"byte_end":13257319,"line_start":1419,"line_end":1419,"column_start":5,"column_end":35}},{"value":"prost(int32, tag = \"2\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13257324,"byte_end":13257348,"line_start":1420,"line_end":1420,"column_start":5,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":2791},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13263725,"byte_end":13263734,"line_start":1631,"line_end":1631,"column_start":12,"column_end":21},"name":"FieldMask","qualname":"::FieldMask","value":"FieldMask { paths }","parent":null,"children":[{"krate":0,"index":2824}],"decl_id":null,"docs":" `FieldMask` represents a set of symbolic field paths, for example:","sig":null,"attributes":[{"value":"/ `FieldMask` represents a set of symbolic field paths, for example:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13257371,"byte_end":13257441,"line_start":1423,"line_end":1423,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13257442,"byte_end":13257445,"line_start":1424,"line_end":1424,"column_start":1,"column_end":4}},{"value":"/     paths: \"f.a\"","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13257446,"byte_end":13257466,"line_start":1425,"line_end":1425,"column_start":1,"column_end":21}},{"value":"/     paths: \"f.b.d\"","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13257467,"byte_end":13257489,"line_start":1426,"line_end":1426,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13257490,"byte_end":13257493,"line_start":1427,"line_end":1427,"column_start":1,"column_end":4}},{"value":"/ Here `f` represents a field in some root message, `a` and `b`","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13257494,"byte_end":13257559,"line_start":1428,"line_end":1428,"column_start":1,"column_end":66}},{"value":"/ fields in the message found in `f`, and `d` a field found in the","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13257560,"byte_end":13257628,"line_start":1429,"line_end":1429,"column_start":1,"column_end":69}},{"value":"/ message in `f.b`.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13257629,"byte_end":13257650,"line_start":1430,"line_end":1430,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13257651,"byte_end":13257654,"line_start":1431,"line_end":1431,"column_start":1,"column_end":4}},{"value":"/ Field masks are used to specify a subset of fields that should be","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13257655,"byte_end":13257724,"line_start":1432,"line_end":1432,"column_start":1,"column_end":70}},{"value":"/ returned by a get operation or modified by an update operation.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13257725,"byte_end":13257792,"line_start":1433,"line_end":1433,"column_start":1,"column_end":68}},{"value":"/ Field masks also have a custom JSON encoding (see below).","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13257793,"byte_end":13257854,"line_start":1434,"line_end":1434,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13257855,"byte_end":13257858,"line_start":1435,"line_end":1435,"column_start":1,"column_end":4}},{"value":"/ # Field Masks in Projections","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13257859,"byte_end":13257891,"line_start":1436,"line_end":1436,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13257892,"byte_end":13257895,"line_start":1437,"line_end":1437,"column_start":1,"column_end":4}},{"value":"/ When used in the context of a projection, a response message or","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13257896,"byte_end":13257963,"line_start":1438,"line_end":1438,"column_start":1,"column_end":68}},{"value":"/ sub-message is filtered by the API to only contain those fields as","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13257964,"byte_end":13258034,"line_start":1439,"line_end":1439,"column_start":1,"column_end":71}},{"value":"/ specified in the mask. For example, if the mask in the previous","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13258035,"byte_end":13258102,"line_start":1440,"line_end":1440,"column_start":1,"column_end":68}},{"value":"/ example is applied to a response message as follows:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13258103,"byte_end":13258159,"line_start":1441,"line_end":1441,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13258160,"byte_end":13258163,"line_start":1442,"line_end":1442,"column_start":1,"column_end":4}},{"value":"/     f {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13258164,"byte_end":13258175,"line_start":1443,"line_end":1443,"column_start":1,"column_end":12}},{"value":"/       a : 22","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13258176,"byte_end":13258192,"line_start":1444,"line_end":1444,"column_start":1,"column_end":17}},{"value":"/       b {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13258193,"byte_end":13258206,"line_start":1445,"line_end":1445,"column_start":1,"column_end":14}},{"value":"/         d : 1","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13258207,"byte_end":13258224,"line_start":1446,"line_end":1446,"column_start":1,"column_end":18}},{"value":"/         x : 2","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13258225,"byte_end":13258242,"line_start":1447,"line_end":1447,"column_start":1,"column_end":18}},{"value":"/       }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13258243,"byte_end":13258254,"line_start":1448,"line_end":1448,"column_start":1,"column_end":12}},{"value":"/       y : 13","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13258255,"byte_end":13258271,"line_start":1449,"line_end":1449,"column_start":1,"column_end":17}},{"value":"/     }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13258272,"byte_end":13258281,"line_start":1450,"line_end":1450,"column_start":1,"column_end":10}},{"value":"/     z: 8","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13258282,"byte_end":13258294,"line_start":1451,"line_end":1451,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13258295,"byte_end":13258298,"line_start":1452,"line_end":1452,"column_start":1,"column_end":4}},{"value":"/ The result will not contain specific values for fields x,y and z","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13258299,"byte_end":13258367,"line_start":1453,"line_end":1453,"column_start":1,"column_end":69}},{"value":"/ (their value will be set to the default, and omitted in proto text","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13258368,"byte_end":13258438,"line_start":1454,"line_end":1454,"column_start":1,"column_end":71}},{"value":"/ output):","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13258439,"byte_end":13258451,"line_start":1455,"line_end":1455,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13258452,"byte_end":13258455,"line_start":1456,"line_end":1456,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13258456,"byte_end":13258459,"line_start":1457,"line_end":1457,"column_start":1,"column_end":4}},{"value":"/     f {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13258460,"byte_end":13258471,"line_start":1458,"line_end":1458,"column_start":1,"column_end":12}},{"value":"/       a : 22","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13258472,"byte_end":13258488,"line_start":1459,"line_end":1459,"column_start":1,"column_end":17}},{"value":"/       b {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13258489,"byte_end":13258502,"line_start":1460,"line_end":1460,"column_start":1,"column_end":14}},{"value":"/         d : 1","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13258503,"byte_end":13258520,"line_start":1461,"line_end":1461,"column_start":1,"column_end":18}},{"value":"/       }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13258521,"byte_end":13258532,"line_start":1462,"line_end":1462,"column_start":1,"column_end":12}},{"value":"/     }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13258533,"byte_end":13258542,"line_start":1463,"line_end":1463,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13258543,"byte_end":13258546,"line_start":1464,"line_end":1464,"column_start":1,"column_end":4}},{"value":"/ A repeated field is not allowed except at the last position of a","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13258547,"byte_end":13258615,"line_start":1465,"line_end":1465,"column_start":1,"column_end":69}},{"value":"/ paths string.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13258616,"byte_end":13258633,"line_start":1466,"line_end":1466,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13258634,"byte_end":13258637,"line_start":1467,"line_end":1467,"column_start":1,"column_end":4}},{"value":"/ If a FieldMask object is not present in a get operation, the","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13258638,"byte_end":13258702,"line_start":1468,"line_end":1468,"column_start":1,"column_end":65}},{"value":"/ operation applies to all fields (as if a FieldMask of all fields","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13258703,"byte_end":13258771,"line_start":1469,"line_end":1469,"column_start":1,"column_end":69}},{"value":"/ had been specified).","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13258772,"byte_end":13258796,"line_start":1470,"line_end":1470,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13258797,"byte_end":13258800,"line_start":1471,"line_end":1471,"column_start":1,"column_end":4}},{"value":"/ Note that a field mask does not necessarily apply to the","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13258801,"byte_end":13258861,"line_start":1472,"line_end":1472,"column_start":1,"column_end":61}},{"value":"/ top-level response message. In case of a REST get operation, the","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13258862,"byte_end":13258930,"line_start":1473,"line_end":1473,"column_start":1,"column_end":69}},{"value":"/ field mask applies directly to the response, but in case of a REST","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13258931,"byte_end":13259001,"line_start":1474,"line_end":1474,"column_start":1,"column_end":71}},{"value":"/ list operation, the mask instead applies to each individual message","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13259002,"byte_end":13259073,"line_start":1475,"line_end":1475,"column_start":1,"column_end":72}},{"value":"/ in the returned resource list. In case of a REST custom method,","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13259074,"byte_end":13259141,"line_start":1476,"line_end":1476,"column_start":1,"column_end":68}},{"value":"/ other definitions may be used. Where the mask applies will be","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13259142,"byte_end":13259207,"line_start":1477,"line_end":1477,"column_start":1,"column_end":66}},{"value":"/ clearly documented together with its declaration in the API.  In","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13259208,"byte_end":13259276,"line_start":1478,"line_end":1478,"column_start":1,"column_end":69}},{"value":"/ any case, the effect on the returned resource/resources is required","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13259277,"byte_end":13259348,"line_start":1479,"line_end":1479,"column_start":1,"column_end":72}},{"value":"/ behavior for APIs.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13259349,"byte_end":13259371,"line_start":1480,"line_end":1480,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13259372,"byte_end":13259375,"line_start":1481,"line_end":1481,"column_start":1,"column_end":4}},{"value":"/ # Field Masks in Update Operations","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13259376,"byte_end":13259414,"line_start":1482,"line_end":1482,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13259415,"byte_end":13259418,"line_start":1483,"line_end":1483,"column_start":1,"column_end":4}},{"value":"/ A field mask in update operations specifies which fields of the","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13259419,"byte_end":13259486,"line_start":1484,"line_end":1484,"column_start":1,"column_end":68}},{"value":"/ targeted resource are going to be updated. The API is required","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13259487,"byte_end":13259553,"line_start":1485,"line_end":1485,"column_start":1,"column_end":67}},{"value":"/ to only change the values of the fields as specified in the mask","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13259554,"byte_end":13259622,"line_start":1486,"line_end":1486,"column_start":1,"column_end":69}},{"value":"/ and leave the others untouched. If a resource is passed in to","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13259623,"byte_end":13259688,"line_start":1487,"line_end":1487,"column_start":1,"column_end":66}},{"value":"/ describe the updated values, the API ignores the values of all","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13259689,"byte_end":13259755,"line_start":1488,"line_end":1488,"column_start":1,"column_end":67}},{"value":"/ fields not covered by the mask.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13259756,"byte_end":13259791,"line_start":1489,"line_end":1489,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13259792,"byte_end":13259795,"line_start":1490,"line_end":1490,"column_start":1,"column_end":4}},{"value":"/ If a repeated field is specified for an update operation, the existing","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13259796,"byte_end":13259870,"line_start":1491,"line_end":1491,"column_start":1,"column_end":75}},{"value":"/ repeated values in the target resource will be overwritten by the new values.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13259871,"byte_end":13259952,"line_start":1492,"line_end":1492,"column_start":1,"column_end":82}},{"value":"/ Note that a repeated field is only allowed in the last position of a `paths`","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13259953,"byte_end":13260033,"line_start":1493,"line_end":1493,"column_start":1,"column_end":81}},{"value":"/ string.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13260034,"byte_end":13260045,"line_start":1494,"line_end":1494,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13260046,"byte_end":13260049,"line_start":1495,"line_end":1495,"column_start":1,"column_end":4}},{"value":"/ If a sub-message is specified in the last position of the field mask for an","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13260050,"byte_end":13260129,"line_start":1496,"line_end":1496,"column_start":1,"column_end":80}},{"value":"/ update operation, then the existing sub-message in the target resource is","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13260130,"byte_end":13260207,"line_start":1497,"line_end":1497,"column_start":1,"column_end":78}},{"value":"/ overwritten. Given the target message:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13260208,"byte_end":13260250,"line_start":1498,"line_end":1498,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13260251,"byte_end":13260254,"line_start":1499,"line_end":1499,"column_start":1,"column_end":4}},{"value":"/     f {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13260255,"byte_end":13260266,"line_start":1500,"line_end":1500,"column_start":1,"column_end":12}},{"value":"/       b {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13260267,"byte_end":13260280,"line_start":1501,"line_end":1501,"column_start":1,"column_end":14}},{"value":"/         d : 1","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13260281,"byte_end":13260298,"line_start":1502,"line_end":1502,"column_start":1,"column_end":18}},{"value":"/         x : 2","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13260299,"byte_end":13260316,"line_start":1503,"line_end":1503,"column_start":1,"column_end":18}},{"value":"/       }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13260317,"byte_end":13260328,"line_start":1504,"line_end":1504,"column_start":1,"column_end":12}},{"value":"/       c : 1","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13260329,"byte_end":13260344,"line_start":1505,"line_end":1505,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13260345,"byte_end":13260354,"line_start":1506,"line_end":1506,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13260355,"byte_end":13260358,"line_start":1507,"line_end":1507,"column_start":1,"column_end":4}},{"value":"/ And an update message:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13260359,"byte_end":13260385,"line_start":1508,"line_end":1508,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13260386,"byte_end":13260389,"line_start":1509,"line_end":1509,"column_start":1,"column_end":4}},{"value":"/     f {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13260390,"byte_end":13260401,"line_start":1510,"line_end":1510,"column_start":1,"column_end":12}},{"value":"/       b {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13260402,"byte_end":13260415,"line_start":1511,"line_end":1511,"column_start":1,"column_end":14}},{"value":"/         d : 10","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13260416,"byte_end":13260434,"line_start":1512,"line_end":1512,"column_start":1,"column_end":19}},{"value":"/       }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13260435,"byte_end":13260446,"line_start":1513,"line_end":1513,"column_start":1,"column_end":12}},{"value":"/     }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13260447,"byte_end":13260456,"line_start":1514,"line_end":1514,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13260457,"byte_end":13260460,"line_start":1515,"line_end":1515,"column_start":1,"column_end":4}},{"value":"/ then if the field mask is:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13260461,"byte_end":13260491,"line_start":1516,"line_end":1516,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13260492,"byte_end":13260495,"line_start":1517,"line_end":1517,"column_start":1,"column_end":4}},{"value":"/  paths: \"f.b\"","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13260496,"byte_end":13260513,"line_start":1518,"line_end":1518,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13260514,"byte_end":13260517,"line_start":1519,"line_end":1519,"column_start":1,"column_end":4}},{"value":"/ then the result will be:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13260518,"byte_end":13260546,"line_start":1520,"line_end":1520,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13260547,"byte_end":13260550,"line_start":1521,"line_end":1521,"column_start":1,"column_end":4}},{"value":"/     f {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13260551,"byte_end":13260562,"line_start":1522,"line_end":1522,"column_start":1,"column_end":12}},{"value":"/       b {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13260563,"byte_end":13260576,"line_start":1523,"line_end":1523,"column_start":1,"column_end":14}},{"value":"/         d : 10","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13260577,"byte_end":13260595,"line_start":1524,"line_end":1524,"column_start":1,"column_end":19}},{"value":"/       }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13260596,"byte_end":13260607,"line_start":1525,"line_end":1525,"column_start":1,"column_end":12}},{"value":"/       c : 1","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13260608,"byte_end":13260623,"line_start":1526,"line_end":1526,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13260624,"byte_end":13260633,"line_start":1527,"line_end":1527,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13260634,"byte_end":13260637,"line_start":1528,"line_end":1528,"column_start":1,"column_end":4}},{"value":"/ However, if the update mask was:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13260638,"byte_end":13260674,"line_start":1529,"line_end":1529,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13260675,"byte_end":13260678,"line_start":1530,"line_end":1530,"column_start":1,"column_end":4}},{"value":"/  paths: \"f.b.d\"","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13260679,"byte_end":13260698,"line_start":1531,"line_end":1531,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13260699,"byte_end":13260702,"line_start":1532,"line_end":1532,"column_start":1,"column_end":4}},{"value":"/ then the result would be:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13260703,"byte_end":13260732,"line_start":1533,"line_end":1533,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13260733,"byte_end":13260736,"line_start":1534,"line_end":1534,"column_start":1,"column_end":4}},{"value":"/     f {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13260737,"byte_end":13260748,"line_start":1535,"line_end":1535,"column_start":1,"column_end":12}},{"value":"/       b {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13260749,"byte_end":13260762,"line_start":1536,"line_end":1536,"column_start":1,"column_end":14}},{"value":"/         d : 10","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13260763,"byte_end":13260781,"line_start":1537,"line_end":1537,"column_start":1,"column_end":19}},{"value":"/         x : 2","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13260782,"byte_end":13260799,"line_start":1538,"line_end":1538,"column_start":1,"column_end":18}},{"value":"/       }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13260800,"byte_end":13260811,"line_start":1539,"line_end":1539,"column_start":1,"column_end":12}},{"value":"/       c : 1","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13260812,"byte_end":13260827,"line_start":1540,"line_end":1540,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13260828,"byte_end":13260837,"line_start":1541,"line_end":1541,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13260838,"byte_end":13260841,"line_start":1542,"line_end":1542,"column_start":1,"column_end":4}},{"value":"/ In order to reset a field's value to the default, the field must","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13260842,"byte_end":13260910,"line_start":1543,"line_end":1543,"column_start":1,"column_end":69}},{"value":"/ be in the mask and set to the default value in the provided resource.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13260911,"byte_end":13260984,"line_start":1544,"line_end":1544,"column_start":1,"column_end":74}},{"value":"/ Hence, in order to reset all fields of a resource, provide a default","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13260985,"byte_end":13261057,"line_start":1545,"line_end":1545,"column_start":1,"column_end":73}},{"value":"/ instance of the resource and set all fields in the mask, or do","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13261058,"byte_end":13261124,"line_start":1546,"line_end":1546,"column_start":1,"column_end":67}},{"value":"/ not provide a mask as described below.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13261125,"byte_end":13261167,"line_start":1547,"line_end":1547,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13261168,"byte_end":13261171,"line_start":1548,"line_end":1548,"column_start":1,"column_end":4}},{"value":"/ If a field mask is not present on update, the operation applies to","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13261172,"byte_end":13261242,"line_start":1549,"line_end":1549,"column_start":1,"column_end":71}},{"value":"/ all fields (as if a field mask of all fields has been specified).","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13261243,"byte_end":13261312,"line_start":1550,"line_end":1550,"column_start":1,"column_end":70}},{"value":"/ Note that in the presence of schema evolution, this may mean that","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13261313,"byte_end":13261382,"line_start":1551,"line_end":1551,"column_start":1,"column_end":70}},{"value":"/ fields the client does not know and has therefore not filled into","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13261383,"byte_end":13261452,"line_start":1552,"line_end":1552,"column_start":1,"column_end":70}},{"value":"/ the request will be reset to their default. If this is unwanted","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13261453,"byte_end":13261520,"line_start":1553,"line_end":1553,"column_start":1,"column_end":68}},{"value":"/ behavior, a specific service may require a client to always specify","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13261521,"byte_end":13261592,"line_start":1554,"line_end":1554,"column_start":1,"column_end":72}},{"value":"/ a field mask, producing an error if not.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13261593,"byte_end":13261637,"line_start":1555,"line_end":1555,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13261638,"byte_end":13261641,"line_start":1556,"line_end":1556,"column_start":1,"column_end":4}},{"value":"/ As with get operations, the location of the resource which","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13261642,"byte_end":13261704,"line_start":1557,"line_end":1557,"column_start":1,"column_end":63}},{"value":"/ describes the updated values in the request message depends on the","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13261705,"byte_end":13261775,"line_start":1558,"line_end":1558,"column_start":1,"column_end":71}},{"value":"/ operation kind. In any case, the effect of the field mask is","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13261776,"byte_end":13261840,"line_start":1559,"line_end":1559,"column_start":1,"column_end":65}},{"value":"/ required to be honored by the API.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13261841,"byte_end":13261879,"line_start":1560,"line_end":1560,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13261880,"byte_end":13261883,"line_start":1561,"line_end":1561,"column_start":1,"column_end":4}},{"value":"/ ## Considerations for HTTP REST","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13261884,"byte_end":13261919,"line_start":1562,"line_end":1562,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13261920,"byte_end":13261923,"line_start":1563,"line_end":1563,"column_start":1,"column_end":4}},{"value":"/ The HTTP kind of an update operation which uses a field mask must","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13261924,"byte_end":13261993,"line_start":1564,"line_end":1564,"column_start":1,"column_end":70}},{"value":"/ be set to PATCH instead of PUT in order to satisfy HTTP semantics","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13261994,"byte_end":13262063,"line_start":1565,"line_end":1565,"column_start":1,"column_end":70}},{"value":"/ (PUT must only be used for full updates).","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13262064,"byte_end":13262109,"line_start":1566,"line_end":1566,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13262110,"byte_end":13262113,"line_start":1567,"line_end":1567,"column_start":1,"column_end":4}},{"value":"/ # JSON Encoding of Field Masks","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13262114,"byte_end":13262148,"line_start":1568,"line_end":1568,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13262149,"byte_end":13262152,"line_start":1569,"line_end":1569,"column_start":1,"column_end":4}},{"value":"/ In JSON, a field mask is encoded as a single string where paths are","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13262153,"byte_end":13262224,"line_start":1570,"line_end":1570,"column_start":1,"column_end":72}},{"value":"/ separated by a comma. Fields name in each path are converted","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13262225,"byte_end":13262289,"line_start":1571,"line_end":1571,"column_start":1,"column_end":65}},{"value":"/ to/from lower-camel naming conventions.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13262290,"byte_end":13262333,"line_start":1572,"line_end":1572,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13262334,"byte_end":13262337,"line_start":1573,"line_end":1573,"column_start":1,"column_end":4}},{"value":"/ As an example, consider the following message declarations:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13262338,"byte_end":13262401,"line_start":1574,"line_end":1574,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13262402,"byte_end":13262405,"line_start":1575,"line_end":1575,"column_start":1,"column_end":4}},{"value":"/     message Profile {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13262406,"byte_end":13262431,"line_start":1576,"line_end":1576,"column_start":1,"column_end":26}},{"value":"/       User user = 1;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13262432,"byte_end":13262456,"line_start":1577,"line_end":1577,"column_start":1,"column_end":25}},{"value":"/       Photo photo = 2;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13262457,"byte_end":13262483,"line_start":1578,"line_end":1578,"column_start":1,"column_end":27}},{"value":"/     }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13262484,"byte_end":13262493,"line_start":1579,"line_end":1579,"column_start":1,"column_end":10}},{"value":"/     message User {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13262494,"byte_end":13262516,"line_start":1580,"line_end":1580,"column_start":1,"column_end":23}},{"value":"/       string display_name = 1;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13262517,"byte_end":13262551,"line_start":1581,"line_end":1581,"column_start":1,"column_end":35}},{"value":"/       string address = 2;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13262552,"byte_end":13262581,"line_start":1582,"line_end":1582,"column_start":1,"column_end":30}},{"value":"/     }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13262582,"byte_end":13262591,"line_start":1583,"line_end":1583,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13262592,"byte_end":13262595,"line_start":1584,"line_end":1584,"column_start":1,"column_end":4}},{"value":"/ In proto a field mask for `Profile` may look as such:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13262596,"byte_end":13262653,"line_start":1585,"line_end":1585,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13262654,"byte_end":13262657,"line_start":1586,"line_end":1586,"column_start":1,"column_end":4}},{"value":"/     mask {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13262658,"byte_end":13262672,"line_start":1587,"line_end":1587,"column_start":1,"column_end":15}},{"value":"/       paths: \"user.display_name\"","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13262673,"byte_end":13262709,"line_start":1588,"line_end":1588,"column_start":1,"column_end":37}},{"value":"/       paths: \"photo\"","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13262710,"byte_end":13262734,"line_start":1589,"line_end":1589,"column_start":1,"column_end":25}},{"value":"/     }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13262735,"byte_end":13262744,"line_start":1590,"line_end":1590,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13262745,"byte_end":13262748,"line_start":1591,"line_end":1591,"column_start":1,"column_end":4}},{"value":"/ In JSON, the same mask is represented as below:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13262749,"byte_end":13262800,"line_start":1592,"line_end":1592,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13262801,"byte_end":13262804,"line_start":1593,"line_end":1593,"column_start":1,"column_end":4}},{"value":"/     {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13262805,"byte_end":13262814,"line_start":1594,"line_end":1594,"column_start":1,"column_end":10}},{"value":"/       mask: \"user.displayName,photo\"","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13262815,"byte_end":13262855,"line_start":1595,"line_end":1595,"column_start":1,"column_end":41}},{"value":"/     }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13262856,"byte_end":13262865,"line_start":1596,"line_end":1596,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13262866,"byte_end":13262869,"line_start":1597,"line_end":1597,"column_start":1,"column_end":4}},{"value":"/ # Field Masks and Oneof Fields","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13262870,"byte_end":13262904,"line_start":1598,"line_end":1598,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13262905,"byte_end":13262908,"line_start":1599,"line_end":1599,"column_start":1,"column_end":4}},{"value":"/ Field masks treat fields in oneofs just as regular fields. Consider the","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13262909,"byte_end":13262984,"line_start":1600,"line_end":1600,"column_start":1,"column_end":76}},{"value":"/ following message:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13262985,"byte_end":13263007,"line_start":1601,"line_end":1601,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13263008,"byte_end":13263011,"line_start":1602,"line_end":1602,"column_start":1,"column_end":4}},{"value":"/     message SampleMessage {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13263012,"byte_end":13263043,"line_start":1603,"line_end":1603,"column_start":1,"column_end":32}},{"value":"/       oneof test_oneof {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13263044,"byte_end":13263072,"line_start":1604,"line_end":1604,"column_start":1,"column_end":29}},{"value":"/         string name = 4;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13263073,"byte_end":13263101,"line_start":1605,"line_end":1605,"column_start":1,"column_end":29}},{"value":"/         SubMessage sub_message = 9;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13263102,"byte_end":13263141,"line_start":1606,"line_end":1606,"column_start":1,"column_end":40}},{"value":"/       }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13263142,"byte_end":13263153,"line_start":1607,"line_end":1607,"column_start":1,"column_end":12}},{"value":"/     }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13263154,"byte_end":13263163,"line_start":1608,"line_end":1608,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13263164,"byte_end":13263167,"line_start":1609,"line_end":1609,"column_start":1,"column_end":4}},{"value":"/ The field mask can be:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13263168,"byte_end":13263194,"line_start":1610,"line_end":1610,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13263195,"byte_end":13263198,"line_start":1611,"line_end":1611,"column_start":1,"column_end":4}},{"value":"/     mask {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13263199,"byte_end":13263213,"line_start":1612,"line_end":1612,"column_start":1,"column_end":15}},{"value":"/       paths: \"name\"","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13263214,"byte_end":13263237,"line_start":1613,"line_end":1613,"column_start":1,"column_end":24}},{"value":"/     }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13263238,"byte_end":13263247,"line_start":1614,"line_end":1614,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13263248,"byte_end":13263251,"line_start":1615,"line_end":1615,"column_start":1,"column_end":4}},{"value":"/ Or:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13263252,"byte_end":13263259,"line_start":1616,"line_end":1616,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13263260,"byte_end":13263263,"line_start":1617,"line_end":1617,"column_start":1,"column_end":4}},{"value":"/     mask {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13263264,"byte_end":13263278,"line_start":1618,"line_end":1618,"column_start":1,"column_end":15}},{"value":"/       paths: \"sub_message\"","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13263279,"byte_end":13263309,"line_start":1619,"line_end":1619,"column_start":1,"column_end":31}},{"value":"/     }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13263310,"byte_end":13263319,"line_start":1620,"line_end":1620,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13263320,"byte_end":13263323,"line_start":1621,"line_end":1621,"column_start":1,"column_end":4}},{"value":"/ Note that oneof type names (\"test_oneof\" in this case) cannot be used in","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13263324,"byte_end":13263400,"line_start":1622,"line_end":1622,"column_start":1,"column_end":77}},{"value":"/ paths.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13263401,"byte_end":13263411,"line_start":1623,"line_end":1623,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13263412,"byte_end":13263415,"line_start":1624,"line_end":1624,"column_start":1,"column_end":4}},{"value":"/ ## Field Mask Verification","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13263416,"byte_end":13263446,"line_start":1625,"line_end":1625,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13263447,"byte_end":13263450,"line_start":1626,"line_end":1626,"column_start":1,"column_end":4}},{"value":"/ The implementation of any API method which has a FieldMask type field in the","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13263451,"byte_end":13263531,"line_start":1627,"line_end":1627,"column_start":1,"column_end":81}},{"value":"/ request should verify the included field paths, and return an","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13263532,"byte_end":13263597,"line_start":1628,"line_end":1628,"column_start":1,"column_end":66}},{"value":"/ `INVALID_ARGUMENT` error if any path is duplicated or unmappable.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13263598,"byte_end":13263667,"line_start":1629,"line_end":1629,"column_start":1,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":2824},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13263822,"byte_end":13263827,"line_start":1634,"line_end":1634,"column_start":9,"column_end":14},"name":"paths","qualname":"::FieldMask::paths","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":2791},"children":[],"decl_id":null,"docs":" The set of field mask paths.\n","sig":null,"attributes":[{"value":"/ The set of field mask paths.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13263741,"byte_end":13263773,"line_start":1632,"line_end":1632,"column_start":5,"column_end":37}},{"value":"prost(string, repeated, tag = \"1\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13263778,"byte_end":13263813,"line_start":1633,"line_end":1633,"column_start":5,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2825},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13264372,"byte_end":13264378,"line_start":1645,"line_end":1645,"column_start":12,"column_end":18},"name":"Struct","qualname":"::Struct","value":"Struct { fields }","parent":null,"children":[{"krate":0,"index":2862}],"decl_id":null,"docs":" `Struct` represents a structured data value, consisting of fields\n which map to dynamically typed values. In some languages, `Struct`\n might be supported by a native representation. For example, in\n scripting languages like JS a struct is represented as an\n object. The details of that representation are described together\n with the proto support for the language.","sig":null,"attributes":[{"value":"/ `Struct` represents a structured data value, consisting of fields","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13263869,"byte_end":13263938,"line_start":1636,"line_end":1636,"column_start":1,"column_end":70}},{"value":"/ which map to dynamically typed values. In some languages, `Struct`","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13263939,"byte_end":13264009,"line_start":1637,"line_end":1637,"column_start":1,"column_end":71}},{"value":"/ might be supported by a native representation. For example, in","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13264010,"byte_end":13264076,"line_start":1638,"line_end":1638,"column_start":1,"column_end":67}},{"value":"/ scripting languages like JS a struct is represented as an","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13264077,"byte_end":13264138,"line_start":1639,"line_end":1639,"column_start":1,"column_end":62}},{"value":"/ object. The details of that representation are described together","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13264139,"byte_end":13264208,"line_start":1640,"line_end":1640,"column_start":1,"column_end":70}},{"value":"/ with the proto support for the language.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13264209,"byte_end":13264253,"line_start":1641,"line_end":1641,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13264254,"byte_end":13264257,"line_start":1642,"line_end":1642,"column_start":1,"column_end":4}},{"value":"/ The JSON representation for `Struct` is JSON object.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13264258,"byte_end":13264314,"line_start":1643,"line_end":1643,"column_start":1,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":2862},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13264491,"byte_end":13264497,"line_start":1648,"line_end":1648,"column_start":9,"column_end":15},"name":"fields","qualname":"::Struct::fields","value":"std::collections::BTreeMap<std::string::String, Value>","parent":{"krate":0,"index":2825},"children":[],"decl_id":null,"docs":" Unordered map of dynamically typed values.\n","sig":null,"attributes":[{"value":"/ Unordered map of dynamically typed values.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13264385,"byte_end":13264431,"line_start":1646,"line_end":1646,"column_start":5,"column_end":51}},{"value":"prost(btree_map = \"string, message\", tag = \"1\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13264436,"byte_end":13264482,"line_start":1647,"line_end":1647,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":2863},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13264944,"byte_end":13264949,"line_start":1657,"line_end":1657,"column_start":12,"column_end":17},"name":"Value","qualname":"::Value","value":"Value { kind }","parent":null,"children":[{"krate":0,"index":2887}],"decl_id":null,"docs":" `Value` represents a dynamically typed value which can be either\n null, a number, a string, a boolean, a recursive struct value, or a\n list of values. A producer of value is expected to set one of that\n variants, absence of any variant indicates an error.","sig":null,"attributes":[{"value":"/ `Value` represents a dynamically typed value which can be either","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13264559,"byte_end":13264627,"line_start":1650,"line_end":1650,"column_start":1,"column_end":69}},{"value":"/ null, a number, a string, a boolean, a recursive struct value, or a","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13264628,"byte_end":13264699,"line_start":1651,"line_end":1651,"column_start":1,"column_end":72}},{"value":"/ list of values. A producer of value is expected to set one of that","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13264700,"byte_end":13264770,"line_start":1652,"line_end":1652,"column_start":1,"column_end":71}},{"value":"/ variants, absence of any variant indicates an error.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13264771,"byte_end":13264827,"line_start":1653,"line_end":1653,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13264828,"byte_end":13264831,"line_start":1654,"line_end":1654,"column_start":1,"column_end":4}},{"value":"/ The JSON representation for `Value` is JSON value.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13264832,"byte_end":13264886,"line_start":1655,"line_end":1655,"column_start":1,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":2887},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13265046,"byte_end":13265050,"line_start":1660,"line_end":1660,"column_start":9,"column_end":13},"name":"kind","qualname":"::Value::kind","value":"std::option::Option<value::Kind>","parent":{"krate":0,"index":2863},"children":[],"decl_id":null,"docs":" The kind of value.\n","sig":null,"attributes":[{"value":"/ The kind of value.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13264956,"byte_end":13264978,"line_start":1658,"line_end":1658,"column_start":5,"column_end":27}},{"value":"prost(oneof = \"value::Kind\", tags = \"1, 2, 3, 4, 5, 6\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13264983,"byte_end":13265037,"line_start":1659,"line_end":1659,"column_start":5,"column_end":59}}]},{"kind":"Mod","id":{"krate":0,"index":36},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13265098,"byte_end":13265103,"line_start":1662,"line_end":1662,"column_start":9,"column_end":14},"name":"value","qualname":"::value","value":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","parent":null,"children":[{"krate":0,"index":2888},{"krate":0,"index":2889},{"krate":0,"index":2891},{"krate":0,"index":2892},{"krate":0,"index":2895}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2926},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13265304,"byte_end":13265313,"line_start":1668,"line_end":1668,"column_start":9,"column_end":18},"name":"NullValue","qualname":"::value::Kind::NullValue","value":"Kind::NullValue(i32)","parent":{"krate":0,"index":2888},"children":[],"decl_id":null,"docs":" Represents a null value.\n","sig":null,"attributes":[{"value":"/ Represents a null value.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13265209,"byte_end":13265237,"line_start":1666,"line_end":1666,"column_start":9,"column_end":37}},{"value":"prost(enumeration = \"super::NullValue\", tag = \"1\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13265246,"byte_end":13265295,"line_start":1667,"line_end":1667,"column_start":9,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2929},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13265401,"byte_end":13265412,"line_start":1671,"line_end":1671,"column_start":9,"column_end":20},"name":"NumberValue","qualname":"::value::Kind::NumberValue","value":"Kind::NumberValue(f64)","parent":{"krate":0,"index":2888},"children":[],"decl_id":null,"docs":" Represents a double value.\n","sig":null,"attributes":[{"value":"/ Represents a double value.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13265328,"byte_end":13265358,"line_start":1669,"line_end":1669,"column_start":9,"column_end":39}},{"value":"prost(double, tag = \"2\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13265367,"byte_end":13265392,"line_start":1670,"line_end":1670,"column_start":9,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2932},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13265500,"byte_end":13265511,"line_start":1674,"line_end":1674,"column_start":9,"column_end":20},"name":"StringValue","qualname":"::value::Kind::StringValue","value":"Kind::StringValue(std::string::String)","parent":{"krate":0,"index":2888},"children":[],"decl_id":null,"docs":" Represents a string value.\n","sig":null,"attributes":[{"value":"/ Represents a string value.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13265427,"byte_end":13265457,"line_start":1672,"line_end":1672,"column_start":9,"column_end":39}},{"value":"prost(string, tag = \"3\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13265466,"byte_end":13265491,"line_start":1673,"line_end":1673,"column_start":9,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2935},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13265614,"byte_end":13265623,"line_start":1677,"line_end":1677,"column_start":9,"column_end":18},"name":"BoolValue","qualname":"::value::Kind::BoolValue","value":"Kind::BoolValue(bool)","parent":{"krate":0,"index":2888},"children":[],"decl_id":null,"docs":" Represents a boolean value.\n","sig":null,"attributes":[{"value":"/ Represents a boolean value.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13265542,"byte_end":13265573,"line_start":1675,"line_end":1675,"column_start":9,"column_end":40}},{"value":"prost(bool, tag = \"4\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13265582,"byte_end":13265605,"line_start":1676,"line_end":1676,"column_start":9,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2938},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13265717,"byte_end":13265728,"line_start":1680,"line_end":1680,"column_start":9,"column_end":20},"name":"StructValue","qualname":"::value::Kind::StructValue","value":"Kind::StructValue(super::Struct)","parent":{"krate":0,"index":2888},"children":[],"decl_id":null,"docs":" Represents a structured value.\n","sig":null,"attributes":[{"value":"/ Represents a structured value.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13265639,"byte_end":13265673,"line_start":1678,"line_end":1678,"column_start":9,"column_end":43}},{"value":"prost(message, tag = \"5\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13265682,"byte_end":13265708,"line_start":1679,"line_end":1679,"column_start":9,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2941},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13265831,"byte_end":13265840,"line_start":1683,"line_end":1683,"column_start":9,"column_end":18},"name":"ListValue","qualname":"::value::Kind::ListValue","value":"Kind::ListValue(super::ListValue)","parent":{"krate":0,"index":2888},"children":[],"decl_id":null,"docs":" Represents a repeated `Value`.\n","sig":null,"attributes":[{"value":"/ Represents a repeated `Value`.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13265753,"byte_end":13265787,"line_start":1681,"line_end":1681,"column_start":9,"column_end":43}},{"value":"prost(message, tag = \"6\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13265796,"byte_end":13265822,"line_start":1682,"line_end":1682,"column_start":9,"column_end":35}}]},{"kind":"Enum","id":{"krate":0,"index":2888},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13265194,"byte_end":13265198,"line_start":1665,"line_end":1665,"column_start":14,"column_end":18},"name":"Kind","qualname":"::value::Kind","value":"pub enum Kind {\n    NullValue(i32),\n    NumberValue(f64),\n    StringValue(std::string::String),\n    BoolValue(bool),\n    StructValue(super::Struct),\n    ListValue(super::ListValue),\n}","parent":null,"children":[{"krate":0,"index":2926},{"krate":0,"index":2929},{"krate":0,"index":2932},{"krate":0,"index":2935},{"krate":0,"index":2938},{"krate":0,"index":2941}],"decl_id":null,"docs":" The kind of value.\n","sig":null,"attributes":[{"value":"/ The kind of value.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13265110,"byte_end":13265132,"line_start":1663,"line_end":1663,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":2944},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13266052,"byte_end":13266061,"line_start":1690,"line_end":1690,"column_start":12,"column_end":21},"name":"ListValue","qualname":"::ListValue","value":"ListValue { values }","parent":null,"children":[{"krate":0,"index":2968}],"decl_id":null,"docs":" `ListValue` is a wrapper around a repeated field of values.","sig":null,"attributes":[{"value":"/ `ListValue` is a wrapper around a repeated field of values.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13265868,"byte_end":13265931,"line_start":1686,"line_end":1686,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13265932,"byte_end":13265935,"line_start":1687,"line_end":1687,"column_start":1,"column_end":4}},{"value":"/ The JSON representation for `ListValue` is JSON array.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13265936,"byte_end":13265994,"line_start":1688,"line_end":1688,"column_start":1,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":2968},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13266165,"byte_end":13266171,"line_start":1693,"line_end":1693,"column_start":9,"column_end":15},"name":"values","qualname":"::ListValue::values","value":"std::vec::Vec<Value>","parent":{"krate":0,"index":2944},"children":[],"decl_id":null,"docs":" Repeated field of dynamically typed values.\n","sig":null,"attributes":[{"value":"/ Repeated field of dynamically typed values.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13266068,"byte_end":13266115,"line_start":1691,"line_end":1691,"column_start":5,"column_end":52}},{"value":"prost(message, repeated, tag = \"1\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13266120,"byte_end":13266156,"line_start":1692,"line_end":1692,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2970},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13266515,"byte_end":13266524,"line_start":1703,"line_end":1703,"column_start":5,"column_end":14},"name":"NullValue","qualname":"::NullValue::NullValue","value":"NullValue::NullValue","parent":{"krate":0,"index":2969},"children":[],"decl_id":null,"docs":" Null value.\n","sig":null,"attributes":[{"value":"/ Null value.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13266495,"byte_end":13266510,"line_start":1702,"line_end":1702,"column_start":5,"column_end":20}}]},{"kind":"Enum","id":{"krate":0,"index":2969},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13266479,"byte_end":13266488,"line_start":1701,"line_end":1701,"column_start":10,"column_end":19},"name":"NullValue","qualname":"::NullValue","value":"pub enum NullValue { NullValue = , }","parent":null,"children":[{"krate":0,"index":2970}],"decl_id":null,"docs":" `NullValue` is a singleton enumeration to represent the null value for the\n `Value` type union.","sig":null,"attributes":[{"value":"/ `NullValue` is a singleton enumeration to represent the null value for the","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13266199,"byte_end":13266277,"line_start":1695,"line_end":1695,"column_start":1,"column_end":79}},{"value":"/ `Value` type union.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13266278,"byte_end":13266301,"line_start":1696,"line_end":1696,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13266302,"byte_end":13266305,"line_start":1697,"line_end":1697,"column_start":1,"column_end":4}},{"value":"/  The JSON representation for `NullValue` is JSON `null`.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13266306,"byte_end":13266366,"line_start":1698,"line_end":1698,"column_start":1,"column_end":61}},{"value":"repr(i32)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13266457,"byte_end":13266469,"line_start":1700,"line_end":1700,"column_start":1,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":3000},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13270323,"byte_end":13270332,"line_start":1786,"line_end":1786,"column_start":12,"column_end":21},"name":"Timestamp","qualname":"::Timestamp","value":"Timestamp { seconds, nanos }","parent":null,"children":[{"krate":0,"index":3029},{"krate":0,"index":3030}],"decl_id":null,"docs":" A Timestamp represents a point in time independent of any time zone\n or calendar, represented as seconds and fractions of seconds at\n nanosecond resolution in UTC Epoch time. It is encoded using the\n Proleptic Gregorian Calendar which extends the Gregorian calendar\n backwards to year one. It is encoded assuming all minutes are 60\n seconds long, i.e. leap seconds are \"smeared\" so that no leap second\n table is needed for interpretation. Range is from\n 0001-01-01T00:00:00Z to 9999-12-31T23:59:59.999999999Z.\n By restricting to that range, we ensure that we can convert to\n and from  RFC 3339 date strings.\n See [https://www.ietf.org/rfc/rfc3339.txt](https://www.ietf.org/rfc/rfc3339.txt).","sig":null,"attributes":[{"value":"/ A Timestamp represents a point in time independent of any time zone","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13266532,"byte_end":13266603,"line_start":1705,"line_end":1705,"column_start":1,"column_end":72}},{"value":"/ or calendar, represented as seconds and fractions of seconds at","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13266604,"byte_end":13266671,"line_start":1706,"line_end":1706,"column_start":1,"column_end":68}},{"value":"/ nanosecond resolution in UTC Epoch time. It is encoded using the","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13266672,"byte_end":13266740,"line_start":1707,"line_end":1707,"column_start":1,"column_end":69}},{"value":"/ Proleptic Gregorian Calendar which extends the Gregorian calendar","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13266741,"byte_end":13266810,"line_start":1708,"line_end":1708,"column_start":1,"column_end":70}},{"value":"/ backwards to year one. It is encoded assuming all minutes are 60","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13266811,"byte_end":13266879,"line_start":1709,"line_end":1709,"column_start":1,"column_end":69}},{"value":"/ seconds long, i.e. leap seconds are \"smeared\" so that no leap second","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13266880,"byte_end":13266952,"line_start":1710,"line_end":1710,"column_start":1,"column_end":73}},{"value":"/ table is needed for interpretation. Range is from","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13266953,"byte_end":13267006,"line_start":1711,"line_end":1711,"column_start":1,"column_end":54}},{"value":"/ 0001-01-01T00:00:00Z to 9999-12-31T23:59:59.999999999Z.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13267007,"byte_end":13267066,"line_start":1712,"line_end":1712,"column_start":1,"column_end":60}},{"value":"/ By restricting to that range, we ensure that we can convert to","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13267067,"byte_end":13267133,"line_start":1713,"line_end":1713,"column_start":1,"column_end":67}},{"value":"/ and from  RFC 3339 date strings.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13267134,"byte_end":13267170,"line_start":1714,"line_end":1714,"column_start":1,"column_end":37}},{"value":"/ See [https://www.ietf.org/rfc/rfc3339.txt](https://www.ietf.org/rfc/rfc3339.txt).","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13267171,"byte_end":13267256,"line_start":1715,"line_end":1715,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13267257,"byte_end":13267260,"line_start":1716,"line_end":1716,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13267261,"byte_end":13267275,"line_start":1717,"line_end":1717,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13267276,"byte_end":13267279,"line_start":1718,"line_end":1718,"column_start":1,"column_end":4}},{"value":"/ Example 1: Compute Timestamp from POSIX `time()`.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13267280,"byte_end":13267333,"line_start":1719,"line_end":1719,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13267334,"byte_end":13267337,"line_start":1720,"line_end":1720,"column_start":1,"column_end":4}},{"value":"/     Timestamp timestamp;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13267338,"byte_end":13267366,"line_start":1721,"line_end":1721,"column_start":1,"column_end":29}},{"value":"/     timestamp.set_seconds(time(NULL));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13267367,"byte_end":13267409,"line_start":1722,"line_end":1722,"column_start":1,"column_end":43}},{"value":"/     timestamp.set_nanos(0);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13267410,"byte_end":13267441,"line_start":1723,"line_end":1723,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13267442,"byte_end":13267445,"line_start":1724,"line_end":1724,"column_start":1,"column_end":4}},{"value":"/ Example 2: Compute Timestamp from POSIX `gettimeofday()`.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13267446,"byte_end":13267507,"line_start":1725,"line_end":1725,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13267508,"byte_end":13267511,"line_start":1726,"line_end":1726,"column_start":1,"column_end":4}},{"value":"/     struct timeval tv;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13267512,"byte_end":13267538,"line_start":1727,"line_end":1727,"column_start":1,"column_end":27}},{"value":"/     gettimeofday(&tv, NULL);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13267539,"byte_end":13267571,"line_start":1728,"line_end":1728,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13267572,"byte_end":13267575,"line_start":1729,"line_end":1729,"column_start":1,"column_end":4}},{"value":"/     Timestamp timestamp;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13267576,"byte_end":13267604,"line_start":1730,"line_end":1730,"column_start":1,"column_end":29}},{"value":"/     timestamp.set_seconds(tv.tv_sec);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13267605,"byte_end":13267646,"line_start":1731,"line_end":1731,"column_start":1,"column_end":42}},{"value":"/     timestamp.set_nanos(tv.tv_usec * 1000);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13267647,"byte_end":13267694,"line_start":1732,"line_end":1732,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13267695,"byte_end":13267698,"line_start":1733,"line_end":1733,"column_start":1,"column_end":4}},{"value":"/ Example 3: Compute Timestamp from Win32 `GetSystemTimeAsFileTime()`.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13267699,"byte_end":13267771,"line_start":1734,"line_end":1734,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13267772,"byte_end":13267775,"line_start":1735,"line_end":1735,"column_start":1,"column_end":4}},{"value":"/     FILETIME ft;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13267776,"byte_end":13267796,"line_start":1736,"line_end":1736,"column_start":1,"column_end":21}},{"value":"/     GetSystemTimeAsFileTime(&ft);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13267797,"byte_end":13267834,"line_start":1737,"line_end":1737,"column_start":1,"column_end":38}},{"value":"/     UINT64 ticks = (((UINT64)ft.dwHighDateTime) << 32) | ft.dwLowDateTime;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13267835,"byte_end":13267913,"line_start":1738,"line_end":1738,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13267914,"byte_end":13267917,"line_start":1739,"line_end":1739,"column_start":1,"column_end":4}},{"value":"/     // A Windows tick is 100 nanoseconds. Windows epoch 1601-01-01T00:00:00Z","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13267918,"byte_end":13267998,"line_start":1740,"line_end":1740,"column_start":1,"column_end":81}},{"value":"/     // is 11644473600 seconds before Unix epoch 1970-01-01T00:00:00Z.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13267999,"byte_end":13268072,"line_start":1741,"line_end":1741,"column_start":1,"column_end":74}},{"value":"/     Timestamp timestamp;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13268073,"byte_end":13268101,"line_start":1742,"line_end":1742,"column_start":1,"column_end":29}},{"value":"/     timestamp.set_seconds((INT64) ((ticks / 10000000) - 11644473600LL));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13268102,"byte_end":13268178,"line_start":1743,"line_end":1743,"column_start":1,"column_end":77}},{"value":"/     timestamp.set_nanos((INT32) ((ticks % 10000000) * 100));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13268179,"byte_end":13268243,"line_start":1744,"line_end":1744,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13268244,"byte_end":13268247,"line_start":1745,"line_end":1745,"column_start":1,"column_end":4}},{"value":"/ Example 4: Compute Timestamp from Java `System.currentTimeMillis()`.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13268248,"byte_end":13268320,"line_start":1746,"line_end":1746,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13268321,"byte_end":13268324,"line_start":1747,"line_end":1747,"column_start":1,"column_end":4}},{"value":"/     long millis = System.currentTimeMillis();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13268325,"byte_end":13268374,"line_start":1748,"line_end":1748,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13268375,"byte_end":13268378,"line_start":1749,"line_end":1749,"column_start":1,"column_end":4}},{"value":"/     Timestamp timestamp = Timestamp.newBuilder().setSeconds(millis / 1000)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13268379,"byte_end":13268457,"line_start":1750,"line_end":1750,"column_start":1,"column_end":79}},{"value":"/         .setNanos((int) ((millis % 1000) * 1000000)).build();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13268458,"byte_end":13268523,"line_start":1751,"line_end":1751,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13268524,"byte_end":13268527,"line_start":1752,"line_end":1752,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13268528,"byte_end":13268531,"line_start":1753,"line_end":1753,"column_start":1,"column_end":4}},{"value":"/ Example 5: Compute Timestamp from current time in Python.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13268532,"byte_end":13268593,"line_start":1754,"line_end":1754,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13268594,"byte_end":13268597,"line_start":1755,"line_end":1755,"column_start":1,"column_end":4}},{"value":"/     timestamp = Timestamp()","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13268598,"byte_end":13268629,"line_start":1756,"line_end":1756,"column_start":1,"column_end":32}},{"value":"/     timestamp.GetCurrentTime()","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13268630,"byte_end":13268664,"line_start":1757,"line_end":1757,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13268665,"byte_end":13268668,"line_start":1758,"line_end":1758,"column_start":1,"column_end":4}},{"value":"/ # JSON Mapping","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13268669,"byte_end":13268687,"line_start":1759,"line_end":1759,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13268688,"byte_end":13268691,"line_start":1760,"line_end":1760,"column_start":1,"column_end":4}},{"value":"/ In JSON format, the Timestamp type is encoded as a string in the","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13268692,"byte_end":13268760,"line_start":1761,"line_end":1761,"column_start":1,"column_end":69}},{"value":"/ [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) format. That is, the","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13268761,"byte_end":13268834,"line_start":1762,"line_end":1762,"column_start":1,"column_end":74}},{"value":"/ format is \"{year}-{month}-{day}T{hour}:{min}:{sec}[.{frac_sec}]Z\"","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13268835,"byte_end":13268904,"line_start":1763,"line_end":1763,"column_start":1,"column_end":70}},{"value":"/ where {year} is always expressed using four digits while {month}, {day},","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13268905,"byte_end":13268981,"line_start":1764,"line_end":1764,"column_start":1,"column_end":77}},{"value":"/ {hour}, {min}, and {sec} are zero-padded to two digits each. The fractional","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13268982,"byte_end":13269061,"line_start":1765,"line_end":1765,"column_start":1,"column_end":80}},{"value":"/ seconds, which can go up to 9 digits (i.e. up to 1 nanosecond resolution),","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13269062,"byte_end":13269140,"line_start":1766,"line_end":1766,"column_start":1,"column_end":79}},{"value":"/ are optional. The \"Z\" suffix indicates the timezone (\"UTC\"); the timezone","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13269141,"byte_end":13269218,"line_start":1767,"line_end":1767,"column_start":1,"column_end":78}},{"value":"/ is required. A proto3 JSON serializer should always use UTC (as indicated by","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13269219,"byte_end":13269299,"line_start":1768,"line_end":1768,"column_start":1,"column_end":81}},{"value":"/ \"Z\") when printing the Timestamp type and a proto3 JSON parser should be","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13269300,"byte_end":13269376,"line_start":1769,"line_end":1769,"column_start":1,"column_end":77}},{"value":"/ able to accept both UTC and other timezones (as indicated by an offset).","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13269377,"byte_end":13269453,"line_start":1770,"line_end":1770,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13269454,"byte_end":13269457,"line_start":1771,"line_end":1771,"column_start":1,"column_end":4}},{"value":"/ For example, \"2017-01-15T01:30:15.01Z\" encodes 15.01 seconds past","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13269458,"byte_end":13269527,"line_start":1772,"line_end":1772,"column_start":1,"column_end":70}},{"value":"/ 01:30 UTC on January 15, 2017.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13269528,"byte_end":13269562,"line_start":1773,"line_end":1773,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13269563,"byte_end":13269566,"line_start":1774,"line_end":1774,"column_start":1,"column_end":4}},{"value":"/ In JavaScript, one can convert a Date object to this format using the","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13269567,"byte_end":13269640,"line_start":1775,"line_end":1775,"column_start":1,"column_end":74}},{"value":"/ standard [toISOString()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString]","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13269641,"byte_end":13269768,"line_start":1776,"line_end":1776,"column_start":1,"column_end":128}},{"value":"/ method. In Python, a standard `datetime.datetime` object can be converted","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13269769,"byte_end":13269846,"line_start":1777,"line_end":1777,"column_start":1,"column_end":78}},{"value":"/ to this format using [`strftime`](https://docs.python.org/2/library/time.html#time.strftime)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13269847,"byte_end":13269943,"line_start":1778,"line_end":1778,"column_start":1,"column_end":97}},{"value":"/ with the time format spec '%Y-%m-%dT%H:%M:%S.%fZ'. Likewise, in Java, one","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13269944,"byte_end":13270021,"line_start":1779,"line_end":1779,"column_start":1,"column_end":78}},{"value":"/ can use the Joda Time's [`ISODateTimeFormat.dateTime()`](","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13270022,"byte_end":13270083,"line_start":1780,"line_end":1780,"column_start":1,"column_end":62}},{"value":"/ http://www.joda.org/joda-time/apidocs/org/joda/time/format/ISODateTimeFormat.html#dateTime--","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13270084,"byte_end":13270180,"line_start":1781,"line_end":1781,"column_start":1,"column_end":97}},{"value":"/ ) to obtain a formatter capable of generating timestamps in this format.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13270181,"byte_end":13270257,"line_start":1782,"line_end":1782,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13270258,"byte_end":13270261,"line_start":1783,"line_end":1783,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13270262,"byte_end":13270265,"line_start":1784,"line_end":1784,"column_start":1,"column_end":4}}]},{"kind":"Field","id":{"krate":0,"index":3029},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13270535,"byte_end":13270542,"line_start":1791,"line_end":1791,"column_start":9,"column_end":16},"name":"seconds","qualname":"::Timestamp::seconds","value":"i64","parent":{"krate":0,"index":3000},"children":[],"decl_id":null,"docs":" Represents seconds of UTC time since Unix epoch\n 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n 9999-12-31T23:59:59Z inclusive.\n","sig":null,"attributes":[{"value":"/ Represents seconds of UTC time since Unix epoch","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13270339,"byte_end":13270390,"line_start":1787,"line_end":1787,"column_start":5,"column_end":56}},{"value":"/ 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13270395,"byte_end":13270457,"line_start":1788,"line_end":1788,"column_start":5,"column_end":67}},{"value":"/ 9999-12-31T23:59:59Z inclusive.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13270462,"byte_end":13270497,"line_start":1789,"line_end":1789,"column_start":5,"column_end":40}},{"value":"prost(int64, tag = \"1\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13270502,"byte_end":13270526,"line_start":1790,"line_end":1790,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":3030},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13270828,"byte_end":13270833,"line_start":1797,"line_end":1797,"column_start":9,"column_end":14},"name":"nanos","qualname":"::Timestamp::nanos","value":"i32","parent":{"krate":0,"index":3000},"children":[],"decl_id":null,"docs":" Non-negative fractions of a second at nanosecond resolution. Negative\n second values with fractions must still have non-negative nanos values\n that count forward in time. Must be from 0 to 999,999,999\n inclusive.\n","sig":null,"attributes":[{"value":"/ Non-negative fractions of a second at nanosecond resolution. Negative","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13270553,"byte_end":13270626,"line_start":1792,"line_end":1792,"column_start":5,"column_end":78}},{"value":"/ second values with fractions must still have non-negative nanos values","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13270631,"byte_end":13270705,"line_start":1793,"line_end":1793,"column_start":5,"column_end":79}},{"value":"/ that count forward in time. Must be from 0 to 999,999,999","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13270710,"byte_end":13270771,"line_start":1794,"line_end":1794,"column_start":5,"column_end":66}},{"value":"/ inclusive.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13270776,"byte_end":13270790,"line_start":1795,"line_end":1795,"column_start":5,"column_end":19}},{"value":"prost(int32, tag = \"2\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/protobuf.rs","byte_start":13270795,"byte_end":13270819,"line_start":1796,"line_end":1796,"column_start":5,"column_end":29}}]},{"kind":"Mod","id":{"krate":0,"index":12},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/lib.rs","byte_start":512,"byte_end":520,"line_start":17,"line_end":17,"column_start":9,"column_end":17},"name":"compiler","qualname":"::compiler","value":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":3032},{"krate":0,"index":3033},{"krate":0,"index":3035},{"krate":0,"index":3036},{"krate":0,"index":3039},{"krate":0,"index":3108},{"krate":0,"index":3109},{"krate":0,"index":3111},{"krate":0,"index":3112},{"krate":0,"index":3115},{"krate":0,"index":3161},{"krate":0,"index":3162},{"krate":0,"index":3164},{"krate":0,"index":3165},{"krate":0,"index":3168},{"krate":0,"index":3031}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3032},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13527423,"byte_end":13527430,"line_start":3,"line_end":3,"column_start":12,"column_end":19},"name":"Version","qualname":"::compiler::Version","value":"Version { major, minor, patch, suffix }","parent":null,"children":[{"krate":0,"index":3104},{"krate":0,"index":3105},{"krate":0,"index":3106},{"krate":0,"index":3107}],"decl_id":null,"docs":" The version number of protocol compiler.\n","sig":null,"attributes":[{"value":"/ The version number of protocol compiler.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13527321,"byte_end":13527365,"line_start":1,"line_end":1,"column_start":1,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":3104},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13527480,"byte_end":13527485,"line_start":5,"line_end":5,"column_start":9,"column_end":14},"name":"major","qualname":"::compiler::Version::major","value":"std::option::Option<i32>","parent":{"krate":0,"index":3032},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(int32, optional, tag = \"1\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13527437,"byte_end":13527471,"line_start":4,"line_end":4,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":3105},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13527562,"byte_end":13527567,"line_start":7,"line_end":7,"column_start":9,"column_end":14},"name":"minor","qualname":"::compiler::Version::minor","value":"std::option::Option<i32>","parent":{"krate":0,"index":3032},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(int32, optional, tag = \"2\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13527519,"byte_end":13527553,"line_start":6,"line_end":6,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":3106},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13527644,"byte_end":13527649,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"name":"patch","qualname":"::compiler::Version::patch","value":"std::option::Option<i32>","parent":{"krate":0,"index":3032},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(int32, optional, tag = \"3\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13527601,"byte_end":13527635,"line_start":8,"line_end":8,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":3107},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13527856,"byte_end":13527862,"line_start":13,"line_end":13,"column_start":9,"column_end":15},"name":"suffix","qualname":"::compiler::Version::suffix","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":3032},"children":[],"decl_id":null,"docs":" A suffix for alpha, beta or rc release, e.g., \"alpha-1\", \"rc2\". It should\n be empty for mainline stable releases.\n","sig":null,"attributes":[{"value":"/ A suffix for alpha, beta or rc release, e.g., \"alpha-1\", \"rc2\". It should","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13527683,"byte_end":13527760,"line_start":10,"line_end":10,"column_start":5,"column_end":82}},{"value":"/ be empty for mainline stable releases.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13527765,"byte_end":13527807,"line_start":11,"line_end":11,"column_start":5,"column_end":47}},{"value":"prost(string, optional, tag = \"4\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13527812,"byte_end":13527847,"line_start":12,"line_end":12,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3100},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13527480,"byte_end":13527485,"line_start":5,"line_end":5,"column_start":9,"column_end":14},"name":"major","qualname":"<Version>::major","value":"pub fn major(&Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3101},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13527562,"byte_end":13527567,"line_start":7,"line_end":7,"column_start":9,"column_end":14},"name":"minor","qualname":"<Version>::minor","value":"pub fn minor(&Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3102},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13527644,"byte_end":13527649,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"name":"patch","qualname":"<Version>::patch","value":"pub fn patch(&Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3103},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13527856,"byte_end":13527862,"line_start":13,"line_end":13,"column_start":9,"column_end":15},"name":"suffix","qualname":"<Version>::suffix","value":"pub fn suffix(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3108},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13528037,"byte_end":13528057,"line_start":17,"line_end":17,"column_start":12,"column_end":32},"name":"CodeGeneratorRequest","qualname":"::compiler::CodeGeneratorRequest","value":"CodeGeneratorRequest { file_to_generate, parameter, proto_file, compiler_version }","parent":null,"children":[{"krate":0,"index":3157},{"krate":0,"index":3158},{"krate":0,"index":3159},{"krate":0,"index":3160}],"decl_id":null,"docs":" An encoded CodeGeneratorRequest is written to the plugin's stdin.\n","sig":null,"attributes":[{"value":"/ An encoded CodeGeneratorRequest is written to the plugin's stdin.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13527910,"byte_end":13527979,"line_start":15,"line_end":15,"column_start":1,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":3157},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13528324,"byte_end":13528340,"line_start":22,"line_end":22,"column_start":9,"column_end":25},"name":"file_to_generate","qualname":"::compiler::CodeGeneratorRequest::file_to_generate","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":3108},"children":[],"decl_id":null,"docs":" The .proto files that were explicitly listed on the command-line.  The\n code generator should generate code only for these files.  Each file's\n descriptor will be included in proto_file, below.\n","sig":null,"attributes":[{"value":"/ The .proto files that were explicitly listed on the command-line.  The","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13528064,"byte_end":13528138,"line_start":18,"line_end":18,"column_start":5,"column_end":79}},{"value":"/ code generator should generate code only for these files.  Each file's","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13528143,"byte_end":13528217,"line_start":19,"line_end":19,"column_start":5,"column_end":79}},{"value":"/ descriptor will be included in proto_file, below.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13528222,"byte_end":13528275,"line_start":20,"line_end":20,"column_start":5,"column_end":58}},{"value":"prost(string, repeated, tag = \"1\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13528280,"byte_end":13528315,"line_start":21,"line_end":21,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":3158},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13528488,"byte_end":13528497,"line_start":25,"line_end":25,"column_start":9,"column_end":18},"name":"parameter","qualname":"::compiler::CodeGeneratorRequest::parameter","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":3108},"children":[],"decl_id":null,"docs":" The generator parameter passed on the command-line.\n","sig":null,"attributes":[{"value":"/ The generator parameter passed on the command-line.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13528384,"byte_end":13528439,"line_start":23,"line_end":23,"column_start":5,"column_end":60}},{"value":"prost(string, optional, tag = \"2\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13528444,"byte_end":13528479,"line_start":24,"line_end":24,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":3159},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13529452,"byte_end":13529462,"line_start":41,"line_end":41,"column_start":9,"column_end":19},"name":"proto_file","qualname":"::compiler::CodeGeneratorRequest::proto_file","value":"std::vec::Vec<FileDescriptorProto>","parent":{"krate":0,"index":3108},"children":[],"decl_id":null,"docs":" FileDescriptorProtos for all files in files_to_generate and everything\n they import.  The files will appear in topological order, so each file\n appears before any file that imports it.","sig":null,"attributes":[{"value":"/ FileDescriptorProtos for all files in files_to_generate and everything","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13528547,"byte_end":13528621,"line_start":26,"line_end":26,"column_start":5,"column_end":79}},{"value":"/ they import.  The files will appear in topological order, so each file","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13528626,"byte_end":13528700,"line_start":27,"line_end":27,"column_start":5,"column_end":79}},{"value":"/ appears before any file that imports it.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13528705,"byte_end":13528749,"line_start":28,"line_end":28,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13528754,"byte_end":13528757,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ protoc guarantees that all proto_files will be written after","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13528762,"byte_end":13528826,"line_start":30,"line_end":30,"column_start":5,"column_end":69}},{"value":"/ the fields above, even though this is not technically guaranteed by the","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13528831,"byte_end":13528906,"line_start":31,"line_end":31,"column_start":5,"column_end":80}},{"value":"/ protobuf wire format.  This theoretically could allow a plugin to stream","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13528911,"byte_end":13528987,"line_start":32,"line_end":32,"column_start":5,"column_end":81}},{"value":"/ in the FileDescriptorProtos and handle them one by one rather than read","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13528992,"byte_end":13529067,"line_start":33,"line_end":33,"column_start":5,"column_end":80}},{"value":"/ the entire set into memory at once.  However, as of this writing, this","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13529072,"byte_end":13529146,"line_start":34,"line_end":34,"column_start":5,"column_end":79}},{"value":"/ is not similarly optimized on protoc's end -- it will store all fields in","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13529151,"byte_end":13529228,"line_start":35,"line_end":35,"column_start":5,"column_end":82}},{"value":"/ memory at once before sending them to the plugin.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13529233,"byte_end":13529286,"line_start":36,"line_end":36,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13529291,"byte_end":13529294,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ Type names of fields and extensions in the FileDescriptorProto are always","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13529299,"byte_end":13529376,"line_start":38,"line_end":38,"column_start":5,"column_end":82}},{"value":"/ fully qualified.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13529381,"byte_end":13529401,"line_start":39,"line_end":39,"column_start":5,"column_end":25}},{"value":"prost(message, repeated, tag = \"15\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13529406,"byte_end":13529443,"line_start":40,"line_end":40,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":3160},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13529607,"byte_end":13529623,"line_start":44,"line_end":44,"column_start":9,"column_end":25},"name":"compiler_version","qualname":"::compiler::CodeGeneratorRequest::compiler_version","value":"std::option::Option<compiler::Version>","parent":{"krate":0,"index":3108},"children":[],"decl_id":null,"docs":" The version number of protocol compiler.\n","sig":null,"attributes":[{"value":"/ The version number of protocol compiler.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13529513,"byte_end":13529557,"line_start":42,"line_end":42,"column_start":5,"column_end":49}},{"value":"prost(message, optional, tag = \"3\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13529562,"byte_end":13529598,"line_start":43,"line_end":43,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":3156},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13528488,"byte_end":13528497,"line_start":25,"line_end":25,"column_start":9,"column_end":18},"name":"parameter","qualname":"<CodeGeneratorRequest>::parameter","value":"pub fn parameter(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3161},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13529782,"byte_end":13529803,"line_start":48,"line_end":48,"column_start":12,"column_end":33},"name":"CodeGeneratorResponse","qualname":"::compiler::CodeGeneratorResponse","value":"CodeGeneratorResponse { error, file }","parent":null,"children":[{"krate":0,"index":3198},{"krate":0,"index":3199}],"decl_id":null,"docs":" The plugin writes an encoded CodeGeneratorResponse to stdout.\n","sig":null,"attributes":[{"value":"/ The plugin writes an encoded CodeGeneratorResponse to stdout.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13529659,"byte_end":13529724,"line_start":46,"line_end":46,"column_start":1,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":3198},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13530389,"byte_end":13530394,"line_start":58,"line_end":58,"column_start":9,"column_end":14},"name":"error","qualname":"::compiler::CodeGeneratorResponse::error","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":3161},"children":[],"decl_id":null,"docs":" Error message.  If non-empty, code generation failed.  The plugin process\n should exit with status code zero even if it reports an error in this way.","sig":null,"attributes":[{"value":"/ Error message.  If non-empty, code generation failed.  The plugin process","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13529810,"byte_end":13529887,"line_start":49,"line_end":49,"column_start":5,"column_end":82}},{"value":"/ should exit with status code zero even if it reports an error in this way.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13529892,"byte_end":13529970,"line_start":50,"line_end":50,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13529975,"byte_end":13529978,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ This should be used to indicate errors in .proto files which prevent the","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13529983,"byte_end":13530059,"line_start":52,"line_end":52,"column_start":5,"column_end":81}},{"value":"/ code generator from generating correct code.  Errors which indicate a","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13530064,"byte_end":13530137,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/ problem in protoc itself -- such as the input CodeGeneratorRequest being","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13530142,"byte_end":13530218,"line_start":54,"line_end":54,"column_start":5,"column_end":81}},{"value":"/ unparseable -- should be reported by writing a message to stderr and","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13530223,"byte_end":13530295,"line_start":55,"line_end":55,"column_start":5,"column_end":77}},{"value":"/ exiting with a non-zero status code.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13530300,"byte_end":13530340,"line_start":56,"line_end":56,"column_start":5,"column_end":45}},{"value":"prost(string, optional, tag = \"1\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13530345,"byte_end":13530380,"line_start":57,"line_end":57,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":3199},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13530490,"byte_end":13530494,"line_start":60,"line_end":60,"column_start":9,"column_end":13},"name":"file","qualname":"::compiler::CodeGeneratorResponse::file","value":"std::vec::Vec<compiler::code_generator_response::File>","parent":{"krate":0,"index":3161},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, repeated, tag = \"15\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13530444,"byte_end":13530481,"line_start":59,"line_end":59,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3197},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13530389,"byte_end":13530394,"line_start":58,"line_end":58,"column_start":9,"column_end":14},"name":"error","qualname":"<CodeGeneratorResponse>::error","value":"pub fn error(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3031},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13530554,"byte_end":13530577,"line_start":62,"line_end":62,"column_start":9,"column_end":32},"name":"code_generator_response","qualname":"::compiler::code_generator_response","value":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","parent":null,"children":[{"krate":0,"index":3200},{"krate":0,"index":3201},{"krate":0,"index":3203},{"krate":0,"index":3204},{"krate":0,"index":3207}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3200},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13530689,"byte_end":13530693,"line_start":65,"line_end":65,"column_start":16,"column_end":20},"name":"File","qualname":"::compiler::code_generator_response::File","value":"File { name, insertion_point, content }","parent":null,"children":[{"krate":0,"index":3260},{"krate":0,"index":3261},{"krate":0,"index":3262}],"decl_id":null,"docs":" Represents a single generated file.\n","sig":null,"attributes":[{"value":"/ Represents a single generated file.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13530584,"byte_end":13530623,"line_start":63,"line_end":63,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":3260},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13531542,"byte_end":13531546,"line_start":78,"line_end":78,"column_start":13,"column_end":17},"name":"name","qualname":"::compiler::code_generator_response::File::name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":3200},"children":[],"decl_id":null,"docs":" The file name, relative to the output directory.  The name must not\n contain \".\" or \"..\" components and must be relative, not be absolute (so,\n the file cannot lie outside the output directory).  \"/\" must be used as\n the path separator, not \"\\\".","sig":null,"attributes":[{"value":"/ The file name, relative to the output directory.  The name must not","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13530704,"byte_end":13530775,"line_start":66,"line_end":66,"column_start":9,"column_end":80}},{"value":"/ contain \".\" or \"..\" components and must be relative, not be absolute (so,","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13530784,"byte_end":13530861,"line_start":67,"line_end":67,"column_start":9,"column_end":86}},{"value":"/ the file cannot lie outside the output directory).  \"/\" must be used as","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13530870,"byte_end":13530945,"line_start":68,"line_end":68,"column_start":9,"column_end":84}},{"value":"/ the path separator, not \"\\\".","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13530954,"byte_end":13530986,"line_start":69,"line_end":69,"column_start":9,"column_end":41}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13530995,"byte_end":13530998,"line_start":70,"line_end":70,"column_start":9,"column_end":12}},{"value":"/ If the name is omitted, the content will be appended to the previous","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13531007,"byte_end":13531079,"line_start":71,"line_end":71,"column_start":9,"column_end":81}},{"value":"/ file.  This allows the generator to break large files into small chunks,","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13531088,"byte_end":13531164,"line_start":72,"line_end":72,"column_start":9,"column_end":85}},{"value":"/ and allows the generated text to be streamed back to protoc so that large","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13531173,"byte_end":13531250,"line_start":73,"line_end":73,"column_start":9,"column_end":86}},{"value":"/ files need not reside completely in memory at one time.  Note that as of","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13531259,"byte_end":13531335,"line_start":74,"line_end":74,"column_start":9,"column_end":85}},{"value":"/ this writing protoc does not optimize for this -- it will read the entire","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13531344,"byte_end":13531421,"line_start":75,"line_end":75,"column_start":9,"column_end":86}},{"value":"/ CodeGeneratorResponse before writing files to disk.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13531430,"byte_end":13531485,"line_start":76,"line_end":76,"column_start":9,"column_end":64}},{"value":"prost(string, optional, tag = \"1\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13531494,"byte_end":13531529,"line_start":77,"line_end":77,"column_start":9,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":3261},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13534132,"byte_end":13534147,"line_start":117,"line_end":117,"column_start":13,"column_end":28},"name":"insertion_point","qualname":"::compiler::code_generator_response::File::insertion_point","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":3200},"children":[],"decl_id":null,"docs":" If non-empty, indicates that the named file should already exist, and the\n content here is to be inserted into that file at a defined insertion\n point.  This feature allows a code generator to extend the output\n produced by another code generator.  The original generator may provide\n insertion points by placing special annotations in the file that look\n like:\n   @@protoc_insertion_point(NAME)\n The annotation can have arbitrary text before and after it on the line,\n which allows it to be placed in a comment.  NAME should be replaced with\n an identifier naming the point -- this is what other generators will use\n as the insertion_point.  Code inserted at this point will be placed\n immediately above the line containing the insertion point (thus multiple\n insertions to the same point will come out in the order they were added).\n The double-@ is intended to make it unlikely that the generated code\n could contain things that look like insertion points by accident.","sig":null,"attributes":[{"value":"/ If non-empty, indicates that the named file should already exist, and the","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13531600,"byte_end":13531677,"line_start":79,"line_end":79,"column_start":9,"column_end":86}},{"value":"/ content here is to be inserted into that file at a defined insertion","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13531686,"byte_end":13531758,"line_start":80,"line_end":80,"column_start":9,"column_end":81}},{"value":"/ point.  This feature allows a code generator to extend the output","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13531767,"byte_end":13531836,"line_start":81,"line_end":81,"column_start":9,"column_end":78}},{"value":"/ produced by another code generator.  The original generator may provide","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13531845,"byte_end":13531920,"line_start":82,"line_end":82,"column_start":9,"column_end":84}},{"value":"/ insertion points by placing special annotations in the file that look","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13531929,"byte_end":13532002,"line_start":83,"line_end":83,"column_start":9,"column_end":82}},{"value":"/ like:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13532011,"byte_end":13532020,"line_start":84,"line_end":84,"column_start":9,"column_end":18}},{"value":"/   @@protoc_insertion_point(NAME)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13532029,"byte_end":13532065,"line_start":85,"line_end":85,"column_start":9,"column_end":45}},{"value":"/ The annotation can have arbitrary text before and after it on the line,","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13532074,"byte_end":13532149,"line_start":86,"line_end":86,"column_start":9,"column_end":84}},{"value":"/ which allows it to be placed in a comment.  NAME should be replaced with","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13532158,"byte_end":13532234,"line_start":87,"line_end":87,"column_start":9,"column_end":85}},{"value":"/ an identifier naming the point -- this is what other generators will use","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13532243,"byte_end":13532319,"line_start":88,"line_end":88,"column_start":9,"column_end":85}},{"value":"/ as the insertion_point.  Code inserted at this point will be placed","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13532328,"byte_end":13532399,"line_start":89,"line_end":89,"column_start":9,"column_end":80}},{"value":"/ immediately above the line containing the insertion point (thus multiple","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13532408,"byte_end":13532484,"line_start":90,"line_end":90,"column_start":9,"column_end":85}},{"value":"/ insertions to the same point will come out in the order they were added).","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13532493,"byte_end":13532570,"line_start":91,"line_end":91,"column_start":9,"column_end":86}},{"value":"/ The double-@ is intended to make it unlikely that the generated code","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13532579,"byte_end":13532651,"line_start":92,"line_end":92,"column_start":9,"column_end":81}},{"value":"/ could contain things that look like insertion points by accident.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13532660,"byte_end":13532729,"line_start":93,"line_end":93,"column_start":9,"column_end":78}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13532738,"byte_end":13532741,"line_start":94,"line_end":94,"column_start":9,"column_end":12}},{"value":"/ For example, the C++ code generator places the following line in the","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13532750,"byte_end":13532822,"line_start":95,"line_end":95,"column_start":9,"column_end":81}},{"value":"/ .pb.h files that it generates:","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13532831,"byte_end":13532865,"line_start":96,"line_end":96,"column_start":9,"column_end":43}},{"value":"/   // @@protoc_insertion_point(namespace_scope)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13532874,"byte_end":13532924,"line_start":97,"line_end":97,"column_start":9,"column_end":59}},{"value":"/ This line appears within the scope of the file's package namespace, but","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13532933,"byte_end":13533008,"line_start":98,"line_end":98,"column_start":9,"column_end":84}},{"value":"/ outside of any particular class.  Another plugin can then specify the","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13533017,"byte_end":13533090,"line_start":99,"line_end":99,"column_start":9,"column_end":82}},{"value":"/ insertion_point \"namespace_scope\" to generate additional classes or","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13533099,"byte_end":13533170,"line_start":100,"line_end":100,"column_start":9,"column_end":80}},{"value":"/ other declarations that should be placed in this scope.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13533179,"byte_end":13533238,"line_start":101,"line_end":101,"column_start":9,"column_end":68}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13533247,"byte_end":13533250,"line_start":102,"line_end":102,"column_start":9,"column_end":12}},{"value":"/ Note that if the line containing the insertion point begins with","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13533259,"byte_end":13533327,"line_start":103,"line_end":103,"column_start":9,"column_end":77}},{"value":"/ whitespace, the same whitespace will be added to every line of the","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13533336,"byte_end":13533406,"line_start":104,"line_end":104,"column_start":9,"column_end":79}},{"value":"/ inserted text.  This is useful for languages like Python, where","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13533415,"byte_end":13533482,"line_start":105,"line_end":105,"column_start":9,"column_end":76}},{"value":"/ indentation matters.  In these languages, the insertion point comment","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13533491,"byte_end":13533564,"line_start":106,"line_end":106,"column_start":9,"column_end":82}},{"value":"/ should be indented the same amount as any inserted code will need to be","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13533573,"byte_end":13533648,"line_start":107,"line_end":107,"column_start":9,"column_end":84}},{"value":"/ in order to work correctly in that context.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13533657,"byte_end":13533704,"line_start":108,"line_end":108,"column_start":9,"column_end":56}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13533713,"byte_end":13533716,"line_start":109,"line_end":109,"column_start":9,"column_end":12}},{"value":"/ The code generator that generates the initial file and the one which","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13533725,"byte_end":13533797,"line_start":110,"line_end":110,"column_start":9,"column_end":81}},{"value":"/ inserts into it must both run as part of a single invocation of protoc.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13533806,"byte_end":13533881,"line_start":111,"line_end":111,"column_start":9,"column_end":84}},{"value":"/ Code generators are executed in the order in which they appear on the","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13533890,"byte_end":13533963,"line_start":112,"line_end":112,"column_start":9,"column_end":82}},{"value":"/ command line.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13533972,"byte_end":13533989,"line_start":113,"line_end":113,"column_start":9,"column_end":26}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13533998,"byte_end":13534001,"line_start":114,"line_end":114,"column_start":9,"column_end":12}},{"value":"/ If |insertion_point| is present, |name| must also be present.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13534010,"byte_end":13534075,"line_start":115,"line_end":115,"column_start":9,"column_end":74}},{"value":"prost(string, optional, tag = \"2\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13534084,"byte_end":13534119,"line_start":116,"line_end":116,"column_start":9,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":3262},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13534281,"byte_end":13534288,"line_start":120,"line_end":120,"column_start":13,"column_end":20},"name":"content","qualname":"::compiler::code_generator_response::File::content","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":3200},"children":[],"decl_id":null,"docs":" The file contents.\n","sig":null,"attributes":[{"value":"/ The file contents.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13534201,"byte_end":13534223,"line_start":118,"line_end":118,"column_start":9,"column_end":31}},{"value":"prost(string, optional, tag = \"15\")","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13534232,"byte_end":13534268,"line_start":119,"line_end":119,"column_start":9,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":3257},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13531542,"byte_end":13531546,"line_start":78,"line_end":78,"column_start":13,"column_end":17},"name":"name","qualname":"<File>::name","value":"pub fn name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3258},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13534132,"byte_end":13534147,"line_start":117,"line_end":117,"column_start":13,"column_end":28},"name":"insertion_point","qualname":"<File>::insertion_point","value":"pub fn insertion_point(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3259},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/compiler.rs","byte_start":13534281,"byte_end":13534288,"line_start":120,"line_end":120,"column_start":13,"column_end":20},"name":"content","qualname":"<File>::content","value":"pub fn content(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":193,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/lib.rs","byte_start":840,"byte_end":848,"line_start":27,"line_end":27,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":15}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/lib.rs","byte_start":1967,"byte_end":1975,"line_start":54,"line_end":54,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":17}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/lib.rs","byte_start":2670,"byte_end":2676,"line_start":77,"line_end":77,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":19}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/lib.rs","byte_start":3166,"byte_end":3175,"line_start":94,"line_end":94,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/lib.rs","byte_start":4165,"byte_end":4174,"line_start":119,"line_end":119,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/lib.rs","byte_start":4641,"byte_end":4647,"line_start":132,"line_end":132,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":25}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/lib.rs","byte_start":840,"byte_end":848,"line_start":27,"line_end":27,"column_start":6,"column_end":14},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":2760},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/lib.rs","byte_start":1967,"byte_end":1975,"line_start":54,"line_end":54,"column_start":31,"column_end":39},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":2760},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/lib.rs","byte_start":2670,"byte_end":2676,"line_start":77,"line_end":77,"column_start":25,"column_end":31},"kind":{"Impl":{"id":195}},"from":{"krate":2,"index":45218},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/lib.rs","byte_start":3166,"byte_end":3175,"line_start":94,"line_end":94,"column_start":6,"column_end":15},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":3000},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/lib.rs","byte_start":4165,"byte_end":4174,"line_start":119,"line_end":119,"column_start":33,"column_end":42},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":3000},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.5.0/src/lib.rs","byte_start":4641,"byte_end":4647,"line_start":132,"line_end":132,"column_start":26,"column_end":32},"kind":{"Impl":{"id":198}},"from":{"krate":2,"index":45218},"to":{"krate":2,"index":2925}}]}