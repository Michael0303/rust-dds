{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0","program":"/home/newslab/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","multimap","/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata,link","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=5b53c4ed49923c3d","-C","extra-filename=-5b53c4ed49923c3d","--out-dir","/home/newslab/rust_practice/ws/sender/target/rls/debug/deps","-L","dependency=/home/newslab/rust_practice/ws/sender/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/newslab/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/newslab/rust_practice/ws/sender/target/rls/debug/deps/libmultimap-5b53c4ed49923c3d.rmeta"},"prelude":{"crate_id":{"name":"multimap","disambiguator":[13909392574714967589,0]},"crate_root":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src","external_crates":[{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[14026078687029744792,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[5443730852259234579,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[4162025702538114948,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[17612152343462746361,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5560808256873132085,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[135160560163186024,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[5800521777261530329,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[7095478770525139037,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17225897750877482818,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15613653607383163471,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[12428323400248712701,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[11893279639181573711,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[13583305032161054644,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[16609837797022023111,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[18098459435141129808,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[15244551393771456017,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[6576340271055396708,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[15284510821186066958,0]}},{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[12982807908830018159,0]}}],"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":382,"byte_end":29814,"line_start":9,"line_end":1154,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":1,"index":1192},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":2644,"byte_end":2648,"line_start":74,"line_end":74,"column_start":37,"column_end":41},"alias_span":null,"name":"IterAll","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":1205},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":2697,"byte_end":2704,"line_start":75,"line_end":75,"column_start":37,"column_end":44},"alias_span":null,"name":"IterAllMut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":72},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":2737,"byte_end":2742,"line_start":77,"line_end":77,"column_start":17,"column_end":22},"alias_span":null,"name":"Entry","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":62},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":2744,"byte_end":2757,"line_start":77,"line_end":77,"column_start":24,"column_end":37},"alias_span":null,"name":"OccupiedEntry","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":67},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":2759,"byte_end":2770,"line_start":77,"line_end":77,"column_start":39,"column_end":50},"alias_span":null,"name":"VacantEntry","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":382,"byte_end":29814,"line_start":9,"line_end":1154,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":30},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":36},{"krate":0,"index":39},{"krate":0,"index":42},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":49},{"krate":0,"index":52},{"krate":0,"index":55},{"krate":0,"index":247},{"krate":0,"index":251},{"krate":0,"index":107},{"krate":0,"index":141},{"krate":0,"index":149},{"krate":0,"index":153},{"krate":0,"index":159},{"krate":0,"index":162},{"krate":0,"index":166},{"krate":0,"index":171},{"krate":0,"index":178},{"krate":0,"index":185},{"krate":0,"index":191},{"krate":0,"index":196},{"krate":0,"index":203},{"krate":0,"index":208},{"krate":0,"index":255},{"krate":0,"index":260},{"krate":0,"index":215},{"krate":0,"index":223},{"krate":0,"index":228},{"krate":0,"index":233},{"krate":0,"index":241},{"krate":0,"index":246}],"decl_id":null,"docs":" A MultiMap implementation which is just a wrapper around std::collections::HashMap.\n See HashMap's documentation for more details.","sig":null,"attributes":[{"value":"/ A MultiMap implementation which is just a wrapper around std::collections::HashMap.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":382,"byte_end":469,"line_start":9,"line_end":9,"column_start":1,"column_end":88}},{"value":"/ See HashMap's documentation for more details.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":470,"byte_end":519,"line_start":10,"line_end":10,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":520,"byte_end":523,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Some of the methods are just thin wrappers, some methods does change a little semantics","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":524,"byte_end":615,"line_start":12,"line_end":12,"column_start":1,"column_end":92}},{"value":"/ and some methods are new (doesn't have an equivalent in HashMap.)","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":616,"byte_end":685,"line_start":13,"line_end":13,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":686,"byte_end":689,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The MultiMap is generic for the key (K) and the value (V). Internally the values are","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":690,"byte_end":778,"line_start":15,"line_end":15,"column_start":1,"column_end":89}},{"value":"/ stored in a generic Vector.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":779,"byte_end":810,"line_start":16,"line_end":16,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":811,"byte_end":814,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":815,"byte_end":829,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":830,"byte_end":833,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":834,"byte_end":841,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ use multimap::MultiMap;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":842,"byte_end":869,"line_start":21,"line_end":21,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":870,"byte_end":873,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ // create a new MultiMap. An explicit type signature can be omitted because of the","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":874,"byte_end":960,"line_start":23,"line_end":23,"column_start":1,"column_end":87}},{"value":"/ // type inference.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":961,"byte_end":983,"line_start":24,"line_end":24,"column_start":1,"column_end":23}},{"value":"/ let mut queries = MultiMap::new();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":984,"byte_end":1022,"line_start":25,"line_end":25,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":1023,"byte_end":1026,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ // insert some queries.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":1027,"byte_end":1054,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/ queries.insert(\"urls\", \"http://rust-lang.org\");","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":1055,"byte_end":1106,"line_start":28,"line_end":28,"column_start":1,"column_end":52}},{"value":"/ queries.insert(\"urls\", \"http://mozilla.org\");","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":1107,"byte_end":1156,"line_start":29,"line_end":29,"column_start":1,"column_end":50}},{"value":"/ queries.insert(\"urls\", \"http://wikipedia.org\");","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":1157,"byte_end":1208,"line_start":30,"line_end":30,"column_start":1,"column_end":52}},{"value":"/ queries.insert(\"id\", \"42\");","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":1209,"byte_end":1240,"line_start":31,"line_end":31,"column_start":1,"column_end":32}},{"value":"/ queries.insert(\"name\", \"roger\");","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":1241,"byte_end":1277,"line_start":32,"line_end":32,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":1278,"byte_end":1281,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ // check if there's any urls.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":1282,"byte_end":1315,"line_start":34,"line_end":34,"column_start":1,"column_end":34}},{"value":"/ println!(\"Are there any urls in the multimap? {:?}.\",","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":1316,"byte_end":1373,"line_start":35,"line_end":35,"column_start":1,"column_end":58}},{"value":"/     if queries.contains_key(\"urls\") {\"Yes\"} else {\"No\"} );","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":1374,"byte_end":1436,"line_start":36,"line_end":36,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":1437,"byte_end":1440,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ // get the first item in a key's vector.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":1441,"byte_end":1485,"line_start":38,"line_end":38,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(queries.get(\"urls\"), Some(&\"http://rust-lang.org\"));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":1486,"byte_end":1553,"line_start":39,"line_end":39,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":1554,"byte_end":1557,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ // get all the urls.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":1558,"byte_end":1582,"line_start":41,"line_end":41,"column_start":1,"column_end":25}},{"value":"/ assert_eq!(queries.get_vec(\"urls\"),","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":1583,"byte_end":1622,"line_start":42,"line_end":42,"column_start":1,"column_end":40}},{"value":"/     Some(&vec![\"http://rust-lang.org\", \"http://mozilla.org\", \"http://wikipedia.org\"]));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":1623,"byte_end":1714,"line_start":43,"line_end":43,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":1715,"byte_end":1718,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ // iterate over all keys and the first value in the key's vector.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":1719,"byte_end":1788,"line_start":45,"line_end":45,"column_start":1,"column_end":70}},{"value":"/ for (key, value) in queries.iter() {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":1789,"byte_end":1829,"line_start":46,"line_end":46,"column_start":1,"column_end":41}},{"value":"/     println!(\"key: {:?}, val: {:?}\", key, value);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":1830,"byte_end":1883,"line_start":47,"line_end":47,"column_start":1,"column_end":54}},{"value":"/ }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":1884,"byte_end":1889,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":1890,"byte_end":1893,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ // iterate over all keys and the key's vector.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":1894,"byte_end":1944,"line_start":50,"line_end":50,"column_start":1,"column_end":51}},{"value":"/ for (key, values) in queries.iter_all() {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":1945,"byte_end":1990,"line_start":51,"line_end":51,"column_start":1,"column_end":46}},{"value":"/     println!(\"key: {:?}, values: {:?}\", key, values);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":1991,"byte_end":2048,"line_start":52,"line_end":52,"column_start":1,"column_end":58}},{"value":"/ }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":2049,"byte_end":2054,"line_start":53,"line_end":53,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":2055,"byte_end":2058,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ // the different methods for getting value(s) from the multimap.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":2059,"byte_end":2127,"line_start":55,"line_end":55,"column_start":1,"column_end":69}},{"value":"/ let mut map = MultiMap::new();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":2128,"byte_end":2162,"line_start":56,"line_end":56,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":2163,"byte_end":2166,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ map.insert(\"key1\", 42);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":2167,"byte_end":2194,"line_start":58,"line_end":58,"column_start":1,"column_end":28}},{"value":"/ map.insert(\"key1\", 1337);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":2195,"byte_end":2224,"line_start":59,"line_end":59,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":2225,"byte_end":2228,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(map[\"key1\"], 42);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":2229,"byte_end":2261,"line_start":61,"line_end":61,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(map.get(\"key1\"), Some(&42));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":2262,"byte_end":2305,"line_start":62,"line_end":62,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(map.get_vec(\"key1\"), Some(&vec![42, 1337]));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":2306,"byte_end":2365,"line_start":63,"line_end":63,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":2366,"byte_end":2373,"line_start":64,"line_end":64,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":62},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/entry.rs","byte_start":31562,"byte_end":31575,"line_start":13,"line_end":13,"column_start":12,"column_end":25},"name":"OccupiedEntry","qualname":"::entry::OccupiedEntry","value":"OccupiedEntry { inner }","parent":null,"children":[{"krate":0,"index":66}],"decl_id":null,"docs":" A view into a single occupied location in a MultiMap.\n","sig":null,"attributes":[{"value":"/ A view into a single occupied location in a MultiMap.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/entry.rs","byte_start":31493,"byte_end":31550,"line_start":12,"line_end":12,"column_start":1,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":66},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/entry.rs","byte_start":31623,"byte_end":31628,"line_start":15,"line_end":15,"column_start":9,"column_end":14},"name":"inner","qualname":"::entry::OccupiedEntry::inner","value":"std::collections::hash_map::OccupiedEntry<'a, K, std::vec::Vec<V>>","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":67},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/entry.rs","byte_start":31736,"byte_end":31747,"line_start":19,"line_end":19,"column_start":12,"column_end":23},"name":"VacantEntry","qualname":"::entry::VacantEntry","value":"VacantEntry { inner }","parent":null,"children":[{"krate":0,"index":71}],"decl_id":null,"docs":" A view into a single empty location in a MultiMap.\n","sig":null,"attributes":[{"value":"/ A view into a single empty location in a MultiMap.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/entry.rs","byte_start":31670,"byte_end":31724,"line_start":18,"line_end":18,"column_start":1,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":71},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/entry.rs","byte_start":31795,"byte_end":31800,"line_start":21,"line_end":21,"column_start":9,"column_end":14},"name":"inner","qualname":"::entry::VacantEntry::inner","value":"std::collections::hash_map::VacantEntry<'a, K, std::vec::Vec<V>>","parent":{"krate":0,"index":67},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":76},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/entry.rs","byte_start":31983,"byte_end":31991,"line_start":27,"line_end":27,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::entry::Entry::Occupied","value":"Entry::Occupied(OccupiedEntry)","parent":{"krate":0,"index":72},"children":[],"decl_id":null,"docs":" An occupied Entry.\n","sig":null,"attributes":[{"value":"/ An occupied Entry.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/entry.rs","byte_start":31956,"byte_end":31978,"line_start":26,"line_end":26,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":79},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/entry.rs","byte_start":32047,"byte_end":32053,"line_start":30,"line_end":30,"column_start":5,"column_end":11},"name":"Vacant","qualname":"::entry::Entry::Vacant","value":"Entry::Vacant(VacantEntry)","parent":{"krate":0,"index":72},"children":[],"decl_id":null,"docs":" A vacant Entry.\n","sig":null,"attributes":[{"value":"/ A vacant Entry.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/entry.rs","byte_start":32023,"byte_end":32042,"line_start":29,"line_end":29,"column_start":5,"column_end":24}}]},{"kind":"Enum","id":{"krate":0,"index":72},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/entry.rs","byte_start":31926,"byte_end":31931,"line_start":25,"line_end":25,"column_start":10,"column_end":15},"name":"Entry","qualname":"::entry::Entry","value":"pub enum Entry<'a, K: 'a, V: 'a> {\n    Occupied(OccupiedEntry),\n    Vacant(VacantEntry),\n}","parent":null,"children":[{"krate":0,"index":76},{"krate":0,"index":79}],"decl_id":null,"docs":" A view into a single location in a map, which may be vacant or occupied.\n","sig":null,"attributes":[{"value":"/ A view into a single location in a map, which may be vacant or occupied.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/entry.rs","byte_start":31840,"byte_end":31916,"line_start":24,"line_end":24,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/entry.rs","byte_start":32231,"byte_end":32234,"line_start":35,"line_end":35,"column_start":12,"column_end":15},"name":"get","qualname":"<OccupiedEntry>::get","value":"pub fn get(&Self) -> &V","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the first item in value in the vector corresponding to entry.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the first item in value in the vector corresponding to entry.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/entry.rs","byte_start":32134,"byte_end":32219,"line_start":34,"line_end":34,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/entry.rs","byte_start":32369,"byte_end":32376,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_vec","qualname":"<OccupiedEntry>::get_vec","value":"pub fn get_vec(&Self) -> &Vec<V>","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the values (vector) corresponding to entry.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the values (vector) corresponding to entry.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/entry.rs","byte_start":32290,"byte_end":32357,"line_start":39,"line_end":39,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/entry.rs","byte_start":32534,"byte_end":32541,"line_start":45,"line_end":45,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<OccupiedEntry>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut V","parent":null,"children":[],"decl_id":null,"docs":" Gets a mut reference to the first item in value in the vector corresponding to entry.\n","sig":null,"attributes":[{"value":"/ Gets a mut reference to the first item in value in the vector corresponding to entry.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/entry.rs","byte_start":32433,"byte_end":32522,"line_start":44,"line_end":44,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/entry.rs","byte_start":32696,"byte_end":32707,"line_start":50,"line_end":50,"column_start":12,"column_end":23},"name":"get_vec_mut","qualname":"<OccupiedEntry>::get_vec_mut","value":"pub fn get_vec_mut(&mut Self) -> &mut Vec<V>","parent":null,"children":[],"decl_id":null,"docs":" Gets a mut reference to the values (vector) corresponding to entry.\n","sig":null,"attributes":[{"value":"/ Gets a mut reference to the values (vector) corresponding to entry.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/entry.rs","byte_start":32613,"byte_end":32684,"line_start":49,"line_end":49,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/entry.rs","byte_start":32931,"byte_end":32939,"line_start":56,"line_end":56,"column_start":12,"column_end":20},"name":"into_mut","qualname":"<OccupiedEntry>::into_mut","value":"pub fn into_mut(Self) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Converts the OccupiedEntry into a mutable reference to the first item in value in the entry\n with a lifetime bound to the map itself\n","sig":null,"attributes":[{"value":"/ Converts the OccupiedEntry into a mutable reference to the first item in value in the entry","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/entry.rs","byte_start":32776,"byte_end":32871,"line_start":54,"line_end":54,"column_start":5,"column_end":100}},{"value":"/ with a lifetime bound to the map itself","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/entry.rs","byte_start":32876,"byte_end":32919,"line_start":55,"line_end":55,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/entry.rs","byte_start":33161,"byte_end":33173,"line_start":62,"line_end":62,"column_start":12,"column_end":24},"name":"into_vec_mut","qualname":"<OccupiedEntry>::into_vec_mut","value":"pub fn into_vec_mut(Self) -> &'a mut Vec<V>","parent":null,"children":[],"decl_id":null,"docs":" Converts the OccupiedEntry into a mutable reference to the values (vector) in the entry\n with a lifetime bound to the map itself\n","sig":null,"attributes":[{"value":"/ Converts the OccupiedEntry into a mutable reference to the values (vector) in the entry","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/entry.rs","byte_start":33010,"byte_end":33101,"line_start":60,"line_end":60,"column_start":5,"column_end":96}},{"value":"/ with a lifetime bound to the map itself","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/entry.rs","byte_start":33106,"byte_end":33149,"line_start":61,"line_end":61,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/entry.rs","byte_start":33306,"byte_end":33312,"line_start":67,"line_end":67,"column_start":12,"column_end":18},"name":"insert","qualname":"<OccupiedEntry>::insert","value":"pub fn insert(&mut Self, V)","parent":null,"children":[],"decl_id":null,"docs":" Inserts a new value onto the vector of the entry.\n","sig":null,"attributes":[{"value":"/ Inserts a new value onto the vector of the entry.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/entry.rs","byte_start":33241,"byte_end":33294,"line_start":66,"line_end":66,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/entry.rs","byte_start":33457,"byte_end":33467,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"insert_vec","qualname":"<OccupiedEntry>::insert_vec","value":"pub fn insert_vec(&mut Self, Vec<V>)","parent":null,"children":[],"decl_id":null,"docs":" Extends the existing vector with the specified values.\n","sig":null,"attributes":[{"value":"/ Extends the existing vector with the specified values.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/entry.rs","byte_start":33387,"byte_end":33445,"line_start":71,"line_end":71,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/entry.rs","byte_start":33625,"byte_end":33631,"line_start":77,"line_end":77,"column_start":12,"column_end":18},"name":"remove","qualname":"<OccupiedEntry>::remove","value":"pub fn remove(Self) -> Vec<V>","parent":null,"children":[],"decl_id":null,"docs":" Takes the values (vector) out of the entry, and returns it\n","sig":null,"attributes":[{"value":"/ Takes the values (vector) out of the entry, and returns it","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/entry.rs","byte_start":33551,"byte_end":33613,"line_start":76,"line_end":76,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/entry.rs","byte_start":33876,"byte_end":33882,"line_start":85,"line_end":85,"column_start":12,"column_end":18},"name":"insert","qualname":"<VacantEntry>::insert","value":"pub fn insert(Self, V) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Sets the first value in the vector of the entry with the VacantEntry's key,\n and returns a mutable reference to it.\n","sig":null,"attributes":[{"value":"/ Sets the first value in the vector of the entry with the VacantEntry's key,","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/entry.rs","byte_start":33738,"byte_end":33817,"line_start":83,"line_end":83,"column_start":5,"column_end":84}},{"value":"/ and returns a mutable reference to it.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/entry.rs","byte_start":33822,"byte_end":33864,"line_start":84,"line_end":84,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/entry.rs","byte_start":34087,"byte_end":34097,"line_start":91,"line_end":91,"column_start":12,"column_end":22},"name":"insert_vec","qualname":"<VacantEntry>::insert_vec","value":"pub fn insert_vec(Self, Vec<V>) -> &'a mut Vec<V>","parent":null,"children":[],"decl_id":null,"docs":" Sets values in the entry with the VacantEntry's key,\n and returns a mutable reference to it.\n","sig":null,"attributes":[{"value":"/ Sets values in the entry with the VacantEntry's key,","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/entry.rs","byte_start":33972,"byte_end":34028,"line_start":89,"line_end":89,"column_start":5,"column_end":61}},{"value":"/ and returns a mutable reference to it.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/entry.rs","byte_start":34033,"byte_end":34075,"line_start":90,"line_end":90,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/entry.rs","byte_start":34492,"byte_end":34501,"line_start":101,"line_end":101,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<Entry>::or_insert","value":"pub fn or_insert(Self, V) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the default if empty, and returns\n a mutable reference to the value in the entry. This will return a mutable reference to the\n first value in the vector corresponding to the specified key.\n","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the default if empty, and returns","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/entry.rs","byte_start":34229,"byte_end":34311,"line_start":98,"line_end":98,"column_start":5,"column_end":87}},{"value":"/ a mutable reference to the value in the entry. This will return a mutable reference to the","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/entry.rs","byte_start":34316,"byte_end":34410,"line_start":99,"line_end":99,"column_start":5,"column_end":99}},{"value":"/ first value in the vector corresponding to the specified key.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/entry.rs","byte_start":34415,"byte_end":34480,"line_start":100,"line_end":100,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/entry.rs","byte_start":34905,"byte_end":34918,"line_start":111,"line_end":111,"column_start":12,"column_end":25},"name":"or_insert_vec","qualname":"<Entry>::or_insert_vec","value":"pub fn or_insert_vec(Self, Vec<V>) -> &'a mut Vec<V>","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the default values if empty, and returns\n a mutable reference to the values (the corresponding vector to the specified key) in\n the entry.\n","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the default values if empty, and returns","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/entry.rs","byte_start":34692,"byte_end":34781,"line_start":108,"line_end":108,"column_start":5,"column_end":94}},{"value":"/ a mutable reference to the values (the corresponding vector to the specified key) in","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/entry.rs","byte_start":34786,"byte_end":34874,"line_start":109,"line_end":109,"column_start":5,"column_end":93}},{"value":"/ the entry.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/entry.rs","byte_start":34879,"byte_end":34893,"line_start":110,"line_end":110,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":247},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":2861,"byte_end":2869,"line_start":85,"line_end":85,"column_start":12,"column_end":20},"name":"MultiMap","qualname":"::MultiMap","value":"MultiMap {  }","parent":null,"children":[{"krate":0,"index":250}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":3169,"byte_end":3172,"line_start":101,"line_end":101,"column_start":12,"column_end":15},"name":"new","qualname":"<MultiMap<K, V>>::new","value":"pub fn new() -> MultiMap<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty MultiMap","sig":null,"attributes":[{"value":"/ Creates an empty MultiMap","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":2967,"byte_end":2996,"line_start":92,"line_end":92,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":3001,"byte_end":3004,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":3009,"byte_end":3023,"line_start":94,"line_end":94,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":3028,"byte_end":3031,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":3036,"byte_end":3043,"line_start":96,"line_end":96,"column_start":5,"column_end":12}},{"value":"/ use multimap::MultiMap;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":3048,"byte_end":3075,"line_start":97,"line_end":97,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":3080,"byte_end":3083,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ let mut map: MultiMap<&str, isize> = MultiMap::new();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":3088,"byte_end":3145,"line_start":99,"line_end":99,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":3150,"byte_end":3157,"line_start":100,"line_end":100,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":3496,"byte_end":3509,"line_start":114,"line_end":114,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<MultiMap<K, V>>::with_capacity","value":"pub fn with_capacity(usize) -> MultiMap<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty multimap with the given initial capacity.","sig":null,"attributes":[{"value":"/ Creates an empty multimap with the given initial capacity.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":3249,"byte_end":3311,"line_start":105,"line_end":105,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":3316,"byte_end":3319,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":3324,"byte_end":3338,"line_start":107,"line_end":107,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":3343,"byte_end":3346,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":3351,"byte_end":3358,"line_start":109,"line_end":109,"column_start":5,"column_end":12}},{"value":"/ use multimap::MultiMap;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":3363,"byte_end":3390,"line_start":110,"line_end":110,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":3395,"byte_end":3398,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ let mut map: MultiMap<&str, isize> = MultiMap::with_capacity(20);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":3403,"byte_end":3472,"line_start":112,"line_end":112,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":3477,"byte_end":3484,"line_start":113,"line_end":113,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":4026,"byte_end":4032,"line_start":130,"line_end":130,"column_start":12,"column_end":18},"name":"insert","qualname":"<MultiMap<K, V>>::insert","value":"pub fn insert(&mut Self, K, V)","parent":null,"children":[],"decl_id":null,"docs":" Inserts a key-value pair into the multimap. If the key does exists in\n the map then the key is pushed to that key's vector. If the key doesn't\n exists in the map a new vector with the given value is inserted.","sig":null,"attributes":[{"value":"/ Inserts a key-value pair into the multimap. If the key does exists in","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":3619,"byte_end":3692,"line_start":118,"line_end":118,"column_start":5,"column_end":78}},{"value":"/ the map then the key is pushed to that key's vector. If the key doesn't","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":3697,"byte_end":3772,"line_start":119,"line_end":119,"column_start":5,"column_end":80}},{"value":"/ exists in the map a new vector with the given value is inserted.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":3777,"byte_end":3845,"line_start":120,"line_end":120,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":3850,"byte_end":3853,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":3858,"byte_end":3872,"line_start":122,"line_end":122,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":3877,"byte_end":3880,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":3885,"byte_end":3892,"line_start":124,"line_end":124,"column_start":5,"column_end":12}},{"value":"/ use multimap::MultiMap;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":3897,"byte_end":3924,"line_start":125,"line_end":125,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":3929,"byte_end":3932,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ let mut map = MultiMap::new();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":3937,"byte_end":3971,"line_start":127,"line_end":127,"column_start":5,"column_end":39}},{"value":"/ map.insert(\"key\", 42);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":3976,"byte_end":4002,"line_start":128,"line_end":128,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":4007,"byte_end":4014,"line_start":129,"line_end":129,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":4800,"byte_end":4812,"line_start":156,"line_end":156,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<MultiMap<K, V>>::contains_key","value":"pub fn contains_key<Q: ?Sized>(&Self, &Q) -> bool where K: Borrow<Q>, Q: Eq +\nHash","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the map contains a value for the specified key.","sig":null,"attributes":[{"value":"/ Returns true if the map contains a value for the specified key.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":4307,"byte_end":4374,"line_start":141,"line_end":141,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":4379,"byte_end":4382,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but Hash and Eq","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":4387,"byte_end":4462,"line_start":143,"line_end":143,"column_start":5,"column_end":80}},{"value":"/ on the borrowed form must match those for the key type.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":4467,"byte_end":4526,"line_start":144,"line_end":144,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":4531,"byte_end":4534,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":4539,"byte_end":4553,"line_start":146,"line_end":146,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":4558,"byte_end":4561,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":4566,"byte_end":4573,"line_start":148,"line_end":148,"column_start":5,"column_end":12}},{"value":"/ use multimap::MultiMap;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":4578,"byte_end":4605,"line_start":149,"line_end":149,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":4610,"byte_end":4613,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ let mut map = MultiMap::new();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":4618,"byte_end":4652,"line_start":151,"line_end":151,"column_start":5,"column_end":39}},{"value":"/ map.insert(1, 42);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":4657,"byte_end":4679,"line_start":152,"line_end":152,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(map.contains_key(&1), true);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":4684,"byte_end":4727,"line_start":153,"line_end":153,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(map.contains_key(&2), false);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":4732,"byte_end":4776,"line_start":154,"line_end":154,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":4781,"byte_end":4788,"line_start":155,"line_end":155,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":5239,"byte_end":5242,"line_start":175,"line_end":175,"column_start":12,"column_end":15},"name":"len","qualname":"<MultiMap<K, V>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in the map.","sig":null,"attributes":[{"value":"/ Returns the number of elements in the map.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":4953,"byte_end":4999,"line_start":163,"line_end":163,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":5004,"byte_end":5007,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":5012,"byte_end":5026,"line_start":165,"line_end":165,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":5031,"byte_end":5034,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":5039,"byte_end":5046,"line_start":167,"line_end":167,"column_start":5,"column_end":12}},{"value":"/ use multimap::MultiMap;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":5051,"byte_end":5078,"line_start":168,"line_end":168,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":5083,"byte_end":5086,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ let mut map = MultiMap::new();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":5091,"byte_end":5125,"line_start":170,"line_end":170,"column_start":5,"column_end":39}},{"value":"/ map.insert(1, 42);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":5130,"byte_end":5152,"line_start":171,"line_end":171,"column_start":5,"column_end":27}},{"value":"/ map.insert(2, 1337);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":5157,"byte_end":5181,"line_start":172,"line_end":172,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(map.len(), 2);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":5186,"byte_end":5215,"line_start":173,"line_end":173,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":5220,"byte_end":5227,"line_start":174,"line_end":174,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":5874,"byte_end":5880,"line_start":196,"line_end":196,"column_start":12,"column_end":18},"name":"remove","qualname":"<MultiMap<K, V>>::remove","value":"pub fn remove<Q: ?Sized>(&mut Self, &Q) -> Option<Vec<V>> where K: Borrow<Q>,\nQ: Eq + Hash","parent":null,"children":[],"decl_id":null,"docs":" Removes a key from the map, returning the vector of values at\n the key if the key was previously in the map.","sig":null,"attributes":[{"value":"/ Removes a key from the map, returning the vector of values at","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":5297,"byte_end":5362,"line_start":179,"line_end":179,"column_start":5,"column_end":70}},{"value":"/ the key if the key was previously in the map.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":5367,"byte_end":5416,"line_start":180,"line_end":180,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":5421,"byte_end":5424,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but Hash and Eq","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":5429,"byte_end":5504,"line_start":182,"line_end":182,"column_start":5,"column_end":80}},{"value":"/ on the borrowed form must match those for the key type.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":5509,"byte_end":5568,"line_start":183,"line_end":183,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":5573,"byte_end":5576,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":5581,"byte_end":5595,"line_start":185,"line_end":185,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":5600,"byte_end":5603,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":5608,"byte_end":5615,"line_start":187,"line_end":187,"column_start":5,"column_end":12}},{"value":"/ use multimap::MultiMap;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":5620,"byte_end":5647,"line_start":188,"line_end":188,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":5652,"byte_end":5655,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ let mut map = MultiMap::new();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":5660,"byte_end":5694,"line_start":190,"line_end":190,"column_start":5,"column_end":39}},{"value":"/ map.insert(1, 42);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":5699,"byte_end":5721,"line_start":191,"line_end":191,"column_start":5,"column_end":27}},{"value":"/ map.insert(1, 1337);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":5726,"byte_end":5750,"line_start":192,"line_end":192,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(map.remove(&1), Some(vec![42, 1337]));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":5755,"byte_end":5808,"line_start":193,"line_end":193,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(map.remove(&1), None);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":5813,"byte_end":5850,"line_start":194,"line_end":194,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":5855,"byte_end":5862,"line_start":195,"line_end":195,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":6520,"byte_end":6523,"line_start":219,"line_end":219,"column_start":12,"column_end":15},"name":"get","qualname":"<MultiMap<K, V>>::get","value":"pub fn get<Q: ?Sized>(&Self, &Q) -> Option<&V> where K: Borrow<Q>, Q: Eq +\nHash","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the first item in the vector corresponding to\n the key.","sig":null,"attributes":[{"value":"/ Returns a reference to the first item in the vector corresponding to","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":6029,"byte_end":6101,"line_start":203,"line_end":203,"column_start":5,"column_end":77}},{"value":"/ the key.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":6106,"byte_end":6118,"line_start":204,"line_end":204,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":6123,"byte_end":6126,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but Hash and Eq","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":6131,"byte_end":6206,"line_start":206,"line_end":206,"column_start":5,"column_end":80}},{"value":"/ on the borrowed form must match those for the key type.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":6211,"byte_end":6270,"line_start":207,"line_end":207,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":6275,"byte_end":6278,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":6283,"byte_end":6297,"line_start":209,"line_end":209,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":6302,"byte_end":6305,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":6310,"byte_end":6317,"line_start":211,"line_end":211,"column_start":5,"column_end":12}},{"value":"/ use multimap::MultiMap;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":6322,"byte_end":6349,"line_start":212,"line_end":212,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":6354,"byte_end":6357,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ let mut map = MultiMap::new();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":6362,"byte_end":6396,"line_start":214,"line_end":214,"column_start":5,"column_end":39}},{"value":"/ map.insert(1, 42);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":6401,"byte_end":6423,"line_start":215,"line_end":215,"column_start":5,"column_end":27}},{"value":"/ map.insert(1, 1337);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":6428,"byte_end":6452,"line_start":216,"line_end":216,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(map.get(&1), Some(&42));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":6457,"byte_end":6496,"line_start":217,"line_end":217,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":6501,"byte_end":6508,"line_start":218,"line_end":218,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":7238,"byte_end":7245,"line_start":245,"line_end":245,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<MultiMap<K, V>>::get_mut","value":"pub fn get_mut<Q: ?Sized>(&mut Self, &Q) -> Option<&mut V> where K: Borrow<Q>,\nQ: Eq + Hash","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the first item in the vector corresponding to\n the key.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the first item in the vector corresponding to","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":6676,"byte_end":6756,"line_start":226,"line_end":226,"column_start":5,"column_end":85}},{"value":"/ the key.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":6761,"byte_end":6773,"line_start":227,"line_end":227,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":6778,"byte_end":6781,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but Hash and Eq","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":6786,"byte_end":6861,"line_start":229,"line_end":229,"column_start":5,"column_end":80}},{"value":"/ on the borrowed form must match those for the key type.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":6866,"byte_end":6925,"line_start":230,"line_end":230,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":6930,"byte_end":6933,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":6938,"byte_end":6952,"line_start":232,"line_end":232,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":6957,"byte_end":6960,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":6965,"byte_end":6972,"line_start":234,"line_end":234,"column_start":5,"column_end":12}},{"value":"/ use multimap::MultiMap;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":6977,"byte_end":7004,"line_start":235,"line_end":235,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":7009,"byte_end":7012,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ let mut map = MultiMap::new();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":7017,"byte_end":7051,"line_start":237,"line_end":237,"column_start":5,"column_end":39}},{"value":"/ map.insert(1, 42);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":7056,"byte_end":7078,"line_start":238,"line_end":238,"column_start":5,"column_end":27}},{"value":"/ map.insert(1, 1337);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":7083,"byte_end":7107,"line_start":239,"line_end":239,"column_start":5,"column_end":29}},{"value":"/ if let Some(v) = map.get_mut(&1) {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":7112,"byte_end":7150,"line_start":240,"line_end":240,"column_start":5,"column_end":43}},{"value":"/     *v = 99;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":7155,"byte_end":7171,"line_start":241,"line_end":241,"column_start":5,"column_end":21}},{"value":"/ }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":7176,"byte_end":7181,"line_start":242,"line_end":242,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(map[&1], 99);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":7186,"byte_end":7214,"line_start":243,"line_end":243,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":7219,"byte_end":7226,"line_start":244,"line_end":244,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":7911,"byte_end":7918,"line_start":267,"line_end":267,"column_start":12,"column_end":19},"name":"get_vec","qualname":"<MultiMap<K, V>>::get_vec","value":"pub fn get_vec<Q: ?Sized>(&Self, &Q) -> Option<&Vec<V>> where K: Borrow<Q>,\nQ: Eq + Hash","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the vector corresponding to the key.","sig":null,"attributes":[{"value":"/ Returns a reference to the vector corresponding to the key.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":7430,"byte_end":7493,"line_start":252,"line_end":252,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":7498,"byte_end":7501,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but Hash and Eq","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":7506,"byte_end":7581,"line_start":254,"line_end":254,"column_start":5,"column_end":80}},{"value":"/ on the borrowed form must match those for the key type.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":7586,"byte_end":7645,"line_start":255,"line_end":255,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":7650,"byte_end":7653,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":7658,"byte_end":7672,"line_start":257,"line_end":257,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":7677,"byte_end":7680,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":7685,"byte_end":7692,"line_start":259,"line_end":259,"column_start":5,"column_end":12}},{"value":"/ use multimap::MultiMap;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":7697,"byte_end":7724,"line_start":260,"line_end":260,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":7729,"byte_end":7732,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ let mut map = MultiMap::new();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":7737,"byte_end":7771,"line_start":262,"line_end":262,"column_start":5,"column_end":39}},{"value":"/ map.insert(1, 42);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":7776,"byte_end":7798,"line_start":263,"line_end":263,"column_start":5,"column_end":27}},{"value":"/ map.insert(1, 1337);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":7803,"byte_end":7827,"line_start":264,"line_end":264,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(map.get_vec(&1), Some(&vec![42, 1337]));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":7832,"byte_end":7887,"line_start":265,"line_end":265,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":7892,"byte_end":7899,"line_start":266,"line_end":266,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":8665,"byte_end":8676,"line_start":293,"line_end":293,"column_start":12,"column_end":23},"name":"get_vec_mut","qualname":"<MultiMap<K, V>>::get_vec_mut","value":"pub fn get_vec_mut<Q: ?Sized>(&mut Self, &Q) -> Option<&mut Vec<V>> where\nK: Borrow<Q>, Q: Eq + Hash","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the vector corresponding to the key.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the vector corresponding to the key.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":8061,"byte_end":8132,"line_start":274,"line_end":274,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":8137,"byte_end":8140,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but Hash and Eq","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":8145,"byte_end":8220,"line_start":276,"line_end":276,"column_start":5,"column_end":80}},{"value":"/ on the borrowed form must match those for the key type.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":8225,"byte_end":8284,"line_start":277,"line_end":277,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":8289,"byte_end":8292,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":8297,"byte_end":8311,"line_start":279,"line_end":279,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":8316,"byte_end":8319,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":8324,"byte_end":8331,"line_start":281,"line_end":281,"column_start":5,"column_end":12}},{"value":"/ use multimap::MultiMap;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":8336,"byte_end":8363,"line_start":282,"line_end":282,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":8368,"byte_end":8371,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ let mut map = MultiMap::new();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":8376,"byte_end":8410,"line_start":284,"line_end":284,"column_start":5,"column_end":39}},{"value":"/ map.insert(1, 42);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":8415,"byte_end":8437,"line_start":285,"line_end":285,"column_start":5,"column_end":27}},{"value":"/ map.insert(1, 1337);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":8442,"byte_end":8466,"line_start":286,"line_end":286,"column_start":5,"column_end":29}},{"value":"/ if let Some(v) = map.get_vec_mut(&1) {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":8471,"byte_end":8513,"line_start":287,"line_end":287,"column_start":5,"column_end":47}},{"value":"/     (*v)[0] = 1991;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":8518,"byte_end":8541,"line_start":288,"line_end":288,"column_start":5,"column_end":28}},{"value":"/     (*v)[1] = 2332;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":8546,"byte_end":8569,"line_start":289,"line_end":289,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":8574,"byte_end":8579,"line_start":290,"line_end":290,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(map.get_vec(&1), Some(&vec![1991, 2332]));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":8584,"byte_end":8641,"line_start":291,"line_end":291,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":8646,"byte_end":8653,"line_start":292,"line_end":292,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":9112,"byte_end":9120,"line_start":310,"line_end":310,"column_start":12,"column_end":20},"name":"capacity","qualname":"<MultiMap<K, V>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements the map can hold without reallocating.","sig":null,"attributes":[{"value":"/ Returns the number of elements the map can hold without reallocating.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":8831,"byte_end":8904,"line_start":300,"line_end":300,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":8909,"byte_end":8912,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":8917,"byte_end":8931,"line_start":302,"line_end":302,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":8936,"byte_end":8939,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":8944,"byte_end":8951,"line_start":304,"line_end":304,"column_start":5,"column_end":12}},{"value":"/ use multimap::MultiMap;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":8956,"byte_end":8983,"line_start":305,"line_end":305,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":8988,"byte_end":8991,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ let map: MultiMap<usize, usize> = MultiMap::new();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":8996,"byte_end":9050,"line_start":307,"line_end":307,"column_start":5,"column_end":59}},{"value":"/ assert!(map.capacity() >= 0);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":9055,"byte_end":9088,"line_start":308,"line_end":308,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":9093,"byte_end":9100,"line_start":309,"line_end":309,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":9472,"byte_end":9480,"line_start":326,"line_end":326,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<MultiMap<K, V>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the map contains no elements.","sig":null,"attributes":[{"value":"/ Returns true if the map contains no elements.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":9180,"byte_end":9229,"line_start":314,"line_end":314,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":9234,"byte_end":9237,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":9242,"byte_end":9256,"line_start":316,"line_end":316,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":9261,"byte_end":9264,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":9269,"byte_end":9276,"line_start":318,"line_end":318,"column_start":5,"column_end":12}},{"value":"/ use multimap::MultiMap;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":9281,"byte_end":9308,"line_start":319,"line_end":319,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":9313,"byte_end":9316,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ let mut map = MultiMap::new();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":9321,"byte_end":9355,"line_start":321,"line_end":321,"column_start":5,"column_end":39}},{"value":"/ assert!(map.is_empty());","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":9360,"byte_end":9388,"line_start":322,"line_end":322,"column_start":5,"column_end":33}},{"value":"/ map.insert(1,42);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":9393,"byte_end":9414,"line_start":323,"line_end":323,"column_start":5,"column_end":26}},{"value":"/ assert!(!map.is_empty());","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":9419,"byte_end":9448,"line_start":324,"line_end":324,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":9453,"byte_end":9460,"line_start":325,"line_end":325,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":9864,"byte_end":9869,"line_start":343,"line_end":343,"column_start":12,"column_end":17},"name":"clear","qualname":"<MultiMap<K, V>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the map, removing all key-value pairs.\n Keeps the allocated memory for reuse.","sig":null,"attributes":[{"value":"/ Clears the map, removing all key-value pairs.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":9539,"byte_end":9588,"line_start":330,"line_end":330,"column_start":5,"column_end":54}},{"value":"/ Keeps the allocated memory for reuse.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":9593,"byte_end":9634,"line_start":331,"line_end":331,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":9639,"byte_end":9642,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":9647,"byte_end":9661,"line_start":333,"line_end":333,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":9666,"byte_end":9669,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":9674,"byte_end":9681,"line_start":335,"line_end":335,"column_start":5,"column_end":12}},{"value":"/ use multimap::MultiMap;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":9686,"byte_end":9713,"line_start":336,"line_end":336,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":9718,"byte_end":9721,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ let mut map = MultiMap::new();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":9726,"byte_end":9760,"line_start":338,"line_end":338,"column_start":5,"column_end":39}},{"value":"/ map.insert(1,42);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":9765,"byte_end":9786,"line_start":339,"line_end":339,"column_start":5,"column_end":26}},{"value":"/ map.clear();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":9791,"byte_end":9807,"line_start":340,"line_end":340,"column_start":5,"column_end":21}},{"value":"/ assert!(map.is_empty());","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":9812,"byte_end":9840,"line_start":341,"line_end":341,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":9845,"byte_end":9852,"line_start":342,"line_end":342,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":10332,"byte_end":10336,"line_start":364,"line_end":364,"column_start":12,"column_end":16},"name":"keys","qualname":"<MultiMap<K, V>>::keys","value":"pub fn keys<'a>(&'a Self) -> Keys","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all keys in arbitrary order.\n Iterator element type is &'a K.","sig":null,"attributes":[{"value":"/ An iterator visiting all keys in arbitrary order.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":9922,"byte_end":9975,"line_start":347,"line_end":347,"column_start":5,"column_end":58}},{"value":"/ Iterator element type is &'a K.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":9980,"byte_end":10015,"line_start":348,"line_end":348,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":10020,"byte_end":10023,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":10028,"byte_end":10042,"line_start":350,"line_end":350,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":10047,"byte_end":10050,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":10055,"byte_end":10062,"line_start":352,"line_end":352,"column_start":5,"column_end":12}},{"value":"/ use multimap::MultiMap;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":10067,"byte_end":10094,"line_start":353,"line_end":353,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":10099,"byte_end":10102,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ let mut map = MultiMap::new();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":10107,"byte_end":10141,"line_start":355,"line_end":355,"column_start":5,"column_end":39}},{"value":"/ map.insert(1,42);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":10146,"byte_end":10167,"line_start":356,"line_end":356,"column_start":5,"column_end":26}},{"value":"/ map.insert(2,1337);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":10172,"byte_end":10195,"line_start":357,"line_end":357,"column_start":5,"column_end":28}},{"value":"/ map.insert(4,1991);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":10200,"byte_end":10223,"line_start":358,"line_end":358,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":10228,"byte_end":10231,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ for key in map.keys() {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":10236,"byte_end":10263,"line_start":360,"line_end":360,"column_start":5,"column_end":32}},{"value":"/     println!(\"{:?}\", key);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":10268,"byte_end":10298,"line_start":361,"line_end":361,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":10303,"byte_end":10308,"line_start":362,"line_end":362,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":10313,"byte_end":10320,"line_start":363,"line_end":363,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":11012,"byte_end":11016,"line_start":387,"line_end":387,"column_start":12,"column_end":16},"name":"iter","qualname":"<MultiMap<K, V>>::iter","value":"pub fn iter(&Self) -> Iter<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all key-value pairs in arbitrary order. The iterator returns\n a reference to the key and the first element in the corresponding key's vector.\n Iterator element type is (&'a K, &'a V).","sig":null,"attributes":[{"value":"/ An iterator visiting all key-value pairs in arbitrary order. The iterator returns","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":10413,"byte_end":10498,"line_start":368,"line_end":368,"column_start":5,"column_end":90}},{"value":"/ a reference to the key and the first element in the corresponding key's vector.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":10503,"byte_end":10586,"line_start":369,"line_end":369,"column_start":5,"column_end":88}},{"value":"/ Iterator element type is (&'a K, &'a V).","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":10591,"byte_end":10635,"line_start":370,"line_end":370,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":10640,"byte_end":10643,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":10648,"byte_end":10662,"line_start":372,"line_end":372,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":10667,"byte_end":10670,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":10675,"byte_end":10682,"line_start":374,"line_end":374,"column_start":5,"column_end":12}},{"value":"/ use multimap::MultiMap;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":10687,"byte_end":10714,"line_start":375,"line_end":375,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":10719,"byte_end":10722,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ let mut map = MultiMap::new();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":10727,"byte_end":10761,"line_start":377,"line_end":377,"column_start":5,"column_end":39}},{"value":"/ map.insert(1,42);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":10766,"byte_end":10787,"line_start":378,"line_end":378,"column_start":5,"column_end":26}},{"value":"/ map.insert(1,1337);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":10792,"byte_end":10815,"line_start":379,"line_end":379,"column_start":5,"column_end":28}},{"value":"/ map.insert(3,2332);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":10820,"byte_end":10843,"line_start":380,"line_end":380,"column_start":5,"column_end":28}},{"value":"/ map.insert(4,1991);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":10848,"byte_end":10871,"line_start":381,"line_end":381,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":10876,"byte_end":10879,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ for (key, value) in map.iter() {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":10884,"byte_end":10920,"line_start":383,"line_end":383,"column_start":5,"column_end":41}},{"value":"/     println!(\"key: {:?}, val: {:?}\", key, value);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":10925,"byte_end":10978,"line_start":384,"line_end":384,"column_start":5,"column_end":58}},{"value":"/ }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":10983,"byte_end":10988,"line_start":385,"line_end":385,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":10993,"byte_end":11000,"line_start":386,"line_end":386,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":11810,"byte_end":11818,"line_start":414,"line_end":414,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<MultiMap<K, V>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all key-value pairs in arbitrary order. The iterator returns\n a reference to the key and a mutable reference to the first element in the\n corresponding key's vector. Iterator element type is (&'a K, &'a mut V).","sig":null,"attributes":[{"value":"/ An iterator visiting all key-value pairs in arbitrary order. The iterator returns","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":11093,"byte_end":11178,"line_start":391,"line_end":391,"column_start":5,"column_end":90}},{"value":"/ a reference to the key and a mutable reference to the first element in the","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":11183,"byte_end":11261,"line_start":392,"line_end":392,"column_start":5,"column_end":83}},{"value":"/ corresponding key's vector. Iterator element type is (&'a K, &'a mut V).","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":11266,"byte_end":11342,"line_start":393,"line_end":393,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":11347,"byte_end":11350,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":11355,"byte_end":11369,"line_start":395,"line_end":395,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":11374,"byte_end":11377,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":11382,"byte_end":11389,"line_start":397,"line_end":397,"column_start":5,"column_end":12}},{"value":"/ use multimap::MultiMap;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":11394,"byte_end":11421,"line_start":398,"line_end":398,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":11426,"byte_end":11429,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ let mut map = MultiMap::new();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":11434,"byte_end":11468,"line_start":400,"line_end":400,"column_start":5,"column_end":39}},{"value":"/ map.insert(1,42);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":11473,"byte_end":11494,"line_start":401,"line_end":401,"column_start":5,"column_end":26}},{"value":"/ map.insert(1,1337);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":11499,"byte_end":11522,"line_start":402,"line_end":402,"column_start":5,"column_end":28}},{"value":"/ map.insert(3,2332);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":11527,"byte_end":11550,"line_start":403,"line_end":403,"column_start":5,"column_end":28}},{"value":"/ map.insert(4,1991);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":11555,"byte_end":11578,"line_start":404,"line_end":404,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":11583,"byte_end":11586,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ for (_, value) in map.iter_mut() {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":11591,"byte_end":11629,"line_start":406,"line_end":406,"column_start":5,"column_end":43}},{"value":"/     *value *= *value;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":11634,"byte_end":11659,"line_start":407,"line_end":407,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":11664,"byte_end":11669,"line_start":408,"line_end":408,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":11674,"byte_end":11677,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ for (key, value) in map.iter() {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":11682,"byte_end":11718,"line_start":410,"line_end":410,"column_start":5,"column_end":41}},{"value":"/     println!(\"key: {:?}, val: {:?}\", key, value);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":11723,"byte_end":11776,"line_start":411,"line_end":411,"column_start":5,"column_end":58}},{"value":"/ }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":11781,"byte_end":11786,"line_start":412,"line_end":412,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":11791,"byte_end":11798,"line_start":413,"line_end":413,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":12496,"byte_end":12504,"line_start":437,"line_end":437,"column_start":12,"column_end":20},"name":"iter_all","qualname":"<MultiMap<K, V>>::iter_all","value":"pub fn iter_all(&Self) -> IterAll<, K, Vec<V>>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all key-value pairs in arbitrary order. The iterator returns\n a reference to the key and the corresponding key's vector.\n Iterator element type is (&'a K, &'a V).","sig":null,"attributes":[{"value":"/ An iterator visiting all key-value pairs in arbitrary order. The iterator returns","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":11909,"byte_end":11994,"line_start":418,"line_end":418,"column_start":5,"column_end":90}},{"value":"/ a reference to the key and the corresponding key's vector.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":11999,"byte_end":12061,"line_start":419,"line_end":419,"column_start":5,"column_end":67}},{"value":"/ Iterator element type is (&'a K, &'a V).","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":12066,"byte_end":12110,"line_start":420,"line_end":420,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":12115,"byte_end":12118,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":12123,"byte_end":12137,"line_start":422,"line_end":422,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":12142,"byte_end":12145,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":12150,"byte_end":12157,"line_start":424,"line_end":424,"column_start":5,"column_end":12}},{"value":"/ use multimap::MultiMap;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":12162,"byte_end":12189,"line_start":425,"line_end":425,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":12194,"byte_end":12197,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ let mut map = MultiMap::new();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":12202,"byte_end":12236,"line_start":427,"line_end":427,"column_start":5,"column_end":39}},{"value":"/ map.insert(1,42);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":12241,"byte_end":12262,"line_start":428,"line_end":428,"column_start":5,"column_end":26}},{"value":"/ map.insert(1,1337);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":12267,"byte_end":12290,"line_start":429,"line_end":429,"column_start":5,"column_end":28}},{"value":"/ map.insert(3,2332);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":12295,"byte_end":12318,"line_start":430,"line_end":430,"column_start":5,"column_end":28}},{"value":"/ map.insert(4,1991);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":12323,"byte_end":12346,"line_start":431,"line_end":431,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":12351,"byte_end":12354,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ for (key, values) in map.iter_all() {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":12359,"byte_end":12400,"line_start":433,"line_end":433,"column_start":5,"column_end":46}},{"value":"/     println!(\"key: {:?}, values: {:?}\", key, values);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":12405,"byte_end":12462,"line_start":434,"line_end":434,"column_start":5,"column_end":62}},{"value":"/ }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":12467,"byte_end":12472,"line_start":435,"line_end":435,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":12477,"byte_end":12484,"line_start":436,"line_end":436,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":13316,"byte_end":13328,"line_start":466,"line_end":466,"column_start":12,"column_end":24},"name":"iter_all_mut","qualname":"<MultiMap<K, V>>::iter_all_mut","value":"pub fn iter_all_mut(&mut Self) -> IterAllMut<, K, Vec<V>>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all key-value pairs in arbitrary order. The iterator returns\n a reference to the key and the corresponding key's vector.\n Iterator element type is (&'a K, &'a V).","sig":null,"attributes":[{"value":"/ An iterator visiting all key-value pairs in arbitrary order. The iterator returns","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":12573,"byte_end":12658,"line_start":441,"line_end":441,"column_start":5,"column_end":90}},{"value":"/ a reference to the key and the corresponding key's vector.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":12663,"byte_end":12725,"line_start":442,"line_end":442,"column_start":5,"column_end":67}},{"value":"/ Iterator element type is (&'a K, &'a V).","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":12730,"byte_end":12774,"line_start":443,"line_end":443,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":12779,"byte_end":12782,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":12787,"byte_end":12801,"line_start":445,"line_end":445,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":12806,"byte_end":12809,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":12814,"byte_end":12821,"line_start":447,"line_end":447,"column_start":5,"column_end":12}},{"value":"/ use multimap::MultiMap;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":12826,"byte_end":12853,"line_start":448,"line_end":448,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":12858,"byte_end":12861,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ let mut map = MultiMap::new();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":12866,"byte_end":12900,"line_start":450,"line_end":450,"column_start":5,"column_end":39}},{"value":"/ map.insert(1,42);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":12905,"byte_end":12926,"line_start":451,"line_end":451,"column_start":5,"column_end":26}},{"value":"/ map.insert(1,1337);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":12931,"byte_end":12954,"line_start":452,"line_end":452,"column_start":5,"column_end":28}},{"value":"/ map.insert(3,2332);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":12959,"byte_end":12982,"line_start":453,"line_end":453,"column_start":5,"column_end":28}},{"value":"/ map.insert(4,1991);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":12987,"byte_end":13010,"line_start":454,"line_end":454,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":13015,"byte_end":13018,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ for (key, values) in map.iter_all_mut() {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":13023,"byte_end":13068,"line_start":456,"line_end":456,"column_start":5,"column_end":50}},{"value":"/     for value in values.iter_mut() {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":13073,"byte_end":13113,"line_start":457,"line_end":457,"column_start":5,"column_end":45}},{"value":"/         *value = 99;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":13118,"byte_end":13142,"line_start":458,"line_end":458,"column_start":5,"column_end":29}},{"value":"/     }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":13147,"byte_end":13156,"line_start":459,"line_end":459,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":13161,"byte_end":13166,"line_start":460,"line_end":460,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":13171,"byte_end":13174,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ for (key, values) in map.iter_all() {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":13179,"byte_end":13220,"line_start":462,"line_end":462,"column_start":5,"column_end":46}},{"value":"/     println!(\"key: {:?}, values: {:?}\", key, values);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":13225,"byte_end":13282,"line_start":463,"line_end":463,"column_start":5,"column_end":62}},{"value":"/ }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":13287,"byte_end":13292,"line_start":464,"line_end":464,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":13297,"byte_end":13304,"line_start":465,"line_end":465,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":14243,"byte_end":14248,"line_start":498,"line_end":498,"column_start":12,"column_end":17},"name":"entry","qualname":"<MultiMap<K, V>>::entry","value":"pub fn entry(&mut Self, K) -> Entry<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Gets the specified key's corresponding entry in the map for in-place manipulation.\n It's possible to both manipulate the vector and the 'value' (the first value in the\n vector).","sig":null,"attributes":[{"value":"/ Gets the specified key's corresponding entry in the map for in-place manipulation.","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":13408,"byte_end":13494,"line_start":470,"line_end":470,"column_start":5,"column_end":91}},{"value":"/ It's possible to both manipulate the vector and the 'value' (the first value in the","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":13499,"byte_end":13586,"line_start":471,"line_end":471,"column_start":5,"column_end":92}},{"value":"/ vector).","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":13591,"byte_end":13603,"line_start":472,"line_end":472,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":13608,"byte_end":13611,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":13616,"byte_end":13630,"line_start":474,"line_end":474,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":13635,"byte_end":13638,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":13643,"byte_end":13650,"line_start":476,"line_end":476,"column_start":5,"column_end":12}},{"value":"/ use multimap::MultiMap;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":13655,"byte_end":13682,"line_start":477,"line_end":477,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":13687,"byte_end":13690,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ let mut m = MultiMap::new();","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":13695,"byte_end":13727,"line_start":479,"line_end":479,"column_start":5,"column_end":37}},{"value":"/ m.insert(1, 42);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":13732,"byte_end":13752,"line_start":480,"line_end":480,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":13757,"byte_end":13760,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":13765,"byte_end":13770,"line_start":482,"line_end":482,"column_start":5,"column_end":10}},{"value":"/     let mut v = m.entry(1).or_insert(43);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":13775,"byte_end":13820,"line_start":483,"line_end":483,"column_start":5,"column_end":50}},{"value":"/     assert_eq!(v, &42);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":13825,"byte_end":13852,"line_start":484,"line_end":484,"column_start":5,"column_end":32}},{"value":"/     *v = 44;","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":13857,"byte_end":13873,"line_start":485,"line_end":485,"column_start":5,"column_end":21}},{"value":"/ }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":13878,"byte_end":13883,"line_start":486,"line_end":486,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(m.entry(2).or_insert(666), &666);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":13888,"byte_end":13936,"line_start":487,"line_end":487,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":13941,"byte_end":13944,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":13949,"byte_end":13954,"line_start":489,"line_end":489,"column_start":5,"column_end":10}},{"value":"/     let mut v = m.entry(1).or_insert_vec(vec![43]);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":13959,"byte_end":14014,"line_start":490,"line_end":490,"column_start":5,"column_end":60}},{"value":"/     assert_eq!(v, &vec![44]);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":14019,"byte_end":14052,"line_start":491,"line_end":491,"column_start":5,"column_end":38}},{"value":"/     v.push(50);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":14057,"byte_end":14076,"line_start":492,"line_end":492,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":14081,"byte_end":14086,"line_start":493,"line_end":493,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(m.entry(2).or_insert_vec(vec![666]), &vec![666]);","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":14091,"byte_end":14155,"line_start":494,"line_end":494,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":14160,"byte_end":14163,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(m.get_vec(&1), Some(&vec![44, 50]));","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":14168,"byte_end":14219,"line_start":496,"line_end":496,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":14224,"byte_end":14231,"line_start":497,"line_end":497,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":255},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":18067,"byte_end":18071,"line_start":652,"line_end":652,"column_start":12,"column_end":16},"name":"Iter","qualname":"::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":259}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":228},"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":18537,"byte_end":18544,"line_start":674,"line_end":674,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":232}],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/entry.rs","byte_start":32104,"byte_end":32117,"line_start":33,"line_end":33,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/entry.rs","byte_start":33710,"byte_end":33721,"line_start":82,"line_end":82,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":99},{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/entry.rs","byte_start":34207,"byte_end":34212,"line_start":97,"line_end":97,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":105},{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":2923,"byte_end":2931,"line_start":89,"line_end":89,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":118},{"krate":0,"index":121},{"krate":0,"index":124},{"krate":0,"index":126},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":14626,"byte_end":14634,"line_start":507,"line_end":507,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":146},{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":14910,"byte_end":14918,"line_start":521,"line_end":521,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":15127,"byte_end":15135,"line_start":530,"line_end":530,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":15440,"byte_end":15448,"line_start":543,"line_end":543,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":15523,"byte_end":15531,"line_start":549,"line_end":549,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":15692,"byte_end":15700,"line_start":557,"line_end":557,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":16590,"byte_end":16598,"line_start":595,"line_end":595,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":16819,"byte_end":16827,"line_start":606,"line_end":606,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":17048,"byte_end":17056,"line_start":616,"line_end":616,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":200}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":17308,"byte_end":17316,"line_start":625,"line_end":625,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":17797,"byte_end":17805,"line_start":642,"line_end":642,"column_start":48,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":18158,"byte_end":18162,"line_start":656,"line_end":656,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":18446,"byte_end":18450,"line_start":668,"line_end":668,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":18634,"byte_end":18641,"line_start":678,"line_end":678,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":18937,"byte_end":18944,"line_start":690,"line_end":690,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":245}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/entry.rs","byte_start":32104,"byte_end":32117,"line_start":33,"line_end":33,"column_start":24,"column_end":37},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":62},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/entry.rs","byte_start":33710,"byte_end":33721,"line_start":82,"line_end":82,"column_start":24,"column_end":35},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":67},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/entry.rs","byte_start":34207,"byte_end":34212,"line_start":97,"line_end":97,"column_start":24,"column_end":29},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":72},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":2923,"byte_end":2931,"line_start":89,"line_end":89,"column_start":12,"column_end":20},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":247},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":14626,"byte_end":14634,"line_start":507,"line_end":507,"column_start":44,"column_end":52},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":3319}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":14910,"byte_end":14918,"line_start":521,"line_end":521,"column_start":22,"column_end":30},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":15127,"byte_end":15135,"line_start":530,"line_end":530,"column_start":26,"column_end":34},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":2670}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":15440,"byte_end":15448,"line_start":543,"line_end":543,"column_start":19,"column_end":27},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":2675}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":15523,"byte_end":15531,"line_start":549,"line_end":549,"column_start":24,"column_end":32},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":2997}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":15692,"byte_end":15700,"line_start":557,"line_end":557,"column_start":37,"column_end":45},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":7629}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":16590,"byte_end":16598,"line_start":595,"line_end":595,"column_start":29,"column_end":37},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":7633}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":16819,"byte_end":16827,"line_start":606,"line_end":606,"column_start":31,"column_end":39},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":7642}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":17048,"byte_end":17056,"line_start":616,"line_end":616,"column_start":43,"column_end":51},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":7642}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":17308,"byte_end":17316,"line_start":625,"line_end":625,"column_start":36,"column_end":44},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":7642}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":17797,"byte_end":17805,"line_start":642,"line_end":642,"column_start":48,"column_end":56},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":7642}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":18158,"byte_end":18162,"line_start":656,"line_end":656,"column_start":29,"column_end":33},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":255},"to":{"krate":2,"index":7822}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":18446,"byte_end":18450,"line_start":668,"line_end":668,"column_start":38,"column_end":42},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":255},"to":{"krate":2,"index":7702}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":18634,"byte_end":18641,"line_start":678,"line_end":678,"column_start":29,"column_end":36},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":228},"to":{"krate":2,"index":7822}},{"span":{"file_name":"/home/newslab/.cargo/registry/src/github.com-1ecc6299db9ec823/multimap-0.4.0/src/lib.rs","byte_start":18937,"byte_end":18944,"line_start":690,"line_end":690,"column_start":38,"column_end":45},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":228},"to":{"krate":2,"index":7702}}]}